OK   UME::SIMD::SIMDMask1 test Id: 1 - ZERO-CONSTR()
OK   UME::SIMD::SIMDMask1 test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMDMask1 test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMDMask1 test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMDMask1 test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMDMask1 test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMDMask1 test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMDMask1 test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMDMask1 test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMDMask1 test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMDMask1 test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMDMask1 test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMDMask1 test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMDMask1 test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMDMask1 test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMDMask1 test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMDMask1 test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMDMask1 test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMDMask1 test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMDMask1 test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMDMask1 test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMDMask1 test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMDMask1 test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMDMask1 test Id: 24 - LANDV
OK   UME::SIMD::SIMDMask1 test Id: 25 - LANDV(operator &)
OK   UME::SIMD::SIMDMask1 test Id: 26 - LANDV(operator &&)
OK   UME::SIMD::SIMDMask1 test Id: 27 - LANDV gen
OK   UME::SIMD::SIMDMask1 test Id: 28 - LANDV gen (operator &&)
OK   UME::SIMD::SIMDMask1 test Id: 29 - LANDS
OK   UME::SIMD::SIMDMask1 test Id: 30 - LANDS
OK   UME::SIMD::SIMDMask1 test Id: 31 - LANDS(operator & RHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 32 - LANDS(operator & RHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 33 - LANDS(operator && RHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 34 - LANDS(operator && RHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 35 - LANDS(operator & LHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 36 - LANDS(operator & LHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 37 - LANDS(operator && LHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 38 - LANDS(operator && LHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 39 - LANDVA
OK   UME::SIMD::SIMDMask1 test Id: 40 - LANDVA(operator &=)
OK   UME::SIMD::SIMDMask1 test Id: 41 - LANDSA
OK   UME::SIMD::SIMDMask1 test Id: 42 - LANDSA(operator &=)
OK   UME::SIMD::SIMDMask1 test Id: 43 - LORV
OK   UME::SIMD::SIMDMask1 test Id: 44 - LORV(operator |)
OK   UME::SIMD::SIMDMask1 test Id: 45 - LORV(operator ||)
OK   UME::SIMD::SIMDMask1 test Id: 46 - LORV gen
OK   UME::SIMD::SIMDMask1 test Id: 47 - LORV gen (operator ||)
OK   UME::SIMD::SIMDMask1 test Id: 48 - LORS
OK   UME::SIMD::SIMDMask1 test Id: 49 - LORS
OK   UME::SIMD::SIMDMask1 test Id: 50 - LORS (operator| RHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 51 - LORS (operator| RHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 52 - LORS (operator|| RHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 53 - LORS (operator|| RHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 54 - LORS (operator| LHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 55 - LORS (operator| LHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 56 - LORS (operator|| LHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 57 - LORS (operator|| LHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 58 - LORVA
OK   UME::SIMD::SIMDMask1 test Id: 59 - LORVA(operator |=)
OK   UME::SIMD::SIMDMask1 test Id: 60 - LORSA
OK   UME::SIMD::SIMDMask1 test Id: 61 - LORSA(operator |=)
OK   UME::SIMD::SIMDMask1 test Id: 62 - LXORV
OK   UME::SIMD::SIMDMask1 test Id: 63 - LXORV(operator^)
OK   UME::SIMD::SIMDMask1 test Id: 64 - LXORS
OK   UME::SIMD::SIMDMask1 test Id: 65 - LXORS
OK   UME::SIMD::SIMDMask1 test Id: 66 - LXORS (operator^ RHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 67 - LXORS (operator^ RHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 68 - LXORS (operator^ LHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 69 - LXORS (operator^ LHS scalar)
OK   UME::SIMD::SIMDMask1 test Id: 70 - LXORVA
OK   UME::SIMD::SIMDMask1 test Id: 71 - LXORVA(operator^=)
OK   UME::SIMD::SIMDMask1 test Id: 72 - LXORSA
OK   UME::SIMD::SIMDMask1 test Id: 73 - LXORSA(operator^=)
OK   UME::SIMD::SIMDMask1 test Id: 74 - LNOT
OK   UME::SIMD::SIMDMask1 test Id: 75 - LNOT(operator !)
OK   UME::SIMD::SIMDMask1 test Id: 76 - LNOTA
OK   UME::SIMD::SIMDMask1 test Id: 77 - LANDNOTV gen
OK   UME::SIMD::SIMDMask1 test Id: 78 - LANDNOTS gen
OK   UME::SIMD::SIMDMask1 test Id: 79 - HLAND
OK   UME::SIMD::SIMDMask1 test Id: 80 - HLOR
OK   UME::SIMD::SIMDMask1 test Id: 81 - HLXOR
OK   UME::SIMD::SIMDMask2 test Id: 1 - ZERO-CONSTR()
OK   UME::SIMD::SIMDMask2 test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMDMask2 test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMDMask2 test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMDMask2 test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMDMask2 test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMDMask2 test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMDMask2 test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMDMask2 test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMDMask2 test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMDMask2 test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMDMask2 test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMDMask2 test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMDMask2 test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMDMask2 test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMDMask2 test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMDMask2 test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMDMask2 test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMDMask2 test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMDMask2 test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMDMask2 test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMDMask2 test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMDMask2 test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMDMask2 test Id: 24 - LANDV
OK   UME::SIMD::SIMDMask2 test Id: 25 - LANDV(operator &)
OK   UME::SIMD::SIMDMask2 test Id: 26 - LANDV(operator &&)
OK   UME::SIMD::SIMDMask2 test Id: 27 - LANDV gen
OK   UME::SIMD::SIMDMask2 test Id: 28 - LANDV gen (operator &&)
OK   UME::SIMD::SIMDMask2 test Id: 29 - LANDS
OK   UME::SIMD::SIMDMask2 test Id: 30 - LANDS
OK   UME::SIMD::SIMDMask2 test Id: 31 - LANDS(operator & RHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 32 - LANDS(operator & RHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 33 - LANDS(operator && RHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 34 - LANDS(operator && RHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 35 - LANDS(operator & LHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 36 - LANDS(operator & LHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 37 - LANDS(operator && LHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 38 - LANDS(operator && LHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 39 - LANDVA
OK   UME::SIMD::SIMDMask2 test Id: 40 - LANDVA(operator &=)
OK   UME::SIMD::SIMDMask2 test Id: 41 - LANDSA
OK   UME::SIMD::SIMDMask2 test Id: 42 - LANDSA(operator &=)
OK   UME::SIMD::SIMDMask2 test Id: 43 - LORV
OK   UME::SIMD::SIMDMask2 test Id: 44 - LORV(operator |)
OK   UME::SIMD::SIMDMask2 test Id: 45 - LORV(operator ||)
OK   UME::SIMD::SIMDMask2 test Id: 46 - LORV gen
OK   UME::SIMD::SIMDMask2 test Id: 47 - LORV gen (operator ||)
OK   UME::SIMD::SIMDMask2 test Id: 48 - LORS
OK   UME::SIMD::SIMDMask2 test Id: 49 - LORS
OK   UME::SIMD::SIMDMask2 test Id: 50 - LORS (operator| RHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 51 - LORS (operator| RHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 52 - LORS (operator|| RHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 53 - LORS (operator|| RHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 54 - LORS (operator| LHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 55 - LORS (operator| LHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 56 - LORS (operator|| LHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 57 - LORS (operator|| LHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 58 - LORVA
OK   UME::SIMD::SIMDMask2 test Id: 59 - LORVA(operator |=)
OK   UME::SIMD::SIMDMask2 test Id: 60 - LORSA
OK   UME::SIMD::SIMDMask2 test Id: 61 - LORSA(operator |=)
OK   UME::SIMD::SIMDMask2 test Id: 62 - LXORV
OK   UME::SIMD::SIMDMask2 test Id: 63 - LXORV(operator^)
OK   UME::SIMD::SIMDMask2 test Id: 64 - LXORS
OK   UME::SIMD::SIMDMask2 test Id: 65 - LXORS
OK   UME::SIMD::SIMDMask2 test Id: 66 - LXORS (operator^ RHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 67 - LXORS (operator^ RHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 68 - LXORS (operator^ LHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 69 - LXORS (operator^ LHS scalar)
OK   UME::SIMD::SIMDMask2 test Id: 70 - LXORVA
OK   UME::SIMD::SIMDMask2 test Id: 71 - LXORVA(operator^=)
OK   UME::SIMD::SIMDMask2 test Id: 72 - LXORSA
OK   UME::SIMD::SIMDMask2 test Id: 73 - LXORSA(operator^=)
OK   UME::SIMD::SIMDMask2 test Id: 74 - LNOT
OK   UME::SIMD::SIMDMask2 test Id: 75 - LNOT(operator !)
OK   UME::SIMD::SIMDMask2 test Id: 76 - LNOTA
OK   UME::SIMD::SIMDMask2 test Id: 77 - LANDNOTV gen
OK   UME::SIMD::SIMDMask2 test Id: 78 - LANDNOTS gen
OK   UME::SIMD::SIMDMask2 test Id: 79 - HLAND
OK   UME::SIMD::SIMDMask2 test Id: 80 - HLOR
OK   UME::SIMD::SIMDMask2 test Id: 81 - HLXOR
OK   UME::SIMD::SIMDMask4 test Id: 1 - ZERO-CONSTR()
OK   UME::SIMD::SIMDMask4 test Id: 2 - LOAD-CONSTR()
OK   UME::SIMD::SIMDMask4 test Id: 3 - mask compatibility: 64f -> 32u
OK   UME::SIMD::SIMDMask4 test Id: 4 - LANDA
OK   UME::SIMD::SIMDMask4 test Id: 5 - LANDA(operator&=)
OK   UME::SIMD::SIMDMask4 test Id: 6 - LORA
OK   UME::SIMD::SIMDMask4 test Id: 7 - LORA(operator|=)
OK   UME::SIMD::SIMDMask4 test Id: 8 - LNOT
OK   UME::SIMD::SIMDMask4 test Id: 9 - LNOT(operator!)
OK   UME::SIMD::SIMDMask4 test Id: 10 - ASSIGN
OK   UME::SIMD::SIMDMask4 test Id: 11 - ASSIGN(operator=)
OK   UME::SIMD::SIMDMask4 test Id: 12 - HLOR
OK   UME::SIMD::SIMDMask4 test Id: 13 - HLAND
OK   UME::SIMD::SIMDMask4 test Id: 14 - SET-CONSTR gen
OK   UME::SIMD::SIMDMask4 test Id: 15 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMDMask4 test Id: 16 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMDMask4 test Id: 17 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMDMask4 test Id: 18 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMDMask4 test Id: 19 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMDMask4 test Id: 20 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMDMask4 test Id: 21 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMDMask4 test Id: 22 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMDMask4 test Id: 23 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMDMask4 test Id: 24 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMDMask4 test Id: 25 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMDMask4 test Id: 26 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMDMask4 test Id: 27 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMDMask4 test Id: 28 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMDMask4 test Id: 29 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMDMask4 test Id: 30 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMDMask4 test Id: 31 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMDMask4 test Id: 32 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMDMask4 test Id: 33 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMDMask4 test Id: 34 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMDMask4 test Id: 35 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMDMask4 test Id: 36 - LANDV
OK   UME::SIMD::SIMDMask4 test Id: 37 - LANDV(operator &)
OK   UME::SIMD::SIMDMask4 test Id: 38 - LANDV(operator &&)
OK   UME::SIMD::SIMDMask4 test Id: 39 - LANDV gen
OK   UME::SIMD::SIMDMask4 test Id: 40 - LANDV gen (operator &&)
OK   UME::SIMD::SIMDMask4 test Id: 41 - LANDS
OK   UME::SIMD::SIMDMask4 test Id: 42 - LANDS
OK   UME::SIMD::SIMDMask4 test Id: 43 - LANDS(operator & RHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 44 - LANDS(operator & RHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 45 - LANDS(operator && RHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 46 - LANDS(operator && RHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 47 - LANDS(operator & LHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 48 - LANDS(operator & LHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 49 - LANDS(operator && LHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 50 - LANDS(operator && LHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 51 - LANDVA
OK   UME::SIMD::SIMDMask4 test Id: 52 - LANDVA(operator &=)
OK   UME::SIMD::SIMDMask4 test Id: 53 - LANDSA
OK   UME::SIMD::SIMDMask4 test Id: 54 - LANDSA(operator &=)
OK   UME::SIMD::SIMDMask4 test Id: 55 - LORV
OK   UME::SIMD::SIMDMask4 test Id: 56 - LORV(operator |)
OK   UME::SIMD::SIMDMask4 test Id: 57 - LORV(operator ||)
OK   UME::SIMD::SIMDMask4 test Id: 58 - LORV gen
OK   UME::SIMD::SIMDMask4 test Id: 59 - LORV gen (operator ||)
OK   UME::SIMD::SIMDMask4 test Id: 60 - LORS
OK   UME::SIMD::SIMDMask4 test Id: 61 - LORS
OK   UME::SIMD::SIMDMask4 test Id: 62 - LORS (operator| RHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 63 - LORS (operator| RHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 64 - LORS (operator|| RHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 65 - LORS (operator|| RHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 66 - LORS (operator| LHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 67 - LORS (operator| LHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 68 - LORS (operator|| LHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 69 - LORS (operator|| LHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 70 - LORVA
OK   UME::SIMD::SIMDMask4 test Id: 71 - LORVA(operator |=)
OK   UME::SIMD::SIMDMask4 test Id: 72 - LORSA
OK   UME::SIMD::SIMDMask4 test Id: 73 - LORSA(operator |=)
OK   UME::SIMD::SIMDMask4 test Id: 74 - LXORV
OK   UME::SIMD::SIMDMask4 test Id: 75 - LXORV(operator^)
OK   UME::SIMD::SIMDMask4 test Id: 76 - LXORS
OK   UME::SIMD::SIMDMask4 test Id: 77 - LXORS
OK   UME::SIMD::SIMDMask4 test Id: 78 - LXORS (operator^ RHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 79 - LXORS (operator^ RHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 80 - LXORS (operator^ LHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 81 - LXORS (operator^ LHS scalar)
OK   UME::SIMD::SIMDMask4 test Id: 82 - LXORVA
OK   UME::SIMD::SIMDMask4 test Id: 83 - LXORVA(operator^=)
OK   UME::SIMD::SIMDMask4 test Id: 84 - LXORSA
OK   UME::SIMD::SIMDMask4 test Id: 85 - LXORSA(operator^=)
OK   UME::SIMD::SIMDMask4 test Id: 86 - LNOT
OK   UME::SIMD::SIMDMask4 test Id: 87 - LNOT(operator !)
OK   UME::SIMD::SIMDMask4 test Id: 88 - LNOTA
OK   UME::SIMD::SIMDMask4 test Id: 89 - LANDNOTV gen
OK   UME::SIMD::SIMDMask4 test Id: 90 - LANDNOTS gen
OK   UME::SIMD::SIMDMask4 test Id: 91 - HLAND
OK   UME::SIMD::SIMDMask4 test Id: 92 - HLOR
OK   UME::SIMD::SIMDMask4 test Id: 93 - HLXOR
OK   UME::SIMD::SIMDMask8 test Id: 1 - ZERO-CONSTR()
OK   UME::SIMD::SIMDMask8 test Id: 2 - SET-CONSTR
OK   UME::SIMD::SIMDMask8 test Id: 3 - FULL-CONSTR
OK   UME::SIMD::SIMDMask8 test Id: 4 - ASSIGN
OK   UME::SIMD::SIMDMask8 test Id: 5 - LAND
OK   UME::SIMD::SIMDMask8 test Id: 6 - LAND(operator&)
OK   UME::SIMD::SIMDMask8 test Id: 7 - SET-CONSTR gen
OK   UME::SIMD::SIMDMask8 test Id: 8 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMDMask8 test Id: 9 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMDMask8 test Id: 10 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMDMask8 test Id: 11 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMDMask8 test Id: 12 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMDMask8 test Id: 13 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMDMask8 test Id: 14 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMDMask8 test Id: 15 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMDMask8 test Id: 16 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMDMask8 test Id: 17 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMDMask8 test Id: 18 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMDMask8 test Id: 19 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMDMask8 test Id: 20 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMDMask8 test Id: 21 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMDMask8 test Id: 22 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMDMask8 test Id: 23 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMDMask8 test Id: 24 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMDMask8 test Id: 25 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMDMask8 test Id: 26 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMDMask8 test Id: 27 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMDMask8 test Id: 28 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMDMask8 test Id: 29 - LANDV
OK   UME::SIMD::SIMDMask8 test Id: 30 - LANDV(operator &)
OK   UME::SIMD::SIMDMask8 test Id: 31 - LANDV(operator &&)
OK   UME::SIMD::SIMDMask8 test Id: 32 - LANDV gen
OK   UME::SIMD::SIMDMask8 test Id: 33 - LANDV gen (operator &&)
OK   UME::SIMD::SIMDMask8 test Id: 34 - LANDS
OK   UME::SIMD::SIMDMask8 test Id: 35 - LANDS
OK   UME::SIMD::SIMDMask8 test Id: 36 - LANDS(operator & RHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 37 - LANDS(operator & RHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 38 - LANDS(operator && RHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 39 - LANDS(operator && RHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 40 - LANDS(operator & LHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 41 - LANDS(operator & LHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 42 - LANDS(operator && LHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 43 - LANDS(operator && LHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 44 - LANDVA
OK   UME::SIMD::SIMDMask8 test Id: 45 - LANDVA(operator &=)
OK   UME::SIMD::SIMDMask8 test Id: 46 - LANDSA
OK   UME::SIMD::SIMDMask8 test Id: 47 - LANDSA(operator &=)
OK   UME::SIMD::SIMDMask8 test Id: 48 - LORV
OK   UME::SIMD::SIMDMask8 test Id: 49 - LORV(operator |)
OK   UME::SIMD::SIMDMask8 test Id: 50 - LORV(operator ||)
OK   UME::SIMD::SIMDMask8 test Id: 51 - LORV gen
OK   UME::SIMD::SIMDMask8 test Id: 52 - LORV gen (operator ||)
OK   UME::SIMD::SIMDMask8 test Id: 53 - LORS
OK   UME::SIMD::SIMDMask8 test Id: 54 - LORS
OK   UME::SIMD::SIMDMask8 test Id: 55 - LORS (operator| RHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 56 - LORS (operator| RHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 57 - LORS (operator|| RHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 58 - LORS (operator|| RHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 59 - LORS (operator| LHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 60 - LORS (operator| LHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 61 - LORS (operator|| LHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 62 - LORS (operator|| LHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 63 - LORVA
OK   UME::SIMD::SIMDMask8 test Id: 64 - LORVA(operator |=)
OK   UME::SIMD::SIMDMask8 test Id: 65 - LORSA
OK   UME::SIMD::SIMDMask8 test Id: 66 - LORSA(operator |=)
OK   UME::SIMD::SIMDMask8 test Id: 67 - LXORV
OK   UME::SIMD::SIMDMask8 test Id: 68 - LXORV(operator^)
OK   UME::SIMD::SIMDMask8 test Id: 69 - LXORS
OK   UME::SIMD::SIMDMask8 test Id: 70 - LXORS
OK   UME::SIMD::SIMDMask8 test Id: 71 - LXORS (operator^ RHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 72 - LXORS (operator^ RHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 73 - LXORS (operator^ LHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 74 - LXORS (operator^ LHS scalar)
OK   UME::SIMD::SIMDMask8 test Id: 75 - LXORVA
OK   UME::SIMD::SIMDMask8 test Id: 76 - LXORVA(operator^=)
OK   UME::SIMD::SIMDMask8 test Id: 77 - LXORSA
OK   UME::SIMD::SIMDMask8 test Id: 78 - LXORSA(operator^=)
OK   UME::SIMD::SIMDMask8 test Id: 79 - LNOT
OK   UME::SIMD::SIMDMask8 test Id: 80 - LNOT(operator !)
OK   UME::SIMD::SIMDMask8 test Id: 81 - LNOTA
OK   UME::SIMD::SIMDMask8 test Id: 82 - LANDNOTV gen
OK   UME::SIMD::SIMDMask8 test Id: 83 - LANDNOTS gen
OK   UME::SIMD::SIMDMask8 test Id: 84 - HLAND
OK   UME::SIMD::SIMDMask8 test Id: 85 - HLOR
OK   UME::SIMD::SIMDMask8 test Id: 86 - HLXOR
OK   UME::SIMD::SIMDMask16 test Id: 1 - ZERO-CONSTR()
OK   UME::SIMD::SIMDMask16 test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMDMask16 test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMDMask16 test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMDMask16 test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMDMask16 test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMDMask16 test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMDMask16 test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMDMask16 test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMDMask16 test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMDMask16 test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMDMask16 test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMDMask16 test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMDMask16 test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMDMask16 test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMDMask16 test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMDMask16 test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMDMask16 test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMDMask16 test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMDMask16 test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMDMask16 test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMDMask16 test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMDMask16 test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMDMask16 test Id: 24 - LANDV
OK   UME::SIMD::SIMDMask16 test Id: 25 - LANDV(operator &)
OK   UME::SIMD::SIMDMask16 test Id: 26 - LANDV(operator &&)
OK   UME::SIMD::SIMDMask16 test Id: 27 - LANDV gen
OK   UME::SIMD::SIMDMask16 test Id: 28 - LANDV gen (operator &&)
OK   UME::SIMD::SIMDMask16 test Id: 29 - LANDS
OK   UME::SIMD::SIMDMask16 test Id: 30 - LANDS
OK   UME::SIMD::SIMDMask16 test Id: 31 - LANDS(operator & RHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 32 - LANDS(operator & RHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 33 - LANDS(operator && RHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 34 - LANDS(operator && RHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 35 - LANDS(operator & LHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 36 - LANDS(operator & LHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 37 - LANDS(operator && LHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 38 - LANDS(operator && LHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 39 - LANDVA
OK   UME::SIMD::SIMDMask16 test Id: 40 - LANDVA(operator &=)
OK   UME::SIMD::SIMDMask16 test Id: 41 - LANDSA
OK   UME::SIMD::SIMDMask16 test Id: 42 - LANDSA(operator &=)
OK   UME::SIMD::SIMDMask16 test Id: 43 - LORV
OK   UME::SIMD::SIMDMask16 test Id: 44 - LORV(operator |)
OK   UME::SIMD::SIMDMask16 test Id: 45 - LORV(operator ||)
OK   UME::SIMD::SIMDMask16 test Id: 46 - LORV gen
OK   UME::SIMD::SIMDMask16 test Id: 47 - LORV gen (operator ||)
OK   UME::SIMD::SIMDMask16 test Id: 48 - LORS
OK   UME::SIMD::SIMDMask16 test Id: 49 - LORS
OK   UME::SIMD::SIMDMask16 test Id: 50 - LORS (operator| RHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 51 - LORS (operator| RHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 52 - LORS (operator|| RHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 53 - LORS (operator|| RHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 54 - LORS (operator| LHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 55 - LORS (operator| LHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 56 - LORS (operator|| LHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 57 - LORS (operator|| LHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 58 - LORVA
OK   UME::SIMD::SIMDMask16 test Id: 59 - LORVA(operator |=)
OK   UME::SIMD::SIMDMask16 test Id: 60 - LORSA
OK   UME::SIMD::SIMDMask16 test Id: 61 - LORSA(operator |=)
OK   UME::SIMD::SIMDMask16 test Id: 62 - LXORV
OK   UME::SIMD::SIMDMask16 test Id: 63 - LXORV(operator^)
OK   UME::SIMD::SIMDMask16 test Id: 64 - LXORS
OK   UME::SIMD::SIMDMask16 test Id: 65 - LXORS
OK   UME::SIMD::SIMDMask16 test Id: 66 - LXORS (operator^ RHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 67 - LXORS (operator^ RHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 68 - LXORS (operator^ LHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 69 - LXORS (operator^ LHS scalar)
OK   UME::SIMD::SIMDMask16 test Id: 70 - LXORVA
OK   UME::SIMD::SIMDMask16 test Id: 71 - LXORVA(operator^=)
OK   UME::SIMD::SIMDMask16 test Id: 72 - LXORSA
OK   UME::SIMD::SIMDMask16 test Id: 73 - LXORSA(operator^=)
OK   UME::SIMD::SIMDMask16 test Id: 74 - LNOT
OK   UME::SIMD::SIMDMask16 test Id: 75 - LNOT(operator !)
OK   UME::SIMD::SIMDMask16 test Id: 76 - LNOTA
OK   UME::SIMD::SIMDMask16 test Id: 77 - LANDNOTV gen
OK   UME::SIMD::SIMDMask16 test Id: 78 - LANDNOTS gen
OK   UME::SIMD::SIMDMask16 test Id: 79 - HLAND
OK   UME::SIMD::SIMDMask16 test Id: 80 - HLOR
OK   UME::SIMD::SIMDMask16 test Id: 81 - HLXOR
OK   UME::SIMD::SIMDMask32 test Id: 1 - ZERO-CONSTR()
OK   UME::SIMD::SIMDMask32 test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMDMask32 test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMDMask32 test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMDMask32 test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMDMask32 test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMDMask32 test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMDMask32 test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMDMask32 test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMDMask32 test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMDMask32 test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMDMask32 test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMDMask32 test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMDMask32 test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMDMask32 test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMDMask32 test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMDMask32 test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMDMask32 test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMDMask32 test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMDMask32 test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMDMask32 test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMDMask32 test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMDMask32 test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMDMask32 test Id: 24 - LANDV
OK   UME::SIMD::SIMDMask32 test Id: 25 - LANDV(operator &)
OK   UME::SIMD::SIMDMask32 test Id: 26 - LANDV(operator &&)
OK   UME::SIMD::SIMDMask32 test Id: 27 - LANDV gen
OK   UME::SIMD::SIMDMask32 test Id: 28 - LANDV gen (operator &&)
OK   UME::SIMD::SIMDMask32 test Id: 29 - LANDS
OK   UME::SIMD::SIMDMask32 test Id: 30 - LANDS
OK   UME::SIMD::SIMDMask32 test Id: 31 - LANDS(operator & RHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 32 - LANDS(operator & RHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 33 - LANDS(operator && RHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 34 - LANDS(operator && RHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 35 - LANDS(operator & LHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 36 - LANDS(operator & LHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 37 - LANDS(operator && LHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 38 - LANDS(operator && LHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 39 - LANDVA
OK   UME::SIMD::SIMDMask32 test Id: 40 - LANDVA(operator &=)
OK   UME::SIMD::SIMDMask32 test Id: 41 - LANDSA
OK   UME::SIMD::SIMDMask32 test Id: 42 - LANDSA(operator &=)
OK   UME::SIMD::SIMDMask32 test Id: 43 - LORV
OK   UME::SIMD::SIMDMask32 test Id: 44 - LORV(operator |)
OK   UME::SIMD::SIMDMask32 test Id: 45 - LORV(operator ||)
OK   UME::SIMD::SIMDMask32 test Id: 46 - LORV gen
OK   UME::SIMD::SIMDMask32 test Id: 47 - LORV gen (operator ||)
OK   UME::SIMD::SIMDMask32 test Id: 48 - LORS
OK   UME::SIMD::SIMDMask32 test Id: 49 - LORS
OK   UME::SIMD::SIMDMask32 test Id: 50 - LORS (operator| RHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 51 - LORS (operator| RHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 52 - LORS (operator|| RHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 53 - LORS (operator|| RHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 54 - LORS (operator| LHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 55 - LORS (operator| LHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 56 - LORS (operator|| LHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 57 - LORS (operator|| LHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 58 - LORVA
OK   UME::SIMD::SIMDMask32 test Id: 59 - LORVA(operator |=)
OK   UME::SIMD::SIMDMask32 test Id: 60 - LORSA
OK   UME::SIMD::SIMDMask32 test Id: 61 - LORSA(operator |=)
OK   UME::SIMD::SIMDMask32 test Id: 62 - LXORV
OK   UME::SIMD::SIMDMask32 test Id: 63 - LXORV(operator^)
OK   UME::SIMD::SIMDMask32 test Id: 64 - LXORS
OK   UME::SIMD::SIMDMask32 test Id: 65 - LXORS
OK   UME::SIMD::SIMDMask32 test Id: 66 - LXORS (operator^ RHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 67 - LXORS (operator^ RHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 68 - LXORS (operator^ LHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 69 - LXORS (operator^ LHS scalar)
OK   UME::SIMD::SIMDMask32 test Id: 70 - LXORVA
OK   UME::SIMD::SIMDMask32 test Id: 71 - LXORVA(operator^=)
OK   UME::SIMD::SIMDMask32 test Id: 72 - LXORSA
OK   UME::SIMD::SIMDMask32 test Id: 73 - LXORSA(operator^=)
OK   UME::SIMD::SIMDMask32 test Id: 74 - LNOT
OK   UME::SIMD::SIMDMask32 test Id: 75 - LNOT(operator !)
OK   UME::SIMD::SIMDMask32 test Id: 76 - LNOTA
OK   UME::SIMD::SIMDMask32 test Id: 77 - LANDNOTV gen
OK   UME::SIMD::SIMDMask32 test Id: 78 - LANDNOTS gen
OK   UME::SIMD::SIMDMask32 test Id: 79 - HLAND
OK   UME::SIMD::SIMDMask32 test Id: 80 - HLOR
OK   UME::SIMD::SIMDMask32 test Id: 81 - HLXOR
OK   UME::SIMD::SIMDMask64 test Id: 1 - ZERO-CONSTR()
OK   UME::SIMD::SIMDMask64 test Id: 2 - FULL-CONSTR
OK   UME::SIMD::SIMDMask64 test Id: 3 - SET-CONSTR gen
OK   UME::SIMD::SIMDMask64 test Id: 4 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMDMask64 test Id: 5 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMDMask64 test Id: 6 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMDMask64 test Id: 7 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMDMask64 test Id: 8 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMDMask64 test Id: 9 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMDMask64 test Id: 10 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMDMask64 test Id: 11 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMDMask64 test Id: 12 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMDMask64 test Id: 13 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMDMask64 test Id: 14 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMDMask64 test Id: 15 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMDMask64 test Id: 16 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMDMask64 test Id: 17 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMDMask64 test Id: 18 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMDMask64 test Id: 19 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMDMask64 test Id: 20 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMDMask64 test Id: 21 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMDMask64 test Id: 22 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMDMask64 test Id: 23 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMDMask64 test Id: 24 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMDMask64 test Id: 25 - LANDV
OK   UME::SIMD::SIMDMask64 test Id: 26 - LANDV(operator &)
OK   UME::SIMD::SIMDMask64 test Id: 27 - LANDV(operator &&)
OK   UME::SIMD::SIMDMask64 test Id: 28 - LANDV gen
OK   UME::SIMD::SIMDMask64 test Id: 29 - LANDV gen (operator &&)
OK   UME::SIMD::SIMDMask64 test Id: 30 - LANDS
OK   UME::SIMD::SIMDMask64 test Id: 31 - LANDS
OK   UME::SIMD::SIMDMask64 test Id: 32 - LANDS(operator & RHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 33 - LANDS(operator & RHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 34 - LANDS(operator && RHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 35 - LANDS(operator && RHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 36 - LANDS(operator & LHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 37 - LANDS(operator & LHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 38 - LANDS(operator && LHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 39 - LANDS(operator && LHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 40 - LANDVA
OK   UME::SIMD::SIMDMask64 test Id: 41 - LANDVA(operator &=)
OK   UME::SIMD::SIMDMask64 test Id: 42 - LANDSA
OK   UME::SIMD::SIMDMask64 test Id: 43 - LANDSA(operator &=)
OK   UME::SIMD::SIMDMask64 test Id: 44 - LORV
OK   UME::SIMD::SIMDMask64 test Id: 45 - LORV(operator |)
OK   UME::SIMD::SIMDMask64 test Id: 46 - LORV(operator ||)
OK   UME::SIMD::SIMDMask64 test Id: 47 - LORV gen
OK   UME::SIMD::SIMDMask64 test Id: 48 - LORV gen (operator ||)
OK   UME::SIMD::SIMDMask64 test Id: 49 - LORS
OK   UME::SIMD::SIMDMask64 test Id: 50 - LORS
OK   UME::SIMD::SIMDMask64 test Id: 51 - LORS (operator| RHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 52 - LORS (operator| RHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 53 - LORS (operator|| RHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 54 - LORS (operator|| RHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 55 - LORS (operator| LHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 56 - LORS (operator| LHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 57 - LORS (operator|| LHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 58 - LORS (operator|| LHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 59 - LORVA
OK   UME::SIMD::SIMDMask64 test Id: 60 - LORVA(operator |=)
OK   UME::SIMD::SIMDMask64 test Id: 61 - LORSA
OK   UME::SIMD::SIMDMask64 test Id: 62 - LORSA(operator |=)
OK   UME::SIMD::SIMDMask64 test Id: 63 - LXORV
OK   UME::SIMD::SIMDMask64 test Id: 64 - LXORV(operator^)
OK   UME::SIMD::SIMDMask64 test Id: 65 - LXORS
OK   UME::SIMD::SIMDMask64 test Id: 66 - LXORS
OK   UME::SIMD::SIMDMask64 test Id: 67 - LXORS (operator^ RHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 68 - LXORS (operator^ RHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 69 - LXORS (operator^ LHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 70 - LXORS (operator^ LHS scalar)
OK   UME::SIMD::SIMDMask64 test Id: 71 - LXORVA
OK   UME::SIMD::SIMDMask64 test Id: 72 - LXORVA(operator^=)
OK   UME::SIMD::SIMDMask64 test Id: 73 - LXORSA
OK   UME::SIMD::SIMDMask64 test Id: 74 - LXORSA(operator^=)
OK   UME::SIMD::SIMDMask64 test Id: 75 - LNOT
OK   UME::SIMD::SIMDMask64 test Id: 76 - LNOT(operator !)
OK   UME::SIMD::SIMDMask64 test Id: 77 - LNOTA
OK   UME::SIMD::SIMDMask64 test Id: 78 - LANDNOTV gen
OK   UME::SIMD::SIMDMask64 test Id: 79 - LANDNOTS gen
OK   UME::SIMD::SIMDMask64 test Id: 80 - HLAND
OK   UME::SIMD::SIMDMask64 test Id: 81 - HLOR
OK   UME::SIMD::SIMDMask64 test Id: 82 - HLXOR
OK   UME::SIMD::SIMDMask128 test Id: 1 - ZERO-CONSTR()
OK   UME::SIMD::SIMDMask128 test Id: 2 - FULL-CONSTR
OK   UME::SIMD::SIMDMask128 test Id: 3 - SET-CONSTR gen
OK   UME::SIMD::SIMDMask128 test Id: 4 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMDMask128 test Id: 5 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMDMask128 test Id: 6 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMDMask128 test Id: 7 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMDMask128 test Id: 8 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMDMask128 test Id: 9 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMDMask128 test Id: 10 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMDMask128 test Id: 11 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMDMask128 test Id: 12 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMDMask128 test Id: 13 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMDMask128 test Id: 14 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMDMask128 test Id: 15 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMDMask128 test Id: 16 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMDMask128 test Id: 17 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMDMask128 test Id: 18 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMDMask128 test Id: 19 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMDMask128 test Id: 20 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMDMask128 test Id: 21 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMDMask128 test Id: 22 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMDMask128 test Id: 23 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMDMask128 test Id: 24 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMDMask128 test Id: 25 - LANDV
OK   UME::SIMD::SIMDMask128 test Id: 26 - LANDV(operator &)
OK   UME::SIMD::SIMDMask128 test Id: 27 - LANDV(operator &&)
OK   UME::SIMD::SIMDMask128 test Id: 28 - LANDV gen
OK   UME::SIMD::SIMDMask128 test Id: 29 - LANDV gen (operator &&)
OK   UME::SIMD::SIMDMask128 test Id: 30 - LANDS
OK   UME::SIMD::SIMDMask128 test Id: 31 - LANDS
OK   UME::SIMD::SIMDMask128 test Id: 32 - LANDS(operator & RHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 33 - LANDS(operator & RHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 34 - LANDS(operator && RHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 35 - LANDS(operator && RHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 36 - LANDS(operator & LHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 37 - LANDS(operator & LHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 38 - LANDS(operator && LHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 39 - LANDS(operator && LHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 40 - LANDVA
OK   UME::SIMD::SIMDMask128 test Id: 41 - LANDVA(operator &=)
OK   UME::SIMD::SIMDMask128 test Id: 42 - LANDSA
OK   UME::SIMD::SIMDMask128 test Id: 43 - LANDSA(operator &=)
OK   UME::SIMD::SIMDMask128 test Id: 44 - LORV
OK   UME::SIMD::SIMDMask128 test Id: 45 - LORV(operator |)
OK   UME::SIMD::SIMDMask128 test Id: 46 - LORV(operator ||)
OK   UME::SIMD::SIMDMask128 test Id: 47 - LORV gen
OK   UME::SIMD::SIMDMask128 test Id: 48 - LORV gen (operator ||)
OK   UME::SIMD::SIMDMask128 test Id: 49 - LORS
OK   UME::SIMD::SIMDMask128 test Id: 50 - LORS
OK   UME::SIMD::SIMDMask128 test Id: 51 - LORS (operator| RHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 52 - LORS (operator| RHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 53 - LORS (operator|| RHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 54 - LORS (operator|| RHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 55 - LORS (operator| LHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 56 - LORS (operator| LHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 57 - LORS (operator|| LHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 58 - LORS (operator|| LHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 59 - LORVA
OK   UME::SIMD::SIMDMask128 test Id: 60 - LORVA(operator |=)
OK   UME::SIMD::SIMDMask128 test Id: 61 - LORSA
OK   UME::SIMD::SIMDMask128 test Id: 62 - LORSA(operator |=)
OK   UME::SIMD::SIMDMask128 test Id: 63 - LXORV
OK   UME::SIMD::SIMDMask128 test Id: 64 - LXORV(operator^)
OK   UME::SIMD::SIMDMask128 test Id: 65 - LXORS
OK   UME::SIMD::SIMDMask128 test Id: 66 - LXORS
OK   UME::SIMD::SIMDMask128 test Id: 67 - LXORS (operator^ RHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 68 - LXORS (operator^ RHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 69 - LXORS (operator^ LHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 70 - LXORS (operator^ LHS scalar)
OK   UME::SIMD::SIMDMask128 test Id: 71 - LXORVA
OK   UME::SIMD::SIMDMask128 test Id: 72 - LXORVA(operator^=)
OK   UME::SIMD::SIMDMask128 test Id: 73 - LXORSA
OK   UME::SIMD::SIMDMask128 test Id: 74 - LXORSA(operator^=)
OK   UME::SIMD::SIMDMask128 test Id: 75 - LNOT
OK   UME::SIMD::SIMDMask128 test Id: 76 - LNOT(operator !)
OK   UME::SIMD::SIMDMask128 test Id: 77 - LNOTA
OK   UME::SIMD::SIMDMask128 test Id: 78 - LANDNOTV gen
OK   UME::SIMD::SIMDMask128 test Id: 79 - LANDNOTS gen
OK   UME::SIMD::SIMDMask128 test Id: 80 - HLAND
OK   UME::SIMD::SIMDMask128 test Id: 81 - HLOR
OK   UME::SIMD::SIMDMask128 test Id: 82 - HLXOR
OK   UME::SIMD::SIMDSwizzle1 test Id: 1 - LENGTH
OK   UME::SIMD::SIMDSwizzle2 test Id: 1 - LENGTH
OK   UME::SIMD::SIMDSwizzle4 test Id: 1 - LENGTH
OK   UME::SIMD::SIMDSwizzle8 test Id: 1 - LENGTH
OK   UME::SIMD::SIMDSwizzle16 test Id: 1 - LENGTH
OK   UME::SIMD::SIMDSwizzle32 test Id: 1 - LENGTH
OK   UME::SIMD::SIMDSwizzle64 test Id: 1 - LENGTH
OK   UME::SIMD::SIMDSwizzle128 test Id: 1 - LENGTH
OK   UME::SIMD::SIMD1_8u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD1_8u test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD1_8u test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD1_8u test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD1_8u test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD1_8u test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD1_8u test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD1_8u test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD1_8u test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD1_8u test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD1_8u test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD1_8u test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD1_8u test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD1_8u test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD1_8u test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD1_8u test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD1_8u test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD1_8u test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD1_8u test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD1_8u test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD1_8u test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD1_8u test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD1_8u test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD1_8u test Id: 24 - INSERT
OK   UME::SIMD::SIMD1_8u test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD1_8u test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD1_8u test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD1_8u test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD1_8u test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD1_8u test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD1_8u test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD1_8u test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD1_8u test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD1_8u test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD1_8u test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD1_8u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD1_8u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD1_8u test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD1_8u test Id: 39 - MLOAD
OK   UME::SIMD::SIMD1_8u test Id: 40 - MSTORE
OK   UME::SIMD::SIMD1_8u test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD1_8u test Id: 42 - MLOADA
OK   UME::SIMD::SIMD1_8u test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD1_8u test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD1_8u test Id: 45 - SORTA
OK   UME::SIMD::SIMD1_8u test Id: 46 - SORTD
OK   UME::SIMD::SIMD1_8u test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD1_8u test Id: 48 - ADDV
OK   UME::SIMD::SIMD1_8u test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD1_8u test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD1_8u test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD1_8u test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD1_8u test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD1_8u test Id: 54 - MADDV
OK   UME::SIMD::SIMD1_8u test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD1_8u test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD1_8u test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD1_8u test Id: 58 - ADDS
OK   UME::SIMD::SIMD1_8u test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD1_8u test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD1_8u test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD1_8u test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD1_8u test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD1_8u test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD1_8u test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD1_8u test Id: 68 - MADDS
OK   UME::SIMD::SIMD1_8u test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD1_8u test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD1_8u test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD1_8u test Id: 73 - ADDVA
OK   UME::SIMD::SIMD1_8u test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD1_8u test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD1_8u test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD1_8u test Id: 77 - MADDVA
OK   UME::SIMD::SIMD1_8u test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD1_8u test Id: 79 - ADDSA
OK   UME::SIMD::SIMD1_8u test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD1_8u test Id: 81 - MADDSA
OK   UME::SIMD::SIMD1_8u test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD1_8u test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD1_8u test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD1_8u test Id: 85 - POSTINC
OK   UME::SIMD::SIMD1_8u test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD1_8u test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD1_8u test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD1_8u test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD1_8u test Id: 90 - PREFINC
OK   UME::SIMD::SIMD1_8u test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD1_8u test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD1_8u test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD1_8u test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD1_8u test Id: 95 - SUBV
OK   UME::SIMD::SIMD1_8u test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD1_8u test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD1_8u test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD1_8u test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD1_8u test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD1_8u test Id: 101 - MSUBV
OK   UME::SIMD::SIMD1_8u test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD1_8u test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD1_8u test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD1_8u test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD1_8u test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD1_8u test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD1_8u test Id: 108 - MSUBS
OK   UME::SIMD::SIMD1_8u test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 110 - SUBVA
OK   UME::SIMD::SIMD1_8u test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD1_8u test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD1_8u test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD1_8u test Id: 114 - SUBSA
OK   UME::SIMD::SIMD1_8u test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD1_8u test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD1_8u test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD1_8u test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD1_8u test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD1_8u test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD1_8u test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD1_8u test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD1_8u test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD1_8u test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD1_8u test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD1_8u test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD1_8u test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD1_8u test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD1_8u test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD1_8u test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD1_8u test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD1_8u test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD1_8u test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD1_8u test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD1_8u test Id: 137 - MULV
OK   UME::SIMD::SIMD1_8u test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD1_8u test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD1_8u test Id: 140 - MMULV
OK   UME::SIMD::SIMD1_8u test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD1_8u test Id: 142 - MULS
OK   UME::SIMD::SIMD1_8u test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 146 - MMULS
OK   UME::SIMD::SIMD1_8u test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 148 - MULVA
OK   UME::SIMD::SIMD1_8u test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD1_8u test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD1_8u test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD1_8u test Id: 152 - MMULVA
OK   UME::SIMD::SIMD1_8u test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_8u test Id: 154 - MULSA
OK   UME::SIMD::SIMD1_8u test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD1_8u test Id: 156 - MMULSA
OK   UME::SIMD::SIMD1_8u test Id: 157 - DIVV
OK   UME::SIMD::SIMD1_8u test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD1_8u test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD1_8u test Id: 160 - MDIVV
OK   UME::SIMD::SIMD1_8u test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD1_8u test Id: 162 - DIVS
OK   UME::SIMD::SIMD1_8u test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 165 - MDIVS
OK   UME::SIMD::SIMD1_8u test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 167 - DIVVA
OK   UME::SIMD::SIMD1_8u test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD1_8u test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD1_8u test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD1_8u test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD1_8u test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_8u test Id: 173 - DIVSA
OK   UME::SIMD::SIMD1_8u test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD1_8u test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD1_8u test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD1_8u test Id: 177 - RCP
OK   UME::SIMD::SIMD1_8u test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD1_8u test Id: 179 - MRCP
OK   UME::SIMD::SIMD1_8u test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD1_8u test Id: 181 - RCPS
OK   UME::SIMD::SIMD1_8u test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD1_8u test Id: 184 - MRCPS
OK   UME::SIMD::SIMD1_8u test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD1_8u test Id: 186 - RCPA
OK   UME::SIMD::SIMD1_8u test Id: 187 - MRCPA
OK   UME::SIMD::SIMD1_8u test Id: 188 - RCPSA
OK   UME::SIMD::SIMD1_8u test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD1_8u test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD1_8u test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD1_8u test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD1_8u test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD1_8u test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD1_8u test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD1_8u test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD1_8u test Id: 201 - CMPNES
OK   UME::SIMD::SIMD1_8u test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD1_8u test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD1_8u test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD1_8u test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD1_8u test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD1_8u test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD1_8u test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD1_8u test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD1_8u test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD1_8u test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD1_8u test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD1_8u test Id: 225 - CMPGES
OK   UME::SIMD::SIMD1_8u test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD1_8u test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD1_8u test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD1_8u test Id: 233 - CMPLES
OK   UME::SIMD::SIMD1_8u test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 238 - CMPEV
OK   UME::SIMD::SIMD1_8u test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD1_8u test Id: 240 - CMPES
OK   UME::SIMD::SIMD1_8u test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 243 - HADD
OK   UME::SIMD::SIMD1_8u test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD1_8u test Id: 245 - HADD gen
OK   UME::SIMD::SIMD1_8u test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD1_8u test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD1_8u test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD1_8u test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD1_8u test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD1_8u test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD1_8u test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD1_8u test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD1_8u test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD1_8u test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD1_8u test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD1_8u test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD1_8u test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD1_8u test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD1_8u test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD1_8u test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD1_8u test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD1_8u test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD1_8u test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD1_8u test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD1_8u test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD1_8u test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD1_8u test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD1_8u test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD1_8u test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD1_8u test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD1_8u test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD1_8u test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD1_8u test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD1_8u test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD1_8u test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD1_8u test Id: 277 - MAXV
OK   UME::SIMD::SIMD1_8u test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD1_8u test Id: 279 - MMAXV
OK   UME::SIMD::SIMD1_8u test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD1_8u test Id: 281 - MAXS
OK   UME::SIMD::SIMD1_8u test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 284 - MMAXS
OK   UME::SIMD::SIMD1_8u test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 286 - MAXVA
OK   UME::SIMD::SIMD1_8u test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD1_8u test Id: 288 - MAXSA
OK   UME::SIMD::SIMD1_8u test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD1_8u test Id: 290 - MINV
OK   UME::SIMD::SIMD1_8u test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD1_8u test Id: 292 - MMINV
OK   UME::SIMD::SIMD1_8u test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD1_8u test Id: 294 - MINS
OK   UME::SIMD::SIMD1_8u test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD1_8u test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD1_8u test Id: 297 - MMINS
OK   UME::SIMD::SIMD1_8u test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 299 - MINVA
OK   UME::SIMD::SIMD1_8u test Id: 300 - MMINVA
OK   UME::SIMD::SIMD1_8u test Id: 301 - MINSA
OK   UME::SIMD::SIMD1_8u test Id: 302 - MMINSA
OK   UME::SIMD::SIMD1_8u test Id: 303 - HMAX
OK   UME::SIMD::SIMD1_8u test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD1_8u test Id: 305 - HMAX
OK   UME::SIMD::SIMD1_8u test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD1_8u test Id: 307 - MHMAX
OK   UME::SIMD::SIMD1_8u test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD1_8u test Id: 309 - IMAX
OK   UME::SIMD::SIMD1_8u test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD1_8u test Id: 311 - MIMAX
OK   UME::SIMD::SIMD1_8u test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD1_8u test Id: 313 - HMIN
OK   UME::SIMD::SIMD1_8u test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD1_8u test Id: 315 - HMIN
OK   UME::SIMD::SIMD1_8u test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD1_8u test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD1_8u test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD1_8u test Id: 319 - IMIN
OK   UME::SIMD::SIMD1_8u test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD1_8u test Id: 321 - MIMIN
OK   UME::SIMD::SIMD1_8u test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD1_8u test Id: 323 - REMV gen
OK   UME::SIMD::SIMD1_8u test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD1_8u test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD1_8u test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD1_8u test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD1_8u test Id: 328 - REMS gen
OK   UME::SIMD::SIMD1_8u test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD1_8u test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD1_8u test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD1_8u test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD1_8u test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD1_8u test Id: 334 - LORV gen
OK   UME::SIMD::SIMD1_8u test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD1_8u test Id: 336 - BANDV
OK   UME::SIMD::SIMD1_8u test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD1_8u test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD1_8u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD1_8u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD1_8u test Id: 341 - BANDS
OK   UME::SIMD::SIMD1_8u test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 346 - MBANDS
OK   UME::SIMD::SIMD1_8u test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 348 - BANDVA
OK   UME::SIMD::SIMD1_8u test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD1_8u test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD1_8u test Id: 351 - BANDSA
OK   UME::SIMD::SIMD1_8u test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD1_8u test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD1_8u test Id: 354 - BORV
OK   UME::SIMD::SIMD1_8u test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD1_8u test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD1_8u test Id: 357 - MBORV
OK   UME::SIMD::SIMD1_8u test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD1_8u test Id: 359 - BORS
OK   UME::SIMD::SIMD1_8u test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 364 - MBORS
OK   UME::SIMD::SIMD1_8u test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 366 - BORVA
OK   UME::SIMD::SIMD1_8u test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD1_8u test Id: 368 - MBORVA
OK   UME::SIMD::SIMD1_8u test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD1_8u test Id: 370 - BORSA
OK   UME::SIMD::SIMD1_8u test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD1_8u test Id: 372 - MBORSA
OK   UME::SIMD::SIMD1_8u test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD1_8u test Id: 374 - BXORV
OK   UME::SIMD::SIMD1_8u test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD1_8u test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD1_8u test Id: 377 - MBXORV
OK   UME::SIMD::SIMD1_8u test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD1_8u test Id: 379 - BXORS
OK   UME::SIMD::SIMD1_8u test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 384 - MBXORS
OK   UME::SIMD::SIMD1_8u test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 386 - BXORVA
OK   UME::SIMD::SIMD1_8u test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD1_8u test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD1_8u test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD1_8u test Id: 390 - BXORSA
OK   UME::SIMD::SIMD1_8u test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD1_8u test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD1_8u test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD1_8u test Id: 394 - BNOT
OK   UME::SIMD::SIMD1_8u test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD1_8u test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD1_8u test Id: 397 - MBNOT
OK   UME::SIMD::SIMD1_8u test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD1_8u test Id: 399 - BNOTA
OK   UME::SIMD::SIMD1_8u test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD1_8u test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD1_8u test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD1_8u test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD1_8u test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD1_8u test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD1_8u test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD1_8u test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD1_8u test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD1_8u test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD1_8u test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD1_8u test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD1_8u test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD1_8u test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD1_8u test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD1_8u test Id: 415 - HBAND
OK   UME::SIMD::SIMD1_8u test Id: 416 - HBAND
OK   UME::SIMD::SIMD1_8u test Id: 417 - MHBAND
OK   UME::SIMD::SIMD1_8u test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD1_8u test Id: 419 - HBANDS
OK   UME::SIMD::SIMD1_8u test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD1_8u test Id: 421 - HBOR
OK   UME::SIMD::SIMD1_8u test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD1_8u test Id: 423 - MHBOR
OK   UME::SIMD::SIMD1_8u test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD1_8u test Id: 425 - HBORS
OK   UME::SIMD::SIMD1_8u test Id: 426 - MHBORS
OK   UME::SIMD::SIMD1_8u test Id: 427 - HBXOR
OK   UME::SIMD::SIMD1_8u test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD1_8u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD1_8u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD1_8u test Id: 431 - HBXORS
OK   UME::SIMD::SIMD1_8u test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD1_8u test Id: 433 - GATHERU
OK   UME::SIMD::SIMD1_8u test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD1_8u test Id: 435 - GATHERS
OK   UME::SIMD::SIMD1_8u test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD1_8u test Id: 437 - GATHERV
OK   UME::SIMD::SIMD1_8u test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD1_8u test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD1_8u test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD1_8u test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD1_8u test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD1_8u test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD1_8u test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD1_8u test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD1_8u test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD1_8u test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD1_8u test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD1_8u test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD1_8u test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD1_8u test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD1_8u test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD1_8u test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD1_8u test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD1_8u test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD1_8u test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD1_8u test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD1_8u test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD1_8u test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD1_8u test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD1_8u test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD1_8u test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD1_8u test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD1_8u test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD1_8u test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD1_8u test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD1_8u test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD1_8u test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD1_8u test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD1_8u test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD1_8u test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD1_8u test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD1_8u test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD1_8u test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD1_8u test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD1_8u test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD1_8u test Id: 477 - ROLV
OK   UME::SIMD::SIMD1_8u test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD1_8u test Id: 479 - MROLV
OK   UME::SIMD::SIMD1_8u test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD1_8u test Id: 481 - ROLS
OK   UME::SIMD::SIMD1_8u test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 483 - MROLS
OK   UME::SIMD::SIMD1_8u test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 485 - ROLVA
OK   UME::SIMD::SIMD1_8u test Id: 486 - MROLVA
OK   UME::SIMD::SIMD1_8u test Id: 487 - ROLSA
OK   UME::SIMD::SIMD1_8u test Id: 488 - MROLSA
OK   UME::SIMD::SIMD1_8u test Id: 489 - RORV
OK   UME::SIMD::SIMD1_8u test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD1_8u test Id: 491 - MRORV
OK   UME::SIMD::SIMD1_8u test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD1_8u test Id: 493 - RORS
OK   UME::SIMD::SIMD1_8u test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 495 - MRORS
OK   UME::SIMD::SIMD1_8u test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8u test Id: 497 - RORVA
OK   UME::SIMD::SIMD1_8u test Id: 498 - MRORVA
OK   UME::SIMD::SIMD1_8u test Id: 499 - RORSA
OK   UME::SIMD::SIMD1_8u test Id: 500 - MRORSA
OK   UME::SIMD::SIMD1_8u test Id: 501 - UTOI
OK   UME::SIMD::SIMD1_8u test Id: 502 - PROMOTE
OK   UME::SIMD::SIMD1_8i test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD1_8i test Id: 2 - ADDV
OK   UME::SIMD::SIMD1_8i test Id: 3 - ADDV(operator+)
OK   UME::SIMD::SIMD1_8i test Id: 4 - SET-CONSTR gen
OK   UME::SIMD::SIMD1_8i test Id: 5 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD1_8i test Id: 6 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD1_8i test Id: 7 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD1_8i test Id: 8 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD1_8i test Id: 9 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD1_8i test Id: 10 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD1_8i test Id: 11 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD1_8i test Id: 12 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD1_8i test Id: 13 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD1_8i test Id: 14 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD1_8i test Id: 15 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD1_8i test Id: 16 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD1_8i test Id: 17 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD1_8i test Id: 18 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD1_8i test Id: 19 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD1_8i test Id: 20 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD1_8i test Id: 21 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD1_8i test Id: 22 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD1_8i test Id: 23 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD1_8i test Id: 24 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD1_8i test Id: 25 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD1_8i test Id: 26 - INSERT
OK   UME::SIMD::SIMD1_8i test Id: 27 - INSERT(operator[] =)
OK   UME::SIMD::SIMD1_8i test Id: 28 - EXTRACT
OK   UME::SIMD::SIMD1_8i test Id: 29 - EXTRACT(operator[])
OK   UME::SIMD::SIMD1_8i test Id: 30 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD1_8i test Id: 31 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD1_8i test Id: 32 - ASSIGNV
OK   UME::SIMD::SIMD1_8i test Id: 33 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD1_8i test Id: 34 - MASSIGNV
OK   UME::SIMD::SIMD1_8i test Id: 35 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD1_8i test Id: 36 - ASSIGNS
OK   UME::SIMD::SIMD1_8i test Id: 37 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD1_8i test Id: 38 - MASSIGNS
OK   UME::SIMD::SIMD1_8i test Id: 39 - MASSIGNS
OK   UME::SIMD::SIMD1_8i test Id: 40 - LOAD/STORE
OK   UME::SIMD::SIMD1_8i test Id: 41 - MLOAD
OK   UME::SIMD::SIMD1_8i test Id: 42 - MSTORE
OK   UME::SIMD::SIMD1_8i test Id: 43 - LOADA/STOREA
OK   UME::SIMD::SIMD1_8i test Id: 44 - MLOADA
OK   UME::SIMD::SIMD1_8i test Id: 45 - MSTOREA
OK   UME::SIMD::SIMD1_8i test Id: 46 - SWIZZLE
OK   UME::SIMD::SIMD1_8i test Id: 47 - SORTA
OK   UME::SIMD::SIMD1_8i test Id: 48 - SORTD
OK   UME::SIMD::SIMD1_8i test Id: 49 - BLENDV gen
OK   UME::SIMD::SIMD1_8i test Id: 50 - ADDV
OK   UME::SIMD::SIMD1_8i test Id: 51 - ADDV(operator+)
OK   UME::SIMD::SIMD1_8i test Id: 52 - ADDV(function)
OK   UME::SIMD::SIMD1_8i test Id: 53 - ADDV gen
OK   UME::SIMD::SIMD1_8i test Id: 54 - ADDV(operator+) gen
OK   UME::SIMD::SIMD1_8i test Id: 55 - ADDV(function) gen
OK   UME::SIMD::SIMD1_8i test Id: 56 - MADDV
OK   UME::SIMD::SIMD1_8i test Id: 57 - MADDV(function)
OK   UME::SIMD::SIMD1_8i test Id: 58 - MADDV gen
OK   UME::SIMD::SIMD1_8i test Id: 59 - MADDV(function) gen
OK   UME::SIMD::SIMD1_8i test Id: 60 - ADDS
OK   UME::SIMD::SIMD1_8i test Id: 61 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 62 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 63 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD1_8i test Id: 64 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD1_8i test Id: 65 - ADDS gen
OK   UME::SIMD::SIMD1_8i test Id: 66 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD1_8i test Id: 67 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD1_8i test Id: 68 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD1_8i test Id: 69 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD1_8i test Id: 70 - MADDS
OK   UME::SIMD::SIMD1_8i test Id: 71 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 72 - MADDS gen
OK   UME::SIMD::SIMD1_8i test Id: 73 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD1_8i test Id: 74 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD1_8i test Id: 75 - ADDVA
OK   UME::SIMD::SIMD1_8i test Id: 76 - ADDVA(operator+=)
OK   UME::SIMD::SIMD1_8i test Id: 77 - ADDVA gen
OK   UME::SIMD::SIMD1_8i test Id: 78 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD1_8i test Id: 79 - MADDVA
OK   UME::SIMD::SIMD1_8i test Id: 80 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD1_8i test Id: 81 - ADDSA
OK   UME::SIMD::SIMD1_8i test Id: 82 - ADDSA(operator+=)
OK   UME::SIMD::SIMD1_8i test Id: 83 - MADDSA
OK   UME::SIMD::SIMD1_8i test Id: 84 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD1_8i test Id: 85 - SADDV gen
OK   UME::SIMD::SIMD1_8i test Id: 86 - SADDV(function) gen
OK   UME::SIMD::SIMD1_8i test Id: 87 - POSTINC
OK   UME::SIMD::SIMD1_8i test Id: 88 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD1_8i test Id: 89 - POSTINC(function)
OK   UME::SIMD::SIMD1_8i test Id: 90 - MPOSTINC
OK   UME::SIMD::SIMD1_8i test Id: 91 - MPOSTINC(function)
OK   UME::SIMD::SIMD1_8i test Id: 92 - PREFINC
OK   UME::SIMD::SIMD1_8i test Id: 93 - PREFINC(operator++())
OK   UME::SIMD::SIMD1_8i test Id: 94 - PREFINC(function)
OK   UME::SIMD::SIMD1_8i test Id: 95 - MPREFINC
OK   UME::SIMD::SIMD1_8i test Id: 96 - MPREFINC(function)
OK   UME::SIMD::SIMD1_8i test Id: 97 - SUBV
OK   UME::SIMD::SIMD1_8i test Id: 98 - SUBV(operator-)
OK   UME::SIMD::SIMD1_8i test Id: 99 - SUBV(function)
OK   UME::SIMD::SIMD1_8i test Id: 100 - SUBV gen
OK   UME::SIMD::SIMD1_8i test Id: 101 - SUBV(operator-) gen
OK   UME::SIMD::SIMD1_8i test Id: 102 - SUBV(function) gen
OK   UME::SIMD::SIMD1_8i test Id: 103 - MSUBV
OK   UME::SIMD::SIMD1_8i test Id: 104 - MSUBV(function)
OK   UME::SIMD::SIMD1_8i test Id: 105 - MSUBV gen
OK   UME::SIMD::SIMD1_8i test Id: 106 - MSUBV(function) gen
OK   UME::SIMD::SIMD1_8i test Id: 107 - SUBS gen
OK   UME::SIMD::SIMD1_8i test Id: 108 - SUBS(operator-) gen
OK   UME::SIMD::SIMD1_8i test Id: 109 - SUBS(function) gen
OK   UME::SIMD::SIMD1_8i test Id: 110 - MSUBS
OK   UME::SIMD::SIMD1_8i test Id: 111 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 112 - SUBVA
OK   UME::SIMD::SIMD1_8i test Id: 113 - SUBVA(operator-=)
OK   UME::SIMD::SIMD1_8i test Id: 114 - MSUBVA
OK   UME::SIMD::SIMD1_8i test Id: 115 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD1_8i test Id: 116 - SUBSA
OK   UME::SIMD::SIMD1_8i test Id: 117 - MSUBSA
OK   UME::SIMD::SIMD1_8i test Id: 118 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD1_8i test Id: 119 - SUBFROMV
OK   UME::SIMD::SIMD1_8i test Id: 120 - MSUBFROMV
OK   UME::SIMD::SIMD1_8i test Id: 121 - SUBFROMS
OK   UME::SIMD::SIMD1_8i test Id: 122 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 123 - MSUBFROMS
OK   UME::SIMD::SIMD1_8i test Id: 124 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 125 - SUBFROMVA
OK   UME::SIMD::SIMD1_8i test Id: 126 - MSUBFROMVA
OK   UME::SIMD::SIMD1_8i test Id: 127 - SUBFROMSA
OK   UME::SIMD::SIMD1_8i test Id: 128 - MSUBFROMSA
OK   UME::SIMD::SIMD1_8i test Id: 129 - POSTDEC
OK   UME::SIMD::SIMD1_8i test Id: 130 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD1_8i test Id: 131 - POSTDEC(function)
OK   UME::SIMD::SIMD1_8i test Id: 132 - MPOSTDEC
OK   UME::SIMD::SIMD1_8i test Id: 133 - MPOSTDEC(function)
OK   UME::SIMD::SIMD1_8i test Id: 134 - PREFDEC
OK   UME::SIMD::SIMD1_8i test Id: 135 - PREFDEC(operator--())
OK   UME::SIMD::SIMD1_8i test Id: 136 - PREFDEC(function)
OK   UME::SIMD::SIMD1_8i test Id: 137 - MPREFDEC
OK   UME::SIMD::SIMD1_8i test Id: 138 - MPREFDEC(function)
OK   UME::SIMD::SIMD1_8i test Id: 139 - MULV
OK   UME::SIMD::SIMD1_8i test Id: 140 - MULV(operator*)
OK   UME::SIMD::SIMD1_8i test Id: 141 - MULV(function)
OK   UME::SIMD::SIMD1_8i test Id: 142 - MMULV
OK   UME::SIMD::SIMD1_8i test Id: 143 - MMULV(function)
OK   UME::SIMD::SIMD1_8i test Id: 144 - MULS
OK   UME::SIMD::SIMD1_8i test Id: 145 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 146 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 147 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 148 - MMULS
OK   UME::SIMD::SIMD1_8i test Id: 149 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 150 - MULVA
OK   UME::SIMD::SIMD1_8i test Id: 151 - MULVA(operator*)
OK   UME::SIMD::SIMD1_8i test Id: 152 - MULVA gen
OK   UME::SIMD::SIMD1_8i test Id: 153 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD1_8i test Id: 154 - MMULVA
OK   UME::SIMD::SIMD1_8i test Id: 155 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_8i test Id: 156 - MULSA
OK   UME::SIMD::SIMD1_8i test Id: 157 - MULSA(operator*=)
OK   UME::SIMD::SIMD1_8i test Id: 158 - MMULSA
OK   UME::SIMD::SIMD1_8i test Id: 159 - DIVV
OK   UME::SIMD::SIMD1_8i test Id: 160 - DIVV(operator/)
OK   UME::SIMD::SIMD1_8i test Id: 161 - DIVV(function)
OK   UME::SIMD::SIMD1_8i test Id: 162 - MDIVV
OK   UME::SIMD::SIMD1_8i test Id: 163 - MDIVV(function)
OK   UME::SIMD::SIMD1_8i test Id: 164 - DIVS
OK   UME::SIMD::SIMD1_8i test Id: 165 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 166 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 167 - MDIVS
OK   UME::SIMD::SIMD1_8i test Id: 168 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 169 - DIVVA
OK   UME::SIMD::SIMD1_8i test Id: 170 - DIVVA(operator/=)
OK   UME::SIMD::SIMD1_8i test Id: 171 - DIVVA gen
OK   UME::SIMD::SIMD1_8i test Id: 172 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD1_8i test Id: 173 - MDIVVA
OK   UME::SIMD::SIMD1_8i test Id: 174 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_8i test Id: 175 - DIVSA
OK   UME::SIMD::SIMD1_8i test Id: 176 - DIVSA(operator/=)
OK   UME::SIMD::SIMD1_8i test Id: 177 - MDIVSA
OK   UME::SIMD::SIMD1_8i test Id: 178 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD1_8i test Id: 179 - RCP
OK   UME::SIMD::SIMD1_8i test Id: 180 - RCP(function)
OK   UME::SIMD::SIMD1_8i test Id: 181 - MRCP
OK   UME::SIMD::SIMD1_8i test Id: 182 - MRCP(function)
OK   UME::SIMD::SIMD1_8i test Id: 183 - RCPS
OK   UME::SIMD::SIMD1_8i test Id: 184 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 185 - RCPS(function)
OK   UME::SIMD::SIMD1_8i test Id: 186 - MRCPS
OK   UME::SIMD::SIMD1_8i test Id: 187 - MRCPS (function)
OK   UME::SIMD::SIMD1_8i test Id: 188 - RCPA
OK   UME::SIMD::SIMD1_8i test Id: 189 - MRCPA
OK   UME::SIMD::SIMD1_8i test Id: 190 - RCPSA
OK   UME::SIMD::SIMD1_8i test Id: 191 - MRCPSA
OK   UME::SIMD::SIMD1_8i test Id: 192 - CMPEQV
OK   UME::SIMD::SIMD1_8i test Id: 193 - CMPEQV(operator==)
OK   UME::SIMD::SIMD1_8i test Id: 194 - CMPEQV(function)
OK   UME::SIMD::SIMD1_8i test Id: 195 - CMPEQS
OK   UME::SIMD::SIMD1_8i test Id: 196 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 197 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 198 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 199 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 200 - CMPNEV
OK   UME::SIMD::SIMD1_8i test Id: 201 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD1_8i test Id: 202 - CMPNEV(function)
OK   UME::SIMD::SIMD1_8i test Id: 203 - CMPNES
OK   UME::SIMD::SIMD1_8i test Id: 204 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 205 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 206 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 207 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 208 - CMPGTV
OK   UME::SIMD::SIMD1_8i test Id: 209 - CMPGTV(operator>)
OK   UME::SIMD::SIMD1_8i test Id: 210 - CMPGTV(function)
OK   UME::SIMD::SIMD1_8i test Id: 211 - CMPGTS
OK   UME::SIMD::SIMD1_8i test Id: 212 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 213 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 214 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 215 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 216 - CMPLTV
OK   UME::SIMD::SIMD1_8i test Id: 217 - CMPLTV(operator<)
OK   UME::SIMD::SIMD1_8i test Id: 218 - CMPLTV(function)
OK   UME::SIMD::SIMD1_8i test Id: 219 - CMPLTS
OK   UME::SIMD::SIMD1_8i test Id: 220 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 221 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 222 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 223 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 224 - CMPGEV
OK   UME::SIMD::SIMD1_8i test Id: 225 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD1_8i test Id: 226 - CMPGEV(function)
OK   UME::SIMD::SIMD1_8i test Id: 227 - CMPGES
OK   UME::SIMD::SIMD1_8i test Id: 228 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 229 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 230 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 231 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 232 - CMPLEV
OK   UME::SIMD::SIMD1_8i test Id: 233 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD1_8i test Id: 234 - CMPLEV(function)
OK   UME::SIMD::SIMD1_8i test Id: 235 - CMPLES
OK   UME::SIMD::SIMD1_8i test Id: 236 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 237 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 238 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 239 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 240 - CMPEV
OK   UME::SIMD::SIMD1_8i test Id: 241 - CMPEV(function)
OK   UME::SIMD::SIMD1_8i test Id: 242 - CMPES
OK   UME::SIMD::SIMD1_8i test Id: 243 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 244 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 245 - HADD
OK   UME::SIMD::SIMD1_8i test Id: 246 - HADD(function)
OK   UME::SIMD::SIMD1_8i test Id: 247 - HADD gen
OK   UME::SIMD::SIMD1_8i test Id: 248 - HADD(function) gen
OK   UME::SIMD::SIMD1_8i test Id: 249 - MHADD gen
OK   UME::SIMD::SIMD1_8i test Id: 250 - MHADD(function) gen
OK   UME::SIMD::SIMD1_8i test Id: 251 - HADDS gen
OK   UME::SIMD::SIMD1_8i test Id: 252 - HADDS(function) gen
OK   UME::SIMD::SIMD1_8i test Id: 253 - MHADD gen
OK   UME::SIMD::SIMD1_8i test Id: 254 - MHADDS(function) gen
OK   UME::SIMD::SIMD1_8i test Id: 255 - HMUL gen
OK   UME::SIMD::SIMD1_8i test Id: 256 - HMUL(function) gen
OK   UME::SIMD::SIMD1_8i test Id: 257 - MHMUL gen
OK   UME::SIMD::SIMD1_8i test Id: 258 - MHMUL(function) gen
OK   UME::SIMD::SIMD1_8i test Id: 259 - HMULS gen
OK   UME::SIMD::SIMD1_8i test Id: 260 - HMULS(function) gen
OK   UME::SIMD::SIMD1_8i test Id: 261 - MHMUL gen
OK   UME::SIMD::SIMD1_8i test Id: 262 - MHMULS(function) gen
OK   UME::SIMD::SIMD1_8i test Id: 263 - FMULADDV
OK   UME::SIMD::SIMD1_8i test Id: 264 - FMULADDV(function)
OK   UME::SIMD::SIMD1_8i test Id: 265 - MFMULADDV
OK   UME::SIMD::SIMD1_8i test Id: 266 - MFMULADDV(function)
OK   UME::SIMD::SIMD1_8i test Id: 267 - FMULSUBV
OK   UME::SIMD::SIMD1_8i test Id: 268 - FMULSUBV(function)
OK   UME::SIMD::SIMD1_8i test Id: 269 - MFMULSUBV
OK   UME::SIMD::SIMD1_8i test Id: 270 - MFMULSUBV(function)
OK   UME::SIMD::SIMD1_8i test Id: 271 - FADDMULV
OK   UME::SIMD::SIMD1_8i test Id: 272 - FADDMULV(function)
OK   UME::SIMD::SIMD1_8i test Id: 273 - MFADDMULV
OK   UME::SIMD::SIMD1_8i test Id: 274 - MFADDMULV(function)
OK   UME::SIMD::SIMD1_8i test Id: 275 - FSUBMULV
OK   UME::SIMD::SIMD1_8i test Id: 276 - FSUBMULV(function)
OK   UME::SIMD::SIMD1_8i test Id: 277 - MFSUBMULV
OK   UME::SIMD::SIMD1_8i test Id: 278 - MFSUBMULV(function)
OK   UME::SIMD::SIMD1_8i test Id: 279 - MAXV
OK   UME::SIMD::SIMD1_8i test Id: 280 - MAXV(function)
OK   UME::SIMD::SIMD1_8i test Id: 281 - MMAXV
OK   UME::SIMD::SIMD1_8i test Id: 282 - MMAXV(function)
OK   UME::SIMD::SIMD1_8i test Id: 283 - MAXS
OK   UME::SIMD::SIMD1_8i test Id: 284 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 285 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 286 - MMAXS
OK   UME::SIMD::SIMD1_8i test Id: 287 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 288 - MAXVA
OK   UME::SIMD::SIMD1_8i test Id: 289 - MMAXVA
OK   UME::SIMD::SIMD1_8i test Id: 290 - MAXSA
OK   UME::SIMD::SIMD1_8i test Id: 291 - MMAXSA
OK   UME::SIMD::SIMD1_8i test Id: 292 - MINV
OK   UME::SIMD::SIMD1_8i test Id: 293 - MINV(function)
OK   UME::SIMD::SIMD1_8i test Id: 294 - MMINV
OK   UME::SIMD::SIMD1_8i test Id: 295 - MMINV(function)
OK   UME::SIMD::SIMD1_8i test Id: 296 - MINS
OK   UME::SIMD::SIMD1_8i test Id: 297 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD1_8i test Id: 298 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD1_8i test Id: 299 - MMINS
OK   UME::SIMD::SIMD1_8i test Id: 300 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 301 - MINVA
OK   UME::SIMD::SIMD1_8i test Id: 302 - MMINVA
OK   UME::SIMD::SIMD1_8i test Id: 303 - MINSA
OK   UME::SIMD::SIMD1_8i test Id: 304 - MMINSA
OK   UME::SIMD::SIMD1_8i test Id: 305 - HMAX
OK   UME::SIMD::SIMD1_8i test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD1_8i test Id: 307 - HMAX
OK   UME::SIMD::SIMD1_8i test Id: 308 - HMAX(function)
OK   UME::SIMD::SIMD1_8i test Id: 309 - MHMAX
OK   UME::SIMD::SIMD1_8i test Id: 310 - MHMAX(function)
OK   UME::SIMD::SIMD1_8i test Id: 311 - IMAX
OK   UME::SIMD::SIMD1_8i test Id: 312 - IMAX(function)
OK   UME::SIMD::SIMD1_8i test Id: 313 - MIMAX
OK   UME::SIMD::SIMD1_8i test Id: 314 - MIMAX(function)
OK   UME::SIMD::SIMD1_8i test Id: 315 - HMIN
OK   UME::SIMD::SIMD1_8i test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD1_8i test Id: 317 - HMIN
OK   UME::SIMD::SIMD1_8i test Id: 318 - HMIN(function)
OK   UME::SIMD::SIMD1_8i test Id: 319 - MHMIN gen
OK   UME::SIMD::SIMD1_8i test Id: 320 - MHMIN(function) gen
OK   UME::SIMD::SIMD1_8i test Id: 321 - IMIN
OK   UME::SIMD::SIMD1_8i test Id: 322 - IMIN(function)
OK   UME::SIMD::SIMD1_8i test Id: 323 - MIMIN
OK   UME::SIMD::SIMD1_8i test Id: 324 - MIMIN(function)
OK   UME::SIMD::SIMD1_8i test Id: 325 - REMV gen
OK   UME::SIMD::SIMD1_8i test Id: 326 - REMV(operator%) gen
OK   UME::SIMD::SIMD1_8i test Id: 327 - REMV(function) gen
OK   UME::SIMD::SIMD1_8i test Id: 328 - MREMV gen
OK   UME::SIMD::SIMD1_8i test Id: 329 - MREMV(function) gen
OK   UME::SIMD::SIMD1_8i test Id: 330 - REMS gen
OK   UME::SIMD::SIMD1_8i test Id: 331 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD1_8i test Id: 332 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD1_8i test Id: 333 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD1_8i test Id: 334 - LANDV gen
OK   UME::SIMD::SIMD1_8i test Id: 335 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD1_8i test Id: 336 - LORV gen
OK   UME::SIMD::SIMD1_8i test Id: 337 - LORV gen (operator ||)
OK   UME::SIMD::SIMD1_8i test Id: 338 - BANDV
OK   UME::SIMD::SIMD1_8i test Id: 339 - BANDV(operator&)
OK   UME::SIMD::SIMD1_8i test Id: 340 - BANDV(function)
OK   UME::SIMD::SIMD1_8i test Id: 341 - MBANDV
OK   UME::SIMD::SIMD1_8i test Id: 342 - MBANDV
OK   UME::SIMD::SIMD1_8i test Id: 343 - BANDS
OK   UME::SIMD::SIMD1_8i test Id: 344 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 345 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 346 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 347 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 348 - MBANDS
OK   UME::SIMD::SIMD1_8i test Id: 349 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 350 - BANDVA
OK   UME::SIMD::SIMD1_8i test Id: 351 - MBANDVA
OK   UME::SIMD::SIMD1_8i test Id: 352 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD1_8i test Id: 353 - BANDSA
OK   UME::SIMD::SIMD1_8i test Id: 354 - MBANDSA
OK   UME::SIMD::SIMD1_8i test Id: 355 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD1_8i test Id: 356 - BORV
OK   UME::SIMD::SIMD1_8i test Id: 357 - BORV(operator |)
OK   UME::SIMD::SIMD1_8i test Id: 358 - BORV(function)
OK   UME::SIMD::SIMD1_8i test Id: 359 - MBORV
OK   UME::SIMD::SIMD1_8i test Id: 360 - MBORV(function)
OK   UME::SIMD::SIMD1_8i test Id: 361 - BORS
OK   UME::SIMD::SIMD1_8i test Id: 362 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 363 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 364 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 365 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 366 - MBORS
OK   UME::SIMD::SIMD1_8i test Id: 367 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 368 - BORVA
OK   UME::SIMD::SIMD1_8i test Id: 369 - BORVA(operator|=)
OK   UME::SIMD::SIMD1_8i test Id: 370 - MBORVA
OK   UME::SIMD::SIMD1_8i test Id: 371 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD1_8i test Id: 372 - BORSA
OK   UME::SIMD::SIMD1_8i test Id: 373 - BORSA(operator|=)
OK   UME::SIMD::SIMD1_8i test Id: 374 - MBORSA
OK   UME::SIMD::SIMD1_8i test Id: 375 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD1_8i test Id: 376 - BXORV
OK   UME::SIMD::SIMD1_8i test Id: 377 - BXORV(operator^
OK   UME::SIMD::SIMD1_8i test Id: 378 - BXORV(function
OK   UME::SIMD::SIMD1_8i test Id: 379 - MBXORV
OK   UME::SIMD::SIMD1_8i test Id: 380 - MBXORV(function)
OK   UME::SIMD::SIMD1_8i test Id: 381 - BXORS
OK   UME::SIMD::SIMD1_8i test Id: 382 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 383 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 384 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 385 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 386 - MBXORS
OK   UME::SIMD::SIMD1_8i test Id: 387 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 388 - BXORVA
OK   UME::SIMD::SIMD1_8i test Id: 389 - BXORVA(operator^=)
OK   UME::SIMD::SIMD1_8i test Id: 390 - MBXORVA
OK   UME::SIMD::SIMD1_8i test Id: 391 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD1_8i test Id: 392 - BXORSA
OK   UME::SIMD::SIMD1_8i test Id: 393 - BXORSA(operator^=)
OK   UME::SIMD::SIMD1_8i test Id: 394 - MBXORSA
OK   UME::SIMD::SIMD1_8i test Id: 395 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD1_8i test Id: 396 - BNOT
OK   UME::SIMD::SIMD1_8i test Id: 397 - BNOT(operator!)
OK   UME::SIMD::SIMD1_8i test Id: 398 - BNOT(function)
OK   UME::SIMD::SIMD1_8i test Id: 399 - MBNOT
OK   UME::SIMD::SIMD1_8i test Id: 400 - MBNOT(function)
OK   UME::SIMD::SIMD1_8i test Id: 401 - BNOTA
OK   UME::SIMD::SIMD1_8i test Id: 402 - MBNOTA
OK   UME::SIMD::SIMD1_8i test Id: 403 - BANDNOTV
OK   UME::SIMD::SIMD1_8i test Id: 404 - BANDNOTV (function)
OK   UME::SIMD::SIMD1_8i test Id: 405 - MBANDNOTV
OK   UME::SIMD::SIMD1_8i test Id: 406 - MBANDNOTV (function)
OK   UME::SIMD::SIMD1_8i test Id: 407 - BANDNOTS
OK   UME::SIMD::SIMD1_8i test Id: 408 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD1_8i test Id: 409 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD1_8i test Id: 410 - MBANDNOTS
OK   UME::SIMD::SIMD1_8i test Id: 411 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD1_8i test Id: 412 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD1_8i test Id: 413 - BANDNOTVA
OK   UME::SIMD::SIMD1_8i test Id: 414 - MBANDNOTVA
OK   UME::SIMD::SIMD1_8i test Id: 415 - BANDNOTSA
OK   UME::SIMD::SIMD1_8i test Id: 416 - MBANDNOTSA
OK   UME::SIMD::SIMD1_8i test Id: 417 - HBAND
OK   UME::SIMD::SIMD1_8i test Id: 418 - HBAND
OK   UME::SIMD::SIMD1_8i test Id: 419 - MHBAND
OK   UME::SIMD::SIMD1_8i test Id: 420 - MHBAND(function)
OK   UME::SIMD::SIMD1_8i test Id: 421 - HBANDS
OK   UME::SIMD::SIMD1_8i test Id: 422 - MHBANDS
OK   UME::SIMD::SIMD1_8i test Id: 423 - HBOR
OK   UME::SIMD::SIMD1_8i test Id: 424 - HBOR(function)
OK   UME::SIMD::SIMD1_8i test Id: 425 - MHBOR
OK   UME::SIMD::SIMD1_8i test Id: 426 - MHBOR(function)
OK   UME::SIMD::SIMD1_8i test Id: 427 - HBORS
OK   UME::SIMD::SIMD1_8i test Id: 428 - MHBORS
OK   UME::SIMD::SIMD1_8i test Id: 429 - HBXOR
OK   UME::SIMD::SIMD1_8i test Id: 430 - HBXOR(function)
OK   UME::SIMD::SIMD1_8i test Id: 431 - MHBXOR
OK   UME::SIMD::SIMD1_8i test Id: 432 - MHBXOR
OK   UME::SIMD::SIMD1_8i test Id: 433 - HBXORS
OK   UME::SIMD::SIMD1_8i test Id: 434 - MHBXORS
OK   UME::SIMD::SIMD1_8i test Id: 435 - GATHERU
OK   UME::SIMD::SIMD1_8i test Id: 436 - MGATHERU
OK   UME::SIMD::SIMD1_8i test Id: 437 - GATHERS
OK   UME::SIMD::SIMD1_8i test Id: 438 - MGATHERS
OK   UME::SIMD::SIMD1_8i test Id: 439 - GATHERV
OK   UME::SIMD::SIMD1_8i test Id: 440 - MGATHERV
OK   UME::SIMD::SIMD1_8i test Id: 441 - SCATTERU
OK   UME::SIMD::SIMD1_8i test Id: 442 - MSCATTERU
OK   UME::SIMD::SIMD1_8i test Id: 443 - SCATTERS
OK   UME::SIMD::SIMD1_8i test Id: 444 - MSCATTERS
OK   UME::SIMD::SIMD1_8i test Id: 445 - SCATTERV
OK   UME::SIMD::SIMD1_8i test Id: 446 - MSCATTERV
OK   UME::SIMD::SIMD1_8i test Id: 447 - LSHV gen
OK   UME::SIMD::SIMD1_8i test Id: 448 - LSHV (function) gen
OK   UME::SIMD::SIMD1_8i test Id: 449 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD1_8i test Id: 450 - MLSHV gen
OK   UME::SIMD::SIMD1_8i test Id: 451 - MLSHV (function) gen
OK   UME::SIMD::SIMD1_8i test Id: 452 - LSHS gen
OK   UME::SIMD::SIMD1_8i test Id: 453 - LSHS (function) gen
OK   UME::SIMD::SIMD1_8i test Id: 454 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD1_8i test Id: 455 - MLSHS gen
OK   UME::SIMD::SIMD1_8i test Id: 456 - MLSHS (function) gen
OK   UME::SIMD::SIMD1_8i test Id: 457 - LSHVA gen
OK   UME::SIMD::SIMD1_8i test Id: 458 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD1_8i test Id: 459 - MLSHVA gen
OK   UME::SIMD::SIMD1_8i test Id: 460 - LSHSA gen
OK   UME::SIMD::SIMD1_8i test Id: 461 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD1_8i test Id: 462 - MLSHSA gen
OK   UME::SIMD::SIMD1_8i test Id: 463 - RSHV gen
OK   UME::SIMD::SIMD1_8i test Id: 464 - RSHV (function) gen
OK   UME::SIMD::SIMD1_8i test Id: 465 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD1_8i test Id: 466 - MRSHV gen
OK   UME::SIMD::SIMD1_8i test Id: 467 - MRSHV (function) gen
OK   UME::SIMD::SIMD1_8i test Id: 468 - RSHS gen
OK   UME::SIMD::SIMD1_8i test Id: 469 - RSHS (function) gen
OK   UME::SIMD::SIMD1_8i test Id: 470 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD1_8i test Id: 471 - MRSHS gen
OK   UME::SIMD::SIMD1_8i test Id: 472 - MRSHS (function) gen
OK   UME::SIMD::SIMD1_8i test Id: 473 - RSHVA gen
OK   UME::SIMD::SIMD1_8i test Id: 474 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD1_8i test Id: 475 - MRSHVA gen
OK   UME::SIMD::SIMD1_8i test Id: 476 - RSHSA gen
OK   UME::SIMD::SIMD1_8i test Id: 477 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD1_8i test Id: 478 - MRSHSA gen
OK   UME::SIMD::SIMD1_8i test Id: 479 - ROLV
OK   UME::SIMD::SIMD1_8i test Id: 480 - ROLV(function)
OK   UME::SIMD::SIMD1_8i test Id: 481 - MROLV
OK   UME::SIMD::SIMD1_8i test Id: 482 - MROLV(function)
OK   UME::SIMD::SIMD1_8i test Id: 483 - ROLS
OK   UME::SIMD::SIMD1_8i test Id: 484 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 485 - MROLS
OK   UME::SIMD::SIMD1_8i test Id: 486 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 487 - ROLVA
OK   UME::SIMD::SIMD1_8i test Id: 488 - MROLVA
OK   UME::SIMD::SIMD1_8i test Id: 489 - ROLSA
OK   UME::SIMD::SIMD1_8i test Id: 490 - MROLSA
OK   UME::SIMD::SIMD1_8i test Id: 491 - RORV
OK   UME::SIMD::SIMD1_8i test Id: 492 - RORV(function)
OK   UME::SIMD::SIMD1_8i test Id: 493 - MRORV
OK   UME::SIMD::SIMD1_8i test Id: 494 - MRORV(function)
OK   UME::SIMD::SIMD1_8i test Id: 495 - RORS
OK   UME::SIMD::SIMD1_8i test Id: 496 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 497 - MRORS
OK   UME::SIMD::SIMD1_8i test Id: 498 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_8i test Id: 499 - RORVA
OK   UME::SIMD::SIMD1_8i test Id: 500 - MRORVA
OK   UME::SIMD::SIMD1_8i test Id: 501 - RORSA
OK   UME::SIMD::SIMD1_8i test Id: 502 - MRORSA
OK   UME::SIMD::SIMD1_8i test Id: 503 - NEG
OK   UME::SIMD::SIMD1_8i test Id: 504 - NEG(operator-)
OK   UME::SIMD::SIMD1_8i test Id: 505 - NEG(function)
OK   UME::SIMD::SIMD1_8i test Id: 506 - MNEG
OK   UME::SIMD::SIMD1_8i test Id: 507 - MNEG(function)
OK   UME::SIMD::SIMD1_8i test Id: 508 - NEGA
OK   UME::SIMD::SIMD1_8i test Id: 509 - MNEGA
OK   UME::SIMD::SIMD1_8i test Id: 510 - ABS
OK   UME::SIMD::SIMD1_8i test Id: 511 - ABS(function)
OK   UME::SIMD::SIMD1_8i test Id: 512 - MABS
OK   UME::SIMD::SIMD1_8i test Id: 513 - MABS(function)
OK   UME::SIMD::SIMD1_8i test Id: 514 - ABSA
OK   UME::SIMD::SIMD1_8i test Id: 515 - MABSA
OK   UME::SIMD::SIMD1_8i test Id: 516 - COPYSIGN gen
OK   UME::SIMD::SIMD1_8i test Id: 517 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD1_8i test Id: 518 - ITOU
OK   UME::SIMD::SIMD1_8i test Id: 519 - PROMOTE
OK   UME::SIMD::SIMD2_8u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD2_8u test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD2_8u test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD2_8u test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD2_8u test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD2_8u test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD2_8u test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD2_8u test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD2_8u test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD2_8u test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD2_8u test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD2_8u test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD2_8u test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD2_8u test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD2_8u test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD2_8u test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD2_8u test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD2_8u test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD2_8u test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD2_8u test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD2_8u test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD2_8u test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD2_8u test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD2_8u test Id: 24 - INSERT
OK   UME::SIMD::SIMD2_8u test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD2_8u test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD2_8u test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD2_8u test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD2_8u test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD2_8u test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD2_8u test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD2_8u test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD2_8u test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD2_8u test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD2_8u test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD2_8u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD2_8u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD2_8u test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD2_8u test Id: 39 - MLOAD
OK   UME::SIMD::SIMD2_8u test Id: 40 - MSTORE
OK   UME::SIMD::SIMD2_8u test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD2_8u test Id: 42 - MLOADA
OK   UME::SIMD::SIMD2_8u test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD2_8u test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD2_8u test Id: 45 - SORTA
OK   UME::SIMD::SIMD2_8u test Id: 46 - SORTD
OK   UME::SIMD::SIMD2_8u test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD2_8u test Id: 48 - ADDV
OK   UME::SIMD::SIMD2_8u test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD2_8u test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD2_8u test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD2_8u test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD2_8u test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD2_8u test Id: 54 - MADDV
OK   UME::SIMD::SIMD2_8u test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD2_8u test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD2_8u test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD2_8u test Id: 58 - ADDS
OK   UME::SIMD::SIMD2_8u test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD2_8u test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD2_8u test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD2_8u test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD2_8u test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD2_8u test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD2_8u test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD2_8u test Id: 68 - MADDS
OK   UME::SIMD::SIMD2_8u test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD2_8u test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD2_8u test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD2_8u test Id: 73 - ADDVA
OK   UME::SIMD::SIMD2_8u test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD2_8u test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD2_8u test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD2_8u test Id: 77 - MADDVA
OK   UME::SIMD::SIMD2_8u test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD2_8u test Id: 79 - ADDSA
OK   UME::SIMD::SIMD2_8u test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD2_8u test Id: 81 - MADDSA
OK   UME::SIMD::SIMD2_8u test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD2_8u test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD2_8u test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD2_8u test Id: 85 - POSTINC
OK   UME::SIMD::SIMD2_8u test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD2_8u test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD2_8u test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD2_8u test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD2_8u test Id: 90 - PREFINC
OK   UME::SIMD::SIMD2_8u test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD2_8u test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD2_8u test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD2_8u test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD2_8u test Id: 95 - SUBV
OK   UME::SIMD::SIMD2_8u test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD2_8u test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD2_8u test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD2_8u test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD2_8u test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD2_8u test Id: 101 - MSUBV
OK   UME::SIMD::SIMD2_8u test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD2_8u test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD2_8u test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD2_8u test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD2_8u test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD2_8u test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD2_8u test Id: 108 - MSUBS
OK   UME::SIMD::SIMD2_8u test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 110 - SUBVA
OK   UME::SIMD::SIMD2_8u test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD2_8u test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD2_8u test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD2_8u test Id: 114 - SUBSA
OK   UME::SIMD::SIMD2_8u test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD2_8u test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD2_8u test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD2_8u test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD2_8u test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD2_8u test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD2_8u test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD2_8u test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD2_8u test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD2_8u test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD2_8u test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD2_8u test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD2_8u test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD2_8u test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD2_8u test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD2_8u test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD2_8u test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD2_8u test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD2_8u test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD2_8u test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD2_8u test Id: 137 - MULV
OK   UME::SIMD::SIMD2_8u test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD2_8u test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD2_8u test Id: 140 - MMULV
OK   UME::SIMD::SIMD2_8u test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD2_8u test Id: 142 - MULS
OK   UME::SIMD::SIMD2_8u test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 146 - MMULS
OK   UME::SIMD::SIMD2_8u test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 148 - MULVA
OK   UME::SIMD::SIMD2_8u test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD2_8u test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD2_8u test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD2_8u test Id: 152 - MMULVA
OK   UME::SIMD::SIMD2_8u test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_8u test Id: 154 - MULSA
OK   UME::SIMD::SIMD2_8u test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD2_8u test Id: 156 - MMULSA
OK   UME::SIMD::SIMD2_8u test Id: 157 - DIVV
OK   UME::SIMD::SIMD2_8u test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD2_8u test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD2_8u test Id: 160 - MDIVV
OK   UME::SIMD::SIMD2_8u test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD2_8u test Id: 162 - DIVS
OK   UME::SIMD::SIMD2_8u test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 165 - MDIVS
OK   UME::SIMD::SIMD2_8u test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 167 - DIVVA
OK   UME::SIMD::SIMD2_8u test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD2_8u test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD2_8u test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD2_8u test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD2_8u test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_8u test Id: 173 - DIVSA
OK   UME::SIMD::SIMD2_8u test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD2_8u test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD2_8u test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD2_8u test Id: 177 - RCP
OK   UME::SIMD::SIMD2_8u test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD2_8u test Id: 179 - MRCP
OK   UME::SIMD::SIMD2_8u test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD2_8u test Id: 181 - RCPS
OK   UME::SIMD::SIMD2_8u test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD2_8u test Id: 184 - MRCPS
OK   UME::SIMD::SIMD2_8u test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD2_8u test Id: 186 - RCPA
OK   UME::SIMD::SIMD2_8u test Id: 187 - MRCPA
OK   UME::SIMD::SIMD2_8u test Id: 188 - RCPSA
OK   UME::SIMD::SIMD2_8u test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD2_8u test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD2_8u test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD2_8u test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD2_8u test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD2_8u test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD2_8u test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD2_8u test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD2_8u test Id: 201 - CMPNES
OK   UME::SIMD::SIMD2_8u test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD2_8u test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD2_8u test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD2_8u test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD2_8u test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD2_8u test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD2_8u test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD2_8u test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD2_8u test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD2_8u test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD2_8u test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD2_8u test Id: 225 - CMPGES
OK   UME::SIMD::SIMD2_8u test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD2_8u test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD2_8u test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD2_8u test Id: 233 - CMPLES
OK   UME::SIMD::SIMD2_8u test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 238 - CMPEV
OK   UME::SIMD::SIMD2_8u test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD2_8u test Id: 240 - CMPES
OK   UME::SIMD::SIMD2_8u test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 243 - HADD
OK   UME::SIMD::SIMD2_8u test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD2_8u test Id: 245 - HADD gen
OK   UME::SIMD::SIMD2_8u test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD2_8u test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD2_8u test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD2_8u test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD2_8u test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD2_8u test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD2_8u test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD2_8u test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD2_8u test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD2_8u test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD2_8u test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD2_8u test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD2_8u test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD2_8u test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD2_8u test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD2_8u test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD2_8u test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD2_8u test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD2_8u test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD2_8u test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD2_8u test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD2_8u test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD2_8u test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD2_8u test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD2_8u test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD2_8u test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD2_8u test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD2_8u test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD2_8u test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD2_8u test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD2_8u test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD2_8u test Id: 277 - MAXV
OK   UME::SIMD::SIMD2_8u test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD2_8u test Id: 279 - MMAXV
OK   UME::SIMD::SIMD2_8u test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD2_8u test Id: 281 - MAXS
OK   UME::SIMD::SIMD2_8u test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 284 - MMAXS
OK   UME::SIMD::SIMD2_8u test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 286 - MAXVA
OK   UME::SIMD::SIMD2_8u test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD2_8u test Id: 288 - MAXSA
OK   UME::SIMD::SIMD2_8u test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD2_8u test Id: 290 - MINV
OK   UME::SIMD::SIMD2_8u test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD2_8u test Id: 292 - MMINV
OK   UME::SIMD::SIMD2_8u test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD2_8u test Id: 294 - MINS
OK   UME::SIMD::SIMD2_8u test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD2_8u test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD2_8u test Id: 297 - MMINS
OK   UME::SIMD::SIMD2_8u test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 299 - MINVA
OK   UME::SIMD::SIMD2_8u test Id: 300 - MMINVA
OK   UME::SIMD::SIMD2_8u test Id: 301 - MINSA
OK   UME::SIMD::SIMD2_8u test Id: 302 - MMINSA
OK   UME::SIMD::SIMD2_8u test Id: 303 - HMAX
OK   UME::SIMD::SIMD2_8u test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD2_8u test Id: 305 - HMAX
OK   UME::SIMD::SIMD2_8u test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD2_8u test Id: 307 - MHMAX
OK   UME::SIMD::SIMD2_8u test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD2_8u test Id: 309 - IMAX
OK   UME::SIMD::SIMD2_8u test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD2_8u test Id: 311 - MIMAX
OK   UME::SIMD::SIMD2_8u test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD2_8u test Id: 313 - HMIN
OK   UME::SIMD::SIMD2_8u test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD2_8u test Id: 315 - HMIN
OK   UME::SIMD::SIMD2_8u test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD2_8u test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD2_8u test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD2_8u test Id: 319 - IMIN
OK   UME::SIMD::SIMD2_8u test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD2_8u test Id: 321 - MIMIN
OK   UME::SIMD::SIMD2_8u test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD2_8u test Id: 323 - REMV gen
OK   UME::SIMD::SIMD2_8u test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD2_8u test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD2_8u test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD2_8u test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD2_8u test Id: 328 - REMS gen
OK   UME::SIMD::SIMD2_8u test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD2_8u test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD2_8u test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD2_8u test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD2_8u test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD2_8u test Id: 334 - LORV gen
OK   UME::SIMD::SIMD2_8u test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD2_8u test Id: 336 - BANDV
OK   UME::SIMD::SIMD2_8u test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD2_8u test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD2_8u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD2_8u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD2_8u test Id: 341 - BANDS
OK   UME::SIMD::SIMD2_8u test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 346 - MBANDS
OK   UME::SIMD::SIMD2_8u test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 348 - BANDVA
OK   UME::SIMD::SIMD2_8u test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD2_8u test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD2_8u test Id: 351 - BANDSA
OK   UME::SIMD::SIMD2_8u test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD2_8u test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD2_8u test Id: 354 - BORV
OK   UME::SIMD::SIMD2_8u test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD2_8u test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD2_8u test Id: 357 - MBORV
OK   UME::SIMD::SIMD2_8u test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD2_8u test Id: 359 - BORS
OK   UME::SIMD::SIMD2_8u test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 364 - MBORS
OK   UME::SIMD::SIMD2_8u test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 366 - BORVA
OK   UME::SIMD::SIMD2_8u test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD2_8u test Id: 368 - MBORVA
OK   UME::SIMD::SIMD2_8u test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD2_8u test Id: 370 - BORSA
OK   UME::SIMD::SIMD2_8u test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD2_8u test Id: 372 - MBORSA
OK   UME::SIMD::SIMD2_8u test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD2_8u test Id: 374 - BXORV
OK   UME::SIMD::SIMD2_8u test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD2_8u test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD2_8u test Id: 377 - MBXORV
OK   UME::SIMD::SIMD2_8u test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD2_8u test Id: 379 - BXORS
OK   UME::SIMD::SIMD2_8u test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 384 - MBXORS
OK   UME::SIMD::SIMD2_8u test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 386 - BXORVA
OK   UME::SIMD::SIMD2_8u test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD2_8u test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD2_8u test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD2_8u test Id: 390 - BXORSA
OK   UME::SIMD::SIMD2_8u test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD2_8u test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD2_8u test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD2_8u test Id: 394 - BNOT
OK   UME::SIMD::SIMD2_8u test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD2_8u test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD2_8u test Id: 397 - MBNOT
OK   UME::SIMD::SIMD2_8u test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD2_8u test Id: 399 - BNOTA
OK   UME::SIMD::SIMD2_8u test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD2_8u test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD2_8u test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD2_8u test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD2_8u test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD2_8u test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD2_8u test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD2_8u test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD2_8u test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD2_8u test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD2_8u test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD2_8u test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD2_8u test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD2_8u test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD2_8u test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD2_8u test Id: 415 - HBAND
OK   UME::SIMD::SIMD2_8u test Id: 416 - HBAND
OK   UME::SIMD::SIMD2_8u test Id: 417 - MHBAND
OK   UME::SIMD::SIMD2_8u test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD2_8u test Id: 419 - HBANDS
OK   UME::SIMD::SIMD2_8u test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD2_8u test Id: 421 - HBOR
OK   UME::SIMD::SIMD2_8u test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD2_8u test Id: 423 - MHBOR
OK   UME::SIMD::SIMD2_8u test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD2_8u test Id: 425 - HBORS
OK   UME::SIMD::SIMD2_8u test Id: 426 - MHBORS
OK   UME::SIMD::SIMD2_8u test Id: 427 - HBXOR
OK   UME::SIMD::SIMD2_8u test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD2_8u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD2_8u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD2_8u test Id: 431 - HBXORS
OK   UME::SIMD::SIMD2_8u test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD2_8u test Id: 433 - GATHERU
OK   UME::SIMD::SIMD2_8u test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD2_8u test Id: 435 - GATHERS
OK   UME::SIMD::SIMD2_8u test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD2_8u test Id: 437 - GATHERV
OK   UME::SIMD::SIMD2_8u test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD2_8u test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD2_8u test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD2_8u test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD2_8u test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD2_8u test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD2_8u test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD2_8u test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD2_8u test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD2_8u test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD2_8u test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD2_8u test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD2_8u test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD2_8u test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD2_8u test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD2_8u test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD2_8u test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD2_8u test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD2_8u test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD2_8u test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD2_8u test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD2_8u test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD2_8u test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD2_8u test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD2_8u test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD2_8u test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD2_8u test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD2_8u test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD2_8u test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD2_8u test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD2_8u test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD2_8u test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD2_8u test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD2_8u test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD2_8u test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD2_8u test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD2_8u test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD2_8u test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD2_8u test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD2_8u test Id: 477 - ROLV
OK   UME::SIMD::SIMD2_8u test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD2_8u test Id: 479 - MROLV
OK   UME::SIMD::SIMD2_8u test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD2_8u test Id: 481 - ROLS
OK   UME::SIMD::SIMD2_8u test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 483 - MROLS
OK   UME::SIMD::SIMD2_8u test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 485 - ROLVA
OK   UME::SIMD::SIMD2_8u test Id: 486 - MROLVA
OK   UME::SIMD::SIMD2_8u test Id: 487 - ROLSA
OK   UME::SIMD::SIMD2_8u test Id: 488 - MROLSA
OK   UME::SIMD::SIMD2_8u test Id: 489 - RORV
OK   UME::SIMD::SIMD2_8u test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD2_8u test Id: 491 - MRORV
OK   UME::SIMD::SIMD2_8u test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD2_8u test Id: 493 - RORS
OK   UME::SIMD::SIMD2_8u test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 495 - MRORS
OK   UME::SIMD::SIMD2_8u test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8u test Id: 497 - RORVA
OK   UME::SIMD::SIMD2_8u test Id: 498 - MRORVA
OK   UME::SIMD::SIMD2_8u test Id: 499 - RORSA
OK   UME::SIMD::SIMD2_8u test Id: 500 - MRORSA
OK   UME::SIMD::SIMD2_8u test Id: 501 - UTOI
OK   UME::SIMD::SIMD2_8u test Id: 502 - PACK
OK   UME::SIMD::SIMD2_8u test Id: 503 - PACKLO
OK   UME::SIMD::SIMD2_8u test Id: 504 - PACKHI
OK   UME::SIMD::SIMD2_8u test Id: 505 - UNPACK
OK   UME::SIMD::SIMD2_8u test Id: 506 - UNPACKLO
OK   UME::SIMD::SIMD2_8u test Id: 507 - UNPACKHi
OK   UME::SIMD::SIMD2_8u test Id: 508 - PROMOTE
OK   UME::SIMD::SIMD2_8i test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD2_8i test Id: 2 - ADDV
OK   UME::SIMD::SIMD2_8i test Id: 3 - ADDV(operator+)
OK   UME::SIMD::SIMD2_8i test Id: 4 - SET-CONSTR gen
OK   UME::SIMD::SIMD2_8i test Id: 5 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD2_8i test Id: 6 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD2_8i test Id: 7 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD2_8i test Id: 8 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD2_8i test Id: 9 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD2_8i test Id: 10 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD2_8i test Id: 11 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD2_8i test Id: 12 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD2_8i test Id: 13 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD2_8i test Id: 14 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD2_8i test Id: 15 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD2_8i test Id: 16 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD2_8i test Id: 17 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD2_8i test Id: 18 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD2_8i test Id: 19 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD2_8i test Id: 20 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD2_8i test Id: 21 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD2_8i test Id: 22 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD2_8i test Id: 23 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD2_8i test Id: 24 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD2_8i test Id: 25 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD2_8i test Id: 26 - INSERT
OK   UME::SIMD::SIMD2_8i test Id: 27 - INSERT(operator[] =)
OK   UME::SIMD::SIMD2_8i test Id: 28 - EXTRACT
OK   UME::SIMD::SIMD2_8i test Id: 29 - EXTRACT(operator[])
OK   UME::SIMD::SIMD2_8i test Id: 30 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD2_8i test Id: 31 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD2_8i test Id: 32 - ASSIGNV
OK   UME::SIMD::SIMD2_8i test Id: 33 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD2_8i test Id: 34 - MASSIGNV
OK   UME::SIMD::SIMD2_8i test Id: 35 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD2_8i test Id: 36 - ASSIGNS
OK   UME::SIMD::SIMD2_8i test Id: 37 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD2_8i test Id: 38 - MASSIGNS
OK   UME::SIMD::SIMD2_8i test Id: 39 - MASSIGNS
OK   UME::SIMD::SIMD2_8i test Id: 40 - LOAD/STORE
OK   UME::SIMD::SIMD2_8i test Id: 41 - MLOAD
OK   UME::SIMD::SIMD2_8i test Id: 42 - MSTORE
OK   UME::SIMD::SIMD2_8i test Id: 43 - LOADA/STOREA
OK   UME::SIMD::SIMD2_8i test Id: 44 - MLOADA
OK   UME::SIMD::SIMD2_8i test Id: 45 - MSTOREA
OK   UME::SIMD::SIMD2_8i test Id: 46 - SWIZZLE
OK   UME::SIMD::SIMD2_8i test Id: 47 - SORTA
OK   UME::SIMD::SIMD2_8i test Id: 48 - SORTD
OK   UME::SIMD::SIMD2_8i test Id: 49 - BLENDV gen
OK   UME::SIMD::SIMD2_8i test Id: 50 - ADDV
OK   UME::SIMD::SIMD2_8i test Id: 51 - ADDV(operator+)
OK   UME::SIMD::SIMD2_8i test Id: 52 - ADDV(function)
OK   UME::SIMD::SIMD2_8i test Id: 53 - ADDV gen
OK   UME::SIMD::SIMD2_8i test Id: 54 - ADDV(operator+) gen
OK   UME::SIMD::SIMD2_8i test Id: 55 - ADDV(function) gen
OK   UME::SIMD::SIMD2_8i test Id: 56 - MADDV
OK   UME::SIMD::SIMD2_8i test Id: 57 - MADDV(function)
OK   UME::SIMD::SIMD2_8i test Id: 58 - MADDV gen
OK   UME::SIMD::SIMD2_8i test Id: 59 - MADDV(function) gen
OK   UME::SIMD::SIMD2_8i test Id: 60 - ADDS
OK   UME::SIMD::SIMD2_8i test Id: 61 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 62 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 63 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD2_8i test Id: 64 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD2_8i test Id: 65 - ADDS gen
OK   UME::SIMD::SIMD2_8i test Id: 66 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD2_8i test Id: 67 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD2_8i test Id: 68 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD2_8i test Id: 69 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD2_8i test Id: 70 - MADDS
OK   UME::SIMD::SIMD2_8i test Id: 71 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 72 - MADDS gen
OK   UME::SIMD::SIMD2_8i test Id: 73 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD2_8i test Id: 74 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD2_8i test Id: 75 - ADDVA
OK   UME::SIMD::SIMD2_8i test Id: 76 - ADDVA(operator+=)
OK   UME::SIMD::SIMD2_8i test Id: 77 - ADDVA gen
OK   UME::SIMD::SIMD2_8i test Id: 78 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD2_8i test Id: 79 - MADDVA
OK   UME::SIMD::SIMD2_8i test Id: 80 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD2_8i test Id: 81 - ADDSA
OK   UME::SIMD::SIMD2_8i test Id: 82 - ADDSA(operator+=)
OK   UME::SIMD::SIMD2_8i test Id: 83 - MADDSA
OK   UME::SIMD::SIMD2_8i test Id: 84 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD2_8i test Id: 85 - SADDV gen
OK   UME::SIMD::SIMD2_8i test Id: 86 - SADDV(function) gen
OK   UME::SIMD::SIMD2_8i test Id: 87 - POSTINC
OK   UME::SIMD::SIMD2_8i test Id: 88 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD2_8i test Id: 89 - POSTINC(function)
OK   UME::SIMD::SIMD2_8i test Id: 90 - MPOSTINC
OK   UME::SIMD::SIMD2_8i test Id: 91 - MPOSTINC(function)
OK   UME::SIMD::SIMD2_8i test Id: 92 - PREFINC
OK   UME::SIMD::SIMD2_8i test Id: 93 - PREFINC(operator++())
OK   UME::SIMD::SIMD2_8i test Id: 94 - PREFINC(function)
OK   UME::SIMD::SIMD2_8i test Id: 95 - MPREFINC
OK   UME::SIMD::SIMD2_8i test Id: 96 - MPREFINC(function)
OK   UME::SIMD::SIMD2_8i test Id: 97 - SUBV
OK   UME::SIMD::SIMD2_8i test Id: 98 - SUBV(operator-)
OK   UME::SIMD::SIMD2_8i test Id: 99 - SUBV(function)
OK   UME::SIMD::SIMD2_8i test Id: 100 - SUBV gen
OK   UME::SIMD::SIMD2_8i test Id: 101 - SUBV(operator-) gen
OK   UME::SIMD::SIMD2_8i test Id: 102 - SUBV(function) gen
OK   UME::SIMD::SIMD2_8i test Id: 103 - MSUBV
OK   UME::SIMD::SIMD2_8i test Id: 104 - MSUBV(function)
OK   UME::SIMD::SIMD2_8i test Id: 105 - MSUBV gen
OK   UME::SIMD::SIMD2_8i test Id: 106 - MSUBV(function) gen
OK   UME::SIMD::SIMD2_8i test Id: 107 - SUBS gen
OK   UME::SIMD::SIMD2_8i test Id: 108 - SUBS(operator-) gen
OK   UME::SIMD::SIMD2_8i test Id: 109 - SUBS(function) gen
OK   UME::SIMD::SIMD2_8i test Id: 110 - MSUBS
OK   UME::SIMD::SIMD2_8i test Id: 111 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 112 - SUBVA
OK   UME::SIMD::SIMD2_8i test Id: 113 - SUBVA(operator-=)
OK   UME::SIMD::SIMD2_8i test Id: 114 - MSUBVA
OK   UME::SIMD::SIMD2_8i test Id: 115 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD2_8i test Id: 116 - SUBSA
OK   UME::SIMD::SIMD2_8i test Id: 117 - MSUBSA
OK   UME::SIMD::SIMD2_8i test Id: 118 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD2_8i test Id: 119 - SUBFROMV
OK   UME::SIMD::SIMD2_8i test Id: 120 - MSUBFROMV
OK   UME::SIMD::SIMD2_8i test Id: 121 - SUBFROMS
OK   UME::SIMD::SIMD2_8i test Id: 122 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 123 - MSUBFROMS
OK   UME::SIMD::SIMD2_8i test Id: 124 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 125 - SUBFROMVA
OK   UME::SIMD::SIMD2_8i test Id: 126 - MSUBFROMVA
OK   UME::SIMD::SIMD2_8i test Id: 127 - SUBFROMSA
OK   UME::SIMD::SIMD2_8i test Id: 128 - MSUBFROMSA
OK   UME::SIMD::SIMD2_8i test Id: 129 - POSTDEC
OK   UME::SIMD::SIMD2_8i test Id: 130 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD2_8i test Id: 131 - POSTDEC(function)
OK   UME::SIMD::SIMD2_8i test Id: 132 - MPOSTDEC
OK   UME::SIMD::SIMD2_8i test Id: 133 - MPOSTDEC(function)
OK   UME::SIMD::SIMD2_8i test Id: 134 - PREFDEC
OK   UME::SIMD::SIMD2_8i test Id: 135 - PREFDEC(operator--())
OK   UME::SIMD::SIMD2_8i test Id: 136 - PREFDEC(function)
OK   UME::SIMD::SIMD2_8i test Id: 137 - MPREFDEC
OK   UME::SIMD::SIMD2_8i test Id: 138 - MPREFDEC(function)
OK   UME::SIMD::SIMD2_8i test Id: 139 - MULV
OK   UME::SIMD::SIMD2_8i test Id: 140 - MULV(operator*)
OK   UME::SIMD::SIMD2_8i test Id: 141 - MULV(function)
OK   UME::SIMD::SIMD2_8i test Id: 142 - MMULV
OK   UME::SIMD::SIMD2_8i test Id: 143 - MMULV(function)
OK   UME::SIMD::SIMD2_8i test Id: 144 - MULS
OK   UME::SIMD::SIMD2_8i test Id: 145 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 146 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 147 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 148 - MMULS
OK   UME::SIMD::SIMD2_8i test Id: 149 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 150 - MULVA
OK   UME::SIMD::SIMD2_8i test Id: 151 - MULVA(operator*)
OK   UME::SIMD::SIMD2_8i test Id: 152 - MULVA gen
OK   UME::SIMD::SIMD2_8i test Id: 153 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD2_8i test Id: 154 - MMULVA
OK   UME::SIMD::SIMD2_8i test Id: 155 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_8i test Id: 156 - MULSA
OK   UME::SIMD::SIMD2_8i test Id: 157 - MULSA(operator*=)
OK   UME::SIMD::SIMD2_8i test Id: 158 - MMULSA
OK   UME::SIMD::SIMD2_8i test Id: 159 - DIVV
OK   UME::SIMD::SIMD2_8i test Id: 160 - DIVV(operator/)
OK   UME::SIMD::SIMD2_8i test Id: 161 - DIVV(function)
OK   UME::SIMD::SIMD2_8i test Id: 162 - MDIVV
OK   UME::SIMD::SIMD2_8i test Id: 163 - MDIVV(function)
OK   UME::SIMD::SIMD2_8i test Id: 164 - DIVS
OK   UME::SIMD::SIMD2_8i test Id: 165 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 166 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 167 - MDIVS
OK   UME::SIMD::SIMD2_8i test Id: 168 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 169 - DIVVA
OK   UME::SIMD::SIMD2_8i test Id: 170 - DIVVA(operator/=)
OK   UME::SIMD::SIMD2_8i test Id: 171 - DIVVA gen
OK   UME::SIMD::SIMD2_8i test Id: 172 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD2_8i test Id: 173 - MDIVVA
OK   UME::SIMD::SIMD2_8i test Id: 174 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_8i test Id: 175 - DIVSA
OK   UME::SIMD::SIMD2_8i test Id: 176 - DIVSA(operator/=)
OK   UME::SIMD::SIMD2_8i test Id: 177 - MDIVSA
OK   UME::SIMD::SIMD2_8i test Id: 178 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD2_8i test Id: 179 - RCP
OK   UME::SIMD::SIMD2_8i test Id: 180 - RCP(function)
OK   UME::SIMD::SIMD2_8i test Id: 181 - MRCP
OK   UME::SIMD::SIMD2_8i test Id: 182 - MRCP(function)
OK   UME::SIMD::SIMD2_8i test Id: 183 - RCPS
OK   UME::SIMD::SIMD2_8i test Id: 184 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 185 - RCPS(function)
OK   UME::SIMD::SIMD2_8i test Id: 186 - MRCPS
OK   UME::SIMD::SIMD2_8i test Id: 187 - MRCPS (function)
OK   UME::SIMD::SIMD2_8i test Id: 188 - RCPA
OK   UME::SIMD::SIMD2_8i test Id: 189 - MRCPA
OK   UME::SIMD::SIMD2_8i test Id: 190 - RCPSA
OK   UME::SIMD::SIMD2_8i test Id: 191 - MRCPSA
OK   UME::SIMD::SIMD2_8i test Id: 192 - CMPEQV
OK   UME::SIMD::SIMD2_8i test Id: 193 - CMPEQV(operator==)
OK   UME::SIMD::SIMD2_8i test Id: 194 - CMPEQV(function)
OK   UME::SIMD::SIMD2_8i test Id: 195 - CMPEQS
OK   UME::SIMD::SIMD2_8i test Id: 196 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 197 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 198 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 199 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 200 - CMPNEV
OK   UME::SIMD::SIMD2_8i test Id: 201 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD2_8i test Id: 202 - CMPNEV(function)
OK   UME::SIMD::SIMD2_8i test Id: 203 - CMPNES
OK   UME::SIMD::SIMD2_8i test Id: 204 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 205 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 206 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 207 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 208 - CMPGTV
OK   UME::SIMD::SIMD2_8i test Id: 209 - CMPGTV(operator>)
OK   UME::SIMD::SIMD2_8i test Id: 210 - CMPGTV(function)
OK   UME::SIMD::SIMD2_8i test Id: 211 - CMPGTS
OK   UME::SIMD::SIMD2_8i test Id: 212 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 213 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 214 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 215 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 216 - CMPLTV
OK   UME::SIMD::SIMD2_8i test Id: 217 - CMPLTV(operator<)
OK   UME::SIMD::SIMD2_8i test Id: 218 - CMPLTV(function)
OK   UME::SIMD::SIMD2_8i test Id: 219 - CMPLTS
OK   UME::SIMD::SIMD2_8i test Id: 220 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 221 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 222 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 223 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 224 - CMPGEV
OK   UME::SIMD::SIMD2_8i test Id: 225 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD2_8i test Id: 226 - CMPGEV(function)
OK   UME::SIMD::SIMD2_8i test Id: 227 - CMPGES
OK   UME::SIMD::SIMD2_8i test Id: 228 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 229 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 230 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 231 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 232 - CMPLEV
OK   UME::SIMD::SIMD2_8i test Id: 233 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD2_8i test Id: 234 - CMPLEV(function)
OK   UME::SIMD::SIMD2_8i test Id: 235 - CMPLES
OK   UME::SIMD::SIMD2_8i test Id: 236 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 237 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 238 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 239 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 240 - CMPEV
OK   UME::SIMD::SIMD2_8i test Id: 241 - CMPEV(function)
OK   UME::SIMD::SIMD2_8i test Id: 242 - CMPES
OK   UME::SIMD::SIMD2_8i test Id: 243 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 244 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 245 - HADD
OK   UME::SIMD::SIMD2_8i test Id: 246 - HADD(function)
OK   UME::SIMD::SIMD2_8i test Id: 247 - HADD gen
OK   UME::SIMD::SIMD2_8i test Id: 248 - HADD(function) gen
OK   UME::SIMD::SIMD2_8i test Id: 249 - MHADD gen
OK   UME::SIMD::SIMD2_8i test Id: 250 - MHADD(function) gen
OK   UME::SIMD::SIMD2_8i test Id: 251 - HADDS gen
OK   UME::SIMD::SIMD2_8i test Id: 252 - HADDS(function) gen
OK   UME::SIMD::SIMD2_8i test Id: 253 - MHADD gen
OK   UME::SIMD::SIMD2_8i test Id: 254 - MHADDS(function) gen
OK   UME::SIMD::SIMD2_8i test Id: 255 - HMUL gen
OK   UME::SIMD::SIMD2_8i test Id: 256 - HMUL(function) gen
OK   UME::SIMD::SIMD2_8i test Id: 257 - MHMUL gen
OK   UME::SIMD::SIMD2_8i test Id: 258 - MHMUL(function) gen
OK   UME::SIMD::SIMD2_8i test Id: 259 - HMULS gen
OK   UME::SIMD::SIMD2_8i test Id: 260 - HMULS(function) gen
OK   UME::SIMD::SIMD2_8i test Id: 261 - MHMUL gen
OK   UME::SIMD::SIMD2_8i test Id: 262 - MHMULS(function) gen
OK   UME::SIMD::SIMD2_8i test Id: 263 - FMULADDV
OK   UME::SIMD::SIMD2_8i test Id: 264 - FMULADDV(function)
OK   UME::SIMD::SIMD2_8i test Id: 265 - MFMULADDV
OK   UME::SIMD::SIMD2_8i test Id: 266 - MFMULADDV(function)
OK   UME::SIMD::SIMD2_8i test Id: 267 - FMULSUBV
OK   UME::SIMD::SIMD2_8i test Id: 268 - FMULSUBV(function)
OK   UME::SIMD::SIMD2_8i test Id: 269 - MFMULSUBV
OK   UME::SIMD::SIMD2_8i test Id: 270 - MFMULSUBV(function)
OK   UME::SIMD::SIMD2_8i test Id: 271 - FADDMULV
OK   UME::SIMD::SIMD2_8i test Id: 272 - FADDMULV(function)
OK   UME::SIMD::SIMD2_8i test Id: 273 - MFADDMULV
OK   UME::SIMD::SIMD2_8i test Id: 274 - MFADDMULV(function)
OK   UME::SIMD::SIMD2_8i test Id: 275 - FSUBMULV
OK   UME::SIMD::SIMD2_8i test Id: 276 - FSUBMULV(function)
OK   UME::SIMD::SIMD2_8i test Id: 277 - MFSUBMULV
OK   UME::SIMD::SIMD2_8i test Id: 278 - MFSUBMULV(function)
OK   UME::SIMD::SIMD2_8i test Id: 279 - MAXV
OK   UME::SIMD::SIMD2_8i test Id: 280 - MAXV(function)
OK   UME::SIMD::SIMD2_8i test Id: 281 - MMAXV
OK   UME::SIMD::SIMD2_8i test Id: 282 - MMAXV(function)
OK   UME::SIMD::SIMD2_8i test Id: 283 - MAXS
OK   UME::SIMD::SIMD2_8i test Id: 284 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 285 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 286 - MMAXS
OK   UME::SIMD::SIMD2_8i test Id: 287 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 288 - MAXVA
OK   UME::SIMD::SIMD2_8i test Id: 289 - MMAXVA
OK   UME::SIMD::SIMD2_8i test Id: 290 - MAXSA
OK   UME::SIMD::SIMD2_8i test Id: 291 - MMAXSA
OK   UME::SIMD::SIMD2_8i test Id: 292 - MINV
OK   UME::SIMD::SIMD2_8i test Id: 293 - MINV(function)
OK   UME::SIMD::SIMD2_8i test Id: 294 - MMINV
OK   UME::SIMD::SIMD2_8i test Id: 295 - MMINV(function)
OK   UME::SIMD::SIMD2_8i test Id: 296 - MINS
OK   UME::SIMD::SIMD2_8i test Id: 297 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD2_8i test Id: 298 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD2_8i test Id: 299 - MMINS
OK   UME::SIMD::SIMD2_8i test Id: 300 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 301 - MINVA
OK   UME::SIMD::SIMD2_8i test Id: 302 - MMINVA
OK   UME::SIMD::SIMD2_8i test Id: 303 - MINSA
OK   UME::SIMD::SIMD2_8i test Id: 304 - MMINSA
OK   UME::SIMD::SIMD2_8i test Id: 305 - HMAX
OK   UME::SIMD::SIMD2_8i test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD2_8i test Id: 307 - HMAX
OK   UME::SIMD::SIMD2_8i test Id: 308 - HMAX(function)
OK   UME::SIMD::SIMD2_8i test Id: 309 - MHMAX
OK   UME::SIMD::SIMD2_8i test Id: 310 - MHMAX(function)
OK   UME::SIMD::SIMD2_8i test Id: 311 - IMAX
OK   UME::SIMD::SIMD2_8i test Id: 312 - IMAX(function)
OK   UME::SIMD::SIMD2_8i test Id: 313 - MIMAX
OK   UME::SIMD::SIMD2_8i test Id: 314 - MIMAX(function)
OK   UME::SIMD::SIMD2_8i test Id: 315 - HMIN
OK   UME::SIMD::SIMD2_8i test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD2_8i test Id: 317 - HMIN
OK   UME::SIMD::SIMD2_8i test Id: 318 - HMIN(function)
OK   UME::SIMD::SIMD2_8i test Id: 319 - MHMIN gen
OK   UME::SIMD::SIMD2_8i test Id: 320 - MHMIN(function) gen
OK   UME::SIMD::SIMD2_8i test Id: 321 - IMIN
OK   UME::SIMD::SIMD2_8i test Id: 322 - IMIN(function)
OK   UME::SIMD::SIMD2_8i test Id: 323 - MIMIN
OK   UME::SIMD::SIMD2_8i test Id: 324 - MIMIN(function)
OK   UME::SIMD::SIMD2_8i test Id: 325 - REMV gen
OK   UME::SIMD::SIMD2_8i test Id: 326 - REMV(operator%) gen
OK   UME::SIMD::SIMD2_8i test Id: 327 - REMV(function) gen
OK   UME::SIMD::SIMD2_8i test Id: 328 - MREMV gen
OK   UME::SIMD::SIMD2_8i test Id: 329 - MREMV(function) gen
OK   UME::SIMD::SIMD2_8i test Id: 330 - REMS gen
OK   UME::SIMD::SIMD2_8i test Id: 331 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD2_8i test Id: 332 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD2_8i test Id: 333 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD2_8i test Id: 334 - LANDV gen
OK   UME::SIMD::SIMD2_8i test Id: 335 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD2_8i test Id: 336 - LORV gen
OK   UME::SIMD::SIMD2_8i test Id: 337 - LORV gen (operator ||)
OK   UME::SIMD::SIMD2_8i test Id: 338 - BANDV
OK   UME::SIMD::SIMD2_8i test Id: 339 - BANDV(operator&)
OK   UME::SIMD::SIMD2_8i test Id: 340 - BANDV(function)
OK   UME::SIMD::SIMD2_8i test Id: 341 - MBANDV
OK   UME::SIMD::SIMD2_8i test Id: 342 - MBANDV
OK   UME::SIMD::SIMD2_8i test Id: 343 - BANDS
OK   UME::SIMD::SIMD2_8i test Id: 344 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 345 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 346 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 347 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 348 - MBANDS
OK   UME::SIMD::SIMD2_8i test Id: 349 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 350 - BANDVA
OK   UME::SIMD::SIMD2_8i test Id: 351 - MBANDVA
OK   UME::SIMD::SIMD2_8i test Id: 352 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD2_8i test Id: 353 - BANDSA
OK   UME::SIMD::SIMD2_8i test Id: 354 - MBANDSA
OK   UME::SIMD::SIMD2_8i test Id: 355 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD2_8i test Id: 356 - BORV
OK   UME::SIMD::SIMD2_8i test Id: 357 - BORV(operator |)
OK   UME::SIMD::SIMD2_8i test Id: 358 - BORV(function)
OK   UME::SIMD::SIMD2_8i test Id: 359 - MBORV
OK   UME::SIMD::SIMD2_8i test Id: 360 - MBORV(function)
OK   UME::SIMD::SIMD2_8i test Id: 361 - BORS
OK   UME::SIMD::SIMD2_8i test Id: 362 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 363 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 364 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 365 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 366 - MBORS
OK   UME::SIMD::SIMD2_8i test Id: 367 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 368 - BORVA
OK   UME::SIMD::SIMD2_8i test Id: 369 - BORVA(operator|=)
OK   UME::SIMD::SIMD2_8i test Id: 370 - MBORVA
OK   UME::SIMD::SIMD2_8i test Id: 371 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD2_8i test Id: 372 - BORSA
OK   UME::SIMD::SIMD2_8i test Id: 373 - BORSA(operator|=)
OK   UME::SIMD::SIMD2_8i test Id: 374 - MBORSA
OK   UME::SIMD::SIMD2_8i test Id: 375 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD2_8i test Id: 376 - BXORV
OK   UME::SIMD::SIMD2_8i test Id: 377 - BXORV(operator^
OK   UME::SIMD::SIMD2_8i test Id: 378 - BXORV(function
OK   UME::SIMD::SIMD2_8i test Id: 379 - MBXORV
OK   UME::SIMD::SIMD2_8i test Id: 380 - MBXORV(function)
OK   UME::SIMD::SIMD2_8i test Id: 381 - BXORS
OK   UME::SIMD::SIMD2_8i test Id: 382 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 383 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 384 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 385 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 386 - MBXORS
OK   UME::SIMD::SIMD2_8i test Id: 387 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 388 - BXORVA
OK   UME::SIMD::SIMD2_8i test Id: 389 - BXORVA(operator^=)
OK   UME::SIMD::SIMD2_8i test Id: 390 - MBXORVA
OK   UME::SIMD::SIMD2_8i test Id: 391 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD2_8i test Id: 392 - BXORSA
OK   UME::SIMD::SIMD2_8i test Id: 393 - BXORSA(operator^=)
OK   UME::SIMD::SIMD2_8i test Id: 394 - MBXORSA
OK   UME::SIMD::SIMD2_8i test Id: 395 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD2_8i test Id: 396 - BNOT
OK   UME::SIMD::SIMD2_8i test Id: 397 - BNOT(operator!)
OK   UME::SIMD::SIMD2_8i test Id: 398 - BNOT(function)
OK   UME::SIMD::SIMD2_8i test Id: 399 - MBNOT
OK   UME::SIMD::SIMD2_8i test Id: 400 - MBNOT(function)
OK   UME::SIMD::SIMD2_8i test Id: 401 - BNOTA
OK   UME::SIMD::SIMD2_8i test Id: 402 - MBNOTA
OK   UME::SIMD::SIMD2_8i test Id: 403 - BANDNOTV
OK   UME::SIMD::SIMD2_8i test Id: 404 - BANDNOTV (function)
OK   UME::SIMD::SIMD2_8i test Id: 405 - MBANDNOTV
OK   UME::SIMD::SIMD2_8i test Id: 406 - MBANDNOTV (function)
OK   UME::SIMD::SIMD2_8i test Id: 407 - BANDNOTS
OK   UME::SIMD::SIMD2_8i test Id: 408 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD2_8i test Id: 409 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD2_8i test Id: 410 - MBANDNOTS
OK   UME::SIMD::SIMD2_8i test Id: 411 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD2_8i test Id: 412 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD2_8i test Id: 413 - BANDNOTVA
OK   UME::SIMD::SIMD2_8i test Id: 414 - MBANDNOTVA
OK   UME::SIMD::SIMD2_8i test Id: 415 - BANDNOTSA
OK   UME::SIMD::SIMD2_8i test Id: 416 - MBANDNOTSA
OK   UME::SIMD::SIMD2_8i test Id: 417 - HBAND
OK   UME::SIMD::SIMD2_8i test Id: 418 - HBAND
OK   UME::SIMD::SIMD2_8i test Id: 419 - MHBAND
OK   UME::SIMD::SIMD2_8i test Id: 420 - MHBAND(function)
OK   UME::SIMD::SIMD2_8i test Id: 421 - HBANDS
OK   UME::SIMD::SIMD2_8i test Id: 422 - MHBANDS
OK   UME::SIMD::SIMD2_8i test Id: 423 - HBOR
OK   UME::SIMD::SIMD2_8i test Id: 424 - HBOR(function)
OK   UME::SIMD::SIMD2_8i test Id: 425 - MHBOR
OK   UME::SIMD::SIMD2_8i test Id: 426 - MHBOR(function)
OK   UME::SIMD::SIMD2_8i test Id: 427 - HBORS
OK   UME::SIMD::SIMD2_8i test Id: 428 - MHBORS
OK   UME::SIMD::SIMD2_8i test Id: 429 - HBXOR
OK   UME::SIMD::SIMD2_8i test Id: 430 - HBXOR(function)
OK   UME::SIMD::SIMD2_8i test Id: 431 - MHBXOR
OK   UME::SIMD::SIMD2_8i test Id: 432 - MHBXOR
OK   UME::SIMD::SIMD2_8i test Id: 433 - HBXORS
OK   UME::SIMD::SIMD2_8i test Id: 434 - MHBXORS
OK   UME::SIMD::SIMD2_8i test Id: 435 - GATHERU
OK   UME::SIMD::SIMD2_8i test Id: 436 - MGATHERU
OK   UME::SIMD::SIMD2_8i test Id: 437 - GATHERS
OK   UME::SIMD::SIMD2_8i test Id: 438 - MGATHERS
OK   UME::SIMD::SIMD2_8i test Id: 439 - GATHERV
OK   UME::SIMD::SIMD2_8i test Id: 440 - MGATHERV
OK   UME::SIMD::SIMD2_8i test Id: 441 - SCATTERU
OK   UME::SIMD::SIMD2_8i test Id: 442 - MSCATTERU
OK   UME::SIMD::SIMD2_8i test Id: 443 - SCATTERS
OK   UME::SIMD::SIMD2_8i test Id: 444 - MSCATTERS
OK   UME::SIMD::SIMD2_8i test Id: 445 - SCATTERV
OK   UME::SIMD::SIMD2_8i test Id: 446 - MSCATTERV
OK   UME::SIMD::SIMD2_8i test Id: 447 - LSHV gen
OK   UME::SIMD::SIMD2_8i test Id: 448 - LSHV (function) gen
OK   UME::SIMD::SIMD2_8i test Id: 449 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD2_8i test Id: 450 - MLSHV gen
OK   UME::SIMD::SIMD2_8i test Id: 451 - MLSHV (function) gen
OK   UME::SIMD::SIMD2_8i test Id: 452 - LSHS gen
OK   UME::SIMD::SIMD2_8i test Id: 453 - LSHS (function) gen
OK   UME::SIMD::SIMD2_8i test Id: 454 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD2_8i test Id: 455 - MLSHS gen
OK   UME::SIMD::SIMD2_8i test Id: 456 - MLSHS (function) gen
OK   UME::SIMD::SIMD2_8i test Id: 457 - LSHVA gen
OK   UME::SIMD::SIMD2_8i test Id: 458 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD2_8i test Id: 459 - MLSHVA gen
OK   UME::SIMD::SIMD2_8i test Id: 460 - LSHSA gen
OK   UME::SIMD::SIMD2_8i test Id: 461 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD2_8i test Id: 462 - MLSHSA gen
OK   UME::SIMD::SIMD2_8i test Id: 463 - RSHV gen
OK   UME::SIMD::SIMD2_8i test Id: 464 - RSHV (function) gen
OK   UME::SIMD::SIMD2_8i test Id: 465 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD2_8i test Id: 466 - MRSHV gen
OK   UME::SIMD::SIMD2_8i test Id: 467 - MRSHV (function) gen
OK   UME::SIMD::SIMD2_8i test Id: 468 - RSHS gen
OK   UME::SIMD::SIMD2_8i test Id: 469 - RSHS (function) gen
OK   UME::SIMD::SIMD2_8i test Id: 470 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD2_8i test Id: 471 - MRSHS gen
OK   UME::SIMD::SIMD2_8i test Id: 472 - MRSHS (function) gen
OK   UME::SIMD::SIMD2_8i test Id: 473 - RSHVA gen
OK   UME::SIMD::SIMD2_8i test Id: 474 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD2_8i test Id: 475 - MRSHVA gen
OK   UME::SIMD::SIMD2_8i test Id: 476 - RSHSA gen
OK   UME::SIMD::SIMD2_8i test Id: 477 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD2_8i test Id: 478 - MRSHSA gen
OK   UME::SIMD::SIMD2_8i test Id: 479 - ROLV
OK   UME::SIMD::SIMD2_8i test Id: 480 - ROLV(function)
OK   UME::SIMD::SIMD2_8i test Id: 481 - MROLV
OK   UME::SIMD::SIMD2_8i test Id: 482 - MROLV(function)
OK   UME::SIMD::SIMD2_8i test Id: 483 - ROLS
OK   UME::SIMD::SIMD2_8i test Id: 484 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 485 - MROLS
OK   UME::SIMD::SIMD2_8i test Id: 486 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 487 - ROLVA
OK   UME::SIMD::SIMD2_8i test Id: 488 - MROLVA
OK   UME::SIMD::SIMD2_8i test Id: 489 - ROLSA
OK   UME::SIMD::SIMD2_8i test Id: 490 - MROLSA
OK   UME::SIMD::SIMD2_8i test Id: 491 - RORV
OK   UME::SIMD::SIMD2_8i test Id: 492 - RORV(function)
OK   UME::SIMD::SIMD2_8i test Id: 493 - MRORV
OK   UME::SIMD::SIMD2_8i test Id: 494 - MRORV(function)
OK   UME::SIMD::SIMD2_8i test Id: 495 - RORS
OK   UME::SIMD::SIMD2_8i test Id: 496 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 497 - MRORS
OK   UME::SIMD::SIMD2_8i test Id: 498 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_8i test Id: 499 - RORVA
OK   UME::SIMD::SIMD2_8i test Id: 500 - MRORVA
OK   UME::SIMD::SIMD2_8i test Id: 501 - RORSA
OK   UME::SIMD::SIMD2_8i test Id: 502 - MRORSA
OK   UME::SIMD::SIMD2_8i test Id: 503 - NEG
OK   UME::SIMD::SIMD2_8i test Id: 504 - NEG(operator-)
OK   UME::SIMD::SIMD2_8i test Id: 505 - NEG(function)
OK   UME::SIMD::SIMD2_8i test Id: 506 - MNEG
OK   UME::SIMD::SIMD2_8i test Id: 507 - MNEG(function)
OK   UME::SIMD::SIMD2_8i test Id: 508 - NEGA
OK   UME::SIMD::SIMD2_8i test Id: 509 - MNEGA
OK   UME::SIMD::SIMD2_8i test Id: 510 - ABS
OK   UME::SIMD::SIMD2_8i test Id: 511 - ABS(function)
OK   UME::SIMD::SIMD2_8i test Id: 512 - MABS
OK   UME::SIMD::SIMD2_8i test Id: 513 - MABS(function)
OK   UME::SIMD::SIMD2_8i test Id: 514 - ABSA
OK   UME::SIMD::SIMD2_8i test Id: 515 - MABSA
OK   UME::SIMD::SIMD2_8i test Id: 516 - COPYSIGN gen
OK   UME::SIMD::SIMD2_8i test Id: 517 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD2_8i test Id: 518 - ITOU
OK   UME::SIMD::SIMD2_8i test Id: 519 - PACK
OK   UME::SIMD::SIMD2_8i test Id: 520 - PACKLO
OK   UME::SIMD::SIMD2_8i test Id: 521 - PACKHI
OK   UME::SIMD::SIMD2_8i test Id: 522 - UNPACK
OK   UME::SIMD::SIMD2_8i test Id: 523 - UNPACKLO
OK   UME::SIMD::SIMD2_8i test Id: 524 - UNPACKHi
OK   UME::SIMD::SIMD2_8i test Id: 525 - PROMOTE
OK   UME::SIMD::SIMD1_16u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD1_16u test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD1_16u test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD1_16u test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD1_16u test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD1_16u test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD1_16u test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD1_16u test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD1_16u test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD1_16u test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD1_16u test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD1_16u test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD1_16u test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD1_16u test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD1_16u test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD1_16u test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD1_16u test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD1_16u test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD1_16u test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD1_16u test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD1_16u test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD1_16u test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD1_16u test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD1_16u test Id: 24 - INSERT
OK   UME::SIMD::SIMD1_16u test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD1_16u test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD1_16u test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD1_16u test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD1_16u test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD1_16u test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD1_16u test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD1_16u test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD1_16u test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD1_16u test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD1_16u test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD1_16u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD1_16u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD1_16u test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD1_16u test Id: 39 - MLOAD
OK   UME::SIMD::SIMD1_16u test Id: 40 - MSTORE
OK   UME::SIMD::SIMD1_16u test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD1_16u test Id: 42 - MLOADA
OK   UME::SIMD::SIMD1_16u test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD1_16u test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD1_16u test Id: 45 - SORTA
OK   UME::SIMD::SIMD1_16u test Id: 46 - SORTD
OK   UME::SIMD::SIMD1_16u test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD1_16u test Id: 48 - ADDV
OK   UME::SIMD::SIMD1_16u test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD1_16u test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD1_16u test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD1_16u test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD1_16u test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD1_16u test Id: 54 - MADDV
OK   UME::SIMD::SIMD1_16u test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD1_16u test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD1_16u test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD1_16u test Id: 58 - ADDS
OK   UME::SIMD::SIMD1_16u test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD1_16u test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD1_16u test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD1_16u test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD1_16u test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD1_16u test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD1_16u test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD1_16u test Id: 68 - MADDS
OK   UME::SIMD::SIMD1_16u test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD1_16u test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD1_16u test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD1_16u test Id: 73 - ADDVA
OK   UME::SIMD::SIMD1_16u test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD1_16u test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD1_16u test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD1_16u test Id: 77 - MADDVA
OK   UME::SIMD::SIMD1_16u test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD1_16u test Id: 79 - ADDSA
OK   UME::SIMD::SIMD1_16u test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD1_16u test Id: 81 - MADDSA
OK   UME::SIMD::SIMD1_16u test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD1_16u test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD1_16u test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD1_16u test Id: 85 - POSTINC
OK   UME::SIMD::SIMD1_16u test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD1_16u test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD1_16u test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD1_16u test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD1_16u test Id: 90 - PREFINC
OK   UME::SIMD::SIMD1_16u test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD1_16u test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD1_16u test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD1_16u test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD1_16u test Id: 95 - SUBV
OK   UME::SIMD::SIMD1_16u test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD1_16u test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD1_16u test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD1_16u test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD1_16u test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD1_16u test Id: 101 - MSUBV
OK   UME::SIMD::SIMD1_16u test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD1_16u test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD1_16u test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD1_16u test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD1_16u test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD1_16u test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD1_16u test Id: 108 - MSUBS
OK   UME::SIMD::SIMD1_16u test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 110 - SUBVA
OK   UME::SIMD::SIMD1_16u test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD1_16u test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD1_16u test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD1_16u test Id: 114 - SUBSA
OK   UME::SIMD::SIMD1_16u test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD1_16u test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD1_16u test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD1_16u test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD1_16u test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD1_16u test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD1_16u test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD1_16u test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD1_16u test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD1_16u test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD1_16u test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD1_16u test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD1_16u test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD1_16u test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD1_16u test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD1_16u test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD1_16u test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD1_16u test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD1_16u test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD1_16u test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD1_16u test Id: 137 - MULV
OK   UME::SIMD::SIMD1_16u test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD1_16u test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD1_16u test Id: 140 - MMULV
OK   UME::SIMD::SIMD1_16u test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD1_16u test Id: 142 - MULS
OK   UME::SIMD::SIMD1_16u test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 146 - MMULS
OK   UME::SIMD::SIMD1_16u test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 148 - MULVA
OK   UME::SIMD::SIMD1_16u test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD1_16u test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD1_16u test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD1_16u test Id: 152 - MMULVA
OK   UME::SIMD::SIMD1_16u test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_16u test Id: 154 - MULSA
OK   UME::SIMD::SIMD1_16u test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD1_16u test Id: 156 - MMULSA
OK   UME::SIMD::SIMD1_16u test Id: 157 - DIVV
OK   UME::SIMD::SIMD1_16u test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD1_16u test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD1_16u test Id: 160 - MDIVV
OK   UME::SIMD::SIMD1_16u test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD1_16u test Id: 162 - DIVS
OK   UME::SIMD::SIMD1_16u test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 165 - MDIVS
OK   UME::SIMD::SIMD1_16u test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 167 - DIVVA
OK   UME::SIMD::SIMD1_16u test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD1_16u test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD1_16u test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD1_16u test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD1_16u test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_16u test Id: 173 - DIVSA
OK   UME::SIMD::SIMD1_16u test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD1_16u test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD1_16u test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD1_16u test Id: 177 - RCP
OK   UME::SIMD::SIMD1_16u test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD1_16u test Id: 179 - MRCP
OK   UME::SIMD::SIMD1_16u test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD1_16u test Id: 181 - RCPS
OK   UME::SIMD::SIMD1_16u test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD1_16u test Id: 184 - MRCPS
OK   UME::SIMD::SIMD1_16u test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD1_16u test Id: 186 - RCPA
OK   UME::SIMD::SIMD1_16u test Id: 187 - MRCPA
OK   UME::SIMD::SIMD1_16u test Id: 188 - RCPSA
OK   UME::SIMD::SIMD1_16u test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD1_16u test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD1_16u test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD1_16u test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD1_16u test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD1_16u test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD1_16u test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD1_16u test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD1_16u test Id: 201 - CMPNES
OK   UME::SIMD::SIMD1_16u test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD1_16u test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD1_16u test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD1_16u test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD1_16u test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD1_16u test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD1_16u test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD1_16u test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD1_16u test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD1_16u test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD1_16u test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD1_16u test Id: 225 - CMPGES
OK   UME::SIMD::SIMD1_16u test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD1_16u test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD1_16u test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD1_16u test Id: 233 - CMPLES
OK   UME::SIMD::SIMD1_16u test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 238 - CMPEV
OK   UME::SIMD::SIMD1_16u test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD1_16u test Id: 240 - CMPES
OK   UME::SIMD::SIMD1_16u test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 243 - HADD
OK   UME::SIMD::SIMD1_16u test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD1_16u test Id: 245 - HADD gen
OK   UME::SIMD::SIMD1_16u test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD1_16u test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD1_16u test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD1_16u test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD1_16u test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD1_16u test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD1_16u test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD1_16u test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD1_16u test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD1_16u test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD1_16u test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD1_16u test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD1_16u test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD1_16u test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD1_16u test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD1_16u test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD1_16u test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD1_16u test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD1_16u test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD1_16u test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD1_16u test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD1_16u test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD1_16u test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD1_16u test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD1_16u test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD1_16u test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD1_16u test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD1_16u test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD1_16u test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD1_16u test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD1_16u test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD1_16u test Id: 277 - MAXV
OK   UME::SIMD::SIMD1_16u test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD1_16u test Id: 279 - MMAXV
OK   UME::SIMD::SIMD1_16u test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD1_16u test Id: 281 - MAXS
OK   UME::SIMD::SIMD1_16u test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 284 - MMAXS
OK   UME::SIMD::SIMD1_16u test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 286 - MAXVA
OK   UME::SIMD::SIMD1_16u test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD1_16u test Id: 288 - MAXSA
OK   UME::SIMD::SIMD1_16u test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD1_16u test Id: 290 - MINV
OK   UME::SIMD::SIMD1_16u test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD1_16u test Id: 292 - MMINV
OK   UME::SIMD::SIMD1_16u test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD1_16u test Id: 294 - MINS
OK   UME::SIMD::SIMD1_16u test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD1_16u test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD1_16u test Id: 297 - MMINS
OK   UME::SIMD::SIMD1_16u test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 299 - MINVA
OK   UME::SIMD::SIMD1_16u test Id: 300 - MMINVA
OK   UME::SIMD::SIMD1_16u test Id: 301 - MINSA
OK   UME::SIMD::SIMD1_16u test Id: 302 - MMINSA
OK   UME::SIMD::SIMD1_16u test Id: 303 - HMAX
OK   UME::SIMD::SIMD1_16u test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD1_16u test Id: 305 - HMAX
OK   UME::SIMD::SIMD1_16u test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD1_16u test Id: 307 - MHMAX
OK   UME::SIMD::SIMD1_16u test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD1_16u test Id: 309 - IMAX
OK   UME::SIMD::SIMD1_16u test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD1_16u test Id: 311 - MIMAX
OK   UME::SIMD::SIMD1_16u test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD1_16u test Id: 313 - HMIN
OK   UME::SIMD::SIMD1_16u test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD1_16u test Id: 315 - HMIN
OK   UME::SIMD::SIMD1_16u test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD1_16u test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD1_16u test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD1_16u test Id: 319 - IMIN
OK   UME::SIMD::SIMD1_16u test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD1_16u test Id: 321 - MIMIN
OK   UME::SIMD::SIMD1_16u test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD1_16u test Id: 323 - REMV gen
OK   UME::SIMD::SIMD1_16u test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD1_16u test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD1_16u test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD1_16u test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD1_16u test Id: 328 - REMS gen
OK   UME::SIMD::SIMD1_16u test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD1_16u test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD1_16u test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD1_16u test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD1_16u test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD1_16u test Id: 334 - LORV gen
OK   UME::SIMD::SIMD1_16u test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD1_16u test Id: 336 - BANDV
OK   UME::SIMD::SIMD1_16u test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD1_16u test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD1_16u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD1_16u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD1_16u test Id: 341 - BANDS
OK   UME::SIMD::SIMD1_16u test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 346 - MBANDS
OK   UME::SIMD::SIMD1_16u test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 348 - BANDVA
OK   UME::SIMD::SIMD1_16u test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD1_16u test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD1_16u test Id: 351 - BANDSA
OK   UME::SIMD::SIMD1_16u test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD1_16u test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD1_16u test Id: 354 - BORV
OK   UME::SIMD::SIMD1_16u test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD1_16u test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD1_16u test Id: 357 - MBORV
OK   UME::SIMD::SIMD1_16u test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD1_16u test Id: 359 - BORS
OK   UME::SIMD::SIMD1_16u test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 364 - MBORS
OK   UME::SIMD::SIMD1_16u test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 366 - BORVA
OK   UME::SIMD::SIMD1_16u test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD1_16u test Id: 368 - MBORVA
OK   UME::SIMD::SIMD1_16u test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD1_16u test Id: 370 - BORSA
OK   UME::SIMD::SIMD1_16u test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD1_16u test Id: 372 - MBORSA
OK   UME::SIMD::SIMD1_16u test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD1_16u test Id: 374 - BXORV
OK   UME::SIMD::SIMD1_16u test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD1_16u test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD1_16u test Id: 377 - MBXORV
OK   UME::SIMD::SIMD1_16u test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD1_16u test Id: 379 - BXORS
OK   UME::SIMD::SIMD1_16u test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 384 - MBXORS
OK   UME::SIMD::SIMD1_16u test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 386 - BXORVA
OK   UME::SIMD::SIMD1_16u test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD1_16u test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD1_16u test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD1_16u test Id: 390 - BXORSA
OK   UME::SIMD::SIMD1_16u test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD1_16u test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD1_16u test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD1_16u test Id: 394 - BNOT
OK   UME::SIMD::SIMD1_16u test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD1_16u test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD1_16u test Id: 397 - MBNOT
OK   UME::SIMD::SIMD1_16u test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD1_16u test Id: 399 - BNOTA
OK   UME::SIMD::SIMD1_16u test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD1_16u test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD1_16u test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD1_16u test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD1_16u test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD1_16u test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD1_16u test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD1_16u test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD1_16u test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD1_16u test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD1_16u test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD1_16u test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD1_16u test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD1_16u test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD1_16u test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD1_16u test Id: 415 - HBAND
OK   UME::SIMD::SIMD1_16u test Id: 416 - HBAND
OK   UME::SIMD::SIMD1_16u test Id: 417 - MHBAND
OK   UME::SIMD::SIMD1_16u test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD1_16u test Id: 419 - HBANDS
OK   UME::SIMD::SIMD1_16u test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD1_16u test Id: 421 - HBOR
OK   UME::SIMD::SIMD1_16u test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD1_16u test Id: 423 - MHBOR
OK   UME::SIMD::SIMD1_16u test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD1_16u test Id: 425 - HBORS
OK   UME::SIMD::SIMD1_16u test Id: 426 - MHBORS
OK   UME::SIMD::SIMD1_16u test Id: 427 - HBXOR
OK   UME::SIMD::SIMD1_16u test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD1_16u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD1_16u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD1_16u test Id: 431 - HBXORS
OK   UME::SIMD::SIMD1_16u test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD1_16u test Id: 433 - GATHERU
OK   UME::SIMD::SIMD1_16u test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD1_16u test Id: 435 - GATHERS
OK   UME::SIMD::SIMD1_16u test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD1_16u test Id: 437 - GATHERV
OK   UME::SIMD::SIMD1_16u test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD1_16u test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD1_16u test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD1_16u test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD1_16u test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD1_16u test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD1_16u test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD1_16u test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD1_16u test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD1_16u test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD1_16u test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD1_16u test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD1_16u test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD1_16u test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD1_16u test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD1_16u test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD1_16u test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD1_16u test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD1_16u test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD1_16u test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD1_16u test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD1_16u test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD1_16u test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD1_16u test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD1_16u test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD1_16u test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD1_16u test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD1_16u test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD1_16u test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD1_16u test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD1_16u test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD1_16u test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD1_16u test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD1_16u test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD1_16u test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD1_16u test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD1_16u test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD1_16u test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD1_16u test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD1_16u test Id: 477 - ROLV
OK   UME::SIMD::SIMD1_16u test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD1_16u test Id: 479 - MROLV
OK   UME::SIMD::SIMD1_16u test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD1_16u test Id: 481 - ROLS
OK   UME::SIMD::SIMD1_16u test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 483 - MROLS
OK   UME::SIMD::SIMD1_16u test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 485 - ROLVA
OK   UME::SIMD::SIMD1_16u test Id: 486 - MROLVA
OK   UME::SIMD::SIMD1_16u test Id: 487 - ROLSA
OK   UME::SIMD::SIMD1_16u test Id: 488 - MROLSA
OK   UME::SIMD::SIMD1_16u test Id: 489 - RORV
OK   UME::SIMD::SIMD1_16u test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD1_16u test Id: 491 - MRORV
OK   UME::SIMD::SIMD1_16u test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD1_16u test Id: 493 - RORS
OK   UME::SIMD::SIMD1_16u test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 495 - MRORS
OK   UME::SIMD::SIMD1_16u test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16u test Id: 497 - RORVA
OK   UME::SIMD::SIMD1_16u test Id: 498 - MRORVA
OK   UME::SIMD::SIMD1_16u test Id: 499 - RORSA
OK   UME::SIMD::SIMD1_16u test Id: 500 - MRORSA
OK   UME::SIMD::SIMD1_16u test Id: 501 - UTOI
OK   UME::SIMD::SIMD1_16u test Id: 502 - PROMOTE
OK   UME::SIMD::SIMD1_16u test Id: 503 - DEGRADE
OK   UME::SIMD::SIMD1_16i test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD1_16i test Id: 2 - ADDV
OK   UME::SIMD::SIMD1_16i test Id: 3 - ADDV(operator+)
OK   UME::SIMD::SIMD1_16i test Id: 4 - SET-CONSTR gen
OK   UME::SIMD::SIMD1_16i test Id: 5 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD1_16i test Id: 6 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD1_16i test Id: 7 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD1_16i test Id: 8 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD1_16i test Id: 9 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD1_16i test Id: 10 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD1_16i test Id: 11 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD1_16i test Id: 12 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD1_16i test Id: 13 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD1_16i test Id: 14 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD1_16i test Id: 15 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD1_16i test Id: 16 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD1_16i test Id: 17 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD1_16i test Id: 18 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD1_16i test Id: 19 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD1_16i test Id: 20 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD1_16i test Id: 21 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD1_16i test Id: 22 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD1_16i test Id: 23 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD1_16i test Id: 24 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD1_16i test Id: 25 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD1_16i test Id: 26 - INSERT
OK   UME::SIMD::SIMD1_16i test Id: 27 - INSERT(operator[] =)
OK   UME::SIMD::SIMD1_16i test Id: 28 - EXTRACT
OK   UME::SIMD::SIMD1_16i test Id: 29 - EXTRACT(operator[])
OK   UME::SIMD::SIMD1_16i test Id: 30 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD1_16i test Id: 31 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD1_16i test Id: 32 - ASSIGNV
OK   UME::SIMD::SIMD1_16i test Id: 33 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD1_16i test Id: 34 - MASSIGNV
OK   UME::SIMD::SIMD1_16i test Id: 35 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD1_16i test Id: 36 - ASSIGNS
OK   UME::SIMD::SIMD1_16i test Id: 37 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD1_16i test Id: 38 - MASSIGNS
OK   UME::SIMD::SIMD1_16i test Id: 39 - MASSIGNS
OK   UME::SIMD::SIMD1_16i test Id: 40 - LOAD/STORE
OK   UME::SIMD::SIMD1_16i test Id: 41 - MLOAD
OK   UME::SIMD::SIMD1_16i test Id: 42 - MSTORE
OK   UME::SIMD::SIMD1_16i test Id: 43 - LOADA/STOREA
OK   UME::SIMD::SIMD1_16i test Id: 44 - MLOADA
OK   UME::SIMD::SIMD1_16i test Id: 45 - MSTOREA
OK   UME::SIMD::SIMD1_16i test Id: 46 - SWIZZLE
OK   UME::SIMD::SIMD1_16i test Id: 47 - SORTA
OK   UME::SIMD::SIMD1_16i test Id: 48 - SORTD
OK   UME::SIMD::SIMD1_16i test Id: 49 - BLENDV gen
OK   UME::SIMD::SIMD1_16i test Id: 50 - ADDV
OK   UME::SIMD::SIMD1_16i test Id: 51 - ADDV(operator+)
OK   UME::SIMD::SIMD1_16i test Id: 52 - ADDV(function)
OK   UME::SIMD::SIMD1_16i test Id: 53 - ADDV gen
OK   UME::SIMD::SIMD1_16i test Id: 54 - ADDV(operator+) gen
OK   UME::SIMD::SIMD1_16i test Id: 55 - ADDV(function) gen
OK   UME::SIMD::SIMD1_16i test Id: 56 - MADDV
OK   UME::SIMD::SIMD1_16i test Id: 57 - MADDV(function)
OK   UME::SIMD::SIMD1_16i test Id: 58 - MADDV gen
OK   UME::SIMD::SIMD1_16i test Id: 59 - MADDV(function) gen
OK   UME::SIMD::SIMD1_16i test Id: 60 - ADDS
OK   UME::SIMD::SIMD1_16i test Id: 61 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 62 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 63 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD1_16i test Id: 64 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD1_16i test Id: 65 - ADDS gen
OK   UME::SIMD::SIMD1_16i test Id: 66 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD1_16i test Id: 67 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD1_16i test Id: 68 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD1_16i test Id: 69 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD1_16i test Id: 70 - MADDS
OK   UME::SIMD::SIMD1_16i test Id: 71 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 72 - MADDS gen
OK   UME::SIMD::SIMD1_16i test Id: 73 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD1_16i test Id: 74 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD1_16i test Id: 75 - ADDVA
OK   UME::SIMD::SIMD1_16i test Id: 76 - ADDVA(operator+=)
OK   UME::SIMD::SIMD1_16i test Id: 77 - ADDVA gen
OK   UME::SIMD::SIMD1_16i test Id: 78 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD1_16i test Id: 79 - MADDVA
OK   UME::SIMD::SIMD1_16i test Id: 80 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD1_16i test Id: 81 - ADDSA
OK   UME::SIMD::SIMD1_16i test Id: 82 - ADDSA(operator+=)
OK   UME::SIMD::SIMD1_16i test Id: 83 - MADDSA
OK   UME::SIMD::SIMD1_16i test Id: 84 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD1_16i test Id: 85 - SADDV gen
OK   UME::SIMD::SIMD1_16i test Id: 86 - SADDV(function) gen
OK   UME::SIMD::SIMD1_16i test Id: 87 - POSTINC
OK   UME::SIMD::SIMD1_16i test Id: 88 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD1_16i test Id: 89 - POSTINC(function)
OK   UME::SIMD::SIMD1_16i test Id: 90 - MPOSTINC
OK   UME::SIMD::SIMD1_16i test Id: 91 - MPOSTINC(function)
OK   UME::SIMD::SIMD1_16i test Id: 92 - PREFINC
OK   UME::SIMD::SIMD1_16i test Id: 93 - PREFINC(operator++())
OK   UME::SIMD::SIMD1_16i test Id: 94 - PREFINC(function)
OK   UME::SIMD::SIMD1_16i test Id: 95 - MPREFINC
OK   UME::SIMD::SIMD1_16i test Id: 96 - MPREFINC(function)
OK   UME::SIMD::SIMD1_16i test Id: 97 - SUBV
OK   UME::SIMD::SIMD1_16i test Id: 98 - SUBV(operator-)
OK   UME::SIMD::SIMD1_16i test Id: 99 - SUBV(function)
OK   UME::SIMD::SIMD1_16i test Id: 100 - SUBV gen
OK   UME::SIMD::SIMD1_16i test Id: 101 - SUBV(operator-) gen
OK   UME::SIMD::SIMD1_16i test Id: 102 - SUBV(function) gen
OK   UME::SIMD::SIMD1_16i test Id: 103 - MSUBV
OK   UME::SIMD::SIMD1_16i test Id: 104 - MSUBV(function)
OK   UME::SIMD::SIMD1_16i test Id: 105 - MSUBV gen
OK   UME::SIMD::SIMD1_16i test Id: 106 - MSUBV(function) gen
OK   UME::SIMD::SIMD1_16i test Id: 107 - SUBS gen
OK   UME::SIMD::SIMD1_16i test Id: 108 - SUBS(operator-) gen
OK   UME::SIMD::SIMD1_16i test Id: 109 - SUBS(function) gen
OK   UME::SIMD::SIMD1_16i test Id: 110 - MSUBS
OK   UME::SIMD::SIMD1_16i test Id: 111 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 112 - SUBVA
OK   UME::SIMD::SIMD1_16i test Id: 113 - SUBVA(operator-=)
OK   UME::SIMD::SIMD1_16i test Id: 114 - MSUBVA
OK   UME::SIMD::SIMD1_16i test Id: 115 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD1_16i test Id: 116 - SUBSA
OK   UME::SIMD::SIMD1_16i test Id: 117 - MSUBSA
OK   UME::SIMD::SIMD1_16i test Id: 118 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD1_16i test Id: 119 - SUBFROMV
OK   UME::SIMD::SIMD1_16i test Id: 120 - MSUBFROMV
OK   UME::SIMD::SIMD1_16i test Id: 121 - SUBFROMS
OK   UME::SIMD::SIMD1_16i test Id: 122 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 123 - MSUBFROMS
OK   UME::SIMD::SIMD1_16i test Id: 124 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 125 - SUBFROMVA
OK   UME::SIMD::SIMD1_16i test Id: 126 - MSUBFROMVA
OK   UME::SIMD::SIMD1_16i test Id: 127 - SUBFROMSA
OK   UME::SIMD::SIMD1_16i test Id: 128 - MSUBFROMSA
OK   UME::SIMD::SIMD1_16i test Id: 129 - POSTDEC
OK   UME::SIMD::SIMD1_16i test Id: 130 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD1_16i test Id: 131 - POSTDEC(function)
OK   UME::SIMD::SIMD1_16i test Id: 132 - MPOSTDEC
OK   UME::SIMD::SIMD1_16i test Id: 133 - MPOSTDEC(function)
OK   UME::SIMD::SIMD1_16i test Id: 134 - PREFDEC
OK   UME::SIMD::SIMD1_16i test Id: 135 - PREFDEC(operator--())
OK   UME::SIMD::SIMD1_16i test Id: 136 - PREFDEC(function)
OK   UME::SIMD::SIMD1_16i test Id: 137 - MPREFDEC
OK   UME::SIMD::SIMD1_16i test Id: 138 - MPREFDEC(function)
OK   UME::SIMD::SIMD1_16i test Id: 139 - MULV
OK   UME::SIMD::SIMD1_16i test Id: 140 - MULV(operator*)
OK   UME::SIMD::SIMD1_16i test Id: 141 - MULV(function)
OK   UME::SIMD::SIMD1_16i test Id: 142 - MMULV
OK   UME::SIMD::SIMD1_16i test Id: 143 - MMULV(function)
OK   UME::SIMD::SIMD1_16i test Id: 144 - MULS
OK   UME::SIMD::SIMD1_16i test Id: 145 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 146 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 147 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 148 - MMULS
OK   UME::SIMD::SIMD1_16i test Id: 149 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 150 - MULVA
OK   UME::SIMD::SIMD1_16i test Id: 151 - MULVA(operator*)
OK   UME::SIMD::SIMD1_16i test Id: 152 - MULVA gen
OK   UME::SIMD::SIMD1_16i test Id: 153 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD1_16i test Id: 154 - MMULVA
OK   UME::SIMD::SIMD1_16i test Id: 155 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_16i test Id: 156 - MULSA
OK   UME::SIMD::SIMD1_16i test Id: 157 - MULSA(operator*=)
OK   UME::SIMD::SIMD1_16i test Id: 158 - MMULSA
OK   UME::SIMD::SIMD1_16i test Id: 159 - DIVV
OK   UME::SIMD::SIMD1_16i test Id: 160 - DIVV(operator/)
OK   UME::SIMD::SIMD1_16i test Id: 161 - DIVV(function)
OK   UME::SIMD::SIMD1_16i test Id: 162 - MDIVV
OK   UME::SIMD::SIMD1_16i test Id: 163 - MDIVV(function)
OK   UME::SIMD::SIMD1_16i test Id: 164 - DIVS
OK   UME::SIMD::SIMD1_16i test Id: 165 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 166 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 167 - MDIVS
OK   UME::SIMD::SIMD1_16i test Id: 168 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 169 - DIVVA
OK   UME::SIMD::SIMD1_16i test Id: 170 - DIVVA(operator/=)
OK   UME::SIMD::SIMD1_16i test Id: 171 - DIVVA gen
OK   UME::SIMD::SIMD1_16i test Id: 172 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD1_16i test Id: 173 - MDIVVA
OK   UME::SIMD::SIMD1_16i test Id: 174 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_16i test Id: 175 - DIVSA
OK   UME::SIMD::SIMD1_16i test Id: 176 - DIVSA(operator/=)
OK   UME::SIMD::SIMD1_16i test Id: 177 - MDIVSA
OK   UME::SIMD::SIMD1_16i test Id: 178 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD1_16i test Id: 179 - RCP
OK   UME::SIMD::SIMD1_16i test Id: 180 - RCP(function)
OK   UME::SIMD::SIMD1_16i test Id: 181 - MRCP
OK   UME::SIMD::SIMD1_16i test Id: 182 - MRCP(function)
OK   UME::SIMD::SIMD1_16i test Id: 183 - RCPS
OK   UME::SIMD::SIMD1_16i test Id: 184 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 185 - RCPS(function)
OK   UME::SIMD::SIMD1_16i test Id: 186 - MRCPS
OK   UME::SIMD::SIMD1_16i test Id: 187 - MRCPS (function)
OK   UME::SIMD::SIMD1_16i test Id: 188 - RCPA
OK   UME::SIMD::SIMD1_16i test Id: 189 - MRCPA
OK   UME::SIMD::SIMD1_16i test Id: 190 - RCPSA
OK   UME::SIMD::SIMD1_16i test Id: 191 - MRCPSA
OK   UME::SIMD::SIMD1_16i test Id: 192 - CMPEQV
OK   UME::SIMD::SIMD1_16i test Id: 193 - CMPEQV(operator==)
OK   UME::SIMD::SIMD1_16i test Id: 194 - CMPEQV(function)
OK   UME::SIMD::SIMD1_16i test Id: 195 - CMPEQS
OK   UME::SIMD::SIMD1_16i test Id: 196 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 197 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 198 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 199 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 200 - CMPNEV
OK   UME::SIMD::SIMD1_16i test Id: 201 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD1_16i test Id: 202 - CMPNEV(function)
OK   UME::SIMD::SIMD1_16i test Id: 203 - CMPNES
OK   UME::SIMD::SIMD1_16i test Id: 204 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 205 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 206 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 207 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 208 - CMPGTV
OK   UME::SIMD::SIMD1_16i test Id: 209 - CMPGTV(operator>)
OK   UME::SIMD::SIMD1_16i test Id: 210 - CMPGTV(function)
OK   UME::SIMD::SIMD1_16i test Id: 211 - CMPGTS
OK   UME::SIMD::SIMD1_16i test Id: 212 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 213 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 214 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 215 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 216 - CMPLTV
OK   UME::SIMD::SIMD1_16i test Id: 217 - CMPLTV(operator<)
OK   UME::SIMD::SIMD1_16i test Id: 218 - CMPLTV(function)
OK   UME::SIMD::SIMD1_16i test Id: 219 - CMPLTS
OK   UME::SIMD::SIMD1_16i test Id: 220 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 221 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 222 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 223 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 224 - CMPGEV
OK   UME::SIMD::SIMD1_16i test Id: 225 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD1_16i test Id: 226 - CMPGEV(function)
OK   UME::SIMD::SIMD1_16i test Id: 227 - CMPGES
OK   UME::SIMD::SIMD1_16i test Id: 228 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 229 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 230 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 231 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 232 - CMPLEV
OK   UME::SIMD::SIMD1_16i test Id: 233 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD1_16i test Id: 234 - CMPLEV(function)
OK   UME::SIMD::SIMD1_16i test Id: 235 - CMPLES
OK   UME::SIMD::SIMD1_16i test Id: 236 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 237 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 238 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 239 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 240 - CMPEV
OK   UME::SIMD::SIMD1_16i test Id: 241 - CMPEV(function)
OK   UME::SIMD::SIMD1_16i test Id: 242 - CMPES
OK   UME::SIMD::SIMD1_16i test Id: 243 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 244 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 245 - HADD
OK   UME::SIMD::SIMD1_16i test Id: 246 - HADD(function)
OK   UME::SIMD::SIMD1_16i test Id: 247 - HADD gen
OK   UME::SIMD::SIMD1_16i test Id: 248 - HADD(function) gen
OK   UME::SIMD::SIMD1_16i test Id: 249 - MHADD gen
OK   UME::SIMD::SIMD1_16i test Id: 250 - MHADD(function) gen
OK   UME::SIMD::SIMD1_16i test Id: 251 - HADDS gen
OK   UME::SIMD::SIMD1_16i test Id: 252 - HADDS(function) gen
OK   UME::SIMD::SIMD1_16i test Id: 253 - MHADD gen
OK   UME::SIMD::SIMD1_16i test Id: 254 - MHADDS(function) gen
OK   UME::SIMD::SIMD1_16i test Id: 255 - HMUL gen
OK   UME::SIMD::SIMD1_16i test Id: 256 - HMUL(function) gen
OK   UME::SIMD::SIMD1_16i test Id: 257 - MHMUL gen
OK   UME::SIMD::SIMD1_16i test Id: 258 - MHMUL(function) gen
OK   UME::SIMD::SIMD1_16i test Id: 259 - HMULS gen
OK   UME::SIMD::SIMD1_16i test Id: 260 - HMULS(function) gen
OK   UME::SIMD::SIMD1_16i test Id: 261 - MHMUL gen
OK   UME::SIMD::SIMD1_16i test Id: 262 - MHMULS(function) gen
OK   UME::SIMD::SIMD1_16i test Id: 263 - FMULADDV
OK   UME::SIMD::SIMD1_16i test Id: 264 - FMULADDV(function)
OK   UME::SIMD::SIMD1_16i test Id: 265 - MFMULADDV
OK   UME::SIMD::SIMD1_16i test Id: 266 - MFMULADDV(function)
OK   UME::SIMD::SIMD1_16i test Id: 267 - FMULSUBV
OK   UME::SIMD::SIMD1_16i test Id: 268 - FMULSUBV(function)
OK   UME::SIMD::SIMD1_16i test Id: 269 - MFMULSUBV
OK   UME::SIMD::SIMD1_16i test Id: 270 - MFMULSUBV(function)
OK   UME::SIMD::SIMD1_16i test Id: 271 - FADDMULV
OK   UME::SIMD::SIMD1_16i test Id: 272 - FADDMULV(function)
OK   UME::SIMD::SIMD1_16i test Id: 273 - MFADDMULV
OK   UME::SIMD::SIMD1_16i test Id: 274 - MFADDMULV(function)
OK   UME::SIMD::SIMD1_16i test Id: 275 - FSUBMULV
OK   UME::SIMD::SIMD1_16i test Id: 276 - FSUBMULV(function)
OK   UME::SIMD::SIMD1_16i test Id: 277 - MFSUBMULV
OK   UME::SIMD::SIMD1_16i test Id: 278 - MFSUBMULV(function)
OK   UME::SIMD::SIMD1_16i test Id: 279 - MAXV
OK   UME::SIMD::SIMD1_16i test Id: 280 - MAXV(function)
OK   UME::SIMD::SIMD1_16i test Id: 281 - MMAXV
OK   UME::SIMD::SIMD1_16i test Id: 282 - MMAXV(function)
OK   UME::SIMD::SIMD1_16i test Id: 283 - MAXS
OK   UME::SIMD::SIMD1_16i test Id: 284 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 285 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 286 - MMAXS
OK   UME::SIMD::SIMD1_16i test Id: 287 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 288 - MAXVA
OK   UME::SIMD::SIMD1_16i test Id: 289 - MMAXVA
OK   UME::SIMD::SIMD1_16i test Id: 290 - MAXSA
OK   UME::SIMD::SIMD1_16i test Id: 291 - MMAXSA
OK   UME::SIMD::SIMD1_16i test Id: 292 - MINV
OK   UME::SIMD::SIMD1_16i test Id: 293 - MINV(function)
OK   UME::SIMD::SIMD1_16i test Id: 294 - MMINV
OK   UME::SIMD::SIMD1_16i test Id: 295 - MMINV(function)
OK   UME::SIMD::SIMD1_16i test Id: 296 - MINS
OK   UME::SIMD::SIMD1_16i test Id: 297 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD1_16i test Id: 298 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD1_16i test Id: 299 - MMINS
OK   UME::SIMD::SIMD1_16i test Id: 300 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 301 - MINVA
OK   UME::SIMD::SIMD1_16i test Id: 302 - MMINVA
OK   UME::SIMD::SIMD1_16i test Id: 303 - MINSA
OK   UME::SIMD::SIMD1_16i test Id: 304 - MMINSA
OK   UME::SIMD::SIMD1_16i test Id: 305 - HMAX
OK   UME::SIMD::SIMD1_16i test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD1_16i test Id: 307 - HMAX
OK   UME::SIMD::SIMD1_16i test Id: 308 - HMAX(function)
OK   UME::SIMD::SIMD1_16i test Id: 309 - MHMAX
OK   UME::SIMD::SIMD1_16i test Id: 310 - MHMAX(function)
OK   UME::SIMD::SIMD1_16i test Id: 311 - IMAX
OK   UME::SIMD::SIMD1_16i test Id: 312 - IMAX(function)
OK   UME::SIMD::SIMD1_16i test Id: 313 - MIMAX
OK   UME::SIMD::SIMD1_16i test Id: 314 - MIMAX(function)
OK   UME::SIMD::SIMD1_16i test Id: 315 - HMIN
OK   UME::SIMD::SIMD1_16i test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD1_16i test Id: 317 - HMIN
OK   UME::SIMD::SIMD1_16i test Id: 318 - HMIN(function)
OK   UME::SIMD::SIMD1_16i test Id: 319 - MHMIN gen
OK   UME::SIMD::SIMD1_16i test Id: 320 - MHMIN(function) gen
OK   UME::SIMD::SIMD1_16i test Id: 321 - IMIN
OK   UME::SIMD::SIMD1_16i test Id: 322 - IMIN(function)
OK   UME::SIMD::SIMD1_16i test Id: 323 - MIMIN
OK   UME::SIMD::SIMD1_16i test Id: 324 - MIMIN(function)
OK   UME::SIMD::SIMD1_16i test Id: 325 - REMV gen
OK   UME::SIMD::SIMD1_16i test Id: 326 - REMV(operator%) gen
OK   UME::SIMD::SIMD1_16i test Id: 327 - REMV(function) gen
OK   UME::SIMD::SIMD1_16i test Id: 328 - MREMV gen
OK   UME::SIMD::SIMD1_16i test Id: 329 - MREMV(function) gen
OK   UME::SIMD::SIMD1_16i test Id: 330 - REMS gen
OK   UME::SIMD::SIMD1_16i test Id: 331 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD1_16i test Id: 332 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD1_16i test Id: 333 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD1_16i test Id: 334 - LANDV gen
OK   UME::SIMD::SIMD1_16i test Id: 335 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD1_16i test Id: 336 - LORV gen
OK   UME::SIMD::SIMD1_16i test Id: 337 - LORV gen (operator ||)
OK   UME::SIMD::SIMD1_16i test Id: 338 - BANDV
OK   UME::SIMD::SIMD1_16i test Id: 339 - BANDV(operator&)
OK   UME::SIMD::SIMD1_16i test Id: 340 - BANDV(function)
OK   UME::SIMD::SIMD1_16i test Id: 341 - MBANDV
OK   UME::SIMD::SIMD1_16i test Id: 342 - MBANDV
OK   UME::SIMD::SIMD1_16i test Id: 343 - BANDS
OK   UME::SIMD::SIMD1_16i test Id: 344 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 345 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 346 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 347 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 348 - MBANDS
OK   UME::SIMD::SIMD1_16i test Id: 349 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 350 - BANDVA
OK   UME::SIMD::SIMD1_16i test Id: 351 - MBANDVA
OK   UME::SIMD::SIMD1_16i test Id: 352 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD1_16i test Id: 353 - BANDSA
OK   UME::SIMD::SIMD1_16i test Id: 354 - MBANDSA
OK   UME::SIMD::SIMD1_16i test Id: 355 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD1_16i test Id: 356 - BORV
OK   UME::SIMD::SIMD1_16i test Id: 357 - BORV(operator |)
OK   UME::SIMD::SIMD1_16i test Id: 358 - BORV(function)
OK   UME::SIMD::SIMD1_16i test Id: 359 - MBORV
OK   UME::SIMD::SIMD1_16i test Id: 360 - MBORV(function)
OK   UME::SIMD::SIMD1_16i test Id: 361 - BORS
OK   UME::SIMD::SIMD1_16i test Id: 362 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 363 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 364 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 365 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 366 - MBORS
OK   UME::SIMD::SIMD1_16i test Id: 367 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 368 - BORVA
OK   UME::SIMD::SIMD1_16i test Id: 369 - BORVA(operator|=)
OK   UME::SIMD::SIMD1_16i test Id: 370 - MBORVA
OK   UME::SIMD::SIMD1_16i test Id: 371 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD1_16i test Id: 372 - BORSA
OK   UME::SIMD::SIMD1_16i test Id: 373 - BORSA(operator|=)
OK   UME::SIMD::SIMD1_16i test Id: 374 - MBORSA
OK   UME::SIMD::SIMD1_16i test Id: 375 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD1_16i test Id: 376 - BXORV
OK   UME::SIMD::SIMD1_16i test Id: 377 - BXORV(operator^
OK   UME::SIMD::SIMD1_16i test Id: 378 - BXORV(function
OK   UME::SIMD::SIMD1_16i test Id: 379 - MBXORV
OK   UME::SIMD::SIMD1_16i test Id: 380 - MBXORV(function)
OK   UME::SIMD::SIMD1_16i test Id: 381 - BXORS
OK   UME::SIMD::SIMD1_16i test Id: 382 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 383 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 384 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 385 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 386 - MBXORS
OK   UME::SIMD::SIMD1_16i test Id: 387 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 388 - BXORVA
OK   UME::SIMD::SIMD1_16i test Id: 389 - BXORVA(operator^=)
OK   UME::SIMD::SIMD1_16i test Id: 390 - MBXORVA
OK   UME::SIMD::SIMD1_16i test Id: 391 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD1_16i test Id: 392 - BXORSA
OK   UME::SIMD::SIMD1_16i test Id: 393 - BXORSA(operator^=)
OK   UME::SIMD::SIMD1_16i test Id: 394 - MBXORSA
OK   UME::SIMD::SIMD1_16i test Id: 395 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD1_16i test Id: 396 - BNOT
OK   UME::SIMD::SIMD1_16i test Id: 397 - BNOT(operator!)
OK   UME::SIMD::SIMD1_16i test Id: 398 - BNOT(function)
OK   UME::SIMD::SIMD1_16i test Id: 399 - MBNOT
OK   UME::SIMD::SIMD1_16i test Id: 400 - MBNOT(function)
OK   UME::SIMD::SIMD1_16i test Id: 401 - BNOTA
OK   UME::SIMD::SIMD1_16i test Id: 402 - MBNOTA
OK   UME::SIMD::SIMD1_16i test Id: 403 - BANDNOTV
OK   UME::SIMD::SIMD1_16i test Id: 404 - BANDNOTV (function)
OK   UME::SIMD::SIMD1_16i test Id: 405 - MBANDNOTV
OK   UME::SIMD::SIMD1_16i test Id: 406 - MBANDNOTV (function)
OK   UME::SIMD::SIMD1_16i test Id: 407 - BANDNOTS
OK   UME::SIMD::SIMD1_16i test Id: 408 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD1_16i test Id: 409 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD1_16i test Id: 410 - MBANDNOTS
OK   UME::SIMD::SIMD1_16i test Id: 411 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD1_16i test Id: 412 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD1_16i test Id: 413 - BANDNOTVA
OK   UME::SIMD::SIMD1_16i test Id: 414 - MBANDNOTVA
OK   UME::SIMD::SIMD1_16i test Id: 415 - BANDNOTSA
OK   UME::SIMD::SIMD1_16i test Id: 416 - MBANDNOTSA
OK   UME::SIMD::SIMD1_16i test Id: 417 - HBAND
OK   UME::SIMD::SIMD1_16i test Id: 418 - HBAND
OK   UME::SIMD::SIMD1_16i test Id: 419 - MHBAND
OK   UME::SIMD::SIMD1_16i test Id: 420 - MHBAND(function)
OK   UME::SIMD::SIMD1_16i test Id: 421 - HBANDS
OK   UME::SIMD::SIMD1_16i test Id: 422 - MHBANDS
OK   UME::SIMD::SIMD1_16i test Id: 423 - HBOR
OK   UME::SIMD::SIMD1_16i test Id: 424 - HBOR(function)
OK   UME::SIMD::SIMD1_16i test Id: 425 - MHBOR
OK   UME::SIMD::SIMD1_16i test Id: 426 - MHBOR(function)
OK   UME::SIMD::SIMD1_16i test Id: 427 - HBORS
OK   UME::SIMD::SIMD1_16i test Id: 428 - MHBORS
OK   UME::SIMD::SIMD1_16i test Id: 429 - HBXOR
OK   UME::SIMD::SIMD1_16i test Id: 430 - HBXOR(function)
OK   UME::SIMD::SIMD1_16i test Id: 431 - MHBXOR
OK   UME::SIMD::SIMD1_16i test Id: 432 - MHBXOR
OK   UME::SIMD::SIMD1_16i test Id: 433 - HBXORS
OK   UME::SIMD::SIMD1_16i test Id: 434 - MHBXORS
OK   UME::SIMD::SIMD1_16i test Id: 435 - GATHERU
OK   UME::SIMD::SIMD1_16i test Id: 436 - MGATHERU
OK   UME::SIMD::SIMD1_16i test Id: 437 - GATHERS
OK   UME::SIMD::SIMD1_16i test Id: 438 - MGATHERS
OK   UME::SIMD::SIMD1_16i test Id: 439 - GATHERV
OK   UME::SIMD::SIMD1_16i test Id: 440 - MGATHERV
OK   UME::SIMD::SIMD1_16i test Id: 441 - SCATTERU
OK   UME::SIMD::SIMD1_16i test Id: 442 - MSCATTERU
OK   UME::SIMD::SIMD1_16i test Id: 443 - SCATTERS
OK   UME::SIMD::SIMD1_16i test Id: 444 - MSCATTERS
OK   UME::SIMD::SIMD1_16i test Id: 445 - SCATTERV
OK   UME::SIMD::SIMD1_16i test Id: 446 - MSCATTERV
OK   UME::SIMD::SIMD1_16i test Id: 447 - LSHV gen
OK   UME::SIMD::SIMD1_16i test Id: 448 - LSHV (function) gen
OK   UME::SIMD::SIMD1_16i test Id: 449 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD1_16i test Id: 450 - MLSHV gen
OK   UME::SIMD::SIMD1_16i test Id: 451 - MLSHV (function) gen
OK   UME::SIMD::SIMD1_16i test Id: 452 - LSHS gen
OK   UME::SIMD::SIMD1_16i test Id: 453 - LSHS (function) gen
OK   UME::SIMD::SIMD1_16i test Id: 454 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD1_16i test Id: 455 - MLSHS gen
OK   UME::SIMD::SIMD1_16i test Id: 456 - MLSHS (function) gen
OK   UME::SIMD::SIMD1_16i test Id: 457 - LSHVA gen
OK   UME::SIMD::SIMD1_16i test Id: 458 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD1_16i test Id: 459 - MLSHVA gen
OK   UME::SIMD::SIMD1_16i test Id: 460 - LSHSA gen
OK   UME::SIMD::SIMD1_16i test Id: 461 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD1_16i test Id: 462 - MLSHSA gen
OK   UME::SIMD::SIMD1_16i test Id: 463 - RSHV gen
OK   UME::SIMD::SIMD1_16i test Id: 464 - RSHV (function) gen
OK   UME::SIMD::SIMD1_16i test Id: 465 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD1_16i test Id: 466 - MRSHV gen
OK   UME::SIMD::SIMD1_16i test Id: 467 - MRSHV (function) gen
OK   UME::SIMD::SIMD1_16i test Id: 468 - RSHS gen
OK   UME::SIMD::SIMD1_16i test Id: 469 - RSHS (function) gen
OK   UME::SIMD::SIMD1_16i test Id: 470 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD1_16i test Id: 471 - MRSHS gen
OK   UME::SIMD::SIMD1_16i test Id: 472 - MRSHS (function) gen
OK   UME::SIMD::SIMD1_16i test Id: 473 - RSHVA gen
OK   UME::SIMD::SIMD1_16i test Id: 474 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD1_16i test Id: 475 - MRSHVA gen
OK   UME::SIMD::SIMD1_16i test Id: 476 - RSHSA gen
OK   UME::SIMD::SIMD1_16i test Id: 477 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD1_16i test Id: 478 - MRSHSA gen
OK   UME::SIMD::SIMD1_16i test Id: 479 - ROLV
OK   UME::SIMD::SIMD1_16i test Id: 480 - ROLV(function)
OK   UME::SIMD::SIMD1_16i test Id: 481 - MROLV
OK   UME::SIMD::SIMD1_16i test Id: 482 - MROLV(function)
OK   UME::SIMD::SIMD1_16i test Id: 483 - ROLS
OK   UME::SIMD::SIMD1_16i test Id: 484 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 485 - MROLS
OK   UME::SIMD::SIMD1_16i test Id: 486 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 487 - ROLVA
OK   UME::SIMD::SIMD1_16i test Id: 488 - MROLVA
OK   UME::SIMD::SIMD1_16i test Id: 489 - ROLSA
OK   UME::SIMD::SIMD1_16i test Id: 490 - MROLSA
OK   UME::SIMD::SIMD1_16i test Id: 491 - RORV
OK   UME::SIMD::SIMD1_16i test Id: 492 - RORV(function)
OK   UME::SIMD::SIMD1_16i test Id: 493 - MRORV
OK   UME::SIMD::SIMD1_16i test Id: 494 - MRORV(function)
OK   UME::SIMD::SIMD1_16i test Id: 495 - RORS
OK   UME::SIMD::SIMD1_16i test Id: 496 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 497 - MRORS
OK   UME::SIMD::SIMD1_16i test Id: 498 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_16i test Id: 499 - RORVA
OK   UME::SIMD::SIMD1_16i test Id: 500 - MRORVA
OK   UME::SIMD::SIMD1_16i test Id: 501 - RORSA
OK   UME::SIMD::SIMD1_16i test Id: 502 - MRORSA
OK   UME::SIMD::SIMD1_16i test Id: 503 - NEG
OK   UME::SIMD::SIMD1_16i test Id: 504 - NEG(operator-)
OK   UME::SIMD::SIMD1_16i test Id: 505 - NEG(function)
OK   UME::SIMD::SIMD1_16i test Id: 506 - MNEG
OK   UME::SIMD::SIMD1_16i test Id: 507 - MNEG(function)
OK   UME::SIMD::SIMD1_16i test Id: 508 - NEGA
OK   UME::SIMD::SIMD1_16i test Id: 509 - MNEGA
OK   UME::SIMD::SIMD1_16i test Id: 510 - ABS
OK   UME::SIMD::SIMD1_16i test Id: 511 - ABS(function)
OK   UME::SIMD::SIMD1_16i test Id: 512 - MABS
OK   UME::SIMD::SIMD1_16i test Id: 513 - MABS(function)
OK   UME::SIMD::SIMD1_16i test Id: 514 - ABSA
OK   UME::SIMD::SIMD1_16i test Id: 515 - MABSA
OK   UME::SIMD::SIMD1_16i test Id: 516 - COPYSIGN gen
OK   UME::SIMD::SIMD1_16i test Id: 517 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD1_16i test Id: 518 - ITOU
OK   UME::SIMD::SIMD1_16i test Id: 519 - PROMOTE
OK   UME::SIMD::SIMD1_16i test Id: 520 - DEGRADE
OK   UME::SIMD::SIMD4_8u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD4_8u test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD4_8u test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD4_8u test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD4_8u test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD4_8u test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD4_8u test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD4_8u test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD4_8u test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD4_8u test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD4_8u test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD4_8u test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD4_8u test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD4_8u test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD4_8u test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD4_8u test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD4_8u test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD4_8u test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD4_8u test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD4_8u test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD4_8u test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD4_8u test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD4_8u test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD4_8u test Id: 24 - INSERT
OK   UME::SIMD::SIMD4_8u test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD4_8u test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD4_8u test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD4_8u test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD4_8u test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD4_8u test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD4_8u test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD4_8u test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD4_8u test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD4_8u test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD4_8u test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD4_8u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD4_8u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD4_8u test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD4_8u test Id: 39 - MLOAD
OK   UME::SIMD::SIMD4_8u test Id: 40 - MSTORE
OK   UME::SIMD::SIMD4_8u test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD4_8u test Id: 42 - MLOADA
OK   UME::SIMD::SIMD4_8u test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD4_8u test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD4_8u test Id: 45 - SORTA
OK   UME::SIMD::SIMD4_8u test Id: 46 - SORTD
OK   UME::SIMD::SIMD4_8u test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD4_8u test Id: 48 - ADDV
OK   UME::SIMD::SIMD4_8u test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD4_8u test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD4_8u test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD4_8u test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD4_8u test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD4_8u test Id: 54 - MADDV
OK   UME::SIMD::SIMD4_8u test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD4_8u test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD4_8u test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD4_8u test Id: 58 - ADDS
OK   UME::SIMD::SIMD4_8u test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD4_8u test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD4_8u test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD4_8u test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD4_8u test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD4_8u test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD4_8u test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD4_8u test Id: 68 - MADDS
OK   UME::SIMD::SIMD4_8u test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD4_8u test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD4_8u test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD4_8u test Id: 73 - ADDVA
OK   UME::SIMD::SIMD4_8u test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD4_8u test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD4_8u test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD4_8u test Id: 77 - MADDVA
OK   UME::SIMD::SIMD4_8u test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD4_8u test Id: 79 - ADDSA
OK   UME::SIMD::SIMD4_8u test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD4_8u test Id: 81 - MADDSA
OK   UME::SIMD::SIMD4_8u test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD4_8u test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD4_8u test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD4_8u test Id: 85 - POSTINC
OK   UME::SIMD::SIMD4_8u test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD4_8u test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD4_8u test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD4_8u test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD4_8u test Id: 90 - PREFINC
OK   UME::SIMD::SIMD4_8u test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD4_8u test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD4_8u test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD4_8u test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD4_8u test Id: 95 - SUBV
OK   UME::SIMD::SIMD4_8u test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD4_8u test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD4_8u test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD4_8u test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD4_8u test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD4_8u test Id: 101 - MSUBV
OK   UME::SIMD::SIMD4_8u test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD4_8u test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD4_8u test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD4_8u test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD4_8u test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD4_8u test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD4_8u test Id: 108 - MSUBS
OK   UME::SIMD::SIMD4_8u test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 110 - SUBVA
OK   UME::SIMD::SIMD4_8u test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD4_8u test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD4_8u test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD4_8u test Id: 114 - SUBSA
OK   UME::SIMD::SIMD4_8u test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD4_8u test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD4_8u test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD4_8u test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD4_8u test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD4_8u test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD4_8u test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD4_8u test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD4_8u test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD4_8u test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD4_8u test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD4_8u test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD4_8u test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD4_8u test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD4_8u test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD4_8u test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD4_8u test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD4_8u test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD4_8u test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD4_8u test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD4_8u test Id: 137 - MULV
OK   UME::SIMD::SIMD4_8u test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD4_8u test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD4_8u test Id: 140 - MMULV
OK   UME::SIMD::SIMD4_8u test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD4_8u test Id: 142 - MULS
OK   UME::SIMD::SIMD4_8u test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 146 - MMULS
OK   UME::SIMD::SIMD4_8u test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 148 - MULVA
OK   UME::SIMD::SIMD4_8u test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD4_8u test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD4_8u test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD4_8u test Id: 152 - MMULVA
OK   UME::SIMD::SIMD4_8u test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_8u test Id: 154 - MULSA
OK   UME::SIMD::SIMD4_8u test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD4_8u test Id: 156 - MMULSA
OK   UME::SIMD::SIMD4_8u test Id: 157 - DIVV
OK   UME::SIMD::SIMD4_8u test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD4_8u test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD4_8u test Id: 160 - MDIVV
OK   UME::SIMD::SIMD4_8u test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD4_8u test Id: 162 - DIVS
OK   UME::SIMD::SIMD4_8u test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 165 - MDIVS
OK   UME::SIMD::SIMD4_8u test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 167 - DIVVA
OK   UME::SIMD::SIMD4_8u test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD4_8u test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD4_8u test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD4_8u test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD4_8u test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_8u test Id: 173 - DIVSA
OK   UME::SIMD::SIMD4_8u test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD4_8u test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD4_8u test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD4_8u test Id: 177 - RCP
OK   UME::SIMD::SIMD4_8u test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD4_8u test Id: 179 - MRCP
OK   UME::SIMD::SIMD4_8u test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD4_8u test Id: 181 - RCPS
OK   UME::SIMD::SIMD4_8u test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD4_8u test Id: 184 - MRCPS
OK   UME::SIMD::SIMD4_8u test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD4_8u test Id: 186 - RCPA
OK   UME::SIMD::SIMD4_8u test Id: 187 - MRCPA
OK   UME::SIMD::SIMD4_8u test Id: 188 - RCPSA
OK   UME::SIMD::SIMD4_8u test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD4_8u test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD4_8u test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD4_8u test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD4_8u test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD4_8u test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD4_8u test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD4_8u test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD4_8u test Id: 201 - CMPNES
OK   UME::SIMD::SIMD4_8u test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD4_8u test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD4_8u test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD4_8u test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD4_8u test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD4_8u test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD4_8u test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD4_8u test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD4_8u test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD4_8u test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD4_8u test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD4_8u test Id: 225 - CMPGES
OK   UME::SIMD::SIMD4_8u test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD4_8u test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD4_8u test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD4_8u test Id: 233 - CMPLES
OK   UME::SIMD::SIMD4_8u test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 238 - CMPEV
OK   UME::SIMD::SIMD4_8u test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD4_8u test Id: 240 - CMPES
OK   UME::SIMD::SIMD4_8u test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 243 - HADD
OK   UME::SIMD::SIMD4_8u test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD4_8u test Id: 245 - HADD gen
OK   UME::SIMD::SIMD4_8u test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD4_8u test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD4_8u test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD4_8u test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD4_8u test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD4_8u test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD4_8u test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD4_8u test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD4_8u test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD4_8u test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD4_8u test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD4_8u test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD4_8u test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD4_8u test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD4_8u test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD4_8u test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD4_8u test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD4_8u test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD4_8u test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD4_8u test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD4_8u test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD4_8u test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD4_8u test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD4_8u test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD4_8u test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD4_8u test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD4_8u test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD4_8u test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD4_8u test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD4_8u test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD4_8u test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD4_8u test Id: 277 - MAXV
OK   UME::SIMD::SIMD4_8u test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD4_8u test Id: 279 - MMAXV
OK   UME::SIMD::SIMD4_8u test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD4_8u test Id: 281 - MAXS
OK   UME::SIMD::SIMD4_8u test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 284 - MMAXS
OK   UME::SIMD::SIMD4_8u test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 286 - MAXVA
OK   UME::SIMD::SIMD4_8u test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD4_8u test Id: 288 - MAXSA
OK   UME::SIMD::SIMD4_8u test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD4_8u test Id: 290 - MINV
OK   UME::SIMD::SIMD4_8u test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD4_8u test Id: 292 - MMINV
OK   UME::SIMD::SIMD4_8u test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD4_8u test Id: 294 - MINS
OK   UME::SIMD::SIMD4_8u test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD4_8u test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD4_8u test Id: 297 - MMINS
OK   UME::SIMD::SIMD4_8u test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 299 - MINVA
OK   UME::SIMD::SIMD4_8u test Id: 300 - MMINVA
OK   UME::SIMD::SIMD4_8u test Id: 301 - MINSA
OK   UME::SIMD::SIMD4_8u test Id: 302 - MMINSA
OK   UME::SIMD::SIMD4_8u test Id: 303 - HMAX
OK   UME::SIMD::SIMD4_8u test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD4_8u test Id: 305 - HMAX
OK   UME::SIMD::SIMD4_8u test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD4_8u test Id: 307 - MHMAX
OK   UME::SIMD::SIMD4_8u test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD4_8u test Id: 309 - IMAX
OK   UME::SIMD::SIMD4_8u test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD4_8u test Id: 311 - MIMAX
OK   UME::SIMD::SIMD4_8u test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD4_8u test Id: 313 - HMIN
OK   UME::SIMD::SIMD4_8u test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD4_8u test Id: 315 - HMIN
OK   UME::SIMD::SIMD4_8u test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD4_8u test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD4_8u test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD4_8u test Id: 319 - IMIN
OK   UME::SIMD::SIMD4_8u test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD4_8u test Id: 321 - MIMIN
OK   UME::SIMD::SIMD4_8u test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD4_8u test Id: 323 - REMV gen
OK   UME::SIMD::SIMD4_8u test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD4_8u test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD4_8u test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD4_8u test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD4_8u test Id: 328 - REMS gen
OK   UME::SIMD::SIMD4_8u test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD4_8u test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD4_8u test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD4_8u test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD4_8u test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD4_8u test Id: 334 - LORV gen
OK   UME::SIMD::SIMD4_8u test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD4_8u test Id: 336 - BANDV
OK   UME::SIMD::SIMD4_8u test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD4_8u test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD4_8u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD4_8u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD4_8u test Id: 341 - BANDS
OK   UME::SIMD::SIMD4_8u test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 346 - MBANDS
OK   UME::SIMD::SIMD4_8u test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 348 - BANDVA
OK   UME::SIMD::SIMD4_8u test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD4_8u test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD4_8u test Id: 351 - BANDSA
OK   UME::SIMD::SIMD4_8u test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD4_8u test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD4_8u test Id: 354 - BORV
OK   UME::SIMD::SIMD4_8u test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD4_8u test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD4_8u test Id: 357 - MBORV
OK   UME::SIMD::SIMD4_8u test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD4_8u test Id: 359 - BORS
OK   UME::SIMD::SIMD4_8u test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 364 - MBORS
OK   UME::SIMD::SIMD4_8u test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 366 - BORVA
OK   UME::SIMD::SIMD4_8u test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD4_8u test Id: 368 - MBORVA
OK   UME::SIMD::SIMD4_8u test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD4_8u test Id: 370 - BORSA
OK   UME::SIMD::SIMD4_8u test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD4_8u test Id: 372 - MBORSA
OK   UME::SIMD::SIMD4_8u test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD4_8u test Id: 374 - BXORV
OK   UME::SIMD::SIMD4_8u test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD4_8u test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD4_8u test Id: 377 - MBXORV
OK   UME::SIMD::SIMD4_8u test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD4_8u test Id: 379 - BXORS
OK   UME::SIMD::SIMD4_8u test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 384 - MBXORS
OK   UME::SIMD::SIMD4_8u test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 386 - BXORVA
OK   UME::SIMD::SIMD4_8u test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD4_8u test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD4_8u test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD4_8u test Id: 390 - BXORSA
OK   UME::SIMD::SIMD4_8u test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD4_8u test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD4_8u test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD4_8u test Id: 394 - BNOT
OK   UME::SIMD::SIMD4_8u test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD4_8u test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD4_8u test Id: 397 - MBNOT
OK   UME::SIMD::SIMD4_8u test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD4_8u test Id: 399 - BNOTA
OK   UME::SIMD::SIMD4_8u test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD4_8u test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD4_8u test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD4_8u test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD4_8u test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD4_8u test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD4_8u test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD4_8u test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD4_8u test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD4_8u test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD4_8u test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD4_8u test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD4_8u test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD4_8u test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD4_8u test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD4_8u test Id: 415 - HBAND
OK   UME::SIMD::SIMD4_8u test Id: 416 - HBAND
OK   UME::SIMD::SIMD4_8u test Id: 417 - MHBAND
OK   UME::SIMD::SIMD4_8u test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD4_8u test Id: 419 - HBANDS
OK   UME::SIMD::SIMD4_8u test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD4_8u test Id: 421 - HBOR
OK   UME::SIMD::SIMD4_8u test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD4_8u test Id: 423 - MHBOR
OK   UME::SIMD::SIMD4_8u test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD4_8u test Id: 425 - HBORS
OK   UME::SIMD::SIMD4_8u test Id: 426 - MHBORS
OK   UME::SIMD::SIMD4_8u test Id: 427 - HBXOR
OK   UME::SIMD::SIMD4_8u test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD4_8u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD4_8u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD4_8u test Id: 431 - HBXORS
OK   UME::SIMD::SIMD4_8u test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD4_8u test Id: 433 - GATHERU
OK   UME::SIMD::SIMD4_8u test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD4_8u test Id: 435 - GATHERS
OK   UME::SIMD::SIMD4_8u test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD4_8u test Id: 437 - GATHERV
OK   UME::SIMD::SIMD4_8u test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD4_8u test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD4_8u test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD4_8u test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD4_8u test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD4_8u test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD4_8u test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD4_8u test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD4_8u test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD4_8u test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD4_8u test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD4_8u test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD4_8u test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD4_8u test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD4_8u test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD4_8u test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD4_8u test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD4_8u test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD4_8u test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD4_8u test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD4_8u test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD4_8u test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD4_8u test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD4_8u test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD4_8u test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD4_8u test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD4_8u test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD4_8u test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD4_8u test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD4_8u test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD4_8u test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD4_8u test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD4_8u test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD4_8u test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD4_8u test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD4_8u test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD4_8u test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD4_8u test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD4_8u test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD4_8u test Id: 477 - ROLV
OK   UME::SIMD::SIMD4_8u test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD4_8u test Id: 479 - MROLV
OK   UME::SIMD::SIMD4_8u test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD4_8u test Id: 481 - ROLS
OK   UME::SIMD::SIMD4_8u test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 483 - MROLS
OK   UME::SIMD::SIMD4_8u test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 485 - ROLVA
OK   UME::SIMD::SIMD4_8u test Id: 486 - MROLVA
OK   UME::SIMD::SIMD4_8u test Id: 487 - ROLSA
OK   UME::SIMD::SIMD4_8u test Id: 488 - MROLSA
OK   UME::SIMD::SIMD4_8u test Id: 489 - RORV
OK   UME::SIMD::SIMD4_8u test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD4_8u test Id: 491 - MRORV
OK   UME::SIMD::SIMD4_8u test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD4_8u test Id: 493 - RORS
OK   UME::SIMD::SIMD4_8u test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 495 - MRORS
OK   UME::SIMD::SIMD4_8u test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8u test Id: 497 - RORVA
OK   UME::SIMD::SIMD4_8u test Id: 498 - MRORVA
OK   UME::SIMD::SIMD4_8u test Id: 499 - RORSA
OK   UME::SIMD::SIMD4_8u test Id: 500 - MRORSA
OK   UME::SIMD::SIMD4_8u test Id: 501 - UTOI
OK   UME::SIMD::SIMD4_8u test Id: 502 - PACK
OK   UME::SIMD::SIMD4_8u test Id: 503 - PACKLO
OK   UME::SIMD::SIMD4_8u test Id: 504 - PACKHI
OK   UME::SIMD::SIMD4_8u test Id: 505 - UNPACK
OK   UME::SIMD::SIMD4_8u test Id: 506 - UNPACKLO
OK   UME::SIMD::SIMD4_8u test Id: 507 - UNPACKHi
OK   UME::SIMD::SIMD4_8u test Id: 508 - PROMOTE
OK   UME::SIMD::SIMD4_8i test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD4_8i test Id: 2 - ADDV
OK   UME::SIMD::SIMD4_8i test Id: 3 - ADDV
OK   UME::SIMD::SIMD4_8i test Id: 4 - SET-CONSTR gen
OK   UME::SIMD::SIMD4_8i test Id: 5 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD4_8i test Id: 6 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD4_8i test Id: 7 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD4_8i test Id: 8 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD4_8i test Id: 9 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD4_8i test Id: 10 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD4_8i test Id: 11 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD4_8i test Id: 12 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD4_8i test Id: 13 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD4_8i test Id: 14 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD4_8i test Id: 15 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD4_8i test Id: 16 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD4_8i test Id: 17 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD4_8i test Id: 18 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD4_8i test Id: 19 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD4_8i test Id: 20 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD4_8i test Id: 21 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD4_8i test Id: 22 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD4_8i test Id: 23 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD4_8i test Id: 24 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD4_8i test Id: 25 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD4_8i test Id: 26 - INSERT
OK   UME::SIMD::SIMD4_8i test Id: 27 - INSERT(operator[] =)
OK   UME::SIMD::SIMD4_8i test Id: 28 - EXTRACT
OK   UME::SIMD::SIMD4_8i test Id: 29 - EXTRACT(operator[])
OK   UME::SIMD::SIMD4_8i test Id: 30 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD4_8i test Id: 31 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD4_8i test Id: 32 - ASSIGNV
OK   UME::SIMD::SIMD4_8i test Id: 33 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD4_8i test Id: 34 - MASSIGNV
OK   UME::SIMD::SIMD4_8i test Id: 35 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD4_8i test Id: 36 - ASSIGNS
OK   UME::SIMD::SIMD4_8i test Id: 37 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD4_8i test Id: 38 - MASSIGNS
OK   UME::SIMD::SIMD4_8i test Id: 39 - MASSIGNS
OK   UME::SIMD::SIMD4_8i test Id: 40 - LOAD/STORE
OK   UME::SIMD::SIMD4_8i test Id: 41 - MLOAD
OK   UME::SIMD::SIMD4_8i test Id: 42 - MSTORE
OK   UME::SIMD::SIMD4_8i test Id: 43 - LOADA/STOREA
OK   UME::SIMD::SIMD4_8i test Id: 44 - MLOADA
OK   UME::SIMD::SIMD4_8i test Id: 45 - MSTOREA
OK   UME::SIMD::SIMD4_8i test Id: 46 - SWIZZLE
OK   UME::SIMD::SIMD4_8i test Id: 47 - SORTA
OK   UME::SIMD::SIMD4_8i test Id: 48 - SORTD
OK   UME::SIMD::SIMD4_8i test Id: 49 - BLENDV gen
OK   UME::SIMD::SIMD4_8i test Id: 50 - ADDV
OK   UME::SIMD::SIMD4_8i test Id: 51 - ADDV(operator+)
OK   UME::SIMD::SIMD4_8i test Id: 52 - ADDV(function)
OK   UME::SIMD::SIMD4_8i test Id: 53 - ADDV gen
OK   UME::SIMD::SIMD4_8i test Id: 54 - ADDV(operator+) gen
OK   UME::SIMD::SIMD4_8i test Id: 55 - ADDV(function) gen
OK   UME::SIMD::SIMD4_8i test Id: 56 - MADDV
OK   UME::SIMD::SIMD4_8i test Id: 57 - MADDV(function)
OK   UME::SIMD::SIMD4_8i test Id: 58 - MADDV gen
OK   UME::SIMD::SIMD4_8i test Id: 59 - MADDV(function) gen
OK   UME::SIMD::SIMD4_8i test Id: 60 - ADDS
OK   UME::SIMD::SIMD4_8i test Id: 61 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 62 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 63 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD4_8i test Id: 64 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD4_8i test Id: 65 - ADDS gen
OK   UME::SIMD::SIMD4_8i test Id: 66 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD4_8i test Id: 67 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD4_8i test Id: 68 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD4_8i test Id: 69 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD4_8i test Id: 70 - MADDS
OK   UME::SIMD::SIMD4_8i test Id: 71 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 72 - MADDS gen
OK   UME::SIMD::SIMD4_8i test Id: 73 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD4_8i test Id: 74 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD4_8i test Id: 75 - ADDVA
OK   UME::SIMD::SIMD4_8i test Id: 76 - ADDVA(operator+=)
OK   UME::SIMD::SIMD4_8i test Id: 77 - ADDVA gen
OK   UME::SIMD::SIMD4_8i test Id: 78 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD4_8i test Id: 79 - MADDVA
OK   UME::SIMD::SIMD4_8i test Id: 80 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD4_8i test Id: 81 - ADDSA
OK   UME::SIMD::SIMD4_8i test Id: 82 - ADDSA(operator+=)
OK   UME::SIMD::SIMD4_8i test Id: 83 - MADDSA
OK   UME::SIMD::SIMD4_8i test Id: 84 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD4_8i test Id: 85 - SADDV gen
OK   UME::SIMD::SIMD4_8i test Id: 86 - SADDV(function) gen
OK   UME::SIMD::SIMD4_8i test Id: 87 - POSTINC
OK   UME::SIMD::SIMD4_8i test Id: 88 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD4_8i test Id: 89 - POSTINC(function)
OK   UME::SIMD::SIMD4_8i test Id: 90 - MPOSTINC
OK   UME::SIMD::SIMD4_8i test Id: 91 - MPOSTINC(function)
OK   UME::SIMD::SIMD4_8i test Id: 92 - PREFINC
OK   UME::SIMD::SIMD4_8i test Id: 93 - PREFINC(operator++())
OK   UME::SIMD::SIMD4_8i test Id: 94 - PREFINC(function)
OK   UME::SIMD::SIMD4_8i test Id: 95 - MPREFINC
OK   UME::SIMD::SIMD4_8i test Id: 96 - MPREFINC(function)
OK   UME::SIMD::SIMD4_8i test Id: 97 - SUBV
OK   UME::SIMD::SIMD4_8i test Id: 98 - SUBV(operator-)
OK   UME::SIMD::SIMD4_8i test Id: 99 - SUBV(function)
OK   UME::SIMD::SIMD4_8i test Id: 100 - SUBV gen
OK   UME::SIMD::SIMD4_8i test Id: 101 - SUBV(operator-) gen
OK   UME::SIMD::SIMD4_8i test Id: 102 - SUBV(function) gen
OK   UME::SIMD::SIMD4_8i test Id: 103 - MSUBV
OK   UME::SIMD::SIMD4_8i test Id: 104 - MSUBV(function)
OK   UME::SIMD::SIMD4_8i test Id: 105 - MSUBV gen
OK   UME::SIMD::SIMD4_8i test Id: 106 - MSUBV(function) gen
OK   UME::SIMD::SIMD4_8i test Id: 107 - SUBS gen
OK   UME::SIMD::SIMD4_8i test Id: 108 - SUBS(operator-) gen
OK   UME::SIMD::SIMD4_8i test Id: 109 - SUBS(function) gen
OK   UME::SIMD::SIMD4_8i test Id: 110 - MSUBS
OK   UME::SIMD::SIMD4_8i test Id: 111 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 112 - SUBVA
OK   UME::SIMD::SIMD4_8i test Id: 113 - SUBVA(operator-=)
OK   UME::SIMD::SIMD4_8i test Id: 114 - MSUBVA
OK   UME::SIMD::SIMD4_8i test Id: 115 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD4_8i test Id: 116 - SUBSA
OK   UME::SIMD::SIMD4_8i test Id: 117 - MSUBSA
OK   UME::SIMD::SIMD4_8i test Id: 118 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD4_8i test Id: 119 - SUBFROMV
OK   UME::SIMD::SIMD4_8i test Id: 120 - MSUBFROMV
OK   UME::SIMD::SIMD4_8i test Id: 121 - SUBFROMS
OK   UME::SIMD::SIMD4_8i test Id: 122 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 123 - MSUBFROMS
OK   UME::SIMD::SIMD4_8i test Id: 124 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 125 - SUBFROMVA
OK   UME::SIMD::SIMD4_8i test Id: 126 - MSUBFROMVA
OK   UME::SIMD::SIMD4_8i test Id: 127 - SUBFROMSA
OK   UME::SIMD::SIMD4_8i test Id: 128 - MSUBFROMSA
OK   UME::SIMD::SIMD4_8i test Id: 129 - POSTDEC
OK   UME::SIMD::SIMD4_8i test Id: 130 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD4_8i test Id: 131 - POSTDEC(function)
OK   UME::SIMD::SIMD4_8i test Id: 132 - MPOSTDEC
OK   UME::SIMD::SIMD4_8i test Id: 133 - MPOSTDEC(function)
OK   UME::SIMD::SIMD4_8i test Id: 134 - PREFDEC
OK   UME::SIMD::SIMD4_8i test Id: 135 - PREFDEC(operator--())
OK   UME::SIMD::SIMD4_8i test Id: 136 - PREFDEC(function)
OK   UME::SIMD::SIMD4_8i test Id: 137 - MPREFDEC
OK   UME::SIMD::SIMD4_8i test Id: 138 - MPREFDEC(function)
OK   UME::SIMD::SIMD4_8i test Id: 139 - MULV
OK   UME::SIMD::SIMD4_8i test Id: 140 - MULV(operator*)
OK   UME::SIMD::SIMD4_8i test Id: 141 - MULV(function)
OK   UME::SIMD::SIMD4_8i test Id: 142 - MMULV
OK   UME::SIMD::SIMD4_8i test Id: 143 - MMULV(function)
OK   UME::SIMD::SIMD4_8i test Id: 144 - MULS
OK   UME::SIMD::SIMD4_8i test Id: 145 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 146 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 147 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 148 - MMULS
OK   UME::SIMD::SIMD4_8i test Id: 149 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 150 - MULVA
OK   UME::SIMD::SIMD4_8i test Id: 151 - MULVA(operator*)
OK   UME::SIMD::SIMD4_8i test Id: 152 - MULVA gen
OK   UME::SIMD::SIMD4_8i test Id: 153 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD4_8i test Id: 154 - MMULVA
OK   UME::SIMD::SIMD4_8i test Id: 155 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_8i test Id: 156 - MULSA
OK   UME::SIMD::SIMD4_8i test Id: 157 - MULSA(operator*=)
OK   UME::SIMD::SIMD4_8i test Id: 158 - MMULSA
OK   UME::SIMD::SIMD4_8i test Id: 159 - DIVV
OK   UME::SIMD::SIMD4_8i test Id: 160 - DIVV(operator/)
OK   UME::SIMD::SIMD4_8i test Id: 161 - DIVV(function)
OK   UME::SIMD::SIMD4_8i test Id: 162 - MDIVV
OK   UME::SIMD::SIMD4_8i test Id: 163 - MDIVV(function)
OK   UME::SIMD::SIMD4_8i test Id: 164 - DIVS
OK   UME::SIMD::SIMD4_8i test Id: 165 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 166 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 167 - MDIVS
OK   UME::SIMD::SIMD4_8i test Id: 168 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 169 - DIVVA
OK   UME::SIMD::SIMD4_8i test Id: 170 - DIVVA(operator/=)
OK   UME::SIMD::SIMD4_8i test Id: 171 - DIVVA gen
OK   UME::SIMD::SIMD4_8i test Id: 172 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD4_8i test Id: 173 - MDIVVA
OK   UME::SIMD::SIMD4_8i test Id: 174 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_8i test Id: 175 - DIVSA
OK   UME::SIMD::SIMD4_8i test Id: 176 - DIVSA(operator/=)
OK   UME::SIMD::SIMD4_8i test Id: 177 - MDIVSA
OK   UME::SIMD::SIMD4_8i test Id: 178 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD4_8i test Id: 179 - RCP
OK   UME::SIMD::SIMD4_8i test Id: 180 - RCP(function)
OK   UME::SIMD::SIMD4_8i test Id: 181 - MRCP
OK   UME::SIMD::SIMD4_8i test Id: 182 - MRCP(function)
OK   UME::SIMD::SIMD4_8i test Id: 183 - RCPS
OK   UME::SIMD::SIMD4_8i test Id: 184 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 185 - RCPS(function)
OK   UME::SIMD::SIMD4_8i test Id: 186 - MRCPS
OK   UME::SIMD::SIMD4_8i test Id: 187 - MRCPS (function)
OK   UME::SIMD::SIMD4_8i test Id: 188 - RCPA
OK   UME::SIMD::SIMD4_8i test Id: 189 - MRCPA
OK   UME::SIMD::SIMD4_8i test Id: 190 - RCPSA
OK   UME::SIMD::SIMD4_8i test Id: 191 - MRCPSA
OK   UME::SIMD::SIMD4_8i test Id: 192 - CMPEQV
OK   UME::SIMD::SIMD4_8i test Id: 193 - CMPEQV(operator==)
OK   UME::SIMD::SIMD4_8i test Id: 194 - CMPEQV(function)
OK   UME::SIMD::SIMD4_8i test Id: 195 - CMPEQS
OK   UME::SIMD::SIMD4_8i test Id: 196 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 197 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 198 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 199 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 200 - CMPNEV
OK   UME::SIMD::SIMD4_8i test Id: 201 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD4_8i test Id: 202 - CMPNEV(function)
OK   UME::SIMD::SIMD4_8i test Id: 203 - CMPNES
OK   UME::SIMD::SIMD4_8i test Id: 204 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 205 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 206 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 207 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 208 - CMPGTV
OK   UME::SIMD::SIMD4_8i test Id: 209 - CMPGTV(operator>)
OK   UME::SIMD::SIMD4_8i test Id: 210 - CMPGTV(function)
OK   UME::SIMD::SIMD4_8i test Id: 211 - CMPGTS
OK   UME::SIMD::SIMD4_8i test Id: 212 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 213 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 214 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 215 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 216 - CMPLTV
OK   UME::SIMD::SIMD4_8i test Id: 217 - CMPLTV(operator<)
OK   UME::SIMD::SIMD4_8i test Id: 218 - CMPLTV(function)
OK   UME::SIMD::SIMD4_8i test Id: 219 - CMPLTS
OK   UME::SIMD::SIMD4_8i test Id: 220 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 221 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 222 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 223 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 224 - CMPGEV
OK   UME::SIMD::SIMD4_8i test Id: 225 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD4_8i test Id: 226 - CMPGEV(function)
OK   UME::SIMD::SIMD4_8i test Id: 227 - CMPGES
OK   UME::SIMD::SIMD4_8i test Id: 228 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 229 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 230 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 231 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 232 - CMPLEV
OK   UME::SIMD::SIMD4_8i test Id: 233 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD4_8i test Id: 234 - CMPLEV(function)
OK   UME::SIMD::SIMD4_8i test Id: 235 - CMPLES
OK   UME::SIMD::SIMD4_8i test Id: 236 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 237 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 238 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 239 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 240 - CMPEV
OK   UME::SIMD::SIMD4_8i test Id: 241 - CMPEV(function)
OK   UME::SIMD::SIMD4_8i test Id: 242 - CMPES
OK   UME::SIMD::SIMD4_8i test Id: 243 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 244 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 245 - HADD
OK   UME::SIMD::SIMD4_8i test Id: 246 - HADD(function)
OK   UME::SIMD::SIMD4_8i test Id: 247 - HADD gen
OK   UME::SIMD::SIMD4_8i test Id: 248 - HADD(function) gen
OK   UME::SIMD::SIMD4_8i test Id: 249 - MHADD gen
OK   UME::SIMD::SIMD4_8i test Id: 250 - MHADD(function) gen
OK   UME::SIMD::SIMD4_8i test Id: 251 - HADDS gen
OK   UME::SIMD::SIMD4_8i test Id: 252 - HADDS(function) gen
OK   UME::SIMD::SIMD4_8i test Id: 253 - MHADD gen
OK   UME::SIMD::SIMD4_8i test Id: 254 - MHADDS(function) gen
OK   UME::SIMD::SIMD4_8i test Id: 255 - HMUL gen
OK   UME::SIMD::SIMD4_8i test Id: 256 - HMUL(function) gen
OK   UME::SIMD::SIMD4_8i test Id: 257 - MHMUL gen
OK   UME::SIMD::SIMD4_8i test Id: 258 - MHMUL(function) gen
OK   UME::SIMD::SIMD4_8i test Id: 259 - HMULS gen
OK   UME::SIMD::SIMD4_8i test Id: 260 - HMULS(function) gen
OK   UME::SIMD::SIMD4_8i test Id: 261 - MHMUL gen
OK   UME::SIMD::SIMD4_8i test Id: 262 - MHMULS(function) gen
OK   UME::SIMD::SIMD4_8i test Id: 263 - FMULADDV
OK   UME::SIMD::SIMD4_8i test Id: 264 - FMULADDV(function)
OK   UME::SIMD::SIMD4_8i test Id: 265 - MFMULADDV
OK   UME::SIMD::SIMD4_8i test Id: 266 - MFMULADDV(function)
OK   UME::SIMD::SIMD4_8i test Id: 267 - FMULSUBV
OK   UME::SIMD::SIMD4_8i test Id: 268 - FMULSUBV(function)
OK   UME::SIMD::SIMD4_8i test Id: 269 - MFMULSUBV
OK   UME::SIMD::SIMD4_8i test Id: 270 - MFMULSUBV(function)
OK   UME::SIMD::SIMD4_8i test Id: 271 - FADDMULV
OK   UME::SIMD::SIMD4_8i test Id: 272 - FADDMULV(function)
OK   UME::SIMD::SIMD4_8i test Id: 273 - MFADDMULV
OK   UME::SIMD::SIMD4_8i test Id: 274 - MFADDMULV(function)
OK   UME::SIMD::SIMD4_8i test Id: 275 - FSUBMULV
OK   UME::SIMD::SIMD4_8i test Id: 276 - FSUBMULV(function)
OK   UME::SIMD::SIMD4_8i test Id: 277 - MFSUBMULV
OK   UME::SIMD::SIMD4_8i test Id: 278 - MFSUBMULV(function)
OK   UME::SIMD::SIMD4_8i test Id: 279 - MAXV
OK   UME::SIMD::SIMD4_8i test Id: 280 - MAXV(function)
OK   UME::SIMD::SIMD4_8i test Id: 281 - MMAXV
OK   UME::SIMD::SIMD4_8i test Id: 282 - MMAXV(function)
OK   UME::SIMD::SIMD4_8i test Id: 283 - MAXS
OK   UME::SIMD::SIMD4_8i test Id: 284 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 285 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 286 - MMAXS
OK   UME::SIMD::SIMD4_8i test Id: 287 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 288 - MAXVA
OK   UME::SIMD::SIMD4_8i test Id: 289 - MMAXVA
OK   UME::SIMD::SIMD4_8i test Id: 290 - MAXSA
OK   UME::SIMD::SIMD4_8i test Id: 291 - MMAXSA
OK   UME::SIMD::SIMD4_8i test Id: 292 - MINV
OK   UME::SIMD::SIMD4_8i test Id: 293 - MINV(function)
OK   UME::SIMD::SIMD4_8i test Id: 294 - MMINV
OK   UME::SIMD::SIMD4_8i test Id: 295 - MMINV(function)
OK   UME::SIMD::SIMD4_8i test Id: 296 - MINS
OK   UME::SIMD::SIMD4_8i test Id: 297 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD4_8i test Id: 298 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD4_8i test Id: 299 - MMINS
OK   UME::SIMD::SIMD4_8i test Id: 300 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 301 - MINVA
OK   UME::SIMD::SIMD4_8i test Id: 302 - MMINVA
OK   UME::SIMD::SIMD4_8i test Id: 303 - MINSA
OK   UME::SIMD::SIMD4_8i test Id: 304 - MMINSA
OK   UME::SIMD::SIMD4_8i test Id: 305 - HMAX
OK   UME::SIMD::SIMD4_8i test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD4_8i test Id: 307 - HMAX
OK   UME::SIMD::SIMD4_8i test Id: 308 - HMAX(function)
OK   UME::SIMD::SIMD4_8i test Id: 309 - MHMAX
OK   UME::SIMD::SIMD4_8i test Id: 310 - MHMAX(function)
OK   UME::SIMD::SIMD4_8i test Id: 311 - IMAX
OK   UME::SIMD::SIMD4_8i test Id: 312 - IMAX(function)
OK   UME::SIMD::SIMD4_8i test Id: 313 - MIMAX
OK   UME::SIMD::SIMD4_8i test Id: 314 - MIMAX(function)
OK   UME::SIMD::SIMD4_8i test Id: 315 - HMIN
OK   UME::SIMD::SIMD4_8i test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD4_8i test Id: 317 - HMIN
OK   UME::SIMD::SIMD4_8i test Id: 318 - HMIN(function)
OK   UME::SIMD::SIMD4_8i test Id: 319 - MHMIN gen
OK   UME::SIMD::SIMD4_8i test Id: 320 - MHMIN(function) gen
OK   UME::SIMD::SIMD4_8i test Id: 321 - IMIN
OK   UME::SIMD::SIMD4_8i test Id: 322 - IMIN(function)
OK   UME::SIMD::SIMD4_8i test Id: 323 - MIMIN
OK   UME::SIMD::SIMD4_8i test Id: 324 - MIMIN(function)
OK   UME::SIMD::SIMD4_8i test Id: 325 - REMV gen
OK   UME::SIMD::SIMD4_8i test Id: 326 - REMV(operator%) gen
OK   UME::SIMD::SIMD4_8i test Id: 327 - REMV(function) gen
OK   UME::SIMD::SIMD4_8i test Id: 328 - MREMV gen
OK   UME::SIMD::SIMD4_8i test Id: 329 - MREMV(function) gen
OK   UME::SIMD::SIMD4_8i test Id: 330 - REMS gen
OK   UME::SIMD::SIMD4_8i test Id: 331 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD4_8i test Id: 332 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD4_8i test Id: 333 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD4_8i test Id: 334 - LANDV gen
OK   UME::SIMD::SIMD4_8i test Id: 335 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD4_8i test Id: 336 - LORV gen
OK   UME::SIMD::SIMD4_8i test Id: 337 - LORV gen (operator ||)
OK   UME::SIMD::SIMD4_8i test Id: 338 - BANDV
OK   UME::SIMD::SIMD4_8i test Id: 339 - BANDV(operator&)
OK   UME::SIMD::SIMD4_8i test Id: 340 - BANDV(function)
OK   UME::SIMD::SIMD4_8i test Id: 341 - MBANDV
OK   UME::SIMD::SIMD4_8i test Id: 342 - MBANDV
OK   UME::SIMD::SIMD4_8i test Id: 343 - BANDS
OK   UME::SIMD::SIMD4_8i test Id: 344 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 345 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 346 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 347 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 348 - MBANDS
OK   UME::SIMD::SIMD4_8i test Id: 349 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 350 - BANDVA
OK   UME::SIMD::SIMD4_8i test Id: 351 - MBANDVA
OK   UME::SIMD::SIMD4_8i test Id: 352 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD4_8i test Id: 353 - BANDSA
OK   UME::SIMD::SIMD4_8i test Id: 354 - MBANDSA
OK   UME::SIMD::SIMD4_8i test Id: 355 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD4_8i test Id: 356 - BORV
OK   UME::SIMD::SIMD4_8i test Id: 357 - BORV(operator |)
OK   UME::SIMD::SIMD4_8i test Id: 358 - BORV(function)
OK   UME::SIMD::SIMD4_8i test Id: 359 - MBORV
OK   UME::SIMD::SIMD4_8i test Id: 360 - MBORV(function)
OK   UME::SIMD::SIMD4_8i test Id: 361 - BORS
OK   UME::SIMD::SIMD4_8i test Id: 362 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 363 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 364 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 365 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 366 - MBORS
OK   UME::SIMD::SIMD4_8i test Id: 367 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 368 - BORVA
OK   UME::SIMD::SIMD4_8i test Id: 369 - BORVA(operator|=)
OK   UME::SIMD::SIMD4_8i test Id: 370 - MBORVA
OK   UME::SIMD::SIMD4_8i test Id: 371 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD4_8i test Id: 372 - BORSA
OK   UME::SIMD::SIMD4_8i test Id: 373 - BORSA(operator|=)
OK   UME::SIMD::SIMD4_8i test Id: 374 - MBORSA
OK   UME::SIMD::SIMD4_8i test Id: 375 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD4_8i test Id: 376 - BXORV
OK   UME::SIMD::SIMD4_8i test Id: 377 - BXORV(operator^
OK   UME::SIMD::SIMD4_8i test Id: 378 - BXORV(function
OK   UME::SIMD::SIMD4_8i test Id: 379 - MBXORV
OK   UME::SIMD::SIMD4_8i test Id: 380 - MBXORV(function)
OK   UME::SIMD::SIMD4_8i test Id: 381 - BXORS
OK   UME::SIMD::SIMD4_8i test Id: 382 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 383 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 384 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 385 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 386 - MBXORS
OK   UME::SIMD::SIMD4_8i test Id: 387 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 388 - BXORVA
OK   UME::SIMD::SIMD4_8i test Id: 389 - BXORVA(operator^=)
OK   UME::SIMD::SIMD4_8i test Id: 390 - MBXORVA
OK   UME::SIMD::SIMD4_8i test Id: 391 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD4_8i test Id: 392 - BXORSA
OK   UME::SIMD::SIMD4_8i test Id: 393 - BXORSA(operator^=)
OK   UME::SIMD::SIMD4_8i test Id: 394 - MBXORSA
OK   UME::SIMD::SIMD4_8i test Id: 395 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD4_8i test Id: 396 - BNOT
OK   UME::SIMD::SIMD4_8i test Id: 397 - BNOT(operator!)
OK   UME::SIMD::SIMD4_8i test Id: 398 - BNOT(function)
OK   UME::SIMD::SIMD4_8i test Id: 399 - MBNOT
OK   UME::SIMD::SIMD4_8i test Id: 400 - MBNOT(function)
OK   UME::SIMD::SIMD4_8i test Id: 401 - BNOTA
OK   UME::SIMD::SIMD4_8i test Id: 402 - MBNOTA
OK   UME::SIMD::SIMD4_8i test Id: 403 - BANDNOTV
OK   UME::SIMD::SIMD4_8i test Id: 404 - BANDNOTV (function)
OK   UME::SIMD::SIMD4_8i test Id: 405 - MBANDNOTV
OK   UME::SIMD::SIMD4_8i test Id: 406 - MBANDNOTV (function)
OK   UME::SIMD::SIMD4_8i test Id: 407 - BANDNOTS
OK   UME::SIMD::SIMD4_8i test Id: 408 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD4_8i test Id: 409 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD4_8i test Id: 410 - MBANDNOTS
OK   UME::SIMD::SIMD4_8i test Id: 411 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD4_8i test Id: 412 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD4_8i test Id: 413 - BANDNOTVA
OK   UME::SIMD::SIMD4_8i test Id: 414 - MBANDNOTVA
OK   UME::SIMD::SIMD4_8i test Id: 415 - BANDNOTSA
OK   UME::SIMD::SIMD4_8i test Id: 416 - MBANDNOTSA
OK   UME::SIMD::SIMD4_8i test Id: 417 - HBAND
OK   UME::SIMD::SIMD4_8i test Id: 418 - HBAND
OK   UME::SIMD::SIMD4_8i test Id: 419 - MHBAND
OK   UME::SIMD::SIMD4_8i test Id: 420 - MHBAND(function)
OK   UME::SIMD::SIMD4_8i test Id: 421 - HBANDS
OK   UME::SIMD::SIMD4_8i test Id: 422 - MHBANDS
OK   UME::SIMD::SIMD4_8i test Id: 423 - HBOR
OK   UME::SIMD::SIMD4_8i test Id: 424 - HBOR(function)
OK   UME::SIMD::SIMD4_8i test Id: 425 - MHBOR
OK   UME::SIMD::SIMD4_8i test Id: 426 - MHBOR(function)
OK   UME::SIMD::SIMD4_8i test Id: 427 - HBORS
OK   UME::SIMD::SIMD4_8i test Id: 428 - MHBORS
OK   UME::SIMD::SIMD4_8i test Id: 429 - HBXOR
OK   UME::SIMD::SIMD4_8i test Id: 430 - HBXOR(function)
OK   UME::SIMD::SIMD4_8i test Id: 431 - MHBXOR
OK   UME::SIMD::SIMD4_8i test Id: 432 - MHBXOR
OK   UME::SIMD::SIMD4_8i test Id: 433 - HBXORS
OK   UME::SIMD::SIMD4_8i test Id: 434 - MHBXORS
OK   UME::SIMD::SIMD4_8i test Id: 435 - GATHERU
OK   UME::SIMD::SIMD4_8i test Id: 436 - MGATHERU
OK   UME::SIMD::SIMD4_8i test Id: 437 - GATHERS
OK   UME::SIMD::SIMD4_8i test Id: 438 - MGATHERS
OK   UME::SIMD::SIMD4_8i test Id: 439 - GATHERV
OK   UME::SIMD::SIMD4_8i test Id: 440 - MGATHERV
OK   UME::SIMD::SIMD4_8i test Id: 441 - SCATTERU
OK   UME::SIMD::SIMD4_8i test Id: 442 - MSCATTERU
OK   UME::SIMD::SIMD4_8i test Id: 443 - SCATTERS
OK   UME::SIMD::SIMD4_8i test Id: 444 - MSCATTERS
OK   UME::SIMD::SIMD4_8i test Id: 445 - SCATTERV
OK   UME::SIMD::SIMD4_8i test Id: 446 - MSCATTERV
OK   UME::SIMD::SIMD4_8i test Id: 447 - LSHV gen
OK   UME::SIMD::SIMD4_8i test Id: 448 - LSHV (function) gen
OK   UME::SIMD::SIMD4_8i test Id: 449 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD4_8i test Id: 450 - MLSHV gen
OK   UME::SIMD::SIMD4_8i test Id: 451 - MLSHV (function) gen
OK   UME::SIMD::SIMD4_8i test Id: 452 - LSHS gen
OK   UME::SIMD::SIMD4_8i test Id: 453 - LSHS (function) gen
OK   UME::SIMD::SIMD4_8i test Id: 454 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD4_8i test Id: 455 - MLSHS gen
OK   UME::SIMD::SIMD4_8i test Id: 456 - MLSHS (function) gen
OK   UME::SIMD::SIMD4_8i test Id: 457 - LSHVA gen
OK   UME::SIMD::SIMD4_8i test Id: 458 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD4_8i test Id: 459 - MLSHVA gen
OK   UME::SIMD::SIMD4_8i test Id: 460 - LSHSA gen
OK   UME::SIMD::SIMD4_8i test Id: 461 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD4_8i test Id: 462 - MLSHSA gen
OK   UME::SIMD::SIMD4_8i test Id: 463 - RSHV gen
OK   UME::SIMD::SIMD4_8i test Id: 464 - RSHV (function) gen
OK   UME::SIMD::SIMD4_8i test Id: 465 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD4_8i test Id: 466 - MRSHV gen
OK   UME::SIMD::SIMD4_8i test Id: 467 - MRSHV (function) gen
OK   UME::SIMD::SIMD4_8i test Id: 468 - RSHS gen
OK   UME::SIMD::SIMD4_8i test Id: 469 - RSHS (function) gen
OK   UME::SIMD::SIMD4_8i test Id: 470 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD4_8i test Id: 471 - MRSHS gen
OK   UME::SIMD::SIMD4_8i test Id: 472 - MRSHS (function) gen
OK   UME::SIMD::SIMD4_8i test Id: 473 - RSHVA gen
OK   UME::SIMD::SIMD4_8i test Id: 474 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD4_8i test Id: 475 - MRSHVA gen
OK   UME::SIMD::SIMD4_8i test Id: 476 - RSHSA gen
OK   UME::SIMD::SIMD4_8i test Id: 477 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD4_8i test Id: 478 - MRSHSA gen
OK   UME::SIMD::SIMD4_8i test Id: 479 - ROLV
OK   UME::SIMD::SIMD4_8i test Id: 480 - ROLV(function)
OK   UME::SIMD::SIMD4_8i test Id: 481 - MROLV
OK   UME::SIMD::SIMD4_8i test Id: 482 - MROLV(function)
OK   UME::SIMD::SIMD4_8i test Id: 483 - ROLS
OK   UME::SIMD::SIMD4_8i test Id: 484 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 485 - MROLS
OK   UME::SIMD::SIMD4_8i test Id: 486 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 487 - ROLVA
OK   UME::SIMD::SIMD4_8i test Id: 488 - MROLVA
OK   UME::SIMD::SIMD4_8i test Id: 489 - ROLSA
OK   UME::SIMD::SIMD4_8i test Id: 490 - MROLSA
OK   UME::SIMD::SIMD4_8i test Id: 491 - RORV
OK   UME::SIMD::SIMD4_8i test Id: 492 - RORV(function)
OK   UME::SIMD::SIMD4_8i test Id: 493 - MRORV
OK   UME::SIMD::SIMD4_8i test Id: 494 - MRORV(function)
OK   UME::SIMD::SIMD4_8i test Id: 495 - RORS
OK   UME::SIMD::SIMD4_8i test Id: 496 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 497 - MRORS
OK   UME::SIMD::SIMD4_8i test Id: 498 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_8i test Id: 499 - RORVA
OK   UME::SIMD::SIMD4_8i test Id: 500 - MRORVA
OK   UME::SIMD::SIMD4_8i test Id: 501 - RORSA
OK   UME::SIMD::SIMD4_8i test Id: 502 - MRORSA
OK   UME::SIMD::SIMD4_8i test Id: 503 - NEG
OK   UME::SIMD::SIMD4_8i test Id: 504 - NEG(operator-)
OK   UME::SIMD::SIMD4_8i test Id: 505 - NEG(function)
OK   UME::SIMD::SIMD4_8i test Id: 506 - MNEG
OK   UME::SIMD::SIMD4_8i test Id: 507 - MNEG(function)
OK   UME::SIMD::SIMD4_8i test Id: 508 - NEGA
OK   UME::SIMD::SIMD4_8i test Id: 509 - MNEGA
OK   UME::SIMD::SIMD4_8i test Id: 510 - ABS
OK   UME::SIMD::SIMD4_8i test Id: 511 - ABS(function)
OK   UME::SIMD::SIMD4_8i test Id: 512 - MABS
OK   UME::SIMD::SIMD4_8i test Id: 513 - MABS(function)
OK   UME::SIMD::SIMD4_8i test Id: 514 - ABSA
OK   UME::SIMD::SIMD4_8i test Id: 515 - MABSA
OK   UME::SIMD::SIMD4_8i test Id: 516 - COPYSIGN gen
OK   UME::SIMD::SIMD4_8i test Id: 517 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD4_8i test Id: 518 - ITOU
OK   UME::SIMD::SIMD4_8i test Id: 519 - PACK
OK   UME::SIMD::SIMD4_8i test Id: 520 - PACKLO
OK   UME::SIMD::SIMD4_8i test Id: 521 - PACKHI
OK   UME::SIMD::SIMD4_8i test Id: 522 - UNPACK
OK   UME::SIMD::SIMD4_8i test Id: 523 - UNPACKLO
OK   UME::SIMD::SIMD4_8i test Id: 524 - UNPACKHi
OK   UME::SIMD::SIMD4_8i test Id: 525 - PROMOTE
OK   UME::SIMD::SIMD2_16u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD2_16u test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD2_16u test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD2_16u test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD2_16u test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD2_16u test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD2_16u test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD2_16u test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD2_16u test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD2_16u test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD2_16u test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD2_16u test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD2_16u test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD2_16u test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD2_16u test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD2_16u test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD2_16u test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD2_16u test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD2_16u test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD2_16u test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD2_16u test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD2_16u test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD2_16u test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD2_16u test Id: 24 - INSERT
OK   UME::SIMD::SIMD2_16u test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD2_16u test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD2_16u test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD2_16u test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD2_16u test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD2_16u test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD2_16u test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD2_16u test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD2_16u test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD2_16u test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD2_16u test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD2_16u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD2_16u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD2_16u test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD2_16u test Id: 39 - MLOAD
OK   UME::SIMD::SIMD2_16u test Id: 40 - MSTORE
OK   UME::SIMD::SIMD2_16u test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD2_16u test Id: 42 - MLOADA
OK   UME::SIMD::SIMD2_16u test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD2_16u test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD2_16u test Id: 45 - SORTA
OK   UME::SIMD::SIMD2_16u test Id: 46 - SORTD
OK   UME::SIMD::SIMD2_16u test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD2_16u test Id: 48 - ADDV
OK   UME::SIMD::SIMD2_16u test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD2_16u test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD2_16u test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD2_16u test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD2_16u test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD2_16u test Id: 54 - MADDV
OK   UME::SIMD::SIMD2_16u test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD2_16u test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD2_16u test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD2_16u test Id: 58 - ADDS
OK   UME::SIMD::SIMD2_16u test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD2_16u test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD2_16u test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD2_16u test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD2_16u test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD2_16u test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD2_16u test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD2_16u test Id: 68 - MADDS
OK   UME::SIMD::SIMD2_16u test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD2_16u test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD2_16u test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD2_16u test Id: 73 - ADDVA
OK   UME::SIMD::SIMD2_16u test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD2_16u test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD2_16u test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD2_16u test Id: 77 - MADDVA
OK   UME::SIMD::SIMD2_16u test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD2_16u test Id: 79 - ADDSA
OK   UME::SIMD::SIMD2_16u test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD2_16u test Id: 81 - MADDSA
OK   UME::SIMD::SIMD2_16u test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD2_16u test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD2_16u test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD2_16u test Id: 85 - POSTINC
OK   UME::SIMD::SIMD2_16u test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD2_16u test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD2_16u test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD2_16u test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD2_16u test Id: 90 - PREFINC
OK   UME::SIMD::SIMD2_16u test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD2_16u test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD2_16u test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD2_16u test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD2_16u test Id: 95 - SUBV
OK   UME::SIMD::SIMD2_16u test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD2_16u test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD2_16u test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD2_16u test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD2_16u test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD2_16u test Id: 101 - MSUBV
OK   UME::SIMD::SIMD2_16u test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD2_16u test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD2_16u test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD2_16u test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD2_16u test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD2_16u test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD2_16u test Id: 108 - MSUBS
OK   UME::SIMD::SIMD2_16u test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 110 - SUBVA
OK   UME::SIMD::SIMD2_16u test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD2_16u test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD2_16u test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD2_16u test Id: 114 - SUBSA
OK   UME::SIMD::SIMD2_16u test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD2_16u test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD2_16u test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD2_16u test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD2_16u test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD2_16u test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD2_16u test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD2_16u test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD2_16u test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD2_16u test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD2_16u test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD2_16u test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD2_16u test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD2_16u test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD2_16u test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD2_16u test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD2_16u test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD2_16u test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD2_16u test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD2_16u test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD2_16u test Id: 137 - MULV
OK   UME::SIMD::SIMD2_16u test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD2_16u test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD2_16u test Id: 140 - MMULV
OK   UME::SIMD::SIMD2_16u test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD2_16u test Id: 142 - MULS
OK   UME::SIMD::SIMD2_16u test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 146 - MMULS
OK   UME::SIMD::SIMD2_16u test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 148 - MULVA
OK   UME::SIMD::SIMD2_16u test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD2_16u test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD2_16u test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD2_16u test Id: 152 - MMULVA
OK   UME::SIMD::SIMD2_16u test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_16u test Id: 154 - MULSA
OK   UME::SIMD::SIMD2_16u test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD2_16u test Id: 156 - MMULSA
OK   UME::SIMD::SIMD2_16u test Id: 157 - DIVV
OK   UME::SIMD::SIMD2_16u test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD2_16u test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD2_16u test Id: 160 - MDIVV
OK   UME::SIMD::SIMD2_16u test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD2_16u test Id: 162 - DIVS
OK   UME::SIMD::SIMD2_16u test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 165 - MDIVS
OK   UME::SIMD::SIMD2_16u test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 167 - DIVVA
OK   UME::SIMD::SIMD2_16u test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD2_16u test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD2_16u test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD2_16u test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD2_16u test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_16u test Id: 173 - DIVSA
OK   UME::SIMD::SIMD2_16u test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD2_16u test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD2_16u test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD2_16u test Id: 177 - RCP
OK   UME::SIMD::SIMD2_16u test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD2_16u test Id: 179 - MRCP
OK   UME::SIMD::SIMD2_16u test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD2_16u test Id: 181 - RCPS
OK   UME::SIMD::SIMD2_16u test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD2_16u test Id: 184 - MRCPS
OK   UME::SIMD::SIMD2_16u test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD2_16u test Id: 186 - RCPA
OK   UME::SIMD::SIMD2_16u test Id: 187 - MRCPA
OK   UME::SIMD::SIMD2_16u test Id: 188 - RCPSA
OK   UME::SIMD::SIMD2_16u test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD2_16u test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD2_16u test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD2_16u test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD2_16u test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD2_16u test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD2_16u test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD2_16u test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD2_16u test Id: 201 - CMPNES
OK   UME::SIMD::SIMD2_16u test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD2_16u test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD2_16u test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD2_16u test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD2_16u test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD2_16u test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD2_16u test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD2_16u test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD2_16u test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD2_16u test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD2_16u test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD2_16u test Id: 225 - CMPGES
OK   UME::SIMD::SIMD2_16u test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD2_16u test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD2_16u test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD2_16u test Id: 233 - CMPLES
OK   UME::SIMD::SIMD2_16u test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 238 - CMPEV
OK   UME::SIMD::SIMD2_16u test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD2_16u test Id: 240 - CMPES
OK   UME::SIMD::SIMD2_16u test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 243 - HADD
OK   UME::SIMD::SIMD2_16u test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD2_16u test Id: 245 - HADD gen
OK   UME::SIMD::SIMD2_16u test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD2_16u test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD2_16u test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD2_16u test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD2_16u test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD2_16u test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD2_16u test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD2_16u test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD2_16u test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD2_16u test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD2_16u test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD2_16u test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD2_16u test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD2_16u test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD2_16u test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD2_16u test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD2_16u test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD2_16u test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD2_16u test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD2_16u test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD2_16u test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD2_16u test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD2_16u test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD2_16u test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD2_16u test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD2_16u test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD2_16u test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD2_16u test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD2_16u test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD2_16u test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD2_16u test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD2_16u test Id: 277 - MAXV
OK   UME::SIMD::SIMD2_16u test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD2_16u test Id: 279 - MMAXV
OK   UME::SIMD::SIMD2_16u test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD2_16u test Id: 281 - MAXS
OK   UME::SIMD::SIMD2_16u test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 284 - MMAXS
OK   UME::SIMD::SIMD2_16u test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 286 - MAXVA
OK   UME::SIMD::SIMD2_16u test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD2_16u test Id: 288 - MAXSA
OK   UME::SIMD::SIMD2_16u test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD2_16u test Id: 290 - MINV
OK   UME::SIMD::SIMD2_16u test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD2_16u test Id: 292 - MMINV
OK   UME::SIMD::SIMD2_16u test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD2_16u test Id: 294 - MINS
OK   UME::SIMD::SIMD2_16u test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD2_16u test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD2_16u test Id: 297 - MMINS
OK   UME::SIMD::SIMD2_16u test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 299 - MINVA
OK   UME::SIMD::SIMD2_16u test Id: 300 - MMINVA
OK   UME::SIMD::SIMD2_16u test Id: 301 - MINSA
OK   UME::SIMD::SIMD2_16u test Id: 302 - MMINSA
OK   UME::SIMD::SIMD2_16u test Id: 303 - HMAX
OK   UME::SIMD::SIMD2_16u test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD2_16u test Id: 305 - HMAX
OK   UME::SIMD::SIMD2_16u test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD2_16u test Id: 307 - MHMAX
OK   UME::SIMD::SIMD2_16u test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD2_16u test Id: 309 - IMAX
OK   UME::SIMD::SIMD2_16u test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD2_16u test Id: 311 - MIMAX
OK   UME::SIMD::SIMD2_16u test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD2_16u test Id: 313 - HMIN
OK   UME::SIMD::SIMD2_16u test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD2_16u test Id: 315 - HMIN
OK   UME::SIMD::SIMD2_16u test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD2_16u test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD2_16u test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD2_16u test Id: 319 - IMIN
OK   UME::SIMD::SIMD2_16u test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD2_16u test Id: 321 - MIMIN
OK   UME::SIMD::SIMD2_16u test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD2_16u test Id: 323 - REMV gen
OK   UME::SIMD::SIMD2_16u test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD2_16u test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD2_16u test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD2_16u test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD2_16u test Id: 328 - REMS gen
OK   UME::SIMD::SIMD2_16u test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD2_16u test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD2_16u test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD2_16u test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD2_16u test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD2_16u test Id: 334 - LORV gen
OK   UME::SIMD::SIMD2_16u test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD2_16u test Id: 336 - BANDV
OK   UME::SIMD::SIMD2_16u test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD2_16u test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD2_16u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD2_16u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD2_16u test Id: 341 - BANDS
OK   UME::SIMD::SIMD2_16u test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 346 - MBANDS
OK   UME::SIMD::SIMD2_16u test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 348 - BANDVA
OK   UME::SIMD::SIMD2_16u test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD2_16u test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD2_16u test Id: 351 - BANDSA
OK   UME::SIMD::SIMD2_16u test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD2_16u test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD2_16u test Id: 354 - BORV
OK   UME::SIMD::SIMD2_16u test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD2_16u test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD2_16u test Id: 357 - MBORV
OK   UME::SIMD::SIMD2_16u test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD2_16u test Id: 359 - BORS
OK   UME::SIMD::SIMD2_16u test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 364 - MBORS
OK   UME::SIMD::SIMD2_16u test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 366 - BORVA
OK   UME::SIMD::SIMD2_16u test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD2_16u test Id: 368 - MBORVA
OK   UME::SIMD::SIMD2_16u test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD2_16u test Id: 370 - BORSA
OK   UME::SIMD::SIMD2_16u test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD2_16u test Id: 372 - MBORSA
OK   UME::SIMD::SIMD2_16u test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD2_16u test Id: 374 - BXORV
OK   UME::SIMD::SIMD2_16u test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD2_16u test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD2_16u test Id: 377 - MBXORV
OK   UME::SIMD::SIMD2_16u test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD2_16u test Id: 379 - BXORS
OK   UME::SIMD::SIMD2_16u test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 384 - MBXORS
OK   UME::SIMD::SIMD2_16u test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 386 - BXORVA
OK   UME::SIMD::SIMD2_16u test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD2_16u test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD2_16u test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD2_16u test Id: 390 - BXORSA
OK   UME::SIMD::SIMD2_16u test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD2_16u test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD2_16u test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD2_16u test Id: 394 - BNOT
OK   UME::SIMD::SIMD2_16u test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD2_16u test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD2_16u test Id: 397 - MBNOT
OK   UME::SIMD::SIMD2_16u test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD2_16u test Id: 399 - BNOTA
OK   UME::SIMD::SIMD2_16u test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD2_16u test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD2_16u test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD2_16u test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD2_16u test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD2_16u test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD2_16u test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD2_16u test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD2_16u test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD2_16u test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD2_16u test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD2_16u test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD2_16u test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD2_16u test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD2_16u test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD2_16u test Id: 415 - HBAND
OK   UME::SIMD::SIMD2_16u test Id: 416 - HBAND
OK   UME::SIMD::SIMD2_16u test Id: 417 - MHBAND
OK   UME::SIMD::SIMD2_16u test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD2_16u test Id: 419 - HBANDS
OK   UME::SIMD::SIMD2_16u test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD2_16u test Id: 421 - HBOR
OK   UME::SIMD::SIMD2_16u test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD2_16u test Id: 423 - MHBOR
OK   UME::SIMD::SIMD2_16u test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD2_16u test Id: 425 - HBORS
OK   UME::SIMD::SIMD2_16u test Id: 426 - MHBORS
OK   UME::SIMD::SIMD2_16u test Id: 427 - HBXOR
OK   UME::SIMD::SIMD2_16u test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD2_16u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD2_16u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD2_16u test Id: 431 - HBXORS
OK   UME::SIMD::SIMD2_16u test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD2_16u test Id: 433 - GATHERU
OK   UME::SIMD::SIMD2_16u test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD2_16u test Id: 435 - GATHERS
OK   UME::SIMD::SIMD2_16u test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD2_16u test Id: 437 - GATHERV
OK   UME::SIMD::SIMD2_16u test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD2_16u test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD2_16u test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD2_16u test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD2_16u test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD2_16u test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD2_16u test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD2_16u test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD2_16u test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD2_16u test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD2_16u test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD2_16u test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD2_16u test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD2_16u test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD2_16u test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD2_16u test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD2_16u test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD2_16u test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD2_16u test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD2_16u test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD2_16u test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD2_16u test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD2_16u test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD2_16u test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD2_16u test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD2_16u test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD2_16u test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD2_16u test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD2_16u test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD2_16u test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD2_16u test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD2_16u test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD2_16u test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD2_16u test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD2_16u test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD2_16u test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD2_16u test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD2_16u test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD2_16u test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD2_16u test Id: 477 - ROLV
OK   UME::SIMD::SIMD2_16u test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD2_16u test Id: 479 - MROLV
OK   UME::SIMD::SIMD2_16u test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD2_16u test Id: 481 - ROLS
OK   UME::SIMD::SIMD2_16u test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 483 - MROLS
OK   UME::SIMD::SIMD2_16u test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 485 - ROLVA
OK   UME::SIMD::SIMD2_16u test Id: 486 - MROLVA
OK   UME::SIMD::SIMD2_16u test Id: 487 - ROLSA
OK   UME::SIMD::SIMD2_16u test Id: 488 - MROLSA
OK   UME::SIMD::SIMD2_16u test Id: 489 - RORV
OK   UME::SIMD::SIMD2_16u test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD2_16u test Id: 491 - MRORV
OK   UME::SIMD::SIMD2_16u test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD2_16u test Id: 493 - RORS
OK   UME::SIMD::SIMD2_16u test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 495 - MRORS
OK   UME::SIMD::SIMD2_16u test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16u test Id: 497 - RORVA
OK   UME::SIMD::SIMD2_16u test Id: 498 - MRORVA
OK   UME::SIMD::SIMD2_16u test Id: 499 - RORSA
OK   UME::SIMD::SIMD2_16u test Id: 500 - MRORSA
OK   UME::SIMD::SIMD2_16u test Id: 501 - UTOI
OK   UME::SIMD::SIMD2_16u test Id: 502 - PACK
OK   UME::SIMD::SIMD2_16u test Id: 503 - PACKLO
OK   UME::SIMD::SIMD2_16u test Id: 504 - PACKHI
OK   UME::SIMD::SIMD2_16u test Id: 505 - UNPACK
OK   UME::SIMD::SIMD2_16u test Id: 506 - UNPACKLO
OK   UME::SIMD::SIMD2_16u test Id: 507 - UNPACKHi
OK   UME::SIMD::SIMD2_16u test Id: 508 - PROMOTE
OK   UME::SIMD::SIMD2_16u test Id: 509 - DEGRADE
OK   UME::SIMD::SIMD2_16i test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD2_16i test Id: 2 - ADDV
OK   UME::SIMD::SIMD2_16i test Id: 3 - ADDV(operator+)
OK   UME::SIMD::SIMD2_16i test Id: 4 - PACK
OK   UME::SIMD::SIMD2_16i test Id: 5 - SET-CONSTR gen
OK   UME::SIMD::SIMD2_16i test Id: 6 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD2_16i test Id: 7 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD2_16i test Id: 8 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD2_16i test Id: 9 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD2_16i test Id: 10 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD2_16i test Id: 11 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD2_16i test Id: 12 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD2_16i test Id: 13 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD2_16i test Id: 14 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD2_16i test Id: 15 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD2_16i test Id: 16 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD2_16i test Id: 17 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD2_16i test Id: 18 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD2_16i test Id: 19 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD2_16i test Id: 20 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD2_16i test Id: 21 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD2_16i test Id: 22 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD2_16i test Id: 23 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD2_16i test Id: 24 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD2_16i test Id: 25 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD2_16i test Id: 26 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD2_16i test Id: 27 - INSERT
OK   UME::SIMD::SIMD2_16i test Id: 28 - INSERT(operator[] =)
OK   UME::SIMD::SIMD2_16i test Id: 29 - EXTRACT
OK   UME::SIMD::SIMD2_16i test Id: 30 - EXTRACT(operator[])
OK   UME::SIMD::SIMD2_16i test Id: 31 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD2_16i test Id: 32 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD2_16i test Id: 33 - ASSIGNV
OK   UME::SIMD::SIMD2_16i test Id: 34 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD2_16i test Id: 35 - MASSIGNV
OK   UME::SIMD::SIMD2_16i test Id: 36 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD2_16i test Id: 37 - ASSIGNS
OK   UME::SIMD::SIMD2_16i test Id: 38 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD2_16i test Id: 39 - MASSIGNS
OK   UME::SIMD::SIMD2_16i test Id: 40 - MASSIGNS
OK   UME::SIMD::SIMD2_16i test Id: 41 - LOAD/STORE
OK   UME::SIMD::SIMD2_16i test Id: 42 - MLOAD
OK   UME::SIMD::SIMD2_16i test Id: 43 - MSTORE
OK   UME::SIMD::SIMD2_16i test Id: 44 - LOADA/STOREA
OK   UME::SIMD::SIMD2_16i test Id: 45 - MLOADA
OK   UME::SIMD::SIMD2_16i test Id: 46 - MSTOREA
OK   UME::SIMD::SIMD2_16i test Id: 47 - SWIZZLE
OK   UME::SIMD::SIMD2_16i test Id: 48 - SORTA
OK   UME::SIMD::SIMD2_16i test Id: 49 - SORTD
OK   UME::SIMD::SIMD2_16i test Id: 50 - BLENDV gen
OK   UME::SIMD::SIMD2_16i test Id: 51 - ADDV
OK   UME::SIMD::SIMD2_16i test Id: 52 - ADDV(operator+)
OK   UME::SIMD::SIMD2_16i test Id: 53 - ADDV(function)
OK   UME::SIMD::SIMD2_16i test Id: 54 - ADDV gen
OK   UME::SIMD::SIMD2_16i test Id: 55 - ADDV(operator+) gen
OK   UME::SIMD::SIMD2_16i test Id: 56 - ADDV(function) gen
OK   UME::SIMD::SIMD2_16i test Id: 57 - MADDV
OK   UME::SIMD::SIMD2_16i test Id: 58 - MADDV(function)
OK   UME::SIMD::SIMD2_16i test Id: 59 - MADDV gen
OK   UME::SIMD::SIMD2_16i test Id: 60 - MADDV(function) gen
OK   UME::SIMD::SIMD2_16i test Id: 61 - ADDS
OK   UME::SIMD::SIMD2_16i test Id: 62 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 63 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 64 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD2_16i test Id: 65 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD2_16i test Id: 66 - ADDS gen
OK   UME::SIMD::SIMD2_16i test Id: 67 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD2_16i test Id: 68 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD2_16i test Id: 69 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD2_16i test Id: 70 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD2_16i test Id: 71 - MADDS
OK   UME::SIMD::SIMD2_16i test Id: 72 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 73 - MADDS gen
OK   UME::SIMD::SIMD2_16i test Id: 74 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD2_16i test Id: 75 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD2_16i test Id: 76 - ADDVA
OK   UME::SIMD::SIMD2_16i test Id: 77 - ADDVA(operator+=)
OK   UME::SIMD::SIMD2_16i test Id: 78 - ADDVA gen
OK   UME::SIMD::SIMD2_16i test Id: 79 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD2_16i test Id: 80 - MADDVA
OK   UME::SIMD::SIMD2_16i test Id: 81 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD2_16i test Id: 82 - ADDSA
OK   UME::SIMD::SIMD2_16i test Id: 83 - ADDSA(operator+=)
OK   UME::SIMD::SIMD2_16i test Id: 84 - MADDSA
OK   UME::SIMD::SIMD2_16i test Id: 85 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD2_16i test Id: 86 - SADDV gen
OK   UME::SIMD::SIMD2_16i test Id: 87 - SADDV(function) gen
OK   UME::SIMD::SIMD2_16i test Id: 88 - POSTINC
OK   UME::SIMD::SIMD2_16i test Id: 89 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD2_16i test Id: 90 - POSTINC(function)
OK   UME::SIMD::SIMD2_16i test Id: 91 - MPOSTINC
OK   UME::SIMD::SIMD2_16i test Id: 92 - MPOSTINC(function)
OK   UME::SIMD::SIMD2_16i test Id: 93 - PREFINC
OK   UME::SIMD::SIMD2_16i test Id: 94 - PREFINC(operator++())
OK   UME::SIMD::SIMD2_16i test Id: 95 - PREFINC(function)
OK   UME::SIMD::SIMD2_16i test Id: 96 - MPREFINC
OK   UME::SIMD::SIMD2_16i test Id: 97 - MPREFINC(function)
OK   UME::SIMD::SIMD2_16i test Id: 98 - SUBV
OK   UME::SIMD::SIMD2_16i test Id: 99 - SUBV(operator-)
OK   UME::SIMD::SIMD2_16i test Id: 100 - SUBV(function)
OK   UME::SIMD::SIMD2_16i test Id: 101 - SUBV gen
OK   UME::SIMD::SIMD2_16i test Id: 102 - SUBV(operator-) gen
OK   UME::SIMD::SIMD2_16i test Id: 103 - SUBV(function) gen
OK   UME::SIMD::SIMD2_16i test Id: 104 - MSUBV
OK   UME::SIMD::SIMD2_16i test Id: 105 - MSUBV(function)
OK   UME::SIMD::SIMD2_16i test Id: 106 - MSUBV gen
OK   UME::SIMD::SIMD2_16i test Id: 107 - MSUBV(function) gen
OK   UME::SIMD::SIMD2_16i test Id: 108 - SUBS gen
OK   UME::SIMD::SIMD2_16i test Id: 109 - SUBS(operator-) gen
OK   UME::SIMD::SIMD2_16i test Id: 110 - SUBS(function) gen
OK   UME::SIMD::SIMD2_16i test Id: 111 - MSUBS
OK   UME::SIMD::SIMD2_16i test Id: 112 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 113 - SUBVA
OK   UME::SIMD::SIMD2_16i test Id: 114 - SUBVA(operator-=)
OK   UME::SIMD::SIMD2_16i test Id: 115 - MSUBVA
OK   UME::SIMD::SIMD2_16i test Id: 116 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD2_16i test Id: 117 - SUBSA
OK   UME::SIMD::SIMD2_16i test Id: 118 - MSUBSA
OK   UME::SIMD::SIMD2_16i test Id: 119 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD2_16i test Id: 120 - SUBFROMV
OK   UME::SIMD::SIMD2_16i test Id: 121 - MSUBFROMV
OK   UME::SIMD::SIMD2_16i test Id: 122 - SUBFROMS
OK   UME::SIMD::SIMD2_16i test Id: 123 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 124 - MSUBFROMS
OK   UME::SIMD::SIMD2_16i test Id: 125 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 126 - SUBFROMVA
OK   UME::SIMD::SIMD2_16i test Id: 127 - MSUBFROMVA
OK   UME::SIMD::SIMD2_16i test Id: 128 - SUBFROMSA
OK   UME::SIMD::SIMD2_16i test Id: 129 - MSUBFROMSA
OK   UME::SIMD::SIMD2_16i test Id: 130 - POSTDEC
OK   UME::SIMD::SIMD2_16i test Id: 131 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD2_16i test Id: 132 - POSTDEC(function)
OK   UME::SIMD::SIMD2_16i test Id: 133 - MPOSTDEC
OK   UME::SIMD::SIMD2_16i test Id: 134 - MPOSTDEC(function)
OK   UME::SIMD::SIMD2_16i test Id: 135 - PREFDEC
OK   UME::SIMD::SIMD2_16i test Id: 136 - PREFDEC(operator--())
OK   UME::SIMD::SIMD2_16i test Id: 137 - PREFDEC(function)
OK   UME::SIMD::SIMD2_16i test Id: 138 - MPREFDEC
OK   UME::SIMD::SIMD2_16i test Id: 139 - MPREFDEC(function)
OK   UME::SIMD::SIMD2_16i test Id: 140 - MULV
OK   UME::SIMD::SIMD2_16i test Id: 141 - MULV(operator*)
OK   UME::SIMD::SIMD2_16i test Id: 142 - MULV(function)
OK   UME::SIMD::SIMD2_16i test Id: 143 - MMULV
OK   UME::SIMD::SIMD2_16i test Id: 144 - MMULV(function)
OK   UME::SIMD::SIMD2_16i test Id: 145 - MULS
OK   UME::SIMD::SIMD2_16i test Id: 146 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 147 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 148 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 149 - MMULS
OK   UME::SIMD::SIMD2_16i test Id: 150 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 151 - MULVA
OK   UME::SIMD::SIMD2_16i test Id: 152 - MULVA(operator*)
OK   UME::SIMD::SIMD2_16i test Id: 153 - MULVA gen
OK   UME::SIMD::SIMD2_16i test Id: 154 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD2_16i test Id: 155 - MMULVA
OK   UME::SIMD::SIMD2_16i test Id: 156 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_16i test Id: 157 - MULSA
OK   UME::SIMD::SIMD2_16i test Id: 158 - MULSA(operator*=)
OK   UME::SIMD::SIMD2_16i test Id: 159 - MMULSA
OK   UME::SIMD::SIMD2_16i test Id: 160 - DIVV
OK   UME::SIMD::SIMD2_16i test Id: 161 - DIVV(operator/)
OK   UME::SIMD::SIMD2_16i test Id: 162 - DIVV(function)
OK   UME::SIMD::SIMD2_16i test Id: 163 - MDIVV
OK   UME::SIMD::SIMD2_16i test Id: 164 - MDIVV(function)
OK   UME::SIMD::SIMD2_16i test Id: 165 - DIVS
OK   UME::SIMD::SIMD2_16i test Id: 166 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 167 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 168 - MDIVS
OK   UME::SIMD::SIMD2_16i test Id: 169 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 170 - DIVVA
OK   UME::SIMD::SIMD2_16i test Id: 171 - DIVVA(operator/=)
OK   UME::SIMD::SIMD2_16i test Id: 172 - DIVVA gen
OK   UME::SIMD::SIMD2_16i test Id: 173 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD2_16i test Id: 174 - MDIVVA
OK   UME::SIMD::SIMD2_16i test Id: 175 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_16i test Id: 176 - DIVSA
OK   UME::SIMD::SIMD2_16i test Id: 177 - DIVSA(operator/=)
OK   UME::SIMD::SIMD2_16i test Id: 178 - MDIVSA
OK   UME::SIMD::SIMD2_16i test Id: 179 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD2_16i test Id: 180 - RCP
OK   UME::SIMD::SIMD2_16i test Id: 181 - RCP(function)
OK   UME::SIMD::SIMD2_16i test Id: 182 - MRCP
OK   UME::SIMD::SIMD2_16i test Id: 183 - MRCP(function)
OK   UME::SIMD::SIMD2_16i test Id: 184 - RCPS
OK   UME::SIMD::SIMD2_16i test Id: 185 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 186 - RCPS(function)
OK   UME::SIMD::SIMD2_16i test Id: 187 - MRCPS
OK   UME::SIMD::SIMD2_16i test Id: 188 - MRCPS (function)
OK   UME::SIMD::SIMD2_16i test Id: 189 - RCPA
OK   UME::SIMD::SIMD2_16i test Id: 190 - MRCPA
OK   UME::SIMD::SIMD2_16i test Id: 191 - RCPSA
OK   UME::SIMD::SIMD2_16i test Id: 192 - MRCPSA
OK   UME::SIMD::SIMD2_16i test Id: 193 - CMPEQV
OK   UME::SIMD::SIMD2_16i test Id: 194 - CMPEQV(operator==)
OK   UME::SIMD::SIMD2_16i test Id: 195 - CMPEQV(function)
OK   UME::SIMD::SIMD2_16i test Id: 196 - CMPEQS
OK   UME::SIMD::SIMD2_16i test Id: 197 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 198 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 199 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 200 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 201 - CMPNEV
OK   UME::SIMD::SIMD2_16i test Id: 202 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD2_16i test Id: 203 - CMPNEV(function)
OK   UME::SIMD::SIMD2_16i test Id: 204 - CMPNES
OK   UME::SIMD::SIMD2_16i test Id: 205 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 206 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 207 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 208 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 209 - CMPGTV
OK   UME::SIMD::SIMD2_16i test Id: 210 - CMPGTV(operator>)
OK   UME::SIMD::SIMD2_16i test Id: 211 - CMPGTV(function)
OK   UME::SIMD::SIMD2_16i test Id: 212 - CMPGTS
OK   UME::SIMD::SIMD2_16i test Id: 213 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 214 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 215 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 216 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 217 - CMPLTV
OK   UME::SIMD::SIMD2_16i test Id: 218 - CMPLTV(operator<)
OK   UME::SIMD::SIMD2_16i test Id: 219 - CMPLTV(function)
OK   UME::SIMD::SIMD2_16i test Id: 220 - CMPLTS
OK   UME::SIMD::SIMD2_16i test Id: 221 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 222 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 223 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 224 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 225 - CMPGEV
OK   UME::SIMD::SIMD2_16i test Id: 226 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD2_16i test Id: 227 - CMPGEV(function)
OK   UME::SIMD::SIMD2_16i test Id: 228 - CMPGES
OK   UME::SIMD::SIMD2_16i test Id: 229 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 230 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 231 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 232 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 233 - CMPLEV
OK   UME::SIMD::SIMD2_16i test Id: 234 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD2_16i test Id: 235 - CMPLEV(function)
OK   UME::SIMD::SIMD2_16i test Id: 236 - CMPLES
OK   UME::SIMD::SIMD2_16i test Id: 237 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 238 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 239 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 240 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 241 - CMPEV
OK   UME::SIMD::SIMD2_16i test Id: 242 - CMPEV(function)
OK   UME::SIMD::SIMD2_16i test Id: 243 - CMPES
OK   UME::SIMD::SIMD2_16i test Id: 244 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 245 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 246 - HADD
OK   UME::SIMD::SIMD2_16i test Id: 247 - HADD(function)
OK   UME::SIMD::SIMD2_16i test Id: 248 - HADD gen
OK   UME::SIMD::SIMD2_16i test Id: 249 - HADD(function) gen
OK   UME::SIMD::SIMD2_16i test Id: 250 - MHADD gen
OK   UME::SIMD::SIMD2_16i test Id: 251 - MHADD(function) gen
OK   UME::SIMD::SIMD2_16i test Id: 252 - HADDS gen
OK   UME::SIMD::SIMD2_16i test Id: 253 - HADDS(function) gen
OK   UME::SIMD::SIMD2_16i test Id: 254 - MHADD gen
OK   UME::SIMD::SIMD2_16i test Id: 255 - MHADDS(function) gen
OK   UME::SIMD::SIMD2_16i test Id: 256 - HMUL gen
OK   UME::SIMD::SIMD2_16i test Id: 257 - HMUL(function) gen
OK   UME::SIMD::SIMD2_16i test Id: 258 - MHMUL gen
OK   UME::SIMD::SIMD2_16i test Id: 259 - MHMUL(function) gen
OK   UME::SIMD::SIMD2_16i test Id: 260 - HMULS gen
OK   UME::SIMD::SIMD2_16i test Id: 261 - HMULS(function) gen
OK   UME::SIMD::SIMD2_16i test Id: 262 - MHMUL gen
OK   UME::SIMD::SIMD2_16i test Id: 263 - MHMULS(function) gen
OK   UME::SIMD::SIMD2_16i test Id: 264 - FMULADDV
OK   UME::SIMD::SIMD2_16i test Id: 265 - FMULADDV(function)
OK   UME::SIMD::SIMD2_16i test Id: 266 - MFMULADDV
OK   UME::SIMD::SIMD2_16i test Id: 267 - MFMULADDV(function)
OK   UME::SIMD::SIMD2_16i test Id: 268 - FMULSUBV
OK   UME::SIMD::SIMD2_16i test Id: 269 - FMULSUBV(function)
OK   UME::SIMD::SIMD2_16i test Id: 270 - MFMULSUBV
OK   UME::SIMD::SIMD2_16i test Id: 271 - MFMULSUBV(function)
OK   UME::SIMD::SIMD2_16i test Id: 272 - FADDMULV
OK   UME::SIMD::SIMD2_16i test Id: 273 - FADDMULV(function)
OK   UME::SIMD::SIMD2_16i test Id: 274 - MFADDMULV
OK   UME::SIMD::SIMD2_16i test Id: 275 - MFADDMULV(function)
OK   UME::SIMD::SIMD2_16i test Id: 276 - FSUBMULV
OK   UME::SIMD::SIMD2_16i test Id: 277 - FSUBMULV(function)
OK   UME::SIMD::SIMD2_16i test Id: 278 - MFSUBMULV
OK   UME::SIMD::SIMD2_16i test Id: 279 - MFSUBMULV(function)
OK   UME::SIMD::SIMD2_16i test Id: 280 - MAXV
OK   UME::SIMD::SIMD2_16i test Id: 281 - MAXV(function)
OK   UME::SIMD::SIMD2_16i test Id: 282 - MMAXV
OK   UME::SIMD::SIMD2_16i test Id: 283 - MMAXV(function)
OK   UME::SIMD::SIMD2_16i test Id: 284 - MAXS
OK   UME::SIMD::SIMD2_16i test Id: 285 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 286 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 287 - MMAXS
OK   UME::SIMD::SIMD2_16i test Id: 288 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 289 - MAXVA
OK   UME::SIMD::SIMD2_16i test Id: 290 - MMAXVA
OK   UME::SIMD::SIMD2_16i test Id: 291 - MAXSA
OK   UME::SIMD::SIMD2_16i test Id: 292 - MMAXSA
OK   UME::SIMD::SIMD2_16i test Id: 293 - MINV
OK   UME::SIMD::SIMD2_16i test Id: 294 - MINV(function)
OK   UME::SIMD::SIMD2_16i test Id: 295 - MMINV
OK   UME::SIMD::SIMD2_16i test Id: 296 - MMINV(function)
OK   UME::SIMD::SIMD2_16i test Id: 297 - MINS
OK   UME::SIMD::SIMD2_16i test Id: 298 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD2_16i test Id: 299 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD2_16i test Id: 300 - MMINS
OK   UME::SIMD::SIMD2_16i test Id: 301 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 302 - MINVA
OK   UME::SIMD::SIMD2_16i test Id: 303 - MMINVA
OK   UME::SIMD::SIMD2_16i test Id: 304 - MINSA
OK   UME::SIMD::SIMD2_16i test Id: 305 - MMINSA
OK   UME::SIMD::SIMD2_16i test Id: 306 - HMAX
OK   UME::SIMD::SIMD2_16i test Id: 307 - HMAX(function)
OK   UME::SIMD::SIMD2_16i test Id: 308 - HMAX
OK   UME::SIMD::SIMD2_16i test Id: 309 - HMAX(function)
OK   UME::SIMD::SIMD2_16i test Id: 310 - MHMAX
OK   UME::SIMD::SIMD2_16i test Id: 311 - MHMAX(function)
OK   UME::SIMD::SIMD2_16i test Id: 312 - IMAX
OK   UME::SIMD::SIMD2_16i test Id: 313 - IMAX(function)
OK   UME::SIMD::SIMD2_16i test Id: 314 - MIMAX
OK   UME::SIMD::SIMD2_16i test Id: 315 - MIMAX(function)
OK   UME::SIMD::SIMD2_16i test Id: 316 - HMIN
OK   UME::SIMD::SIMD2_16i test Id: 317 - HMIN(function)
OK   UME::SIMD::SIMD2_16i test Id: 318 - HMIN
OK   UME::SIMD::SIMD2_16i test Id: 319 - HMIN(function)
OK   UME::SIMD::SIMD2_16i test Id: 320 - MHMIN gen
OK   UME::SIMD::SIMD2_16i test Id: 321 - MHMIN(function) gen
OK   UME::SIMD::SIMD2_16i test Id: 322 - IMIN
OK   UME::SIMD::SIMD2_16i test Id: 323 - IMIN(function)
OK   UME::SIMD::SIMD2_16i test Id: 324 - MIMIN
OK   UME::SIMD::SIMD2_16i test Id: 325 - MIMIN(function)
OK   UME::SIMD::SIMD2_16i test Id: 326 - REMV gen
OK   UME::SIMD::SIMD2_16i test Id: 327 - REMV(operator%) gen
OK   UME::SIMD::SIMD2_16i test Id: 328 - REMV(function) gen
OK   UME::SIMD::SIMD2_16i test Id: 329 - MREMV gen
OK   UME::SIMD::SIMD2_16i test Id: 330 - MREMV(function) gen
OK   UME::SIMD::SIMD2_16i test Id: 331 - REMS gen
OK   UME::SIMD::SIMD2_16i test Id: 332 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD2_16i test Id: 333 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD2_16i test Id: 334 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD2_16i test Id: 335 - LANDV gen
OK   UME::SIMD::SIMD2_16i test Id: 336 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD2_16i test Id: 337 - LORV gen
OK   UME::SIMD::SIMD2_16i test Id: 338 - LORV gen (operator ||)
OK   UME::SIMD::SIMD2_16i test Id: 339 - BANDV
OK   UME::SIMD::SIMD2_16i test Id: 340 - BANDV(operator&)
OK   UME::SIMD::SIMD2_16i test Id: 341 - BANDV(function)
OK   UME::SIMD::SIMD2_16i test Id: 342 - MBANDV
OK   UME::SIMD::SIMD2_16i test Id: 343 - MBANDV
OK   UME::SIMD::SIMD2_16i test Id: 344 - BANDS
OK   UME::SIMD::SIMD2_16i test Id: 345 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 346 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 347 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 348 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 349 - MBANDS
OK   UME::SIMD::SIMD2_16i test Id: 350 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 351 - BANDVA
OK   UME::SIMD::SIMD2_16i test Id: 352 - MBANDVA
OK   UME::SIMD::SIMD2_16i test Id: 353 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD2_16i test Id: 354 - BANDSA
OK   UME::SIMD::SIMD2_16i test Id: 355 - MBANDSA
OK   UME::SIMD::SIMD2_16i test Id: 356 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD2_16i test Id: 357 - BORV
OK   UME::SIMD::SIMD2_16i test Id: 358 - BORV(operator |)
OK   UME::SIMD::SIMD2_16i test Id: 359 - BORV(function)
OK   UME::SIMD::SIMD2_16i test Id: 360 - MBORV
OK   UME::SIMD::SIMD2_16i test Id: 361 - MBORV(function)
OK   UME::SIMD::SIMD2_16i test Id: 362 - BORS
OK   UME::SIMD::SIMD2_16i test Id: 363 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 364 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 365 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 366 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 367 - MBORS
OK   UME::SIMD::SIMD2_16i test Id: 368 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 369 - BORVA
OK   UME::SIMD::SIMD2_16i test Id: 370 - BORVA(operator|=)
OK   UME::SIMD::SIMD2_16i test Id: 371 - MBORVA
OK   UME::SIMD::SIMD2_16i test Id: 372 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD2_16i test Id: 373 - BORSA
OK   UME::SIMD::SIMD2_16i test Id: 374 - BORSA(operator|=)
OK   UME::SIMD::SIMD2_16i test Id: 375 - MBORSA
OK   UME::SIMD::SIMD2_16i test Id: 376 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD2_16i test Id: 377 - BXORV
OK   UME::SIMD::SIMD2_16i test Id: 378 - BXORV(operator^
OK   UME::SIMD::SIMD2_16i test Id: 379 - BXORV(function
OK   UME::SIMD::SIMD2_16i test Id: 380 - MBXORV
OK   UME::SIMD::SIMD2_16i test Id: 381 - MBXORV(function)
OK   UME::SIMD::SIMD2_16i test Id: 382 - BXORS
OK   UME::SIMD::SIMD2_16i test Id: 383 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 384 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 385 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 386 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 387 - MBXORS
OK   UME::SIMD::SIMD2_16i test Id: 388 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 389 - BXORVA
OK   UME::SIMD::SIMD2_16i test Id: 390 - BXORVA(operator^=)
OK   UME::SIMD::SIMD2_16i test Id: 391 - MBXORVA
OK   UME::SIMD::SIMD2_16i test Id: 392 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD2_16i test Id: 393 - BXORSA
OK   UME::SIMD::SIMD2_16i test Id: 394 - BXORSA(operator^=)
OK   UME::SIMD::SIMD2_16i test Id: 395 - MBXORSA
OK   UME::SIMD::SIMD2_16i test Id: 396 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD2_16i test Id: 397 - BNOT
OK   UME::SIMD::SIMD2_16i test Id: 398 - BNOT(operator!)
OK   UME::SIMD::SIMD2_16i test Id: 399 - BNOT(function)
OK   UME::SIMD::SIMD2_16i test Id: 400 - MBNOT
OK   UME::SIMD::SIMD2_16i test Id: 401 - MBNOT(function)
OK   UME::SIMD::SIMD2_16i test Id: 402 - BNOTA
OK   UME::SIMD::SIMD2_16i test Id: 403 - MBNOTA
OK   UME::SIMD::SIMD2_16i test Id: 404 - BANDNOTV
OK   UME::SIMD::SIMD2_16i test Id: 405 - BANDNOTV (function)
OK   UME::SIMD::SIMD2_16i test Id: 406 - MBANDNOTV
OK   UME::SIMD::SIMD2_16i test Id: 407 - MBANDNOTV (function)
OK   UME::SIMD::SIMD2_16i test Id: 408 - BANDNOTS
OK   UME::SIMD::SIMD2_16i test Id: 409 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD2_16i test Id: 410 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD2_16i test Id: 411 - MBANDNOTS
OK   UME::SIMD::SIMD2_16i test Id: 412 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD2_16i test Id: 413 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD2_16i test Id: 414 - BANDNOTVA
OK   UME::SIMD::SIMD2_16i test Id: 415 - MBANDNOTVA
OK   UME::SIMD::SIMD2_16i test Id: 416 - BANDNOTSA
OK   UME::SIMD::SIMD2_16i test Id: 417 - MBANDNOTSA
OK   UME::SIMD::SIMD2_16i test Id: 418 - HBAND
OK   UME::SIMD::SIMD2_16i test Id: 419 - HBAND
OK   UME::SIMD::SIMD2_16i test Id: 420 - MHBAND
OK   UME::SIMD::SIMD2_16i test Id: 421 - MHBAND(function)
OK   UME::SIMD::SIMD2_16i test Id: 422 - HBANDS
OK   UME::SIMD::SIMD2_16i test Id: 423 - MHBANDS
OK   UME::SIMD::SIMD2_16i test Id: 424 - HBOR
OK   UME::SIMD::SIMD2_16i test Id: 425 - HBOR(function)
OK   UME::SIMD::SIMD2_16i test Id: 426 - MHBOR
OK   UME::SIMD::SIMD2_16i test Id: 427 - MHBOR(function)
OK   UME::SIMD::SIMD2_16i test Id: 428 - HBORS
OK   UME::SIMD::SIMD2_16i test Id: 429 - MHBORS
OK   UME::SIMD::SIMD2_16i test Id: 430 - HBXOR
OK   UME::SIMD::SIMD2_16i test Id: 431 - HBXOR(function)
OK   UME::SIMD::SIMD2_16i test Id: 432 - MHBXOR
OK   UME::SIMD::SIMD2_16i test Id: 433 - MHBXOR
OK   UME::SIMD::SIMD2_16i test Id: 434 - HBXORS
OK   UME::SIMD::SIMD2_16i test Id: 435 - MHBXORS
OK   UME::SIMD::SIMD2_16i test Id: 436 - GATHERU
OK   UME::SIMD::SIMD2_16i test Id: 437 - MGATHERU
OK   UME::SIMD::SIMD2_16i test Id: 438 - GATHERS
OK   UME::SIMD::SIMD2_16i test Id: 439 - MGATHERS
OK   UME::SIMD::SIMD2_16i test Id: 440 - GATHERV
OK   UME::SIMD::SIMD2_16i test Id: 441 - MGATHERV
OK   UME::SIMD::SIMD2_16i test Id: 442 - SCATTERU
OK   UME::SIMD::SIMD2_16i test Id: 443 - MSCATTERU
OK   UME::SIMD::SIMD2_16i test Id: 444 - SCATTERS
OK   UME::SIMD::SIMD2_16i test Id: 445 - MSCATTERS
OK   UME::SIMD::SIMD2_16i test Id: 446 - SCATTERV
OK   UME::SIMD::SIMD2_16i test Id: 447 - MSCATTERV
OK   UME::SIMD::SIMD2_16i test Id: 448 - LSHV gen
OK   UME::SIMD::SIMD2_16i test Id: 449 - LSHV (function) gen
OK   UME::SIMD::SIMD2_16i test Id: 450 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD2_16i test Id: 451 - MLSHV gen
OK   UME::SIMD::SIMD2_16i test Id: 452 - MLSHV (function) gen
OK   UME::SIMD::SIMD2_16i test Id: 453 - LSHS gen
OK   UME::SIMD::SIMD2_16i test Id: 454 - LSHS (function) gen
OK   UME::SIMD::SIMD2_16i test Id: 455 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD2_16i test Id: 456 - MLSHS gen
OK   UME::SIMD::SIMD2_16i test Id: 457 - MLSHS (function) gen
OK   UME::SIMD::SIMD2_16i test Id: 458 - LSHVA gen
OK   UME::SIMD::SIMD2_16i test Id: 459 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD2_16i test Id: 460 - MLSHVA gen
OK   UME::SIMD::SIMD2_16i test Id: 461 - LSHSA gen
OK   UME::SIMD::SIMD2_16i test Id: 462 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD2_16i test Id: 463 - MLSHSA gen
OK   UME::SIMD::SIMD2_16i test Id: 464 - RSHV gen
OK   UME::SIMD::SIMD2_16i test Id: 465 - RSHV (function) gen
OK   UME::SIMD::SIMD2_16i test Id: 466 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD2_16i test Id: 467 - MRSHV gen
OK   UME::SIMD::SIMD2_16i test Id: 468 - MRSHV (function) gen
OK   UME::SIMD::SIMD2_16i test Id: 469 - RSHS gen
OK   UME::SIMD::SIMD2_16i test Id: 470 - RSHS (function) gen
OK   UME::SIMD::SIMD2_16i test Id: 471 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD2_16i test Id: 472 - MRSHS gen
OK   UME::SIMD::SIMD2_16i test Id: 473 - MRSHS (function) gen
OK   UME::SIMD::SIMD2_16i test Id: 474 - RSHVA gen
OK   UME::SIMD::SIMD2_16i test Id: 475 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD2_16i test Id: 476 - MRSHVA gen
OK   UME::SIMD::SIMD2_16i test Id: 477 - RSHSA gen
OK   UME::SIMD::SIMD2_16i test Id: 478 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD2_16i test Id: 479 - MRSHSA gen
OK   UME::SIMD::SIMD2_16i test Id: 480 - ROLV
OK   UME::SIMD::SIMD2_16i test Id: 481 - ROLV(function)
OK   UME::SIMD::SIMD2_16i test Id: 482 - MROLV
OK   UME::SIMD::SIMD2_16i test Id: 483 - MROLV(function)
OK   UME::SIMD::SIMD2_16i test Id: 484 - ROLS
OK   UME::SIMD::SIMD2_16i test Id: 485 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 486 - MROLS
OK   UME::SIMD::SIMD2_16i test Id: 487 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 488 - ROLVA
OK   UME::SIMD::SIMD2_16i test Id: 489 - MROLVA
OK   UME::SIMD::SIMD2_16i test Id: 490 - ROLSA
OK   UME::SIMD::SIMD2_16i test Id: 491 - MROLSA
OK   UME::SIMD::SIMD2_16i test Id: 492 - RORV
OK   UME::SIMD::SIMD2_16i test Id: 493 - RORV(function)
OK   UME::SIMD::SIMD2_16i test Id: 494 - MRORV
OK   UME::SIMD::SIMD2_16i test Id: 495 - MRORV(function)
OK   UME::SIMD::SIMD2_16i test Id: 496 - RORS
OK   UME::SIMD::SIMD2_16i test Id: 497 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 498 - MRORS
OK   UME::SIMD::SIMD2_16i test Id: 499 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_16i test Id: 500 - RORVA
OK   UME::SIMD::SIMD2_16i test Id: 501 - MRORVA
OK   UME::SIMD::SIMD2_16i test Id: 502 - RORSA
OK   UME::SIMD::SIMD2_16i test Id: 503 - MRORSA
OK   UME::SIMD::SIMD2_16i test Id: 504 - NEG
OK   UME::SIMD::SIMD2_16i test Id: 505 - NEG(operator-)
OK   UME::SIMD::SIMD2_16i test Id: 506 - NEG(function)
OK   UME::SIMD::SIMD2_16i test Id: 507 - MNEG
OK   UME::SIMD::SIMD2_16i test Id: 508 - MNEG(function)
OK   UME::SIMD::SIMD2_16i test Id: 509 - NEGA
OK   UME::SIMD::SIMD2_16i test Id: 510 - MNEGA
OK   UME::SIMD::SIMD2_16i test Id: 511 - ABS
OK   UME::SIMD::SIMD2_16i test Id: 512 - ABS(function)
OK   UME::SIMD::SIMD2_16i test Id: 513 - MABS
OK   UME::SIMD::SIMD2_16i test Id: 514 - MABS(function)
OK   UME::SIMD::SIMD2_16i test Id: 515 - ABSA
OK   UME::SIMD::SIMD2_16i test Id: 516 - MABSA
OK   UME::SIMD::SIMD2_16i test Id: 517 - COPYSIGN gen
OK   UME::SIMD::SIMD2_16i test Id: 518 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD2_16i test Id: 519 - ITOU
OK   UME::SIMD::SIMD2_16i test Id: 520 - PACK
OK   UME::SIMD::SIMD2_16i test Id: 521 - PACKLO
OK   UME::SIMD::SIMD2_16i test Id: 522 - PACKHI
OK   UME::SIMD::SIMD2_16i test Id: 523 - UNPACK
OK   UME::SIMD::SIMD2_16i test Id: 524 - UNPACKLO
OK   UME::SIMD::SIMD2_16i test Id: 525 - UNPACKHi
OK   UME::SIMD::SIMD2_16i test Id: 526 - PROMOTE
OK   UME::SIMD::SIMD2_16i test Id: 527 - DEGRADE
OK   UME::SIMD::SIMD1_32u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD1_32u test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD1_32u test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD1_32u test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD1_32u test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD1_32u test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD1_32u test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD1_32u test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD1_32u test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD1_32u test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD1_32u test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD1_32u test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD1_32u test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD1_32u test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD1_32u test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD1_32u test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD1_32u test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD1_32u test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD1_32u test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD1_32u test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD1_32u test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD1_32u test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD1_32u test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD1_32u test Id: 24 - INSERT
OK   UME::SIMD::SIMD1_32u test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD1_32u test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD1_32u test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD1_32u test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD1_32u test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD1_32u test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD1_32u test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD1_32u test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD1_32u test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD1_32u test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD1_32u test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD1_32u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD1_32u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD1_32u test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD1_32u test Id: 39 - MLOAD
OK   UME::SIMD::SIMD1_32u test Id: 40 - MSTORE
OK   UME::SIMD::SIMD1_32u test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD1_32u test Id: 42 - MLOADA
OK   UME::SIMD::SIMD1_32u test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD1_32u test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD1_32u test Id: 45 - SORTA
OK   UME::SIMD::SIMD1_32u test Id: 46 - SORTD
OK   UME::SIMD::SIMD1_32u test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD1_32u test Id: 48 - ADDV
OK   UME::SIMD::SIMD1_32u test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD1_32u test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD1_32u test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD1_32u test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD1_32u test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD1_32u test Id: 54 - MADDV
OK   UME::SIMD::SIMD1_32u test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD1_32u test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD1_32u test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD1_32u test Id: 58 - ADDS
OK   UME::SIMD::SIMD1_32u test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD1_32u test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD1_32u test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD1_32u test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD1_32u test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD1_32u test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD1_32u test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD1_32u test Id: 68 - MADDS
OK   UME::SIMD::SIMD1_32u test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD1_32u test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD1_32u test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD1_32u test Id: 73 - ADDVA
OK   UME::SIMD::SIMD1_32u test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD1_32u test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD1_32u test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD1_32u test Id: 77 - MADDVA
OK   UME::SIMD::SIMD1_32u test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD1_32u test Id: 79 - ADDSA
OK   UME::SIMD::SIMD1_32u test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD1_32u test Id: 81 - MADDSA
OK   UME::SIMD::SIMD1_32u test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD1_32u test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD1_32u test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD1_32u test Id: 85 - POSTINC
OK   UME::SIMD::SIMD1_32u test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD1_32u test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD1_32u test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD1_32u test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD1_32u test Id: 90 - PREFINC
OK   UME::SIMD::SIMD1_32u test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD1_32u test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD1_32u test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD1_32u test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD1_32u test Id: 95 - SUBV
OK   UME::SIMD::SIMD1_32u test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD1_32u test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD1_32u test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD1_32u test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD1_32u test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD1_32u test Id: 101 - MSUBV
OK   UME::SIMD::SIMD1_32u test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD1_32u test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD1_32u test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD1_32u test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD1_32u test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD1_32u test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD1_32u test Id: 108 - MSUBS
OK   UME::SIMD::SIMD1_32u test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 110 - SUBVA
OK   UME::SIMD::SIMD1_32u test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD1_32u test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD1_32u test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD1_32u test Id: 114 - SUBSA
OK   UME::SIMD::SIMD1_32u test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD1_32u test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD1_32u test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD1_32u test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD1_32u test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD1_32u test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD1_32u test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD1_32u test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD1_32u test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD1_32u test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD1_32u test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD1_32u test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD1_32u test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD1_32u test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD1_32u test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD1_32u test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD1_32u test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD1_32u test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD1_32u test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD1_32u test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD1_32u test Id: 137 - MULV
OK   UME::SIMD::SIMD1_32u test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD1_32u test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD1_32u test Id: 140 - MMULV
OK   UME::SIMD::SIMD1_32u test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD1_32u test Id: 142 - MULS
OK   UME::SIMD::SIMD1_32u test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 146 - MMULS
OK   UME::SIMD::SIMD1_32u test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 148 - MULVA
OK   UME::SIMD::SIMD1_32u test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD1_32u test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD1_32u test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD1_32u test Id: 152 - MMULVA
OK   UME::SIMD::SIMD1_32u test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_32u test Id: 154 - MULSA
OK   UME::SIMD::SIMD1_32u test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD1_32u test Id: 156 - MMULSA
OK   UME::SIMD::SIMD1_32u test Id: 157 - DIVV
OK   UME::SIMD::SIMD1_32u test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD1_32u test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD1_32u test Id: 160 - MDIVV
OK   UME::SIMD::SIMD1_32u test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD1_32u test Id: 162 - DIVS
OK   UME::SIMD::SIMD1_32u test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 165 - MDIVS
OK   UME::SIMD::SIMD1_32u test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 167 - DIVVA
OK   UME::SIMD::SIMD1_32u test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD1_32u test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD1_32u test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD1_32u test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD1_32u test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_32u test Id: 173 - DIVSA
OK   UME::SIMD::SIMD1_32u test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD1_32u test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD1_32u test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD1_32u test Id: 177 - RCP
OK   UME::SIMD::SIMD1_32u test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD1_32u test Id: 179 - MRCP
OK   UME::SIMD::SIMD1_32u test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD1_32u test Id: 181 - RCPS
OK   UME::SIMD::SIMD1_32u test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD1_32u test Id: 184 - MRCPS
OK   UME::SIMD::SIMD1_32u test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD1_32u test Id: 186 - RCPA
OK   UME::SIMD::SIMD1_32u test Id: 187 - MRCPA
OK   UME::SIMD::SIMD1_32u test Id: 188 - RCPSA
OK   UME::SIMD::SIMD1_32u test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD1_32u test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD1_32u test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD1_32u test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD1_32u test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD1_32u test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD1_32u test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD1_32u test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD1_32u test Id: 201 - CMPNES
OK   UME::SIMD::SIMD1_32u test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD1_32u test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD1_32u test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD1_32u test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD1_32u test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD1_32u test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD1_32u test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD1_32u test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD1_32u test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD1_32u test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD1_32u test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD1_32u test Id: 225 - CMPGES
OK   UME::SIMD::SIMD1_32u test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD1_32u test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD1_32u test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD1_32u test Id: 233 - CMPLES
OK   UME::SIMD::SIMD1_32u test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 238 - CMPEV
OK   UME::SIMD::SIMD1_32u test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD1_32u test Id: 240 - CMPES
OK   UME::SIMD::SIMD1_32u test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 243 - HADD
OK   UME::SIMD::SIMD1_32u test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD1_32u test Id: 245 - HADD gen
OK   UME::SIMD::SIMD1_32u test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD1_32u test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD1_32u test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD1_32u test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD1_32u test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD1_32u test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD1_32u test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD1_32u test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD1_32u test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD1_32u test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD1_32u test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD1_32u test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD1_32u test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD1_32u test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD1_32u test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD1_32u test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD1_32u test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD1_32u test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD1_32u test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD1_32u test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD1_32u test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD1_32u test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD1_32u test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD1_32u test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD1_32u test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD1_32u test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD1_32u test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD1_32u test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD1_32u test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD1_32u test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD1_32u test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD1_32u test Id: 277 - MAXV
OK   UME::SIMD::SIMD1_32u test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD1_32u test Id: 279 - MMAXV
OK   UME::SIMD::SIMD1_32u test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD1_32u test Id: 281 - MAXS
OK   UME::SIMD::SIMD1_32u test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 284 - MMAXS
OK   UME::SIMD::SIMD1_32u test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 286 - MAXVA
OK   UME::SIMD::SIMD1_32u test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD1_32u test Id: 288 - MAXSA
OK   UME::SIMD::SIMD1_32u test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD1_32u test Id: 290 - MINV
OK   UME::SIMD::SIMD1_32u test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD1_32u test Id: 292 - MMINV
OK   UME::SIMD::SIMD1_32u test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD1_32u test Id: 294 - MINS
OK   UME::SIMD::SIMD1_32u test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD1_32u test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD1_32u test Id: 297 - MMINS
OK   UME::SIMD::SIMD1_32u test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 299 - MINVA
OK   UME::SIMD::SIMD1_32u test Id: 300 - MMINVA
OK   UME::SIMD::SIMD1_32u test Id: 301 - MINSA
OK   UME::SIMD::SIMD1_32u test Id: 302 - MMINSA
OK   UME::SIMD::SIMD1_32u test Id: 303 - HMAX
OK   UME::SIMD::SIMD1_32u test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD1_32u test Id: 305 - HMAX
OK   UME::SIMD::SIMD1_32u test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD1_32u test Id: 307 - MHMAX
OK   UME::SIMD::SIMD1_32u test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD1_32u test Id: 309 - IMAX
OK   UME::SIMD::SIMD1_32u test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD1_32u test Id: 311 - MIMAX
OK   UME::SIMD::SIMD1_32u test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD1_32u test Id: 313 - HMIN
OK   UME::SIMD::SIMD1_32u test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD1_32u test Id: 315 - HMIN
OK   UME::SIMD::SIMD1_32u test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD1_32u test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD1_32u test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD1_32u test Id: 319 - IMIN
OK   UME::SIMD::SIMD1_32u test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD1_32u test Id: 321 - MIMIN
OK   UME::SIMD::SIMD1_32u test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD1_32u test Id: 323 - REMV gen
OK   UME::SIMD::SIMD1_32u test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD1_32u test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD1_32u test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD1_32u test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD1_32u test Id: 328 - REMS gen
OK   UME::SIMD::SIMD1_32u test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD1_32u test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD1_32u test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD1_32u test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD1_32u test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD1_32u test Id: 334 - LORV gen
OK   UME::SIMD::SIMD1_32u test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD1_32u test Id: 336 - BANDV
OK   UME::SIMD::SIMD1_32u test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD1_32u test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD1_32u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD1_32u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD1_32u test Id: 341 - BANDS
OK   UME::SIMD::SIMD1_32u test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 346 - MBANDS
OK   UME::SIMD::SIMD1_32u test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 348 - BANDVA
OK   UME::SIMD::SIMD1_32u test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD1_32u test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD1_32u test Id: 351 - BANDSA
OK   UME::SIMD::SIMD1_32u test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD1_32u test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD1_32u test Id: 354 - BORV
OK   UME::SIMD::SIMD1_32u test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD1_32u test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD1_32u test Id: 357 - MBORV
OK   UME::SIMD::SIMD1_32u test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD1_32u test Id: 359 - BORS
OK   UME::SIMD::SIMD1_32u test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 364 - MBORS
OK   UME::SIMD::SIMD1_32u test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 366 - BORVA
OK   UME::SIMD::SIMD1_32u test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD1_32u test Id: 368 - MBORVA
OK   UME::SIMD::SIMD1_32u test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD1_32u test Id: 370 - BORSA
OK   UME::SIMD::SIMD1_32u test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD1_32u test Id: 372 - MBORSA
OK   UME::SIMD::SIMD1_32u test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD1_32u test Id: 374 - BXORV
OK   UME::SIMD::SIMD1_32u test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD1_32u test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD1_32u test Id: 377 - MBXORV
OK   UME::SIMD::SIMD1_32u test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD1_32u test Id: 379 - BXORS
OK   UME::SIMD::SIMD1_32u test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 384 - MBXORS
OK   UME::SIMD::SIMD1_32u test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 386 - BXORVA
OK   UME::SIMD::SIMD1_32u test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD1_32u test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD1_32u test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD1_32u test Id: 390 - BXORSA
OK   UME::SIMD::SIMD1_32u test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD1_32u test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD1_32u test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD1_32u test Id: 394 - BNOT
OK   UME::SIMD::SIMD1_32u test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD1_32u test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD1_32u test Id: 397 - MBNOT
OK   UME::SIMD::SIMD1_32u test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD1_32u test Id: 399 - BNOTA
OK   UME::SIMD::SIMD1_32u test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD1_32u test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD1_32u test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD1_32u test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD1_32u test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD1_32u test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD1_32u test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD1_32u test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD1_32u test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD1_32u test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD1_32u test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD1_32u test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD1_32u test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD1_32u test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD1_32u test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD1_32u test Id: 415 - HBAND
OK   UME::SIMD::SIMD1_32u test Id: 416 - HBAND
OK   UME::SIMD::SIMD1_32u test Id: 417 - MHBAND
OK   UME::SIMD::SIMD1_32u test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD1_32u test Id: 419 - HBANDS
OK   UME::SIMD::SIMD1_32u test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD1_32u test Id: 421 - HBOR
OK   UME::SIMD::SIMD1_32u test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD1_32u test Id: 423 - MHBOR
OK   UME::SIMD::SIMD1_32u test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD1_32u test Id: 425 - HBORS
OK   UME::SIMD::SIMD1_32u test Id: 426 - MHBORS
OK   UME::SIMD::SIMD1_32u test Id: 427 - HBXOR
OK   UME::SIMD::SIMD1_32u test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD1_32u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD1_32u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD1_32u test Id: 431 - HBXORS
OK   UME::SIMD::SIMD1_32u test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD1_32u test Id: 433 - GATHERU
OK   UME::SIMD::SIMD1_32u test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD1_32u test Id: 435 - GATHERS
OK   UME::SIMD::SIMD1_32u test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD1_32u test Id: 437 - GATHERV
OK   UME::SIMD::SIMD1_32u test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD1_32u test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD1_32u test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD1_32u test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD1_32u test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD1_32u test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD1_32u test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD1_32u test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD1_32u test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD1_32u test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD1_32u test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD1_32u test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD1_32u test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD1_32u test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD1_32u test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD1_32u test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD1_32u test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD1_32u test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD1_32u test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD1_32u test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD1_32u test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD1_32u test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD1_32u test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD1_32u test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD1_32u test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD1_32u test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD1_32u test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD1_32u test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD1_32u test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD1_32u test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD1_32u test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD1_32u test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD1_32u test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD1_32u test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD1_32u test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD1_32u test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD1_32u test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD1_32u test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD1_32u test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD1_32u test Id: 477 - ROLV
OK   UME::SIMD::SIMD1_32u test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD1_32u test Id: 479 - MROLV
OK   UME::SIMD::SIMD1_32u test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD1_32u test Id: 481 - ROLS
OK   UME::SIMD::SIMD1_32u test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 483 - MROLS
OK   UME::SIMD::SIMD1_32u test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 485 - ROLVA
OK   UME::SIMD::SIMD1_32u test Id: 486 - MROLVA
OK   UME::SIMD::SIMD1_32u test Id: 487 - ROLSA
OK   UME::SIMD::SIMD1_32u test Id: 488 - MROLSA
OK   UME::SIMD::SIMD1_32u test Id: 489 - RORV
OK   UME::SIMD::SIMD1_32u test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD1_32u test Id: 491 - MRORV
OK   UME::SIMD::SIMD1_32u test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD1_32u test Id: 493 - RORS
OK   UME::SIMD::SIMD1_32u test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 495 - MRORS
OK   UME::SIMD::SIMD1_32u test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32u test Id: 497 - RORVA
OK   UME::SIMD::SIMD1_32u test Id: 498 - MRORVA
OK   UME::SIMD::SIMD1_32u test Id: 499 - RORSA
OK   UME::SIMD::SIMD1_32u test Id: 500 - MRORSA
OK   UME::SIMD::SIMD1_32u test Id: 501 - UTOI
OK   UME::SIMD::SIMD1_32u test Id: 502 - UTOF
OK   UME::SIMD::SIMD1_32u test Id: 503 - PROMOTE
OK   UME::SIMD::SIMD1_32u test Id: 504 - DEGRADE
OK   UME::SIMD::SIMD1_32i test Id: 1 - SET-CONSTR gen
OK   UME::SIMD::SIMD1_32i test Id: 2 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD1_32i test Id: 3 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD1_32i test Id: 4 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD1_32i test Id: 5 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD1_32i test Id: 6 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD1_32i test Id: 7 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD1_32i test Id: 8 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD1_32i test Id: 9 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD1_32i test Id: 10 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD1_32i test Id: 11 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD1_32i test Id: 12 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD1_32i test Id: 13 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD1_32i test Id: 14 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD1_32i test Id: 15 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD1_32i test Id: 16 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD1_32i test Id: 17 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD1_32i test Id: 18 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD1_32i test Id: 19 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD1_32i test Id: 20 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD1_32i test Id: 21 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD1_32i test Id: 22 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD1_32i test Id: 23 - INSERT
OK   UME::SIMD::SIMD1_32i test Id: 24 - INSERT(operator[] =)
OK   UME::SIMD::SIMD1_32i test Id: 25 - EXTRACT
OK   UME::SIMD::SIMD1_32i test Id: 26 - EXTRACT(operator[])
OK   UME::SIMD::SIMD1_32i test Id: 27 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD1_32i test Id: 28 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD1_32i test Id: 29 - ASSIGNV
OK   UME::SIMD::SIMD1_32i test Id: 30 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD1_32i test Id: 31 - MASSIGNV
OK   UME::SIMD::SIMD1_32i test Id: 32 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD1_32i test Id: 33 - ASSIGNS
OK   UME::SIMD::SIMD1_32i test Id: 34 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD1_32i test Id: 35 - MASSIGNS
OK   UME::SIMD::SIMD1_32i test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD1_32i test Id: 37 - LOAD/STORE
OK   UME::SIMD::SIMD1_32i test Id: 38 - MLOAD
OK   UME::SIMD::SIMD1_32i test Id: 39 - MSTORE
OK   UME::SIMD::SIMD1_32i test Id: 40 - LOADA/STOREA
OK   UME::SIMD::SIMD1_32i test Id: 41 - MLOADA
OK   UME::SIMD::SIMD1_32i test Id: 42 - MSTOREA
OK   UME::SIMD::SIMD1_32i test Id: 43 - SWIZZLE
OK   UME::SIMD::SIMD1_32i test Id: 44 - SORTA
OK   UME::SIMD::SIMD1_32i test Id: 45 - SORTD
OK   UME::SIMD::SIMD1_32i test Id: 46 - BLENDV gen
OK   UME::SIMD::SIMD1_32i test Id: 47 - ADDV
OK   UME::SIMD::SIMD1_32i test Id: 48 - ADDV(operator+)
OK   UME::SIMD::SIMD1_32i test Id: 49 - ADDV(function)
OK   UME::SIMD::SIMD1_32i test Id: 50 - ADDV gen
OK   UME::SIMD::SIMD1_32i test Id: 51 - ADDV(operator+) gen
OK   UME::SIMD::SIMD1_32i test Id: 52 - ADDV(function) gen
OK   UME::SIMD::SIMD1_32i test Id: 53 - MADDV
OK   UME::SIMD::SIMD1_32i test Id: 54 - MADDV(function)
OK   UME::SIMD::SIMD1_32i test Id: 55 - MADDV gen
OK   UME::SIMD::SIMD1_32i test Id: 56 - MADDV(function) gen
OK   UME::SIMD::SIMD1_32i test Id: 57 - ADDS
OK   UME::SIMD::SIMD1_32i test Id: 58 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 59 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 60 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD1_32i test Id: 61 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD1_32i test Id: 62 - ADDS gen
OK   UME::SIMD::SIMD1_32i test Id: 63 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD1_32i test Id: 64 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD1_32i test Id: 65 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD1_32i test Id: 66 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD1_32i test Id: 67 - MADDS
OK   UME::SIMD::SIMD1_32i test Id: 68 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 69 - MADDS gen
OK   UME::SIMD::SIMD1_32i test Id: 70 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD1_32i test Id: 71 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD1_32i test Id: 72 - ADDVA
OK   UME::SIMD::SIMD1_32i test Id: 73 - ADDVA(operator+=)
OK   UME::SIMD::SIMD1_32i test Id: 74 - ADDVA gen
OK   UME::SIMD::SIMD1_32i test Id: 75 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD1_32i test Id: 76 - MADDVA
OK   UME::SIMD::SIMD1_32i test Id: 77 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD1_32i test Id: 78 - ADDSA
OK   UME::SIMD::SIMD1_32i test Id: 79 - ADDSA(operator+=)
OK   UME::SIMD::SIMD1_32i test Id: 80 - MADDSA
OK   UME::SIMD::SIMD1_32i test Id: 81 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD1_32i test Id: 82 - SADDV gen
OK   UME::SIMD::SIMD1_32i test Id: 83 - SADDV(function) gen
OK   UME::SIMD::SIMD1_32i test Id: 84 - POSTINC
OK   UME::SIMD::SIMD1_32i test Id: 85 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD1_32i test Id: 86 - POSTINC(function)
OK   UME::SIMD::SIMD1_32i test Id: 87 - MPOSTINC
OK   UME::SIMD::SIMD1_32i test Id: 88 - MPOSTINC(function)
OK   UME::SIMD::SIMD1_32i test Id: 89 - PREFINC
OK   UME::SIMD::SIMD1_32i test Id: 90 - PREFINC(operator++())
OK   UME::SIMD::SIMD1_32i test Id: 91 - PREFINC(function)
OK   UME::SIMD::SIMD1_32i test Id: 92 - MPREFINC
OK   UME::SIMD::SIMD1_32i test Id: 93 - MPREFINC(function)
OK   UME::SIMD::SIMD1_32i test Id: 94 - SUBV
OK   UME::SIMD::SIMD1_32i test Id: 95 - SUBV(operator-)
OK   UME::SIMD::SIMD1_32i test Id: 96 - SUBV(function)
OK   UME::SIMD::SIMD1_32i test Id: 97 - SUBV gen
OK   UME::SIMD::SIMD1_32i test Id: 98 - SUBV(operator-) gen
OK   UME::SIMD::SIMD1_32i test Id: 99 - SUBV(function) gen
OK   UME::SIMD::SIMD1_32i test Id: 100 - MSUBV
OK   UME::SIMD::SIMD1_32i test Id: 101 - MSUBV(function)
OK   UME::SIMD::SIMD1_32i test Id: 102 - MSUBV gen
OK   UME::SIMD::SIMD1_32i test Id: 103 - MSUBV(function) gen
OK   UME::SIMD::SIMD1_32i test Id: 104 - SUBS gen
OK   UME::SIMD::SIMD1_32i test Id: 105 - SUBS(operator-) gen
OK   UME::SIMD::SIMD1_32i test Id: 106 - SUBS(function) gen
OK   UME::SIMD::SIMD1_32i test Id: 107 - MSUBS
OK   UME::SIMD::SIMD1_32i test Id: 108 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 109 - SUBVA
OK   UME::SIMD::SIMD1_32i test Id: 110 - SUBVA(operator-=)
OK   UME::SIMD::SIMD1_32i test Id: 111 - MSUBVA
OK   UME::SIMD::SIMD1_32i test Id: 112 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD1_32i test Id: 113 - SUBSA
OK   UME::SIMD::SIMD1_32i test Id: 114 - MSUBSA
OK   UME::SIMD::SIMD1_32i test Id: 115 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD1_32i test Id: 116 - SUBFROMV
OK   UME::SIMD::SIMD1_32i test Id: 117 - MSUBFROMV
OK   UME::SIMD::SIMD1_32i test Id: 118 - SUBFROMS
OK   UME::SIMD::SIMD1_32i test Id: 119 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 120 - MSUBFROMS
OK   UME::SIMD::SIMD1_32i test Id: 121 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 122 - SUBFROMVA
OK   UME::SIMD::SIMD1_32i test Id: 123 - MSUBFROMVA
OK   UME::SIMD::SIMD1_32i test Id: 124 - SUBFROMSA
OK   UME::SIMD::SIMD1_32i test Id: 125 - MSUBFROMSA
OK   UME::SIMD::SIMD1_32i test Id: 126 - POSTDEC
OK   UME::SIMD::SIMD1_32i test Id: 127 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD1_32i test Id: 128 - POSTDEC(function)
OK   UME::SIMD::SIMD1_32i test Id: 129 - MPOSTDEC
OK   UME::SIMD::SIMD1_32i test Id: 130 - MPOSTDEC(function)
OK   UME::SIMD::SIMD1_32i test Id: 131 - PREFDEC
OK   UME::SIMD::SIMD1_32i test Id: 132 - PREFDEC(operator--())
OK   UME::SIMD::SIMD1_32i test Id: 133 - PREFDEC(function)
OK   UME::SIMD::SIMD1_32i test Id: 134 - MPREFDEC
OK   UME::SIMD::SIMD1_32i test Id: 135 - MPREFDEC(function)
OK   UME::SIMD::SIMD1_32i test Id: 136 - MULV
OK   UME::SIMD::SIMD1_32i test Id: 137 - MULV(operator*)
OK   UME::SIMD::SIMD1_32i test Id: 138 - MULV(function)
OK   UME::SIMD::SIMD1_32i test Id: 139 - MMULV
OK   UME::SIMD::SIMD1_32i test Id: 140 - MMULV(function)
OK   UME::SIMD::SIMD1_32i test Id: 141 - MULS
OK   UME::SIMD::SIMD1_32i test Id: 142 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 143 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 144 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 145 - MMULS
OK   UME::SIMD::SIMD1_32i test Id: 146 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 147 - MULVA
OK   UME::SIMD::SIMD1_32i test Id: 148 - MULVA(operator*)
OK   UME::SIMD::SIMD1_32i test Id: 149 - MULVA gen
OK   UME::SIMD::SIMD1_32i test Id: 150 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD1_32i test Id: 151 - MMULVA
OK   UME::SIMD::SIMD1_32i test Id: 152 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_32i test Id: 153 - MULSA
OK   UME::SIMD::SIMD1_32i test Id: 154 - MULSA(operator*=)
OK   UME::SIMD::SIMD1_32i test Id: 155 - MMULSA
OK   UME::SIMD::SIMD1_32i test Id: 156 - DIVV
OK   UME::SIMD::SIMD1_32i test Id: 157 - DIVV(operator/)
OK   UME::SIMD::SIMD1_32i test Id: 158 - DIVV(function)
OK   UME::SIMD::SIMD1_32i test Id: 159 - MDIVV
OK   UME::SIMD::SIMD1_32i test Id: 160 - MDIVV(function)
OK   UME::SIMD::SIMD1_32i test Id: 161 - DIVS
OK   UME::SIMD::SIMD1_32i test Id: 162 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 163 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 164 - MDIVS
OK   UME::SIMD::SIMD1_32i test Id: 165 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 166 - DIVVA
OK   UME::SIMD::SIMD1_32i test Id: 167 - DIVVA(operator/=)
OK   UME::SIMD::SIMD1_32i test Id: 168 - DIVVA gen
OK   UME::SIMD::SIMD1_32i test Id: 169 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD1_32i test Id: 170 - MDIVVA
OK   UME::SIMD::SIMD1_32i test Id: 171 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_32i test Id: 172 - DIVSA
OK   UME::SIMD::SIMD1_32i test Id: 173 - DIVSA(operator/=)
OK   UME::SIMD::SIMD1_32i test Id: 174 - MDIVSA
OK   UME::SIMD::SIMD1_32i test Id: 175 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD1_32i test Id: 176 - RCP
OK   UME::SIMD::SIMD1_32i test Id: 177 - RCP(function)
OK   UME::SIMD::SIMD1_32i test Id: 178 - MRCP
OK   UME::SIMD::SIMD1_32i test Id: 179 - MRCP(function)
OK   UME::SIMD::SIMD1_32i test Id: 180 - RCPS
OK   UME::SIMD::SIMD1_32i test Id: 181 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 182 - RCPS(function)
OK   UME::SIMD::SIMD1_32i test Id: 183 - MRCPS
OK   UME::SIMD::SIMD1_32i test Id: 184 - MRCPS (function)
OK   UME::SIMD::SIMD1_32i test Id: 185 - RCPA
OK   UME::SIMD::SIMD1_32i test Id: 186 - MRCPA
OK   UME::SIMD::SIMD1_32i test Id: 187 - RCPSA
OK   UME::SIMD::SIMD1_32i test Id: 188 - MRCPSA
OK   UME::SIMD::SIMD1_32i test Id: 189 - CMPEQV
OK   UME::SIMD::SIMD1_32i test Id: 190 - CMPEQV(operator==)
OK   UME::SIMD::SIMD1_32i test Id: 191 - CMPEQV(function)
OK   UME::SIMD::SIMD1_32i test Id: 192 - CMPEQS
OK   UME::SIMD::SIMD1_32i test Id: 193 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 194 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 195 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 196 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 197 - CMPNEV
OK   UME::SIMD::SIMD1_32i test Id: 198 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD1_32i test Id: 199 - CMPNEV(function)
OK   UME::SIMD::SIMD1_32i test Id: 200 - CMPNES
OK   UME::SIMD::SIMD1_32i test Id: 201 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 202 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 203 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 204 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 205 - CMPGTV
OK   UME::SIMD::SIMD1_32i test Id: 206 - CMPGTV(operator>)
OK   UME::SIMD::SIMD1_32i test Id: 207 - CMPGTV(function)
OK   UME::SIMD::SIMD1_32i test Id: 208 - CMPGTS
OK   UME::SIMD::SIMD1_32i test Id: 209 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 210 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 211 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 212 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 213 - CMPLTV
OK   UME::SIMD::SIMD1_32i test Id: 214 - CMPLTV(operator<)
OK   UME::SIMD::SIMD1_32i test Id: 215 - CMPLTV(function)
OK   UME::SIMD::SIMD1_32i test Id: 216 - CMPLTS
OK   UME::SIMD::SIMD1_32i test Id: 217 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 218 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 219 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 220 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 221 - CMPGEV
OK   UME::SIMD::SIMD1_32i test Id: 222 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD1_32i test Id: 223 - CMPGEV(function)
OK   UME::SIMD::SIMD1_32i test Id: 224 - CMPGES
OK   UME::SIMD::SIMD1_32i test Id: 225 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 226 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 227 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 228 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 229 - CMPLEV
OK   UME::SIMD::SIMD1_32i test Id: 230 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD1_32i test Id: 231 - CMPLEV(function)
OK   UME::SIMD::SIMD1_32i test Id: 232 - CMPLES
OK   UME::SIMD::SIMD1_32i test Id: 233 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 234 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 235 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 236 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 237 - CMPEV
OK   UME::SIMD::SIMD1_32i test Id: 238 - CMPEV(function)
OK   UME::SIMD::SIMD1_32i test Id: 239 - CMPES
OK   UME::SIMD::SIMD1_32i test Id: 240 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 241 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 242 - HADD
OK   UME::SIMD::SIMD1_32i test Id: 243 - HADD(function)
OK   UME::SIMD::SIMD1_32i test Id: 244 - HADD gen
OK   UME::SIMD::SIMD1_32i test Id: 245 - HADD(function) gen
OK   UME::SIMD::SIMD1_32i test Id: 246 - MHADD gen
OK   UME::SIMD::SIMD1_32i test Id: 247 - MHADD(function) gen
OK   UME::SIMD::SIMD1_32i test Id: 248 - HADDS gen
OK   UME::SIMD::SIMD1_32i test Id: 249 - HADDS(function) gen
OK   UME::SIMD::SIMD1_32i test Id: 250 - MHADD gen
OK   UME::SIMD::SIMD1_32i test Id: 251 - MHADDS(function) gen
OK   UME::SIMD::SIMD1_32i test Id: 252 - HMUL gen
OK   UME::SIMD::SIMD1_32i test Id: 253 - HMUL(function) gen
OK   UME::SIMD::SIMD1_32i test Id: 254 - MHMUL gen
OK   UME::SIMD::SIMD1_32i test Id: 255 - MHMUL(function) gen
OK   UME::SIMD::SIMD1_32i test Id: 256 - HMULS gen
OK   UME::SIMD::SIMD1_32i test Id: 257 - HMULS(function) gen
OK   UME::SIMD::SIMD1_32i test Id: 258 - MHMUL gen
OK   UME::SIMD::SIMD1_32i test Id: 259 - MHMULS(function) gen
OK   UME::SIMD::SIMD1_32i test Id: 260 - FMULADDV
OK   UME::SIMD::SIMD1_32i test Id: 261 - FMULADDV(function)
OK   UME::SIMD::SIMD1_32i test Id: 262 - MFMULADDV
OK   UME::SIMD::SIMD1_32i test Id: 263 - MFMULADDV(function)
OK   UME::SIMD::SIMD1_32i test Id: 264 - FMULSUBV
OK   UME::SIMD::SIMD1_32i test Id: 265 - FMULSUBV(function)
OK   UME::SIMD::SIMD1_32i test Id: 266 - MFMULSUBV
OK   UME::SIMD::SIMD1_32i test Id: 267 - MFMULSUBV(function)
OK   UME::SIMD::SIMD1_32i test Id: 268 - FADDMULV
OK   UME::SIMD::SIMD1_32i test Id: 269 - FADDMULV(function)
OK   UME::SIMD::SIMD1_32i test Id: 270 - MFADDMULV
OK   UME::SIMD::SIMD1_32i test Id: 271 - MFADDMULV(function)
OK   UME::SIMD::SIMD1_32i test Id: 272 - FSUBMULV
OK   UME::SIMD::SIMD1_32i test Id: 273 - FSUBMULV(function)
OK   UME::SIMD::SIMD1_32i test Id: 274 - MFSUBMULV
OK   UME::SIMD::SIMD1_32i test Id: 275 - MFSUBMULV(function)
OK   UME::SIMD::SIMD1_32i test Id: 276 - MAXV
OK   UME::SIMD::SIMD1_32i test Id: 277 - MAXV(function)
OK   UME::SIMD::SIMD1_32i test Id: 278 - MMAXV
OK   UME::SIMD::SIMD1_32i test Id: 279 - MMAXV(function)
OK   UME::SIMD::SIMD1_32i test Id: 280 - MAXS
OK   UME::SIMD::SIMD1_32i test Id: 281 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 282 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 283 - MMAXS
OK   UME::SIMD::SIMD1_32i test Id: 284 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 285 - MAXVA
OK   UME::SIMD::SIMD1_32i test Id: 286 - MMAXVA
OK   UME::SIMD::SIMD1_32i test Id: 287 - MAXSA
OK   UME::SIMD::SIMD1_32i test Id: 288 - MMAXSA
OK   UME::SIMD::SIMD1_32i test Id: 289 - MINV
OK   UME::SIMD::SIMD1_32i test Id: 290 - MINV(function)
OK   UME::SIMD::SIMD1_32i test Id: 291 - MMINV
OK   UME::SIMD::SIMD1_32i test Id: 292 - MMINV(function)
OK   UME::SIMD::SIMD1_32i test Id: 293 - MINS
OK   UME::SIMD::SIMD1_32i test Id: 294 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD1_32i test Id: 295 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD1_32i test Id: 296 - MMINS
OK   UME::SIMD::SIMD1_32i test Id: 297 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 298 - MINVA
OK   UME::SIMD::SIMD1_32i test Id: 299 - MMINVA
OK   UME::SIMD::SIMD1_32i test Id: 300 - MINSA
OK   UME::SIMD::SIMD1_32i test Id: 301 - MMINSA
OK   UME::SIMD::SIMD1_32i test Id: 302 - HMAX
OK   UME::SIMD::SIMD1_32i test Id: 303 - HMAX(function)
OK   UME::SIMD::SIMD1_32i test Id: 304 - HMAX
OK   UME::SIMD::SIMD1_32i test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD1_32i test Id: 306 - MHMAX
OK   UME::SIMD::SIMD1_32i test Id: 307 - MHMAX(function)
OK   UME::SIMD::SIMD1_32i test Id: 308 - IMAX
OK   UME::SIMD::SIMD1_32i test Id: 309 - IMAX(function)
OK   UME::SIMD::SIMD1_32i test Id: 310 - MIMAX
OK   UME::SIMD::SIMD1_32i test Id: 311 - MIMAX(function)
OK   UME::SIMD::SIMD1_32i test Id: 312 - HMIN
OK   UME::SIMD::SIMD1_32i test Id: 313 - HMIN(function)
OK   UME::SIMD::SIMD1_32i test Id: 314 - HMIN
OK   UME::SIMD::SIMD1_32i test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD1_32i test Id: 316 - MHMIN gen
OK   UME::SIMD::SIMD1_32i test Id: 317 - MHMIN(function) gen
OK   UME::SIMD::SIMD1_32i test Id: 318 - IMIN
OK   UME::SIMD::SIMD1_32i test Id: 319 - IMIN(function)
OK   UME::SIMD::SIMD1_32i test Id: 320 - MIMIN
OK   UME::SIMD::SIMD1_32i test Id: 321 - MIMIN(function)
OK   UME::SIMD::SIMD1_32i test Id: 322 - REMV gen
OK   UME::SIMD::SIMD1_32i test Id: 323 - REMV(operator%) gen
OK   UME::SIMD::SIMD1_32i test Id: 324 - REMV(function) gen
OK   UME::SIMD::SIMD1_32i test Id: 325 - MREMV gen
OK   UME::SIMD::SIMD1_32i test Id: 326 - MREMV(function) gen
OK   UME::SIMD::SIMD1_32i test Id: 327 - REMS gen
OK   UME::SIMD::SIMD1_32i test Id: 328 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD1_32i test Id: 329 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD1_32i test Id: 330 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD1_32i test Id: 331 - LANDV gen
OK   UME::SIMD::SIMD1_32i test Id: 332 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD1_32i test Id: 333 - LORV gen
OK   UME::SIMD::SIMD1_32i test Id: 334 - LORV gen (operator ||)
OK   UME::SIMD::SIMD1_32i test Id: 335 - BANDV
OK   UME::SIMD::SIMD1_32i test Id: 336 - BANDV(operator&)
OK   UME::SIMD::SIMD1_32i test Id: 337 - BANDV(function)
OK   UME::SIMD::SIMD1_32i test Id: 338 - MBANDV
OK   UME::SIMD::SIMD1_32i test Id: 339 - MBANDV
OK   UME::SIMD::SIMD1_32i test Id: 340 - BANDS
OK   UME::SIMD::SIMD1_32i test Id: 341 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 342 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 343 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 344 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 345 - MBANDS
OK   UME::SIMD::SIMD1_32i test Id: 346 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 347 - BANDVA
OK   UME::SIMD::SIMD1_32i test Id: 348 - MBANDVA
OK   UME::SIMD::SIMD1_32i test Id: 349 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD1_32i test Id: 350 - BANDSA
OK   UME::SIMD::SIMD1_32i test Id: 351 - MBANDSA
OK   UME::SIMD::SIMD1_32i test Id: 352 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD1_32i test Id: 353 - BORV
OK   UME::SIMD::SIMD1_32i test Id: 354 - BORV(operator |)
OK   UME::SIMD::SIMD1_32i test Id: 355 - BORV(function)
OK   UME::SIMD::SIMD1_32i test Id: 356 - MBORV
OK   UME::SIMD::SIMD1_32i test Id: 357 - MBORV(function)
OK   UME::SIMD::SIMD1_32i test Id: 358 - BORS
OK   UME::SIMD::SIMD1_32i test Id: 359 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 360 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 361 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 362 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 363 - MBORS
OK   UME::SIMD::SIMD1_32i test Id: 364 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 365 - BORVA
OK   UME::SIMD::SIMD1_32i test Id: 366 - BORVA(operator|=)
OK   UME::SIMD::SIMD1_32i test Id: 367 - MBORVA
OK   UME::SIMD::SIMD1_32i test Id: 368 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD1_32i test Id: 369 - BORSA
OK   UME::SIMD::SIMD1_32i test Id: 370 - BORSA(operator|=)
OK   UME::SIMD::SIMD1_32i test Id: 371 - MBORSA
OK   UME::SIMD::SIMD1_32i test Id: 372 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD1_32i test Id: 373 - BXORV
OK   UME::SIMD::SIMD1_32i test Id: 374 - BXORV(operator^
OK   UME::SIMD::SIMD1_32i test Id: 375 - BXORV(function
OK   UME::SIMD::SIMD1_32i test Id: 376 - MBXORV
OK   UME::SIMD::SIMD1_32i test Id: 377 - MBXORV(function)
OK   UME::SIMD::SIMD1_32i test Id: 378 - BXORS
OK   UME::SIMD::SIMD1_32i test Id: 379 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 380 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 381 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 382 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 383 - MBXORS
OK   UME::SIMD::SIMD1_32i test Id: 384 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 385 - BXORVA
OK   UME::SIMD::SIMD1_32i test Id: 386 - BXORVA(operator^=)
OK   UME::SIMD::SIMD1_32i test Id: 387 - MBXORVA
OK   UME::SIMD::SIMD1_32i test Id: 388 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD1_32i test Id: 389 - BXORSA
OK   UME::SIMD::SIMD1_32i test Id: 390 - BXORSA(operator^=)
OK   UME::SIMD::SIMD1_32i test Id: 391 - MBXORSA
OK   UME::SIMD::SIMD1_32i test Id: 392 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD1_32i test Id: 393 - BNOT
OK   UME::SIMD::SIMD1_32i test Id: 394 - BNOT(operator!)
OK   UME::SIMD::SIMD1_32i test Id: 395 - BNOT(function)
OK   UME::SIMD::SIMD1_32i test Id: 396 - MBNOT
OK   UME::SIMD::SIMD1_32i test Id: 397 - MBNOT(function)
OK   UME::SIMD::SIMD1_32i test Id: 398 - BNOTA
OK   UME::SIMD::SIMD1_32i test Id: 399 - MBNOTA
OK   UME::SIMD::SIMD1_32i test Id: 400 - BANDNOTV
OK   UME::SIMD::SIMD1_32i test Id: 401 - BANDNOTV (function)
OK   UME::SIMD::SIMD1_32i test Id: 402 - MBANDNOTV
OK   UME::SIMD::SIMD1_32i test Id: 403 - MBANDNOTV (function)
OK   UME::SIMD::SIMD1_32i test Id: 404 - BANDNOTS
OK   UME::SIMD::SIMD1_32i test Id: 405 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD1_32i test Id: 406 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD1_32i test Id: 407 - MBANDNOTS
OK   UME::SIMD::SIMD1_32i test Id: 408 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD1_32i test Id: 409 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD1_32i test Id: 410 - BANDNOTVA
OK   UME::SIMD::SIMD1_32i test Id: 411 - MBANDNOTVA
OK   UME::SIMD::SIMD1_32i test Id: 412 - BANDNOTSA
OK   UME::SIMD::SIMD1_32i test Id: 413 - MBANDNOTSA
OK   UME::SIMD::SIMD1_32i test Id: 414 - HBAND
OK   UME::SIMD::SIMD1_32i test Id: 415 - HBAND
OK   UME::SIMD::SIMD1_32i test Id: 416 - MHBAND
OK   UME::SIMD::SIMD1_32i test Id: 417 - MHBAND(function)
OK   UME::SIMD::SIMD1_32i test Id: 418 - HBANDS
OK   UME::SIMD::SIMD1_32i test Id: 419 - MHBANDS
OK   UME::SIMD::SIMD1_32i test Id: 420 - HBOR
OK   UME::SIMD::SIMD1_32i test Id: 421 - HBOR(function)
OK   UME::SIMD::SIMD1_32i test Id: 422 - MHBOR
OK   UME::SIMD::SIMD1_32i test Id: 423 - MHBOR(function)
OK   UME::SIMD::SIMD1_32i test Id: 424 - HBORS
OK   UME::SIMD::SIMD1_32i test Id: 425 - MHBORS
OK   UME::SIMD::SIMD1_32i test Id: 426 - HBXOR
OK   UME::SIMD::SIMD1_32i test Id: 427 - HBXOR(function)
OK   UME::SIMD::SIMD1_32i test Id: 428 - MHBXOR
OK   UME::SIMD::SIMD1_32i test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD1_32i test Id: 430 - HBXORS
OK   UME::SIMD::SIMD1_32i test Id: 431 - MHBXORS
OK   UME::SIMD::SIMD1_32i test Id: 432 - GATHERU
OK   UME::SIMD::SIMD1_32i test Id: 433 - MGATHERU
OK   UME::SIMD::SIMD1_32i test Id: 434 - GATHERS
OK   UME::SIMD::SIMD1_32i test Id: 435 - MGATHERS
OK   UME::SIMD::SIMD1_32i test Id: 436 - GATHERV
OK   UME::SIMD::SIMD1_32i test Id: 437 - MGATHERV
OK   UME::SIMD::SIMD1_32i test Id: 438 - SCATTERU
OK   UME::SIMD::SIMD1_32i test Id: 439 - MSCATTERU
OK   UME::SIMD::SIMD1_32i test Id: 440 - SCATTERS
OK   UME::SIMD::SIMD1_32i test Id: 441 - MSCATTERS
OK   UME::SIMD::SIMD1_32i test Id: 442 - SCATTERV
OK   UME::SIMD::SIMD1_32i test Id: 443 - MSCATTERV
OK   UME::SIMD::SIMD1_32i test Id: 444 - LSHV gen
OK   UME::SIMD::SIMD1_32i test Id: 445 - LSHV (function) gen
OK   UME::SIMD::SIMD1_32i test Id: 446 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD1_32i test Id: 447 - MLSHV gen
OK   UME::SIMD::SIMD1_32i test Id: 448 - MLSHV (function) gen
OK   UME::SIMD::SIMD1_32i test Id: 449 - LSHS gen
OK   UME::SIMD::SIMD1_32i test Id: 450 - LSHS (function) gen
OK   UME::SIMD::SIMD1_32i test Id: 451 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD1_32i test Id: 452 - MLSHS gen
OK   UME::SIMD::SIMD1_32i test Id: 453 - MLSHS (function) gen
OK   UME::SIMD::SIMD1_32i test Id: 454 - LSHVA gen
OK   UME::SIMD::SIMD1_32i test Id: 455 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD1_32i test Id: 456 - MLSHVA gen
OK   UME::SIMD::SIMD1_32i test Id: 457 - LSHSA gen
OK   UME::SIMD::SIMD1_32i test Id: 458 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD1_32i test Id: 459 - MLSHSA gen
OK   UME::SIMD::SIMD1_32i test Id: 460 - RSHV gen
OK   UME::SIMD::SIMD1_32i test Id: 461 - RSHV (function) gen
OK   UME::SIMD::SIMD1_32i test Id: 462 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD1_32i test Id: 463 - MRSHV gen
OK   UME::SIMD::SIMD1_32i test Id: 464 - MRSHV (function) gen
OK   UME::SIMD::SIMD1_32i test Id: 465 - RSHS gen
OK   UME::SIMD::SIMD1_32i test Id: 466 - RSHS (function) gen
OK   UME::SIMD::SIMD1_32i test Id: 467 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD1_32i test Id: 468 - MRSHS gen
OK   UME::SIMD::SIMD1_32i test Id: 469 - MRSHS (function) gen
OK   UME::SIMD::SIMD1_32i test Id: 470 - RSHVA gen
OK   UME::SIMD::SIMD1_32i test Id: 471 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD1_32i test Id: 472 - MRSHVA gen
OK   UME::SIMD::SIMD1_32i test Id: 473 - RSHSA gen
OK   UME::SIMD::SIMD1_32i test Id: 474 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD1_32i test Id: 475 - MRSHSA gen
OK   UME::SIMD::SIMD1_32i test Id: 476 - ROLV
OK   UME::SIMD::SIMD1_32i test Id: 477 - ROLV(function)
OK   UME::SIMD::SIMD1_32i test Id: 478 - MROLV
OK   UME::SIMD::SIMD1_32i test Id: 479 - MROLV(function)
OK   UME::SIMD::SIMD1_32i test Id: 480 - ROLS
OK   UME::SIMD::SIMD1_32i test Id: 481 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 482 - MROLS
OK   UME::SIMD::SIMD1_32i test Id: 483 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 484 - ROLVA
OK   UME::SIMD::SIMD1_32i test Id: 485 - MROLVA
OK   UME::SIMD::SIMD1_32i test Id: 486 - ROLSA
OK   UME::SIMD::SIMD1_32i test Id: 487 - MROLSA
OK   UME::SIMD::SIMD1_32i test Id: 488 - RORV
OK   UME::SIMD::SIMD1_32i test Id: 489 - RORV(function)
OK   UME::SIMD::SIMD1_32i test Id: 490 - MRORV
OK   UME::SIMD::SIMD1_32i test Id: 491 - MRORV(function)
OK   UME::SIMD::SIMD1_32i test Id: 492 - RORS
OK   UME::SIMD::SIMD1_32i test Id: 493 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 494 - MRORS
OK   UME::SIMD::SIMD1_32i test Id: 495 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32i test Id: 496 - RORVA
OK   UME::SIMD::SIMD1_32i test Id: 497 - MRORVA
OK   UME::SIMD::SIMD1_32i test Id: 498 - RORSA
OK   UME::SIMD::SIMD1_32i test Id: 499 - MRORSA
OK   UME::SIMD::SIMD1_32i test Id: 500 - NEG
OK   UME::SIMD::SIMD1_32i test Id: 501 - NEG(operator-)
OK   UME::SIMD::SIMD1_32i test Id: 502 - NEG(function)
OK   UME::SIMD::SIMD1_32i test Id: 503 - MNEG
OK   UME::SIMD::SIMD1_32i test Id: 504 - MNEG(function)
OK   UME::SIMD::SIMD1_32i test Id: 505 - NEGA
OK   UME::SIMD::SIMD1_32i test Id: 506 - MNEGA
OK   UME::SIMD::SIMD1_32i test Id: 507 - ABS
OK   UME::SIMD::SIMD1_32i test Id: 508 - ABS(function)
OK   UME::SIMD::SIMD1_32i test Id: 509 - MABS
OK   UME::SIMD::SIMD1_32i test Id: 510 - MABS(function)
OK   UME::SIMD::SIMD1_32i test Id: 511 - ABSA
OK   UME::SIMD::SIMD1_32i test Id: 512 - MABSA
OK   UME::SIMD::SIMD1_32i test Id: 513 - COPYSIGN gen
OK   UME::SIMD::SIMD1_32i test Id: 514 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD1_32i test Id: 515 - ITOU
OK   UME::SIMD::SIMD1_32i test Id: 516 - ITOF
OK   UME::SIMD::SIMD1_32i test Id: 517 - PROMOTE
OK   UME::SIMD::SIMD1_32i test Id: 518 - DEGRADE
OK   UME::SIMD::SIMD1_32i test Id: 519 - ZERO-CONSTR
OK   UME::SIMD::SIMD1_32f test Id: 1 - SET-CONSTR gen
OK   UME::SIMD::SIMD1_32f test Id: 2 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD1_32f test Id: 3 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD1_32f test Id: 4 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD1_32f test Id: 5 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD1_32f test Id: 6 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD1_32f test Id: 7 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD1_32f test Id: 8 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD1_32f test Id: 9 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD1_32f test Id: 10 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD1_32f test Id: 11 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD1_32f test Id: 12 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD1_32f test Id: 13 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD1_32f test Id: 14 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD1_32f test Id: 15 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD1_32f test Id: 16 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD1_32f test Id: 17 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD1_32f test Id: 18 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD1_32f test Id: 19 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD1_32f test Id: 20 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD1_32f test Id: 21 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD1_32f test Id: 22 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD1_32f test Id: 23 - INSERT
OK   UME::SIMD::SIMD1_32f test Id: 24 - INSERT(operator[] =)
OK   UME::SIMD::SIMD1_32f test Id: 25 - EXTRACT
OK   UME::SIMD::SIMD1_32f test Id: 26 - EXTRACT(operator[])
OK   UME::SIMD::SIMD1_32f test Id: 27 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD1_32f test Id: 28 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD1_32f test Id: 29 - ASSIGNV
OK   UME::SIMD::SIMD1_32f test Id: 30 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD1_32f test Id: 31 - MASSIGNV
OK   UME::SIMD::SIMD1_32f test Id: 32 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD1_32f test Id: 33 - ASSIGNS
OK   UME::SIMD::SIMD1_32f test Id: 34 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD1_32f test Id: 35 - MASSIGNS
OK   UME::SIMD::SIMD1_32f test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD1_32f test Id: 37 - LOAD/STORE
OK   UME::SIMD::SIMD1_32f test Id: 38 - MLOAD
OK   UME::SIMD::SIMD1_32f test Id: 39 - MSTORE
OK   UME::SIMD::SIMD1_32f test Id: 40 - LOADA/STOREA
OK   UME::SIMD::SIMD1_32f test Id: 41 - MLOADA
OK   UME::SIMD::SIMD1_32f test Id: 42 - MSTOREA
OK   UME::SIMD::SIMD1_32f test Id: 43 - SWIZZLE
OK   UME::SIMD::SIMD1_32f test Id: 44 - SORTA
OK   UME::SIMD::SIMD1_32f test Id: 45 - SORTD
OK   UME::SIMD::SIMD1_32f test Id: 46 - BLENDV gen
OK   UME::SIMD::SIMD1_32f test Id: 47 - ADDV
OK   UME::SIMD::SIMD1_32f test Id: 48 - ADDV(operator+)
OK   UME::SIMD::SIMD1_32f test Id: 49 - ADDV(function)
OK   UME::SIMD::SIMD1_32f test Id: 50 - ADDV gen
OK   UME::SIMD::SIMD1_32f test Id: 51 - ADDV(operator+) gen
OK   UME::SIMD::SIMD1_32f test Id: 52 - ADDV(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 53 - MADDV
OK   UME::SIMD::SIMD1_32f test Id: 54 - MADDV(function)
OK   UME::SIMD::SIMD1_32f test Id: 55 - MADDV gen
OK   UME::SIMD::SIMD1_32f test Id: 56 - MADDV(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 57 - ADDS
OK   UME::SIMD::SIMD1_32f test Id: 58 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 59 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 60 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD1_32f test Id: 61 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD1_32f test Id: 62 - ADDS gen
OK   UME::SIMD::SIMD1_32f test Id: 63 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD1_32f test Id: 64 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD1_32f test Id: 65 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD1_32f test Id: 66 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD1_32f test Id: 67 - MADDS
OK   UME::SIMD::SIMD1_32f test Id: 68 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 69 - MADDS gen
OK   UME::SIMD::SIMD1_32f test Id: 70 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD1_32f test Id: 71 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD1_32f test Id: 72 - ADDVA
OK   UME::SIMD::SIMD1_32f test Id: 73 - ADDVA(operator+=)
OK   UME::SIMD::SIMD1_32f test Id: 74 - ADDVA gen
OK   UME::SIMD::SIMD1_32f test Id: 75 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD1_32f test Id: 76 - MADDVA
OK   UME::SIMD::SIMD1_32f test Id: 77 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD1_32f test Id: 78 - ADDSA
OK   UME::SIMD::SIMD1_32f test Id: 79 - ADDSA(operator+=)
OK   UME::SIMD::SIMD1_32f test Id: 80 - MADDSA
OK   UME::SIMD::SIMD1_32f test Id: 81 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD1_32f test Id: 82 - SADDV gen
OK   UME::SIMD::SIMD1_32f test Id: 83 - SADDV(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 84 - POSTINC
OK   UME::SIMD::SIMD1_32f test Id: 85 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD1_32f test Id: 86 - POSTINC(function)
OK   UME::SIMD::SIMD1_32f test Id: 87 - MPOSTINC
OK   UME::SIMD::SIMD1_32f test Id: 88 - MPOSTINC(function)
OK   UME::SIMD::SIMD1_32f test Id: 89 - PREFINC
OK   UME::SIMD::SIMD1_32f test Id: 90 - PREFINC(operator++())
OK   UME::SIMD::SIMD1_32f test Id: 91 - PREFINC(function)
OK   UME::SIMD::SIMD1_32f test Id: 92 - MPREFINC
OK   UME::SIMD::SIMD1_32f test Id: 93 - MPREFINC(function)
OK   UME::SIMD::SIMD1_32f test Id: 94 - SUBV
OK   UME::SIMD::SIMD1_32f test Id: 95 - SUBV(operator-)
OK   UME::SIMD::SIMD1_32f test Id: 96 - SUBV(function)
OK   UME::SIMD::SIMD1_32f test Id: 97 - SUBV gen
OK   UME::SIMD::SIMD1_32f test Id: 98 - SUBV(operator-) gen
OK   UME::SIMD::SIMD1_32f test Id: 99 - SUBV(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 100 - MSUBV
OK   UME::SIMD::SIMD1_32f test Id: 101 - MSUBV(function)
OK   UME::SIMD::SIMD1_32f test Id: 102 - MSUBV gen
OK   UME::SIMD::SIMD1_32f test Id: 103 - MSUBV(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 104 - SUBS gen
OK   UME::SIMD::SIMD1_32f test Id: 105 - SUBS(operator-) gen
OK   UME::SIMD::SIMD1_32f test Id: 106 - SUBS(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 107 - MSUBS
OK   UME::SIMD::SIMD1_32f test Id: 108 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 109 - SUBVA
OK   UME::SIMD::SIMD1_32f test Id: 110 - SUBVA(operator-=)
OK   UME::SIMD::SIMD1_32f test Id: 111 - MSUBVA
OK   UME::SIMD::SIMD1_32f test Id: 112 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD1_32f test Id: 113 - SUBSA
OK   UME::SIMD::SIMD1_32f test Id: 114 - MSUBSA
OK   UME::SIMD::SIMD1_32f test Id: 115 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD1_32f test Id: 116 - SUBFROMV
OK   UME::SIMD::SIMD1_32f test Id: 117 - MSUBFROMV
OK   UME::SIMD::SIMD1_32f test Id: 118 - SUBFROMS
OK   UME::SIMD::SIMD1_32f test Id: 119 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 120 - MSUBFROMS
OK   UME::SIMD::SIMD1_32f test Id: 121 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 122 - SUBFROMVA
OK   UME::SIMD::SIMD1_32f test Id: 123 - MSUBFROMVA
OK   UME::SIMD::SIMD1_32f test Id: 124 - SUBFROMSA
OK   UME::SIMD::SIMD1_32f test Id: 125 - MSUBFROMSA
OK   UME::SIMD::SIMD1_32f test Id: 126 - POSTDEC
OK   UME::SIMD::SIMD1_32f test Id: 127 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD1_32f test Id: 128 - POSTDEC(function)
OK   UME::SIMD::SIMD1_32f test Id: 129 - MPOSTDEC
OK   UME::SIMD::SIMD1_32f test Id: 130 - MPOSTDEC(function)
OK   UME::SIMD::SIMD1_32f test Id: 131 - PREFDEC
OK   UME::SIMD::SIMD1_32f test Id: 132 - PREFDEC(operator--())
OK   UME::SIMD::SIMD1_32f test Id: 133 - PREFDEC(function)
OK   UME::SIMD::SIMD1_32f test Id: 134 - MPREFDEC
OK   UME::SIMD::SIMD1_32f test Id: 135 - MPREFDEC(function)
OK   UME::SIMD::SIMD1_32f test Id: 136 - MULV
OK   UME::SIMD::SIMD1_32f test Id: 137 - MULV(operator*)
OK   UME::SIMD::SIMD1_32f test Id: 138 - MULV(function)
OK   UME::SIMD::SIMD1_32f test Id: 139 - MMULV
OK   UME::SIMD::SIMD1_32f test Id: 140 - MMULV(function)
OK   UME::SIMD::SIMD1_32f test Id: 141 - MULS
OK   UME::SIMD::SIMD1_32f test Id: 142 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 143 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 144 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 145 - MMULS
OK   UME::SIMD::SIMD1_32f test Id: 146 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 147 - MULVA
OK   UME::SIMD::SIMD1_32f test Id: 148 - MULVA(operator*)
OK   UME::SIMD::SIMD1_32f test Id: 149 - MULVA gen
OK   UME::SIMD::SIMD1_32f test Id: 150 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD1_32f test Id: 151 - MMULVA
OK   UME::SIMD::SIMD1_32f test Id: 152 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_32f test Id: 153 - MULSA
OK   UME::SIMD::SIMD1_32f test Id: 154 - MULSA(operator*=)
OK   UME::SIMD::SIMD1_32f test Id: 155 - MMULSA
OK   UME::SIMD::SIMD1_32f test Id: 156 - DIVV
OK   UME::SIMD::SIMD1_32f test Id: 157 - DIVV(operator/)
OK   UME::SIMD::SIMD1_32f test Id: 158 - DIVV(function)
OK   UME::SIMD::SIMD1_32f test Id: 159 - MDIVV
OK   UME::SIMD::SIMD1_32f test Id: 160 - MDIVV(function)
OK   UME::SIMD::SIMD1_32f test Id: 161 - DIVS
OK   UME::SIMD::SIMD1_32f test Id: 162 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 163 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 164 - MDIVS
OK   UME::SIMD::SIMD1_32f test Id: 165 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 166 - DIVVA
OK   UME::SIMD::SIMD1_32f test Id: 167 - DIVVA(operator/=)
OK   UME::SIMD::SIMD1_32f test Id: 168 - DIVVA gen
OK   UME::SIMD::SIMD1_32f test Id: 169 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD1_32f test Id: 170 - MDIVVA
OK   UME::SIMD::SIMD1_32f test Id: 171 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_32f test Id: 172 - DIVSA
OK   UME::SIMD::SIMD1_32f test Id: 173 - DIVSA(operator/=)
OK   UME::SIMD::SIMD1_32f test Id: 174 - MDIVSA
OK   UME::SIMD::SIMD1_32f test Id: 175 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD1_32f test Id: 176 - RCP
OK   UME::SIMD::SIMD1_32f test Id: 177 - RCP(function)
OK   UME::SIMD::SIMD1_32f test Id: 178 - MRCP
OK   UME::SIMD::SIMD1_32f test Id: 179 - MRCP(function)
OK   UME::SIMD::SIMD1_32f test Id: 180 - RCPS
OK   UME::SIMD::SIMD1_32f test Id: 181 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 182 - RCPS(function)
OK   UME::SIMD::SIMD1_32f test Id: 183 - MRCPS
OK   UME::SIMD::SIMD1_32f test Id: 184 - MRCPS (function)
OK   UME::SIMD::SIMD1_32f test Id: 185 - RCPA
OK   UME::SIMD::SIMD1_32f test Id: 186 - MRCPA
OK   UME::SIMD::SIMD1_32f test Id: 187 - RCPSA
OK   UME::SIMD::SIMD1_32f test Id: 188 - MRCPSA
OK   UME::SIMD::SIMD1_32f test Id: 189 - CMPEQV
OK   UME::SIMD::SIMD1_32f test Id: 190 - CMPEQV(operator==)
OK   UME::SIMD::SIMD1_32f test Id: 191 - CMPEQV(function)
OK   UME::SIMD::SIMD1_32f test Id: 192 - CMPEQS
OK   UME::SIMD::SIMD1_32f test Id: 193 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 194 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 195 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 196 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 197 - CMPNEV
OK   UME::SIMD::SIMD1_32f test Id: 198 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD1_32f test Id: 199 - CMPNEV(function)
OK   UME::SIMD::SIMD1_32f test Id: 200 - CMPNES
OK   UME::SIMD::SIMD1_32f test Id: 201 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 202 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 203 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 204 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 205 - CMPGTV
OK   UME::SIMD::SIMD1_32f test Id: 206 - CMPGTV(operator>)
OK   UME::SIMD::SIMD1_32f test Id: 207 - CMPGTV(function)
OK   UME::SIMD::SIMD1_32f test Id: 208 - CMPGTS
OK   UME::SIMD::SIMD1_32f test Id: 209 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 210 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 211 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 212 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 213 - CMPLTV
OK   UME::SIMD::SIMD1_32f test Id: 214 - CMPLTV(operator<)
OK   UME::SIMD::SIMD1_32f test Id: 215 - CMPLTV(function)
OK   UME::SIMD::SIMD1_32f test Id: 216 - CMPLTS
OK   UME::SIMD::SIMD1_32f test Id: 217 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 218 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 219 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 220 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 221 - CMPGEV
OK   UME::SIMD::SIMD1_32f test Id: 222 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD1_32f test Id: 223 - CMPGEV(function)
OK   UME::SIMD::SIMD1_32f test Id: 224 - CMPGES
OK   UME::SIMD::SIMD1_32f test Id: 225 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 226 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 227 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 228 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 229 - CMPLEV
OK   UME::SIMD::SIMD1_32f test Id: 230 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD1_32f test Id: 231 - CMPLEV(function)
OK   UME::SIMD::SIMD1_32f test Id: 232 - CMPLES
OK   UME::SIMD::SIMD1_32f test Id: 233 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 234 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 235 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 236 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 237 - CMPEV
OK   UME::SIMD::SIMD1_32f test Id: 238 - CMPEV(function)
OK   UME::SIMD::SIMD1_32f test Id: 239 - CMPES
OK   UME::SIMD::SIMD1_32f test Id: 240 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 241 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 242 - HADD
OK   UME::SIMD::SIMD1_32f test Id: 243 - HADD(function)
OK   UME::SIMD::SIMD1_32f test Id: 244 - HADD gen
OK   UME::SIMD::SIMD1_32f test Id: 245 - HADD(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 246 - MHADD gen
OK   UME::SIMD::SIMD1_32f test Id: 247 - MHADD(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 248 - HADDS gen
OK   UME::SIMD::SIMD1_32f test Id: 249 - HADDS(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 250 - MHADD gen
OK   UME::SIMD::SIMD1_32f test Id: 251 - MHADDS(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 252 - HMUL gen
OK   UME::SIMD::SIMD1_32f test Id: 253 - HMUL(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 254 - MHMUL gen
OK   UME::SIMD::SIMD1_32f test Id: 255 - MHMUL(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 256 - HMULS gen
OK   UME::SIMD::SIMD1_32f test Id: 257 - HMULS(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 258 - MHMUL gen
OK   UME::SIMD::SIMD1_32f test Id: 259 - MHMULS(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 260 - FMULADDV
OK   UME::SIMD::SIMD1_32f test Id: 261 - FMULADDV(function)
OK   UME::SIMD::SIMD1_32f test Id: 262 - MFMULADDV
OK   UME::SIMD::SIMD1_32f test Id: 263 - MFMULADDV(function)
OK   UME::SIMD::SIMD1_32f test Id: 264 - FMULSUBV
OK   UME::SIMD::SIMD1_32f test Id: 265 - FMULSUBV(function)
OK   UME::SIMD::SIMD1_32f test Id: 266 - MFMULSUBV
OK   UME::SIMD::SIMD1_32f test Id: 267 - MFMULSUBV(function)
OK   UME::SIMD::SIMD1_32f test Id: 268 - FADDMULV
OK   UME::SIMD::SIMD1_32f test Id: 269 - FADDMULV(function)
OK   UME::SIMD::SIMD1_32f test Id: 270 - MFADDMULV
OK   UME::SIMD::SIMD1_32f test Id: 271 - MFADDMULV(function)
OK   UME::SIMD::SIMD1_32f test Id: 272 - FSUBMULV
OK   UME::SIMD::SIMD1_32f test Id: 273 - FSUBMULV(function)
OK   UME::SIMD::SIMD1_32f test Id: 274 - MFSUBMULV
OK   UME::SIMD::SIMD1_32f test Id: 275 - MFSUBMULV(function)
OK   UME::SIMD::SIMD1_32f test Id: 276 - MAXV
OK   UME::SIMD::SIMD1_32f test Id: 277 - MAXV(function)
OK   UME::SIMD::SIMD1_32f test Id: 278 - MMAXV
OK   UME::SIMD::SIMD1_32f test Id: 279 - MMAXV(function)
OK   UME::SIMD::SIMD1_32f test Id: 280 - MAXS
OK   UME::SIMD::SIMD1_32f test Id: 281 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 282 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 283 - MMAXS
OK   UME::SIMD::SIMD1_32f test Id: 284 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 285 - MAXVA
OK   UME::SIMD::SIMD1_32f test Id: 286 - MMAXVA
OK   UME::SIMD::SIMD1_32f test Id: 287 - MAXSA
OK   UME::SIMD::SIMD1_32f test Id: 288 - MMAXSA
OK   UME::SIMD::SIMD1_32f test Id: 289 - MINV
OK   UME::SIMD::SIMD1_32f test Id: 290 - MINV(function)
OK   UME::SIMD::SIMD1_32f test Id: 291 - MMINV
OK   UME::SIMD::SIMD1_32f test Id: 292 - MMINV(function)
OK   UME::SIMD::SIMD1_32f test Id: 293 - MINS
OK   UME::SIMD::SIMD1_32f test Id: 294 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD1_32f test Id: 295 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD1_32f test Id: 296 - MMINS
OK   UME::SIMD::SIMD1_32f test Id: 297 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD1_32f test Id: 298 - MINVA
OK   UME::SIMD::SIMD1_32f test Id: 299 - MMINVA
OK   UME::SIMD::SIMD1_32f test Id: 300 - MINSA
OK   UME::SIMD::SIMD1_32f test Id: 301 - MMINSA
OK   UME::SIMD::SIMD1_32f test Id: 302 - HMAX
OK   UME::SIMD::SIMD1_32f test Id: 303 - HMAX(function)
OK   UME::SIMD::SIMD1_32f test Id: 304 - HMAX
OK   UME::SIMD::SIMD1_32f test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD1_32f test Id: 306 - MHMAX
OK   UME::SIMD::SIMD1_32f test Id: 307 - MHMAX(function)
OK   UME::SIMD::SIMD1_32f test Id: 308 - IMAX
OK   UME::SIMD::SIMD1_32f test Id: 309 - IMAX(function)
OK   UME::SIMD::SIMD1_32f test Id: 310 - MIMAX
OK   UME::SIMD::SIMD1_32f test Id: 311 - MIMAX(function)
OK   UME::SIMD::SIMD1_32f test Id: 312 - HMIN
OK   UME::SIMD::SIMD1_32f test Id: 313 - HMIN(function)
OK   UME::SIMD::SIMD1_32f test Id: 314 - HMIN
OK   UME::SIMD::SIMD1_32f test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD1_32f test Id: 316 - MHMIN gen
OK   UME::SIMD::SIMD1_32f test Id: 317 - MHMIN(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 318 - IMIN
OK   UME::SIMD::SIMD1_32f test Id: 319 - IMIN(function)
OK   UME::SIMD::SIMD1_32f test Id: 320 - MIMIN
OK   UME::SIMD::SIMD1_32f test Id: 321 - MIMIN(function)
OK   UME::SIMD::SIMD1_32f test Id: 322 - GATHERU
OK   UME::SIMD::SIMD1_32f test Id: 323 - MGATHERU
OK   UME::SIMD::SIMD1_32f test Id: 324 - GATHERS
OK   UME::SIMD::SIMD1_32f test Id: 325 - MGATHERS
OK   UME::SIMD::SIMD1_32f test Id: 326 - GATHERV
OK   UME::SIMD::SIMD1_32f test Id: 327 - MGATHERV
OK   UME::SIMD::SIMD1_32f test Id: 328 - SCATTERU
OK   UME::SIMD::SIMD1_32f test Id: 329 - MSCATTERU
OK   UME::SIMD::SIMD1_32f test Id: 330 - SCATTERS
OK   UME::SIMD::SIMD1_32f test Id: 331 - MSCATTERS
OK   UME::SIMD::SIMD1_32f test Id: 332 - SCATTERV
OK   UME::SIMD::SIMD1_32f test Id: 333 - MSCATTERV
OK   UME::SIMD::SIMD1_32f test Id: 334 - NEG
OK   UME::SIMD::SIMD1_32f test Id: 335 - NEG(operator-)
OK   UME::SIMD::SIMD1_32f test Id: 336 - NEG(function)
OK   UME::SIMD::SIMD1_32f test Id: 337 - MNEG
OK   UME::SIMD::SIMD1_32f test Id: 338 - MNEG(function)
OK   UME::SIMD::SIMD1_32f test Id: 339 - NEGA
OK   UME::SIMD::SIMD1_32f test Id: 340 - MNEGA
OK   UME::SIMD::SIMD1_32f test Id: 341 - ABS
OK   UME::SIMD::SIMD1_32f test Id: 342 - ABS(function)
OK   UME::SIMD::SIMD1_32f test Id: 343 - MABS
OK   UME::SIMD::SIMD1_32f test Id: 344 - MABS(function)
OK   UME::SIMD::SIMD1_32f test Id: 345 - ABSA
OK   UME::SIMD::SIMD1_32f test Id: 346 - MABSA
OK   UME::SIMD::SIMD1_32f test Id: 347 - COPYSIGN gen
OK   UME::SIMD::SIMD1_32f test Id: 348 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 349 - ROUND
OK   UME::SIMD::SIMD1_32f test Id: 350 - ROUND(function)
OK   UME::SIMD::SIMD1_32f test Id: 351 - MROUND
OK   UME::SIMD::SIMD1_32f test Id: 352 - MROUND(function)
OK   UME::SIMD::SIMD1_32f test Id: 353 - TRUNC gen
OK   UME::SIMD::SIMD1_32f test Id: 354 - TRUNC(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 355 - MTRUNC gen
OK   UME::SIMD::SIMD1_32f test Id: 356 - MTRUNC(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 357 - FLOOR
OK   UME::SIMD::SIMD1_32f test Id: 358 - FLOOR(function)
OK   UME::SIMD::SIMD1_32f test Id: 359 - MFLOOR
OK   UME::SIMD::SIMD1_32f test Id: 360 - MFLOOR(function)
OK   UME::SIMD::SIMD1_32f test Id: 361 - CEIL
OK   UME::SIMD::SIMD1_32f test Id: 362 - CEIL(function)
OK   UME::SIMD::SIMD1_32f test Id: 363 - MCEIL
OK   UME::SIMD::SIMD1_32f test Id: 364 - MCEIL(function)
OK   UME::SIMD::SIMD1_32f test Id: 365 - ISFIN
OK   UME::SIMD::SIMD1_32f test Id: 366 - ISFIN(function)
OK   UME::SIMD::SIMD1_32f test Id: 367 - ISINF
OK   UME::SIMD::SIMD1_32f test Id: 368 - ISINF(function)
OK   UME::SIMD::SIMD1_32f test Id: 369 - ISAN
OK   UME::SIMD::SIMD1_32f test Id: 370 - ISAN(function)
OK   UME::SIMD::SIMD1_32f test Id: 371 - ISNAN
OK   UME::SIMD::SIMD1_32f test Id: 372 - ISNAN(function)
OK   UME::SIMD::SIMD1_32f test Id: 373 - ISNORM
OK   UME::SIMD::SIMD1_32f test Id: 374 - ISNORM(function)
OK   UME::SIMD::SIMD1_32f test Id: 375 - ISSUB
OK   UME::SIMD::SIMD1_32f test Id: 376 - ISSUB(function)
OK   UME::SIMD::SIMD1_32f test Id: 377 - ISZERO
OK   UME::SIMD::SIMD1_32f test Id: 378 - ISZERO(function)
OK   UME::SIMD::SIMD1_32f test Id: 379 - ISZEROSUB
OK   UME::SIMD::SIMD1_32f test Id: 380 - ISZEROSUB(function)
OK   UME::SIMD::SIMD1_32f test Id: 381 - SQR
OK   UME::SIMD::SIMD1_32f test Id: 382 - SQR(function)
OK   UME::SIMD::SIMD1_32f test Id: 383 - MSQR
OK   UME::SIMD::SIMD1_32f test Id: 384 - MSQR(function)
OK   UME::SIMD::SIMD1_32f test Id: 385 - SQRA
OK   UME::SIMD::SIMD1_32f test Id: 386 - MSQRA
OK   UME::SIMD::SIMD1_32f test Id: 387 - SQRT
OK   UME::SIMD::SIMD1_32f test Id: 388 - SQRT(function)
OK   UME::SIMD::SIMD1_32f test Id: 389 - MSQRT
OK   UME::SIMD::SIMD1_32f test Id: 390 - MSQRT
OK   UME::SIMD::SIMD1_32f test Id: 391 - SQRTA
OK   UME::SIMD::SIMD1_32f test Id: 392 - MSQRTA
OK   UME::SIMD::SIMD1_32f test Id: 393 - EXP gen
OK   UME::SIMD::SIMD1_32f test Id: 394 - EXP(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 395 - MEXP gen
OK   UME::SIMD::SIMD1_32f test Id: 396 - MEXP(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 397 - LOG gen
OK   UME::SIMD::SIMD1_32f test Id: 398 - LOG(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 399 - LOG2 gen
OK   UME::SIMD::SIMD1_32f test Id: 400 - LOG2(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 401 - LOG10 gen
OK   UME::SIMD::SIMD1_32f test Id: 402 - LOG10(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 403 - SIN gen
OK   UME::SIMD::SIMD1_32f test Id: 404 - SIN(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 405 - COS gen
OK   UME::SIMD::SIMD1_32f test Id: 406 - COS(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 407 - TAN gen
OK   UME::SIMD::SIMD1_32f test Id: 408 - TAN(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 409 - CTAN gen
OK   UME::SIMD::SIMD1_32f test Id: 410 - CTAN(function) gen
OK   UME::SIMD::SIMD1_32f test Id: 411 - FTOU gen
OK   UME::SIMD::SIMD1_32f test Id: 412 - FTOI gen
OK   UME::SIMD::SIMD1_32f test Id: 413 - PROMOTE
OK   UME::SIMD::SIMD8_8u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD8_8u test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD8_8u test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD8_8u test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD8_8u test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD8_8u test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD8_8u test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD8_8u test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD8_8u test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD8_8u test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD8_8u test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD8_8u test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD8_8u test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD8_8u test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD8_8u test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD8_8u test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD8_8u test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD8_8u test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD8_8u test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD8_8u test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD8_8u test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD8_8u test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD8_8u test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD8_8u test Id: 24 - INSERT
OK   UME::SIMD::SIMD8_8u test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD8_8u test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD8_8u test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD8_8u test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD8_8u test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD8_8u test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD8_8u test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD8_8u test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD8_8u test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD8_8u test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD8_8u test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD8_8u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD8_8u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD8_8u test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD8_8u test Id: 39 - MLOAD
OK   UME::SIMD::SIMD8_8u test Id: 40 - MSTORE
OK   UME::SIMD::SIMD8_8u test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD8_8u test Id: 42 - MLOADA
OK   UME::SIMD::SIMD8_8u test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD8_8u test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD8_8u test Id: 45 - SORTA
OK   UME::SIMD::SIMD8_8u test Id: 46 - SORTD
OK   UME::SIMD::SIMD8_8u test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD8_8u test Id: 48 - ADDV
OK   UME::SIMD::SIMD8_8u test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD8_8u test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD8_8u test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD8_8u test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD8_8u test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD8_8u test Id: 54 - MADDV
OK   UME::SIMD::SIMD8_8u test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD8_8u test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD8_8u test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD8_8u test Id: 58 - ADDS
OK   UME::SIMD::SIMD8_8u test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD8_8u test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD8_8u test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD8_8u test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD8_8u test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD8_8u test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD8_8u test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD8_8u test Id: 68 - MADDS
OK   UME::SIMD::SIMD8_8u test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD8_8u test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD8_8u test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD8_8u test Id: 73 - ADDVA
OK   UME::SIMD::SIMD8_8u test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD8_8u test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD8_8u test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD8_8u test Id: 77 - MADDVA
OK   UME::SIMD::SIMD8_8u test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD8_8u test Id: 79 - ADDSA
OK   UME::SIMD::SIMD8_8u test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD8_8u test Id: 81 - MADDSA
OK   UME::SIMD::SIMD8_8u test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD8_8u test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD8_8u test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD8_8u test Id: 85 - POSTINC
OK   UME::SIMD::SIMD8_8u test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD8_8u test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD8_8u test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD8_8u test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD8_8u test Id: 90 - PREFINC
OK   UME::SIMD::SIMD8_8u test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD8_8u test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD8_8u test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD8_8u test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD8_8u test Id: 95 - SUBV
OK   UME::SIMD::SIMD8_8u test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD8_8u test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD8_8u test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD8_8u test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD8_8u test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD8_8u test Id: 101 - MSUBV
OK   UME::SIMD::SIMD8_8u test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD8_8u test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD8_8u test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD8_8u test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD8_8u test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD8_8u test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD8_8u test Id: 108 - MSUBS
OK   UME::SIMD::SIMD8_8u test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 110 - SUBVA
OK   UME::SIMD::SIMD8_8u test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD8_8u test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD8_8u test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD8_8u test Id: 114 - SUBSA
OK   UME::SIMD::SIMD8_8u test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD8_8u test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD8_8u test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD8_8u test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD8_8u test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD8_8u test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD8_8u test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD8_8u test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD8_8u test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD8_8u test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD8_8u test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD8_8u test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD8_8u test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD8_8u test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD8_8u test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD8_8u test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD8_8u test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD8_8u test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD8_8u test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD8_8u test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD8_8u test Id: 137 - MULV
OK   UME::SIMD::SIMD8_8u test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD8_8u test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD8_8u test Id: 140 - MMULV
OK   UME::SIMD::SIMD8_8u test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD8_8u test Id: 142 - MULS
OK   UME::SIMD::SIMD8_8u test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 146 - MMULS
OK   UME::SIMD::SIMD8_8u test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 148 - MULVA
OK   UME::SIMD::SIMD8_8u test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD8_8u test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD8_8u test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD8_8u test Id: 152 - MMULVA
OK   UME::SIMD::SIMD8_8u test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_8u test Id: 154 - MULSA
OK   UME::SIMD::SIMD8_8u test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD8_8u test Id: 156 - MMULSA
OK   UME::SIMD::SIMD8_8u test Id: 157 - DIVV
OK   UME::SIMD::SIMD8_8u test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD8_8u test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD8_8u test Id: 160 - MDIVV
OK   UME::SIMD::SIMD8_8u test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD8_8u test Id: 162 - DIVS
OK   UME::SIMD::SIMD8_8u test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 165 - MDIVS
OK   UME::SIMD::SIMD8_8u test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 167 - DIVVA
OK   UME::SIMD::SIMD8_8u test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD8_8u test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD8_8u test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD8_8u test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD8_8u test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_8u test Id: 173 - DIVSA
OK   UME::SIMD::SIMD8_8u test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD8_8u test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD8_8u test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD8_8u test Id: 177 - RCP
OK   UME::SIMD::SIMD8_8u test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD8_8u test Id: 179 - MRCP
OK   UME::SIMD::SIMD8_8u test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD8_8u test Id: 181 - RCPS
OK   UME::SIMD::SIMD8_8u test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD8_8u test Id: 184 - MRCPS
OK   UME::SIMD::SIMD8_8u test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD8_8u test Id: 186 - RCPA
OK   UME::SIMD::SIMD8_8u test Id: 187 - MRCPA
OK   UME::SIMD::SIMD8_8u test Id: 188 - RCPSA
OK   UME::SIMD::SIMD8_8u test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD8_8u test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD8_8u test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD8_8u test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD8_8u test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD8_8u test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD8_8u test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD8_8u test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD8_8u test Id: 201 - CMPNES
OK   UME::SIMD::SIMD8_8u test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD8_8u test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD8_8u test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD8_8u test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD8_8u test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD8_8u test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD8_8u test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD8_8u test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD8_8u test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD8_8u test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD8_8u test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD8_8u test Id: 225 - CMPGES
OK   UME::SIMD::SIMD8_8u test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD8_8u test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD8_8u test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD8_8u test Id: 233 - CMPLES
OK   UME::SIMD::SIMD8_8u test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 238 - CMPEV
OK   UME::SIMD::SIMD8_8u test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD8_8u test Id: 240 - CMPES
OK   UME::SIMD::SIMD8_8u test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 243 - HADD
OK   UME::SIMD::SIMD8_8u test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD8_8u test Id: 245 - HADD gen
OK   UME::SIMD::SIMD8_8u test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD8_8u test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD8_8u test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD8_8u test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD8_8u test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD8_8u test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD8_8u test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD8_8u test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD8_8u test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD8_8u test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD8_8u test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD8_8u test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD8_8u test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD8_8u test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD8_8u test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD8_8u test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD8_8u test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD8_8u test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD8_8u test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD8_8u test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD8_8u test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD8_8u test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD8_8u test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD8_8u test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD8_8u test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD8_8u test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD8_8u test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD8_8u test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD8_8u test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD8_8u test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD8_8u test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD8_8u test Id: 277 - MAXV
OK   UME::SIMD::SIMD8_8u test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD8_8u test Id: 279 - MMAXV
OK   UME::SIMD::SIMD8_8u test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD8_8u test Id: 281 - MAXS
OK   UME::SIMD::SIMD8_8u test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 284 - MMAXS
OK   UME::SIMD::SIMD8_8u test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 286 - MAXVA
OK   UME::SIMD::SIMD8_8u test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD8_8u test Id: 288 - MAXSA
OK   UME::SIMD::SIMD8_8u test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD8_8u test Id: 290 - MINV
OK   UME::SIMD::SIMD8_8u test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD8_8u test Id: 292 - MMINV
OK   UME::SIMD::SIMD8_8u test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD8_8u test Id: 294 - MINS
OK   UME::SIMD::SIMD8_8u test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD8_8u test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD8_8u test Id: 297 - MMINS
OK   UME::SIMD::SIMD8_8u test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 299 - MINVA
OK   UME::SIMD::SIMD8_8u test Id: 300 - MMINVA
OK   UME::SIMD::SIMD8_8u test Id: 301 - MINSA
OK   UME::SIMD::SIMD8_8u test Id: 302 - MMINSA
OK   UME::SIMD::SIMD8_8u test Id: 303 - HMAX
OK   UME::SIMD::SIMD8_8u test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD8_8u test Id: 305 - HMAX
OK   UME::SIMD::SIMD8_8u test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD8_8u test Id: 307 - MHMAX
OK   UME::SIMD::SIMD8_8u test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD8_8u test Id: 309 - IMAX
OK   UME::SIMD::SIMD8_8u test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD8_8u test Id: 311 - MIMAX
OK   UME::SIMD::SIMD8_8u test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD8_8u test Id: 313 - HMIN
OK   UME::SIMD::SIMD8_8u test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD8_8u test Id: 315 - HMIN
OK   UME::SIMD::SIMD8_8u test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD8_8u test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD8_8u test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD8_8u test Id: 319 - IMIN
OK   UME::SIMD::SIMD8_8u test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD8_8u test Id: 321 - MIMIN
OK   UME::SIMD::SIMD8_8u test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD8_8u test Id: 323 - REMV gen
OK   UME::SIMD::SIMD8_8u test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD8_8u test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD8_8u test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD8_8u test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD8_8u test Id: 328 - REMS gen
OK   UME::SIMD::SIMD8_8u test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD8_8u test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD8_8u test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD8_8u test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD8_8u test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD8_8u test Id: 334 - LORV gen
OK   UME::SIMD::SIMD8_8u test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD8_8u test Id: 336 - BANDV
OK   UME::SIMD::SIMD8_8u test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD8_8u test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD8_8u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD8_8u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD8_8u test Id: 341 - BANDS
OK   UME::SIMD::SIMD8_8u test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 346 - MBANDS
OK   UME::SIMD::SIMD8_8u test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 348 - BANDVA
OK   UME::SIMD::SIMD8_8u test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD8_8u test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD8_8u test Id: 351 - BANDSA
OK   UME::SIMD::SIMD8_8u test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD8_8u test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD8_8u test Id: 354 - BORV
OK   UME::SIMD::SIMD8_8u test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD8_8u test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD8_8u test Id: 357 - MBORV
OK   UME::SIMD::SIMD8_8u test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD8_8u test Id: 359 - BORS
OK   UME::SIMD::SIMD8_8u test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 364 - MBORS
OK   UME::SIMD::SIMD8_8u test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 366 - BORVA
OK   UME::SIMD::SIMD8_8u test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD8_8u test Id: 368 - MBORVA
OK   UME::SIMD::SIMD8_8u test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD8_8u test Id: 370 - BORSA
OK   UME::SIMD::SIMD8_8u test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD8_8u test Id: 372 - MBORSA
OK   UME::SIMD::SIMD8_8u test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD8_8u test Id: 374 - BXORV
OK   UME::SIMD::SIMD8_8u test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD8_8u test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD8_8u test Id: 377 - MBXORV
OK   UME::SIMD::SIMD8_8u test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD8_8u test Id: 379 - BXORS
OK   UME::SIMD::SIMD8_8u test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 384 - MBXORS
OK   UME::SIMD::SIMD8_8u test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 386 - BXORVA
OK   UME::SIMD::SIMD8_8u test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD8_8u test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD8_8u test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD8_8u test Id: 390 - BXORSA
OK   UME::SIMD::SIMD8_8u test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD8_8u test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD8_8u test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD8_8u test Id: 394 - BNOT
OK   UME::SIMD::SIMD8_8u test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD8_8u test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD8_8u test Id: 397 - MBNOT
OK   UME::SIMD::SIMD8_8u test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD8_8u test Id: 399 - BNOTA
OK   UME::SIMD::SIMD8_8u test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD8_8u test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD8_8u test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD8_8u test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD8_8u test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD8_8u test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD8_8u test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD8_8u test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD8_8u test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD8_8u test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD8_8u test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD8_8u test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD8_8u test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD8_8u test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD8_8u test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD8_8u test Id: 415 - HBAND
OK   UME::SIMD::SIMD8_8u test Id: 416 - HBAND
OK   UME::SIMD::SIMD8_8u test Id: 417 - MHBAND
OK   UME::SIMD::SIMD8_8u test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD8_8u test Id: 419 - HBANDS
OK   UME::SIMD::SIMD8_8u test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD8_8u test Id: 421 - HBOR
OK   UME::SIMD::SIMD8_8u test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD8_8u test Id: 423 - MHBOR
OK   UME::SIMD::SIMD8_8u test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD8_8u test Id: 425 - HBORS
OK   UME::SIMD::SIMD8_8u test Id: 426 - MHBORS
OK   UME::SIMD::SIMD8_8u test Id: 427 - HBXOR
OK   UME::SIMD::SIMD8_8u test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD8_8u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD8_8u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD8_8u test Id: 431 - HBXORS
OK   UME::SIMD::SIMD8_8u test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD8_8u test Id: 433 - GATHERU
OK   UME::SIMD::SIMD8_8u test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD8_8u test Id: 435 - GATHERS
OK   UME::SIMD::SIMD8_8u test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD8_8u test Id: 437 - GATHERV
OK   UME::SIMD::SIMD8_8u test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD8_8u test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD8_8u test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD8_8u test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD8_8u test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD8_8u test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD8_8u test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD8_8u test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD8_8u test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD8_8u test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD8_8u test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD8_8u test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD8_8u test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD8_8u test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD8_8u test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD8_8u test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD8_8u test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD8_8u test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD8_8u test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD8_8u test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD8_8u test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD8_8u test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD8_8u test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD8_8u test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD8_8u test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD8_8u test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD8_8u test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD8_8u test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD8_8u test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD8_8u test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD8_8u test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD8_8u test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD8_8u test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD8_8u test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD8_8u test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD8_8u test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD8_8u test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD8_8u test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD8_8u test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD8_8u test Id: 477 - ROLV
OK   UME::SIMD::SIMD8_8u test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD8_8u test Id: 479 - MROLV
OK   UME::SIMD::SIMD8_8u test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD8_8u test Id: 481 - ROLS
OK   UME::SIMD::SIMD8_8u test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 483 - MROLS
OK   UME::SIMD::SIMD8_8u test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 485 - ROLVA
OK   UME::SIMD::SIMD8_8u test Id: 486 - MROLVA
OK   UME::SIMD::SIMD8_8u test Id: 487 - ROLSA
OK   UME::SIMD::SIMD8_8u test Id: 488 - MROLSA
OK   UME::SIMD::SIMD8_8u test Id: 489 - RORV
OK   UME::SIMD::SIMD8_8u test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD8_8u test Id: 491 - MRORV
OK   UME::SIMD::SIMD8_8u test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD8_8u test Id: 493 - RORS
OK   UME::SIMD::SIMD8_8u test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 495 - MRORS
OK   UME::SIMD::SIMD8_8u test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8u test Id: 497 - RORVA
OK   UME::SIMD::SIMD8_8u test Id: 498 - MRORVA
OK   UME::SIMD::SIMD8_8u test Id: 499 - RORSA
OK   UME::SIMD::SIMD8_8u test Id: 500 - MRORSA
OK   UME::SIMD::SIMD8_8u test Id: 501 - UTOI
OK   UME::SIMD::SIMD8_8u test Id: 502 - PACK
OK   UME::SIMD::SIMD8_8u test Id: 503 - PACKLO
OK   UME::SIMD::SIMD8_8u test Id: 504 - PACKHI
OK   UME::SIMD::SIMD8_8u test Id: 505 - UNPACK
OK   UME::SIMD::SIMD8_8u test Id: 506 - UNPACKLO
OK   UME::SIMD::SIMD8_8u test Id: 507 - UNPACKHi
OK   UME::SIMD::SIMD8_8u test Id: 508 - PROMOTE
OK   UME::SIMD::SIMD8_8i test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD8_8i test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD8_8i test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD8_8i test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD8_8i test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD8_8i test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD8_8i test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD8_8i test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD8_8i test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD8_8i test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD8_8i test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD8_8i test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD8_8i test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD8_8i test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD8_8i test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD8_8i test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD8_8i test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD8_8i test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD8_8i test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD8_8i test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD8_8i test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD8_8i test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD8_8i test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD8_8i test Id: 24 - INSERT
OK   UME::SIMD::SIMD8_8i test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD8_8i test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD8_8i test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD8_8i test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD8_8i test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD8_8i test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD8_8i test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD8_8i test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD8_8i test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD8_8i test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD8_8i test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD8_8i test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD8_8i test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD8_8i test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD8_8i test Id: 39 - MLOAD
OK   UME::SIMD::SIMD8_8i test Id: 40 - MSTORE
OK   UME::SIMD::SIMD8_8i test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD8_8i test Id: 42 - MLOADA
OK   UME::SIMD::SIMD8_8i test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD8_8i test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD8_8i test Id: 45 - SORTA
OK   UME::SIMD::SIMD8_8i test Id: 46 - SORTD
OK   UME::SIMD::SIMD8_8i test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD8_8i test Id: 48 - ADDV
OK   UME::SIMD::SIMD8_8i test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD8_8i test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD8_8i test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD8_8i test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD8_8i test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD8_8i test Id: 54 - MADDV
OK   UME::SIMD::SIMD8_8i test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD8_8i test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD8_8i test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD8_8i test Id: 58 - ADDS
OK   UME::SIMD::SIMD8_8i test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD8_8i test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD8_8i test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD8_8i test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD8_8i test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD8_8i test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD8_8i test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD8_8i test Id: 68 - MADDS
OK   UME::SIMD::SIMD8_8i test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD8_8i test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD8_8i test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD8_8i test Id: 73 - ADDVA
OK   UME::SIMD::SIMD8_8i test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD8_8i test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD8_8i test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD8_8i test Id: 77 - MADDVA
OK   UME::SIMD::SIMD8_8i test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD8_8i test Id: 79 - ADDSA
OK   UME::SIMD::SIMD8_8i test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD8_8i test Id: 81 - MADDSA
OK   UME::SIMD::SIMD8_8i test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD8_8i test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD8_8i test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD8_8i test Id: 85 - POSTINC
OK   UME::SIMD::SIMD8_8i test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD8_8i test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD8_8i test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD8_8i test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD8_8i test Id: 90 - PREFINC
OK   UME::SIMD::SIMD8_8i test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD8_8i test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD8_8i test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD8_8i test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD8_8i test Id: 95 - SUBV
OK   UME::SIMD::SIMD8_8i test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD8_8i test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD8_8i test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD8_8i test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD8_8i test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD8_8i test Id: 101 - MSUBV
OK   UME::SIMD::SIMD8_8i test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD8_8i test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD8_8i test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD8_8i test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD8_8i test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD8_8i test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD8_8i test Id: 108 - MSUBS
OK   UME::SIMD::SIMD8_8i test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 110 - SUBVA
OK   UME::SIMD::SIMD8_8i test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD8_8i test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD8_8i test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD8_8i test Id: 114 - SUBSA
OK   UME::SIMD::SIMD8_8i test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD8_8i test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD8_8i test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD8_8i test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD8_8i test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD8_8i test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD8_8i test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD8_8i test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD8_8i test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD8_8i test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD8_8i test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD8_8i test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD8_8i test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD8_8i test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD8_8i test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD8_8i test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD8_8i test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD8_8i test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD8_8i test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD8_8i test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD8_8i test Id: 137 - MULV
OK   UME::SIMD::SIMD8_8i test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD8_8i test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD8_8i test Id: 140 - MMULV
OK   UME::SIMD::SIMD8_8i test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD8_8i test Id: 142 - MULS
OK   UME::SIMD::SIMD8_8i test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 146 - MMULS
OK   UME::SIMD::SIMD8_8i test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 148 - MULVA
OK   UME::SIMD::SIMD8_8i test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD8_8i test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD8_8i test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD8_8i test Id: 152 - MMULVA
OK   UME::SIMD::SIMD8_8i test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_8i test Id: 154 - MULSA
OK   UME::SIMD::SIMD8_8i test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD8_8i test Id: 156 - MMULSA
OK   UME::SIMD::SIMD8_8i test Id: 157 - DIVV
OK   UME::SIMD::SIMD8_8i test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD8_8i test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD8_8i test Id: 160 - MDIVV
OK   UME::SIMD::SIMD8_8i test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD8_8i test Id: 162 - DIVS
OK   UME::SIMD::SIMD8_8i test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 165 - MDIVS
OK   UME::SIMD::SIMD8_8i test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 167 - DIVVA
OK   UME::SIMD::SIMD8_8i test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD8_8i test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD8_8i test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD8_8i test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD8_8i test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_8i test Id: 173 - DIVSA
OK   UME::SIMD::SIMD8_8i test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD8_8i test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD8_8i test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD8_8i test Id: 177 - RCP
OK   UME::SIMD::SIMD8_8i test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD8_8i test Id: 179 - MRCP
OK   UME::SIMD::SIMD8_8i test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD8_8i test Id: 181 - RCPS
OK   UME::SIMD::SIMD8_8i test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD8_8i test Id: 184 - MRCPS
OK   UME::SIMD::SIMD8_8i test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD8_8i test Id: 186 - RCPA
OK   UME::SIMD::SIMD8_8i test Id: 187 - MRCPA
OK   UME::SIMD::SIMD8_8i test Id: 188 - RCPSA
OK   UME::SIMD::SIMD8_8i test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD8_8i test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD8_8i test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD8_8i test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD8_8i test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD8_8i test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD8_8i test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD8_8i test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD8_8i test Id: 201 - CMPNES
OK   UME::SIMD::SIMD8_8i test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD8_8i test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD8_8i test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD8_8i test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD8_8i test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD8_8i test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD8_8i test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD8_8i test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD8_8i test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD8_8i test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD8_8i test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD8_8i test Id: 225 - CMPGES
OK   UME::SIMD::SIMD8_8i test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD8_8i test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD8_8i test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD8_8i test Id: 233 - CMPLES
OK   UME::SIMD::SIMD8_8i test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 238 - CMPEV
OK   UME::SIMD::SIMD8_8i test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD8_8i test Id: 240 - CMPES
OK   UME::SIMD::SIMD8_8i test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 243 - HADD
OK   UME::SIMD::SIMD8_8i test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD8_8i test Id: 245 - HADD gen
OK   UME::SIMD::SIMD8_8i test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD8_8i test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD8_8i test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD8_8i test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD8_8i test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD8_8i test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD8_8i test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD8_8i test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD8_8i test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD8_8i test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD8_8i test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD8_8i test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD8_8i test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD8_8i test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD8_8i test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD8_8i test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD8_8i test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD8_8i test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD8_8i test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD8_8i test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD8_8i test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD8_8i test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD8_8i test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD8_8i test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD8_8i test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD8_8i test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD8_8i test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD8_8i test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD8_8i test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD8_8i test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD8_8i test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD8_8i test Id: 277 - MAXV
OK   UME::SIMD::SIMD8_8i test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD8_8i test Id: 279 - MMAXV
OK   UME::SIMD::SIMD8_8i test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD8_8i test Id: 281 - MAXS
OK   UME::SIMD::SIMD8_8i test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 284 - MMAXS
OK   UME::SIMD::SIMD8_8i test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 286 - MAXVA
OK   UME::SIMD::SIMD8_8i test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD8_8i test Id: 288 - MAXSA
OK   UME::SIMD::SIMD8_8i test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD8_8i test Id: 290 - MINV
OK   UME::SIMD::SIMD8_8i test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD8_8i test Id: 292 - MMINV
OK   UME::SIMD::SIMD8_8i test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD8_8i test Id: 294 - MINS
OK   UME::SIMD::SIMD8_8i test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD8_8i test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD8_8i test Id: 297 - MMINS
OK   UME::SIMD::SIMD8_8i test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 299 - MINVA
OK   UME::SIMD::SIMD8_8i test Id: 300 - MMINVA
OK   UME::SIMD::SIMD8_8i test Id: 301 - MINSA
OK   UME::SIMD::SIMD8_8i test Id: 302 - MMINSA
OK   UME::SIMD::SIMD8_8i test Id: 303 - HMAX
OK   UME::SIMD::SIMD8_8i test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD8_8i test Id: 305 - HMAX
OK   UME::SIMD::SIMD8_8i test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD8_8i test Id: 307 - MHMAX
OK   UME::SIMD::SIMD8_8i test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD8_8i test Id: 309 - IMAX
OK   UME::SIMD::SIMD8_8i test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD8_8i test Id: 311 - MIMAX
OK   UME::SIMD::SIMD8_8i test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD8_8i test Id: 313 - HMIN
OK   UME::SIMD::SIMD8_8i test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD8_8i test Id: 315 - HMIN
OK   UME::SIMD::SIMD8_8i test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD8_8i test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD8_8i test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD8_8i test Id: 319 - IMIN
OK   UME::SIMD::SIMD8_8i test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD8_8i test Id: 321 - MIMIN
OK   UME::SIMD::SIMD8_8i test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD8_8i test Id: 323 - REMV gen
OK   UME::SIMD::SIMD8_8i test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD8_8i test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD8_8i test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD8_8i test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD8_8i test Id: 328 - REMS gen
OK   UME::SIMD::SIMD8_8i test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD8_8i test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD8_8i test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD8_8i test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD8_8i test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD8_8i test Id: 334 - LORV gen
OK   UME::SIMD::SIMD8_8i test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD8_8i test Id: 336 - BANDV
OK   UME::SIMD::SIMD8_8i test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD8_8i test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD8_8i test Id: 339 - MBANDV
OK   UME::SIMD::SIMD8_8i test Id: 340 - MBANDV
OK   UME::SIMD::SIMD8_8i test Id: 341 - BANDS
OK   UME::SIMD::SIMD8_8i test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 346 - MBANDS
OK   UME::SIMD::SIMD8_8i test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 348 - BANDVA
OK   UME::SIMD::SIMD8_8i test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD8_8i test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD8_8i test Id: 351 - BANDSA
OK   UME::SIMD::SIMD8_8i test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD8_8i test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD8_8i test Id: 354 - BORV
OK   UME::SIMD::SIMD8_8i test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD8_8i test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD8_8i test Id: 357 - MBORV
OK   UME::SIMD::SIMD8_8i test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD8_8i test Id: 359 - BORS
OK   UME::SIMD::SIMD8_8i test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 364 - MBORS
OK   UME::SIMD::SIMD8_8i test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 366 - BORVA
OK   UME::SIMD::SIMD8_8i test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD8_8i test Id: 368 - MBORVA
OK   UME::SIMD::SIMD8_8i test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD8_8i test Id: 370 - BORSA
OK   UME::SIMD::SIMD8_8i test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD8_8i test Id: 372 - MBORSA
OK   UME::SIMD::SIMD8_8i test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD8_8i test Id: 374 - BXORV
OK   UME::SIMD::SIMD8_8i test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD8_8i test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD8_8i test Id: 377 - MBXORV
OK   UME::SIMD::SIMD8_8i test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD8_8i test Id: 379 - BXORS
OK   UME::SIMD::SIMD8_8i test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 384 - MBXORS
OK   UME::SIMD::SIMD8_8i test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 386 - BXORVA
OK   UME::SIMD::SIMD8_8i test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD8_8i test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD8_8i test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD8_8i test Id: 390 - BXORSA
OK   UME::SIMD::SIMD8_8i test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD8_8i test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD8_8i test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD8_8i test Id: 394 - BNOT
OK   UME::SIMD::SIMD8_8i test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD8_8i test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD8_8i test Id: 397 - MBNOT
OK   UME::SIMD::SIMD8_8i test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD8_8i test Id: 399 - BNOTA
OK   UME::SIMD::SIMD8_8i test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD8_8i test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD8_8i test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD8_8i test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD8_8i test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD8_8i test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD8_8i test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD8_8i test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD8_8i test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD8_8i test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD8_8i test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD8_8i test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD8_8i test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD8_8i test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD8_8i test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD8_8i test Id: 415 - HBAND
OK   UME::SIMD::SIMD8_8i test Id: 416 - HBAND
OK   UME::SIMD::SIMD8_8i test Id: 417 - MHBAND
OK   UME::SIMD::SIMD8_8i test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD8_8i test Id: 419 - HBANDS
OK   UME::SIMD::SIMD8_8i test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD8_8i test Id: 421 - HBOR
OK   UME::SIMD::SIMD8_8i test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD8_8i test Id: 423 - MHBOR
OK   UME::SIMD::SIMD8_8i test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD8_8i test Id: 425 - HBORS
OK   UME::SIMD::SIMD8_8i test Id: 426 - MHBORS
OK   UME::SIMD::SIMD8_8i test Id: 427 - HBXOR
OK   UME::SIMD::SIMD8_8i test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD8_8i test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD8_8i test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD8_8i test Id: 431 - HBXORS
OK   UME::SIMD::SIMD8_8i test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD8_8i test Id: 433 - GATHERU
OK   UME::SIMD::SIMD8_8i test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD8_8i test Id: 435 - GATHERS
OK   UME::SIMD::SIMD8_8i test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD8_8i test Id: 437 - GATHERV
OK   UME::SIMD::SIMD8_8i test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD8_8i test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD8_8i test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD8_8i test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD8_8i test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD8_8i test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD8_8i test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD8_8i test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD8_8i test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD8_8i test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD8_8i test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD8_8i test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD8_8i test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD8_8i test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD8_8i test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD8_8i test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD8_8i test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD8_8i test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD8_8i test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD8_8i test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD8_8i test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD8_8i test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD8_8i test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD8_8i test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD8_8i test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD8_8i test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD8_8i test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD8_8i test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD8_8i test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD8_8i test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD8_8i test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD8_8i test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD8_8i test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD8_8i test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD8_8i test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD8_8i test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD8_8i test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD8_8i test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD8_8i test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD8_8i test Id: 477 - ROLV
OK   UME::SIMD::SIMD8_8i test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD8_8i test Id: 479 - MROLV
OK   UME::SIMD::SIMD8_8i test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD8_8i test Id: 481 - ROLS
OK   UME::SIMD::SIMD8_8i test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 483 - MROLS
OK   UME::SIMD::SIMD8_8i test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 485 - ROLVA
OK   UME::SIMD::SIMD8_8i test Id: 486 - MROLVA
OK   UME::SIMD::SIMD8_8i test Id: 487 - ROLSA
OK   UME::SIMD::SIMD8_8i test Id: 488 - MROLSA
OK   UME::SIMD::SIMD8_8i test Id: 489 - RORV
OK   UME::SIMD::SIMD8_8i test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD8_8i test Id: 491 - MRORV
OK   UME::SIMD::SIMD8_8i test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD8_8i test Id: 493 - RORS
OK   UME::SIMD::SIMD8_8i test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 495 - MRORS
OK   UME::SIMD::SIMD8_8i test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_8i test Id: 497 - RORVA
OK   UME::SIMD::SIMD8_8i test Id: 498 - MRORVA
OK   UME::SIMD::SIMD8_8i test Id: 499 - RORSA
OK   UME::SIMD::SIMD8_8i test Id: 500 - MRORSA
OK   UME::SIMD::SIMD8_8i test Id: 501 - NEG
OK   UME::SIMD::SIMD8_8i test Id: 502 - NEG(operator-)
OK   UME::SIMD::SIMD8_8i test Id: 503 - NEG(function)
OK   UME::SIMD::SIMD8_8i test Id: 504 - MNEG
OK   UME::SIMD::SIMD8_8i test Id: 505 - MNEG(function)
OK   UME::SIMD::SIMD8_8i test Id: 506 - NEGA
OK   UME::SIMD::SIMD8_8i test Id: 507 - MNEGA
OK   UME::SIMD::SIMD8_8i test Id: 508 - ABS
OK   UME::SIMD::SIMD8_8i test Id: 509 - ABS(function)
OK   UME::SIMD::SIMD8_8i test Id: 510 - MABS
OK   UME::SIMD::SIMD8_8i test Id: 511 - MABS(function)
OK   UME::SIMD::SIMD8_8i test Id: 512 - ABSA
OK   UME::SIMD::SIMD8_8i test Id: 513 - MABSA
OK   UME::SIMD::SIMD8_8i test Id: 514 - COPYSIGN gen
OK   UME::SIMD::SIMD8_8i test Id: 515 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD8_8i test Id: 516 - ITOU
OK   UME::SIMD::SIMD8_8i test Id: 517 - PACK
OK   UME::SIMD::SIMD8_8i test Id: 518 - PACKLO
OK   UME::SIMD::SIMD8_8i test Id: 519 - PACKHI
OK   UME::SIMD::SIMD8_8i test Id: 520 - UNPACK
OK   UME::SIMD::SIMD8_8i test Id: 521 - UNPACKLO
OK   UME::SIMD::SIMD8_8i test Id: 522 - UNPACKHi
OK   UME::SIMD::SIMD8_8i test Id: 523 - PROMOTE
OK   UME::SIMD::SIMD4_16u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD4_16u test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD4_16u test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD4_16u test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD4_16u test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD4_16u test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD4_16u test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD4_16u test Id: 24 - INSERT
OK   UME::SIMD::SIMD4_16u test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD4_16u test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD4_16u test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD4_16u test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD4_16u test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD4_16u test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD4_16u test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD4_16u test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD4_16u test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD4_16u test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD4_16u test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD4_16u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD4_16u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD4_16u test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD4_16u test Id: 39 - MLOAD
OK   UME::SIMD::SIMD4_16u test Id: 40 - MSTORE
OK   UME::SIMD::SIMD4_16u test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD4_16u test Id: 42 - MLOADA
OK   UME::SIMD::SIMD4_16u test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD4_16u test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD4_16u test Id: 45 - SORTA
OK   UME::SIMD::SIMD4_16u test Id: 46 - SORTD
OK   UME::SIMD::SIMD4_16u test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD4_16u test Id: 48 - ADDV
OK   UME::SIMD::SIMD4_16u test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD4_16u test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD4_16u test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD4_16u test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD4_16u test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 54 - MADDV
OK   UME::SIMD::SIMD4_16u test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD4_16u test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD4_16u test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 58 - ADDS
OK   UME::SIMD::SIMD4_16u test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD4_16u test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD4_16u test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD4_16u test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD4_16u test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD4_16u test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD4_16u test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD4_16u test Id: 68 - MADDS
OK   UME::SIMD::SIMD4_16u test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD4_16u test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD4_16u test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD4_16u test Id: 73 - ADDVA
OK   UME::SIMD::SIMD4_16u test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD4_16u test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD4_16u test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD4_16u test Id: 77 - MADDVA
OK   UME::SIMD::SIMD4_16u test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD4_16u test Id: 79 - ADDSA
OK   UME::SIMD::SIMD4_16u test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD4_16u test Id: 81 - MADDSA
OK   UME::SIMD::SIMD4_16u test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD4_16u test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD4_16u test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 85 - POSTINC
OK   UME::SIMD::SIMD4_16u test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD4_16u test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD4_16u test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD4_16u test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD4_16u test Id: 90 - PREFINC
OK   UME::SIMD::SIMD4_16u test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD4_16u test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD4_16u test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD4_16u test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD4_16u test Id: 95 - SUBV
OK   UME::SIMD::SIMD4_16u test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD4_16u test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD4_16u test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD4_16u test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD4_16u test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 101 - MSUBV
OK   UME::SIMD::SIMD4_16u test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD4_16u test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD4_16u test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD4_16u test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD4_16u test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 108 - MSUBS
OK   UME::SIMD::SIMD4_16u test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 110 - SUBVA
OK   UME::SIMD::SIMD4_16u test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD4_16u test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD4_16u test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD4_16u test Id: 114 - SUBSA
OK   UME::SIMD::SIMD4_16u test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD4_16u test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD4_16u test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD4_16u test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD4_16u test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD4_16u test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD4_16u test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD4_16u test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD4_16u test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD4_16u test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD4_16u test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD4_16u test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD4_16u test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD4_16u test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD4_16u test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD4_16u test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD4_16u test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD4_16u test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD4_16u test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD4_16u test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD4_16u test Id: 137 - MULV
OK   UME::SIMD::SIMD4_16u test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD4_16u test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD4_16u test Id: 140 - MMULV
OK   UME::SIMD::SIMD4_16u test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD4_16u test Id: 142 - MULS
OK   UME::SIMD::SIMD4_16u test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 146 - MMULS
OK   UME::SIMD::SIMD4_16u test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 148 - MULVA
OK   UME::SIMD::SIMD4_16u test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD4_16u test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD4_16u test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD4_16u test Id: 152 - MMULVA
OK   UME::SIMD::SIMD4_16u test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_16u test Id: 154 - MULSA
OK   UME::SIMD::SIMD4_16u test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD4_16u test Id: 156 - MMULSA
OK   UME::SIMD::SIMD4_16u test Id: 157 - DIVV
OK   UME::SIMD::SIMD4_16u test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD4_16u test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD4_16u test Id: 160 - MDIVV
OK   UME::SIMD::SIMD4_16u test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD4_16u test Id: 162 - DIVS
OK   UME::SIMD::SIMD4_16u test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 165 - MDIVS
OK   UME::SIMD::SIMD4_16u test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 167 - DIVVA
OK   UME::SIMD::SIMD4_16u test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD4_16u test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD4_16u test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD4_16u test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD4_16u test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_16u test Id: 173 - DIVSA
OK   UME::SIMD::SIMD4_16u test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD4_16u test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD4_16u test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD4_16u test Id: 177 - RCP
OK   UME::SIMD::SIMD4_16u test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD4_16u test Id: 179 - MRCP
OK   UME::SIMD::SIMD4_16u test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD4_16u test Id: 181 - RCPS
OK   UME::SIMD::SIMD4_16u test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD4_16u test Id: 184 - MRCPS
OK   UME::SIMD::SIMD4_16u test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD4_16u test Id: 186 - RCPA
OK   UME::SIMD::SIMD4_16u test Id: 187 - MRCPA
OK   UME::SIMD::SIMD4_16u test Id: 188 - RCPSA
OK   UME::SIMD::SIMD4_16u test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD4_16u test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD4_16u test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD4_16u test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD4_16u test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD4_16u test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD4_16u test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD4_16u test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD4_16u test Id: 201 - CMPNES
OK   UME::SIMD::SIMD4_16u test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD4_16u test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD4_16u test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD4_16u test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD4_16u test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD4_16u test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD4_16u test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD4_16u test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD4_16u test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD4_16u test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD4_16u test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD4_16u test Id: 225 - CMPGES
OK   UME::SIMD::SIMD4_16u test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD4_16u test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD4_16u test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD4_16u test Id: 233 - CMPLES
OK   UME::SIMD::SIMD4_16u test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 238 - CMPEV
OK   UME::SIMD::SIMD4_16u test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD4_16u test Id: 240 - CMPES
OK   UME::SIMD::SIMD4_16u test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 243 - HADD
OK   UME::SIMD::SIMD4_16u test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD4_16u test Id: 245 - HADD gen
OK   UME::SIMD::SIMD4_16u test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD4_16u test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD4_16u test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD4_16u test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD4_16u test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD4_16u test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD4_16u test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD4_16u test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD4_16u test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD4_16u test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD4_16u test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD4_16u test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD4_16u test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD4_16u test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD4_16u test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD4_16u test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD4_16u test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD4_16u test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD4_16u test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD4_16u test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD4_16u test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD4_16u test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD4_16u test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD4_16u test Id: 277 - MAXV
OK   UME::SIMD::SIMD4_16u test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD4_16u test Id: 279 - MMAXV
OK   UME::SIMD::SIMD4_16u test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD4_16u test Id: 281 - MAXS
OK   UME::SIMD::SIMD4_16u test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 284 - MMAXS
OK   UME::SIMD::SIMD4_16u test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 286 - MAXVA
OK   UME::SIMD::SIMD4_16u test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD4_16u test Id: 288 - MAXSA
OK   UME::SIMD::SIMD4_16u test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD4_16u test Id: 290 - MINV
OK   UME::SIMD::SIMD4_16u test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD4_16u test Id: 292 - MMINV
OK   UME::SIMD::SIMD4_16u test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD4_16u test Id: 294 - MINS
OK   UME::SIMD::SIMD4_16u test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD4_16u test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD4_16u test Id: 297 - MMINS
OK   UME::SIMD::SIMD4_16u test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 299 - MINVA
OK   UME::SIMD::SIMD4_16u test Id: 300 - MMINVA
OK   UME::SIMD::SIMD4_16u test Id: 301 - MINSA
OK   UME::SIMD::SIMD4_16u test Id: 302 - MMINSA
OK   UME::SIMD::SIMD4_16u test Id: 303 - HMAX
OK   UME::SIMD::SIMD4_16u test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD4_16u test Id: 305 - HMAX
OK   UME::SIMD::SIMD4_16u test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD4_16u test Id: 307 - MHMAX
OK   UME::SIMD::SIMD4_16u test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD4_16u test Id: 309 - IMAX
OK   UME::SIMD::SIMD4_16u test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD4_16u test Id: 311 - MIMAX
OK   UME::SIMD::SIMD4_16u test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD4_16u test Id: 313 - HMIN
OK   UME::SIMD::SIMD4_16u test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD4_16u test Id: 315 - HMIN
OK   UME::SIMD::SIMD4_16u test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD4_16u test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD4_16u test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 319 - IMIN
OK   UME::SIMD::SIMD4_16u test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD4_16u test Id: 321 - MIMIN
OK   UME::SIMD::SIMD4_16u test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD4_16u test Id: 323 - REMV gen
OK   UME::SIMD::SIMD4_16u test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD4_16u test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD4_16u test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 328 - REMS gen
OK   UME::SIMD::SIMD4_16u test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD4_16u test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD4_16u test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD4_16u test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD4_16u test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD4_16u test Id: 334 - LORV gen
OK   UME::SIMD::SIMD4_16u test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD4_16u test Id: 336 - BANDV
OK   UME::SIMD::SIMD4_16u test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD4_16u test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD4_16u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD4_16u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD4_16u test Id: 341 - BANDS
OK   UME::SIMD::SIMD4_16u test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 346 - MBANDS
OK   UME::SIMD::SIMD4_16u test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 348 - BANDVA
OK   UME::SIMD::SIMD4_16u test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD4_16u test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD4_16u test Id: 351 - BANDSA
OK   UME::SIMD::SIMD4_16u test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD4_16u test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD4_16u test Id: 354 - BORV
OK   UME::SIMD::SIMD4_16u test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD4_16u test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD4_16u test Id: 357 - MBORV
OK   UME::SIMD::SIMD4_16u test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD4_16u test Id: 359 - BORS
OK   UME::SIMD::SIMD4_16u test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 364 - MBORS
OK   UME::SIMD::SIMD4_16u test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 366 - BORVA
OK   UME::SIMD::SIMD4_16u test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD4_16u test Id: 368 - MBORVA
OK   UME::SIMD::SIMD4_16u test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD4_16u test Id: 370 - BORSA
OK   UME::SIMD::SIMD4_16u test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD4_16u test Id: 372 - MBORSA
OK   UME::SIMD::SIMD4_16u test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD4_16u test Id: 374 - BXORV
OK   UME::SIMD::SIMD4_16u test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD4_16u test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD4_16u test Id: 377 - MBXORV
OK   UME::SIMD::SIMD4_16u test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD4_16u test Id: 379 - BXORS
OK   UME::SIMD::SIMD4_16u test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 384 - MBXORS
OK   UME::SIMD::SIMD4_16u test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 386 - BXORVA
OK   UME::SIMD::SIMD4_16u test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD4_16u test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD4_16u test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD4_16u test Id: 390 - BXORSA
OK   UME::SIMD::SIMD4_16u test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD4_16u test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD4_16u test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD4_16u test Id: 394 - BNOT
OK   UME::SIMD::SIMD4_16u test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD4_16u test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD4_16u test Id: 397 - MBNOT
OK   UME::SIMD::SIMD4_16u test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD4_16u test Id: 399 - BNOTA
OK   UME::SIMD::SIMD4_16u test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD4_16u test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD4_16u test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD4_16u test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD4_16u test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD4_16u test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD4_16u test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD4_16u test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD4_16u test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD4_16u test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD4_16u test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD4_16u test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD4_16u test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD4_16u test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD4_16u test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD4_16u test Id: 415 - HBAND
OK   UME::SIMD::SIMD4_16u test Id: 416 - HBAND
OK   UME::SIMD::SIMD4_16u test Id: 417 - MHBAND
OK   UME::SIMD::SIMD4_16u test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD4_16u test Id: 419 - HBANDS
OK   UME::SIMD::SIMD4_16u test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD4_16u test Id: 421 - HBOR
OK   UME::SIMD::SIMD4_16u test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD4_16u test Id: 423 - MHBOR
OK   UME::SIMD::SIMD4_16u test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD4_16u test Id: 425 - HBORS
OK   UME::SIMD::SIMD4_16u test Id: 426 - MHBORS
OK   UME::SIMD::SIMD4_16u test Id: 427 - HBXOR
OK   UME::SIMD::SIMD4_16u test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD4_16u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD4_16u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD4_16u test Id: 431 - HBXORS
OK   UME::SIMD::SIMD4_16u test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD4_16u test Id: 433 - GATHERU
OK   UME::SIMD::SIMD4_16u test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD4_16u test Id: 435 - GATHERS
OK   UME::SIMD::SIMD4_16u test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD4_16u test Id: 437 - GATHERV
OK   UME::SIMD::SIMD4_16u test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD4_16u test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD4_16u test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD4_16u test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD4_16u test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD4_16u test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD4_16u test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD4_16u test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD4_16u test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD4_16u test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD4_16u test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD4_16u test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD4_16u test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD4_16u test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD4_16u test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD4_16u test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD4_16u test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD4_16u test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD4_16u test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD4_16u test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD4_16u test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD4_16u test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD4_16u test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD4_16u test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD4_16u test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD4_16u test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD4_16u test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD4_16u test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD4_16u test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD4_16u test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD4_16u test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD4_16u test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD4_16u test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD4_16u test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD4_16u test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD4_16u test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD4_16u test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD4_16u test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD4_16u test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD4_16u test Id: 477 - ROLV
OK   UME::SIMD::SIMD4_16u test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD4_16u test Id: 479 - MROLV
OK   UME::SIMD::SIMD4_16u test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD4_16u test Id: 481 - ROLS
OK   UME::SIMD::SIMD4_16u test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 483 - MROLS
OK   UME::SIMD::SIMD4_16u test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 485 - ROLVA
OK   UME::SIMD::SIMD4_16u test Id: 486 - MROLVA
OK   UME::SIMD::SIMD4_16u test Id: 487 - ROLSA
OK   UME::SIMD::SIMD4_16u test Id: 488 - MROLSA
OK   UME::SIMD::SIMD4_16u test Id: 489 - RORV
OK   UME::SIMD::SIMD4_16u test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD4_16u test Id: 491 - MRORV
OK   UME::SIMD::SIMD4_16u test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD4_16u test Id: 493 - RORS
OK   UME::SIMD::SIMD4_16u test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 495 - MRORS
OK   UME::SIMD::SIMD4_16u test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 497 - RORVA
OK   UME::SIMD::SIMD4_16u test Id: 498 - MRORVA
OK   UME::SIMD::SIMD4_16u test Id: 499 - RORSA
OK   UME::SIMD::SIMD4_16u test Id: 500 - MRORSA
OK   UME::SIMD::SIMD4_16u test Id: 501 - UTOI
OK   UME::SIMD::SIMD4_16u test Id: 502 - PACK
OK   UME::SIMD::SIMD4_16u test Id: 503 - PACKLO
OK   UME::SIMD::SIMD4_16u test Id: 504 - PACKHI
OK   UME::SIMD::SIMD4_16u test Id: 505 - UNPACK
OK   UME::SIMD::SIMD4_16u test Id: 506 - UNPACKLO
OK   UME::SIMD::SIMD4_16u test Id: 507 - UNPACKHi
OK   UME::SIMD::SIMD4_16u test Id: 508 - PROMOTE
OK   UME::SIMD::SIMD4_16u test Id: 509 - DEGRADE
OK   UME::SIMD::SIMD4_16u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD4_16u test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD4_16u test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD4_16u test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD4_16u test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD4_16u test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD4_16u test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD4_16u test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD4_16u test Id: 24 - INSERT
OK   UME::SIMD::SIMD4_16u test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD4_16u test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD4_16u test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD4_16u test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD4_16u test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD4_16u test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD4_16u test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD4_16u test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD4_16u test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD4_16u test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD4_16u test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD4_16u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD4_16u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD4_16u test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD4_16u test Id: 39 - MLOAD
OK   UME::SIMD::SIMD4_16u test Id: 40 - MSTORE
OK   UME::SIMD::SIMD4_16u test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD4_16u test Id: 42 - MLOADA
OK   UME::SIMD::SIMD4_16u test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD4_16u test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD4_16u test Id: 45 - SORTA
OK   UME::SIMD::SIMD4_16u test Id: 46 - SORTD
OK   UME::SIMD::SIMD4_16u test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD4_16u test Id: 48 - ADDV
OK   UME::SIMD::SIMD4_16u test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD4_16u test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD4_16u test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD4_16u test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD4_16u test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 54 - MADDV
OK   UME::SIMD::SIMD4_16u test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD4_16u test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD4_16u test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 58 - ADDS
OK   UME::SIMD::SIMD4_16u test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD4_16u test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD4_16u test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD4_16u test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD4_16u test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD4_16u test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD4_16u test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD4_16u test Id: 68 - MADDS
OK   UME::SIMD::SIMD4_16u test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD4_16u test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD4_16u test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD4_16u test Id: 73 - ADDVA
OK   UME::SIMD::SIMD4_16u test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD4_16u test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD4_16u test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD4_16u test Id: 77 - MADDVA
OK   UME::SIMD::SIMD4_16u test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD4_16u test Id: 79 - ADDSA
OK   UME::SIMD::SIMD4_16u test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD4_16u test Id: 81 - MADDSA
OK   UME::SIMD::SIMD4_16u test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD4_16u test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD4_16u test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 85 - POSTINC
OK   UME::SIMD::SIMD4_16u test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD4_16u test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD4_16u test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD4_16u test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD4_16u test Id: 90 - PREFINC
OK   UME::SIMD::SIMD4_16u test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD4_16u test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD4_16u test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD4_16u test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD4_16u test Id: 95 - SUBV
OK   UME::SIMD::SIMD4_16u test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD4_16u test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD4_16u test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD4_16u test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD4_16u test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 101 - MSUBV
OK   UME::SIMD::SIMD4_16u test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD4_16u test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD4_16u test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD4_16u test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD4_16u test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 108 - MSUBS
OK   UME::SIMD::SIMD4_16u test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 110 - SUBVA
OK   UME::SIMD::SIMD4_16u test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD4_16u test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD4_16u test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD4_16u test Id: 114 - SUBSA
OK   UME::SIMD::SIMD4_16u test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD4_16u test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD4_16u test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD4_16u test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD4_16u test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD4_16u test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD4_16u test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD4_16u test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD4_16u test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD4_16u test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD4_16u test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD4_16u test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD4_16u test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD4_16u test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD4_16u test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD4_16u test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD4_16u test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD4_16u test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD4_16u test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD4_16u test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD4_16u test Id: 137 - MULV
OK   UME::SIMD::SIMD4_16u test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD4_16u test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD4_16u test Id: 140 - MMULV
OK   UME::SIMD::SIMD4_16u test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD4_16u test Id: 142 - MULS
OK   UME::SIMD::SIMD4_16u test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 146 - MMULS
OK   UME::SIMD::SIMD4_16u test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 148 - MULVA
OK   UME::SIMD::SIMD4_16u test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD4_16u test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD4_16u test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD4_16u test Id: 152 - MMULVA
OK   UME::SIMD::SIMD4_16u test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_16u test Id: 154 - MULSA
OK   UME::SIMD::SIMD4_16u test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD4_16u test Id: 156 - MMULSA
OK   UME::SIMD::SIMD4_16u test Id: 157 - DIVV
OK   UME::SIMD::SIMD4_16u test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD4_16u test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD4_16u test Id: 160 - MDIVV
OK   UME::SIMD::SIMD4_16u test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD4_16u test Id: 162 - DIVS
OK   UME::SIMD::SIMD4_16u test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 165 - MDIVS
OK   UME::SIMD::SIMD4_16u test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 167 - DIVVA
OK   UME::SIMD::SIMD4_16u test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD4_16u test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD4_16u test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD4_16u test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD4_16u test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_16u test Id: 173 - DIVSA
OK   UME::SIMD::SIMD4_16u test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD4_16u test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD4_16u test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD4_16u test Id: 177 - RCP
OK   UME::SIMD::SIMD4_16u test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD4_16u test Id: 179 - MRCP
OK   UME::SIMD::SIMD4_16u test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD4_16u test Id: 181 - RCPS
OK   UME::SIMD::SIMD4_16u test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD4_16u test Id: 184 - MRCPS
OK   UME::SIMD::SIMD4_16u test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD4_16u test Id: 186 - RCPA
OK   UME::SIMD::SIMD4_16u test Id: 187 - MRCPA
OK   UME::SIMD::SIMD4_16u test Id: 188 - RCPSA
OK   UME::SIMD::SIMD4_16u test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD4_16u test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD4_16u test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD4_16u test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD4_16u test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD4_16u test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD4_16u test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD4_16u test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD4_16u test Id: 201 - CMPNES
OK   UME::SIMD::SIMD4_16u test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD4_16u test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD4_16u test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD4_16u test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD4_16u test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD4_16u test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD4_16u test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD4_16u test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD4_16u test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD4_16u test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD4_16u test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD4_16u test Id: 225 - CMPGES
OK   UME::SIMD::SIMD4_16u test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD4_16u test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD4_16u test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD4_16u test Id: 233 - CMPLES
OK   UME::SIMD::SIMD4_16u test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 238 - CMPEV
OK   UME::SIMD::SIMD4_16u test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD4_16u test Id: 240 - CMPES
OK   UME::SIMD::SIMD4_16u test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 243 - HADD
OK   UME::SIMD::SIMD4_16u test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD4_16u test Id: 245 - HADD gen
OK   UME::SIMD::SIMD4_16u test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD4_16u test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD4_16u test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD4_16u test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD4_16u test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD4_16u test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD4_16u test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD4_16u test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD4_16u test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD4_16u test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD4_16u test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD4_16u test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD4_16u test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD4_16u test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD4_16u test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD4_16u test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD4_16u test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD4_16u test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD4_16u test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD4_16u test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD4_16u test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD4_16u test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD4_16u test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD4_16u test Id: 277 - MAXV
OK   UME::SIMD::SIMD4_16u test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD4_16u test Id: 279 - MMAXV
OK   UME::SIMD::SIMD4_16u test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD4_16u test Id: 281 - MAXS
OK   UME::SIMD::SIMD4_16u test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 284 - MMAXS
OK   UME::SIMD::SIMD4_16u test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 286 - MAXVA
OK   UME::SIMD::SIMD4_16u test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD4_16u test Id: 288 - MAXSA
OK   UME::SIMD::SIMD4_16u test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD4_16u test Id: 290 - MINV
OK   UME::SIMD::SIMD4_16u test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD4_16u test Id: 292 - MMINV
OK   UME::SIMD::SIMD4_16u test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD4_16u test Id: 294 - MINS
OK   UME::SIMD::SIMD4_16u test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD4_16u test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD4_16u test Id: 297 - MMINS
OK   UME::SIMD::SIMD4_16u test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 299 - MINVA
OK   UME::SIMD::SIMD4_16u test Id: 300 - MMINVA
OK   UME::SIMD::SIMD4_16u test Id: 301 - MINSA
OK   UME::SIMD::SIMD4_16u test Id: 302 - MMINSA
OK   UME::SIMD::SIMD4_16u test Id: 303 - HMAX
OK   UME::SIMD::SIMD4_16u test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD4_16u test Id: 305 - HMAX
OK   UME::SIMD::SIMD4_16u test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD4_16u test Id: 307 - MHMAX
OK   UME::SIMD::SIMD4_16u test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD4_16u test Id: 309 - IMAX
OK   UME::SIMD::SIMD4_16u test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD4_16u test Id: 311 - MIMAX
OK   UME::SIMD::SIMD4_16u test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD4_16u test Id: 313 - HMIN
OK   UME::SIMD::SIMD4_16u test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD4_16u test Id: 315 - HMIN
OK   UME::SIMD::SIMD4_16u test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD4_16u test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD4_16u test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 319 - IMIN
OK   UME::SIMD::SIMD4_16u test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD4_16u test Id: 321 - MIMIN
OK   UME::SIMD::SIMD4_16u test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD4_16u test Id: 323 - REMV gen
OK   UME::SIMD::SIMD4_16u test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD4_16u test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD4_16u test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD4_16u test Id: 328 - REMS gen
OK   UME::SIMD::SIMD4_16u test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD4_16u test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD4_16u test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD4_16u test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD4_16u test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD4_16u test Id: 334 - LORV gen
OK   UME::SIMD::SIMD4_16u test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD4_16u test Id: 336 - BANDV
OK   UME::SIMD::SIMD4_16u test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD4_16u test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD4_16u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD4_16u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD4_16u test Id: 341 - BANDS
OK   UME::SIMD::SIMD4_16u test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 346 - MBANDS
OK   UME::SIMD::SIMD4_16u test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 348 - BANDVA
OK   UME::SIMD::SIMD4_16u test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD4_16u test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD4_16u test Id: 351 - BANDSA
OK   UME::SIMD::SIMD4_16u test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD4_16u test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD4_16u test Id: 354 - BORV
OK   UME::SIMD::SIMD4_16u test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD4_16u test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD4_16u test Id: 357 - MBORV
OK   UME::SIMD::SIMD4_16u test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD4_16u test Id: 359 - BORS
OK   UME::SIMD::SIMD4_16u test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 364 - MBORS
OK   UME::SIMD::SIMD4_16u test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 366 - BORVA
OK   UME::SIMD::SIMD4_16u test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD4_16u test Id: 368 - MBORVA
OK   UME::SIMD::SIMD4_16u test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD4_16u test Id: 370 - BORSA
OK   UME::SIMD::SIMD4_16u test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD4_16u test Id: 372 - MBORSA
OK   UME::SIMD::SIMD4_16u test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD4_16u test Id: 374 - BXORV
OK   UME::SIMD::SIMD4_16u test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD4_16u test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD4_16u test Id: 377 - MBXORV
OK   UME::SIMD::SIMD4_16u test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD4_16u test Id: 379 - BXORS
OK   UME::SIMD::SIMD4_16u test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 384 - MBXORS
OK   UME::SIMD::SIMD4_16u test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 386 - BXORVA
OK   UME::SIMD::SIMD4_16u test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD4_16u test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD4_16u test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD4_16u test Id: 390 - BXORSA
OK   UME::SIMD::SIMD4_16u test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD4_16u test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD4_16u test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD4_16u test Id: 394 - BNOT
OK   UME::SIMD::SIMD4_16u test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD4_16u test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD4_16u test Id: 397 - MBNOT
OK   UME::SIMD::SIMD4_16u test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD4_16u test Id: 399 - BNOTA
OK   UME::SIMD::SIMD4_16u test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD4_16u test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD4_16u test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD4_16u test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD4_16u test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD4_16u test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD4_16u test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD4_16u test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD4_16u test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD4_16u test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD4_16u test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD4_16u test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD4_16u test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD4_16u test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD4_16u test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD4_16u test Id: 415 - HBAND
OK   UME::SIMD::SIMD4_16u test Id: 416 - HBAND
OK   UME::SIMD::SIMD4_16u test Id: 417 - MHBAND
OK   UME::SIMD::SIMD4_16u test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD4_16u test Id: 419 - HBANDS
OK   UME::SIMD::SIMD4_16u test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD4_16u test Id: 421 - HBOR
OK   UME::SIMD::SIMD4_16u test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD4_16u test Id: 423 - MHBOR
OK   UME::SIMD::SIMD4_16u test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD4_16u test Id: 425 - HBORS
OK   UME::SIMD::SIMD4_16u test Id: 426 - MHBORS
OK   UME::SIMD::SIMD4_16u test Id: 427 - HBXOR
OK   UME::SIMD::SIMD4_16u test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD4_16u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD4_16u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD4_16u test Id: 431 - HBXORS
OK   UME::SIMD::SIMD4_16u test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD4_16u test Id: 433 - GATHERU
OK   UME::SIMD::SIMD4_16u test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD4_16u test Id: 435 - GATHERS
OK   UME::SIMD::SIMD4_16u test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD4_16u test Id: 437 - GATHERV
OK   UME::SIMD::SIMD4_16u test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD4_16u test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD4_16u test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD4_16u test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD4_16u test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD4_16u test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD4_16u test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD4_16u test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD4_16u test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD4_16u test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD4_16u test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD4_16u test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD4_16u test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD4_16u test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD4_16u test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD4_16u test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD4_16u test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD4_16u test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD4_16u test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD4_16u test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD4_16u test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD4_16u test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD4_16u test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD4_16u test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD4_16u test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD4_16u test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD4_16u test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD4_16u test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD4_16u test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD4_16u test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD4_16u test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD4_16u test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD4_16u test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD4_16u test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD4_16u test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD4_16u test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD4_16u test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD4_16u test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD4_16u test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD4_16u test Id: 477 - ROLV
OK   UME::SIMD::SIMD4_16u test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD4_16u test Id: 479 - MROLV
OK   UME::SIMD::SIMD4_16u test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD4_16u test Id: 481 - ROLS
OK   UME::SIMD::SIMD4_16u test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 483 - MROLS
OK   UME::SIMD::SIMD4_16u test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 485 - ROLVA
OK   UME::SIMD::SIMD4_16u test Id: 486 - MROLVA
OK   UME::SIMD::SIMD4_16u test Id: 487 - ROLSA
OK   UME::SIMD::SIMD4_16u test Id: 488 - MROLSA
OK   UME::SIMD::SIMD4_16u test Id: 489 - RORV
OK   UME::SIMD::SIMD4_16u test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD4_16u test Id: 491 - MRORV
OK   UME::SIMD::SIMD4_16u test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD4_16u test Id: 493 - RORS
OK   UME::SIMD::SIMD4_16u test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 495 - MRORS
OK   UME::SIMD::SIMD4_16u test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_16u test Id: 497 - RORVA
OK   UME::SIMD::SIMD4_16u test Id: 498 - MRORVA
OK   UME::SIMD::SIMD4_16u test Id: 499 - RORSA
OK   UME::SIMD::SIMD4_16u test Id: 500 - MRORSA
OK   UME::SIMD::SIMD4_16u test Id: 501 - UTOI
OK   UME::SIMD::SIMD4_16u test Id: 502 - PACK
OK   UME::SIMD::SIMD4_16u test Id: 503 - PACKLO
OK   UME::SIMD::SIMD4_16u test Id: 504 - PACKHI
OK   UME::SIMD::SIMD4_16u test Id: 505 - UNPACK
OK   UME::SIMD::SIMD4_16u test Id: 506 - UNPACKLO
OK   UME::SIMD::SIMD4_16u test Id: 507 - UNPACKHi
OK   UME::SIMD::SIMD4_16u test Id: 508 - PROMOTE
OK   UME::SIMD::SIMD4_16u test Id: 509 - DEGRADE
OK   UME::SIMD::SIMD2_32u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD2_32u test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD2_32u test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD2_32u test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD2_32u test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD2_32u test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD2_32u test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD2_32u test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD2_32u test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD2_32u test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD2_32u test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD2_32u test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD2_32u test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD2_32u test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD2_32u test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD2_32u test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD2_32u test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD2_32u test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD2_32u test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD2_32u test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD2_32u test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD2_32u test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD2_32u test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD2_32u test Id: 24 - INSERT
OK   UME::SIMD::SIMD2_32u test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD2_32u test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD2_32u test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD2_32u test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD2_32u test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD2_32u test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD2_32u test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD2_32u test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD2_32u test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD2_32u test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD2_32u test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD2_32u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD2_32u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD2_32u test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD2_32u test Id: 39 - MLOAD
OK   UME::SIMD::SIMD2_32u test Id: 40 - MSTORE
OK   UME::SIMD::SIMD2_32u test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD2_32u test Id: 42 - MLOADA
OK   UME::SIMD::SIMD2_32u test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD2_32u test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD2_32u test Id: 45 - SORTA
OK   UME::SIMD::SIMD2_32u test Id: 46 - SORTD
OK   UME::SIMD::SIMD2_32u test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD2_32u test Id: 48 - ADDV
OK   UME::SIMD::SIMD2_32u test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD2_32u test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD2_32u test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD2_32u test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD2_32u test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD2_32u test Id: 54 - MADDV
OK   UME::SIMD::SIMD2_32u test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD2_32u test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD2_32u test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD2_32u test Id: 58 - ADDS
OK   UME::SIMD::SIMD2_32u test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD2_32u test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD2_32u test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD2_32u test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD2_32u test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD2_32u test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD2_32u test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD2_32u test Id: 68 - MADDS
OK   UME::SIMD::SIMD2_32u test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD2_32u test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD2_32u test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD2_32u test Id: 73 - ADDVA
OK   UME::SIMD::SIMD2_32u test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD2_32u test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD2_32u test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD2_32u test Id: 77 - MADDVA
OK   UME::SIMD::SIMD2_32u test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD2_32u test Id: 79 - ADDSA
OK   UME::SIMD::SIMD2_32u test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD2_32u test Id: 81 - MADDSA
OK   UME::SIMD::SIMD2_32u test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD2_32u test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD2_32u test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD2_32u test Id: 85 - POSTINC
OK   UME::SIMD::SIMD2_32u test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD2_32u test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD2_32u test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD2_32u test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD2_32u test Id: 90 - PREFINC
OK   UME::SIMD::SIMD2_32u test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD2_32u test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD2_32u test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD2_32u test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD2_32u test Id: 95 - SUBV
OK   UME::SIMD::SIMD2_32u test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD2_32u test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD2_32u test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD2_32u test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD2_32u test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD2_32u test Id: 101 - MSUBV
OK   UME::SIMD::SIMD2_32u test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD2_32u test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD2_32u test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD2_32u test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD2_32u test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD2_32u test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD2_32u test Id: 108 - MSUBS
OK   UME::SIMD::SIMD2_32u test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 110 - SUBVA
OK   UME::SIMD::SIMD2_32u test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD2_32u test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD2_32u test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD2_32u test Id: 114 - SUBSA
OK   UME::SIMD::SIMD2_32u test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD2_32u test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD2_32u test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD2_32u test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD2_32u test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD2_32u test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD2_32u test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD2_32u test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD2_32u test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD2_32u test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD2_32u test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD2_32u test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD2_32u test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD2_32u test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD2_32u test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD2_32u test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD2_32u test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD2_32u test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD2_32u test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD2_32u test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD2_32u test Id: 137 - MULV
OK   UME::SIMD::SIMD2_32u test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD2_32u test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD2_32u test Id: 140 - MMULV
OK   UME::SIMD::SIMD2_32u test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD2_32u test Id: 142 - MULS
OK   UME::SIMD::SIMD2_32u test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 146 - MMULS
OK   UME::SIMD::SIMD2_32u test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 148 - MULVA
OK   UME::SIMD::SIMD2_32u test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD2_32u test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD2_32u test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD2_32u test Id: 152 - MMULVA
OK   UME::SIMD::SIMD2_32u test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_32u test Id: 154 - MULSA
OK   UME::SIMD::SIMD2_32u test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD2_32u test Id: 156 - MMULSA
OK   UME::SIMD::SIMD2_32u test Id: 157 - DIVV
OK   UME::SIMD::SIMD2_32u test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD2_32u test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD2_32u test Id: 160 - MDIVV
OK   UME::SIMD::SIMD2_32u test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD2_32u test Id: 162 - DIVS
OK   UME::SIMD::SIMD2_32u test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 165 - MDIVS
OK   UME::SIMD::SIMD2_32u test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 167 - DIVVA
OK   UME::SIMD::SIMD2_32u test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD2_32u test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD2_32u test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD2_32u test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD2_32u test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_32u test Id: 173 - DIVSA
OK   UME::SIMD::SIMD2_32u test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD2_32u test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD2_32u test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD2_32u test Id: 177 - RCP
OK   UME::SIMD::SIMD2_32u test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD2_32u test Id: 179 - MRCP
OK   UME::SIMD::SIMD2_32u test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD2_32u test Id: 181 - RCPS
OK   UME::SIMD::SIMD2_32u test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD2_32u test Id: 184 - MRCPS
OK   UME::SIMD::SIMD2_32u test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD2_32u test Id: 186 - RCPA
OK   UME::SIMD::SIMD2_32u test Id: 187 - MRCPA
OK   UME::SIMD::SIMD2_32u test Id: 188 - RCPSA
OK   UME::SIMD::SIMD2_32u test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD2_32u test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD2_32u test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD2_32u test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD2_32u test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD2_32u test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD2_32u test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD2_32u test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD2_32u test Id: 201 - CMPNES
OK   UME::SIMD::SIMD2_32u test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD2_32u test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD2_32u test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD2_32u test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD2_32u test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD2_32u test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD2_32u test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD2_32u test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD2_32u test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD2_32u test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD2_32u test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD2_32u test Id: 225 - CMPGES
OK   UME::SIMD::SIMD2_32u test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD2_32u test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD2_32u test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD2_32u test Id: 233 - CMPLES
OK   UME::SIMD::SIMD2_32u test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 238 - CMPEV
OK   UME::SIMD::SIMD2_32u test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD2_32u test Id: 240 - CMPES
OK   UME::SIMD::SIMD2_32u test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 243 - HADD
OK   UME::SIMD::SIMD2_32u test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD2_32u test Id: 245 - HADD gen
OK   UME::SIMD::SIMD2_32u test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD2_32u test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD2_32u test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD2_32u test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD2_32u test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD2_32u test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD2_32u test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD2_32u test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD2_32u test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD2_32u test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD2_32u test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD2_32u test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD2_32u test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD2_32u test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD2_32u test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD2_32u test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD2_32u test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD2_32u test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD2_32u test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD2_32u test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD2_32u test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD2_32u test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD2_32u test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD2_32u test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD2_32u test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD2_32u test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD2_32u test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD2_32u test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD2_32u test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD2_32u test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD2_32u test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD2_32u test Id: 277 - MAXV
OK   UME::SIMD::SIMD2_32u test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD2_32u test Id: 279 - MMAXV
OK   UME::SIMD::SIMD2_32u test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD2_32u test Id: 281 - MAXS
OK   UME::SIMD::SIMD2_32u test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 284 - MMAXS
OK   UME::SIMD::SIMD2_32u test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 286 - MAXVA
OK   UME::SIMD::SIMD2_32u test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD2_32u test Id: 288 - MAXSA
OK   UME::SIMD::SIMD2_32u test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD2_32u test Id: 290 - MINV
OK   UME::SIMD::SIMD2_32u test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD2_32u test Id: 292 - MMINV
OK   UME::SIMD::SIMD2_32u test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD2_32u test Id: 294 - MINS
OK   UME::SIMD::SIMD2_32u test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD2_32u test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD2_32u test Id: 297 - MMINS
OK   UME::SIMD::SIMD2_32u test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 299 - MINVA
OK   UME::SIMD::SIMD2_32u test Id: 300 - MMINVA
OK   UME::SIMD::SIMD2_32u test Id: 301 - MINSA
OK   UME::SIMD::SIMD2_32u test Id: 302 - MMINSA
OK   UME::SIMD::SIMD2_32u test Id: 303 - HMAX
OK   UME::SIMD::SIMD2_32u test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD2_32u test Id: 305 - HMAX
OK   UME::SIMD::SIMD2_32u test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD2_32u test Id: 307 - MHMAX
OK   UME::SIMD::SIMD2_32u test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD2_32u test Id: 309 - IMAX
OK   UME::SIMD::SIMD2_32u test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD2_32u test Id: 311 - MIMAX
OK   UME::SIMD::SIMD2_32u test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD2_32u test Id: 313 - HMIN
OK   UME::SIMD::SIMD2_32u test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD2_32u test Id: 315 - HMIN
OK   UME::SIMD::SIMD2_32u test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD2_32u test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD2_32u test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD2_32u test Id: 319 - IMIN
OK   UME::SIMD::SIMD2_32u test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD2_32u test Id: 321 - MIMIN
OK   UME::SIMD::SIMD2_32u test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD2_32u test Id: 323 - REMV gen
OK   UME::SIMD::SIMD2_32u test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD2_32u test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD2_32u test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD2_32u test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD2_32u test Id: 328 - REMS gen
OK   UME::SIMD::SIMD2_32u test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD2_32u test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD2_32u test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD2_32u test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD2_32u test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD2_32u test Id: 334 - LORV gen
OK   UME::SIMD::SIMD2_32u test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD2_32u test Id: 336 - BANDV
OK   UME::SIMD::SIMD2_32u test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD2_32u test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD2_32u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD2_32u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD2_32u test Id: 341 - BANDS
OK   UME::SIMD::SIMD2_32u test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 346 - MBANDS
OK   UME::SIMD::SIMD2_32u test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 348 - BANDVA
OK   UME::SIMD::SIMD2_32u test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD2_32u test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD2_32u test Id: 351 - BANDSA
OK   UME::SIMD::SIMD2_32u test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD2_32u test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD2_32u test Id: 354 - BORV
OK   UME::SIMD::SIMD2_32u test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD2_32u test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD2_32u test Id: 357 - MBORV
OK   UME::SIMD::SIMD2_32u test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD2_32u test Id: 359 - BORS
OK   UME::SIMD::SIMD2_32u test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 364 - MBORS
OK   UME::SIMD::SIMD2_32u test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 366 - BORVA
OK   UME::SIMD::SIMD2_32u test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD2_32u test Id: 368 - MBORVA
OK   UME::SIMD::SIMD2_32u test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD2_32u test Id: 370 - BORSA
OK   UME::SIMD::SIMD2_32u test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD2_32u test Id: 372 - MBORSA
OK   UME::SIMD::SIMD2_32u test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD2_32u test Id: 374 - BXORV
OK   UME::SIMD::SIMD2_32u test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD2_32u test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD2_32u test Id: 377 - MBXORV
OK   UME::SIMD::SIMD2_32u test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD2_32u test Id: 379 - BXORS
OK   UME::SIMD::SIMD2_32u test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 384 - MBXORS
OK   UME::SIMD::SIMD2_32u test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 386 - BXORVA
OK   UME::SIMD::SIMD2_32u test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD2_32u test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD2_32u test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD2_32u test Id: 390 - BXORSA
OK   UME::SIMD::SIMD2_32u test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD2_32u test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD2_32u test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD2_32u test Id: 394 - BNOT
OK   UME::SIMD::SIMD2_32u test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD2_32u test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD2_32u test Id: 397 - MBNOT
OK   UME::SIMD::SIMD2_32u test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD2_32u test Id: 399 - BNOTA
OK   UME::SIMD::SIMD2_32u test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD2_32u test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD2_32u test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD2_32u test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD2_32u test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD2_32u test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD2_32u test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD2_32u test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD2_32u test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD2_32u test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD2_32u test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD2_32u test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD2_32u test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD2_32u test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD2_32u test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD2_32u test Id: 415 - HBAND
OK   UME::SIMD::SIMD2_32u test Id: 416 - HBAND
OK   UME::SIMD::SIMD2_32u test Id: 417 - MHBAND
OK   UME::SIMD::SIMD2_32u test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD2_32u test Id: 419 - HBANDS
OK   UME::SIMD::SIMD2_32u test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD2_32u test Id: 421 - HBOR
OK   UME::SIMD::SIMD2_32u test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD2_32u test Id: 423 - MHBOR
OK   UME::SIMD::SIMD2_32u test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD2_32u test Id: 425 - HBORS
OK   UME::SIMD::SIMD2_32u test Id: 426 - MHBORS
OK   UME::SIMD::SIMD2_32u test Id: 427 - HBXOR
OK   UME::SIMD::SIMD2_32u test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD2_32u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD2_32u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD2_32u test Id: 431 - HBXORS
OK   UME::SIMD::SIMD2_32u test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD2_32u test Id: 433 - GATHERU
OK   UME::SIMD::SIMD2_32u test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD2_32u test Id: 435 - GATHERS
OK   UME::SIMD::SIMD2_32u test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD2_32u test Id: 437 - GATHERV
OK   UME::SIMD::SIMD2_32u test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD2_32u test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD2_32u test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD2_32u test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD2_32u test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD2_32u test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD2_32u test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD2_32u test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD2_32u test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD2_32u test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD2_32u test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD2_32u test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD2_32u test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD2_32u test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD2_32u test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD2_32u test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD2_32u test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD2_32u test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD2_32u test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD2_32u test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD2_32u test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD2_32u test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD2_32u test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD2_32u test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD2_32u test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD2_32u test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD2_32u test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD2_32u test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD2_32u test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD2_32u test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD2_32u test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD2_32u test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD2_32u test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD2_32u test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD2_32u test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD2_32u test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD2_32u test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD2_32u test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD2_32u test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD2_32u test Id: 477 - ROLV
OK   UME::SIMD::SIMD2_32u test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD2_32u test Id: 479 - MROLV
OK   UME::SIMD::SIMD2_32u test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD2_32u test Id: 481 - ROLS
OK   UME::SIMD::SIMD2_32u test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 483 - MROLS
OK   UME::SIMD::SIMD2_32u test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 485 - ROLVA
OK   UME::SIMD::SIMD2_32u test Id: 486 - MROLVA
OK   UME::SIMD::SIMD2_32u test Id: 487 - ROLSA
OK   UME::SIMD::SIMD2_32u test Id: 488 - MROLSA
OK   UME::SIMD::SIMD2_32u test Id: 489 - RORV
OK   UME::SIMD::SIMD2_32u test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD2_32u test Id: 491 - MRORV
OK   UME::SIMD::SIMD2_32u test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD2_32u test Id: 493 - RORS
OK   UME::SIMD::SIMD2_32u test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 495 - MRORS
OK   UME::SIMD::SIMD2_32u test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32u test Id: 497 - RORVA
OK   UME::SIMD::SIMD2_32u test Id: 498 - MRORVA
OK   UME::SIMD::SIMD2_32u test Id: 499 - RORSA
OK   UME::SIMD::SIMD2_32u test Id: 500 - MRORSA
OK   UME::SIMD::SIMD2_32u test Id: 501 - UTOI
OK   UME::SIMD::SIMD2_32u test Id: 502 - UTOF
OK   UME::SIMD::SIMD2_32u test Id: 503 - PACK
OK   UME::SIMD::SIMD2_32u test Id: 504 - PACKLO
OK   UME::SIMD::SIMD2_32u test Id: 505 - PACKHI
OK   UME::SIMD::SIMD2_32u test Id: 506 - UNPACK
OK   UME::SIMD::SIMD2_32u test Id: 507 - UNPACKLO
OK   UME::SIMD::SIMD2_32u test Id: 508 - UNPACKHi
OK   UME::SIMD::SIMD2_32u test Id: 509 - PROMOTE
OK   UME::SIMD::SIMD2_32u test Id: 510 - DEGRADE
OK   UME::SIMD::SIMD2_32i test Id: 1 - SET-CONSTR gen
OK   UME::SIMD::SIMD2_32i test Id: 2 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD2_32i test Id: 3 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD2_32i test Id: 4 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD2_32i test Id: 5 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD2_32i test Id: 6 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD2_32i test Id: 7 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD2_32i test Id: 8 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD2_32i test Id: 9 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD2_32i test Id: 10 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD2_32i test Id: 11 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD2_32i test Id: 12 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD2_32i test Id: 13 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD2_32i test Id: 14 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD2_32i test Id: 15 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD2_32i test Id: 16 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD2_32i test Id: 17 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD2_32i test Id: 18 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD2_32i test Id: 19 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD2_32i test Id: 20 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD2_32i test Id: 21 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD2_32i test Id: 22 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD2_32i test Id: 23 - INSERT
OK   UME::SIMD::SIMD2_32i test Id: 24 - INSERT(operator[] =)
OK   UME::SIMD::SIMD2_32i test Id: 25 - EXTRACT
OK   UME::SIMD::SIMD2_32i test Id: 26 - EXTRACT(operator[])
OK   UME::SIMD::SIMD2_32i test Id: 27 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD2_32i test Id: 28 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD2_32i test Id: 29 - ASSIGNV
OK   UME::SIMD::SIMD2_32i test Id: 30 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD2_32i test Id: 31 - MASSIGNV
OK   UME::SIMD::SIMD2_32i test Id: 32 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD2_32i test Id: 33 - ASSIGNS
OK   UME::SIMD::SIMD2_32i test Id: 34 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD2_32i test Id: 35 - MASSIGNS
OK   UME::SIMD::SIMD2_32i test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD2_32i test Id: 37 - LOAD/STORE
OK   UME::SIMD::SIMD2_32i test Id: 38 - MLOAD
OK   UME::SIMD::SIMD2_32i test Id: 39 - MSTORE
OK   UME::SIMD::SIMD2_32i test Id: 40 - LOADA/STOREA
OK   UME::SIMD::SIMD2_32i test Id: 41 - MLOADA
OK   UME::SIMD::SIMD2_32i test Id: 42 - MSTOREA
OK   UME::SIMD::SIMD2_32i test Id: 43 - SWIZZLE
OK   UME::SIMD::SIMD2_32i test Id: 44 - SORTA
OK   UME::SIMD::SIMD2_32i test Id: 45 - SORTD
OK   UME::SIMD::SIMD2_32i test Id: 46 - BLENDV gen
OK   UME::SIMD::SIMD2_32i test Id: 47 - ADDV
OK   UME::SIMD::SIMD2_32i test Id: 48 - ADDV(operator+)
OK   UME::SIMD::SIMD2_32i test Id: 49 - ADDV(function)
OK   UME::SIMD::SIMD2_32i test Id: 50 - ADDV gen
OK   UME::SIMD::SIMD2_32i test Id: 51 - ADDV(operator+) gen
OK   UME::SIMD::SIMD2_32i test Id: 52 - ADDV(function) gen
OK   UME::SIMD::SIMD2_32i test Id: 53 - MADDV
OK   UME::SIMD::SIMD2_32i test Id: 54 - MADDV(function)
OK   UME::SIMD::SIMD2_32i test Id: 55 - MADDV gen
OK   UME::SIMD::SIMD2_32i test Id: 56 - MADDV(function) gen
OK   UME::SIMD::SIMD2_32i test Id: 57 - ADDS
OK   UME::SIMD::SIMD2_32i test Id: 58 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 59 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 60 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD2_32i test Id: 61 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD2_32i test Id: 62 - ADDS gen
OK   UME::SIMD::SIMD2_32i test Id: 63 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD2_32i test Id: 64 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD2_32i test Id: 65 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD2_32i test Id: 66 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD2_32i test Id: 67 - MADDS
OK   UME::SIMD::SIMD2_32i test Id: 68 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 69 - MADDS gen
OK   UME::SIMD::SIMD2_32i test Id: 70 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD2_32i test Id: 71 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD2_32i test Id: 72 - ADDVA
OK   UME::SIMD::SIMD2_32i test Id: 73 - ADDVA(operator+=)
OK   UME::SIMD::SIMD2_32i test Id: 74 - ADDVA gen
OK   UME::SIMD::SIMD2_32i test Id: 75 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD2_32i test Id: 76 - MADDVA
OK   UME::SIMD::SIMD2_32i test Id: 77 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD2_32i test Id: 78 - ADDSA
OK   UME::SIMD::SIMD2_32i test Id: 79 - ADDSA(operator+=)
OK   UME::SIMD::SIMD2_32i test Id: 80 - MADDSA
OK   UME::SIMD::SIMD2_32i test Id: 81 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD2_32i test Id: 82 - SADDV gen
OK   UME::SIMD::SIMD2_32i test Id: 83 - SADDV(function) gen
OK   UME::SIMD::SIMD2_32i test Id: 84 - POSTINC
OK   UME::SIMD::SIMD2_32i test Id: 85 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD2_32i test Id: 86 - POSTINC(function)
OK   UME::SIMD::SIMD2_32i test Id: 87 - MPOSTINC
OK   UME::SIMD::SIMD2_32i test Id: 88 - MPOSTINC(function)
OK   UME::SIMD::SIMD2_32i test Id: 89 - PREFINC
OK   UME::SIMD::SIMD2_32i test Id: 90 - PREFINC(operator++())
OK   UME::SIMD::SIMD2_32i test Id: 91 - PREFINC(function)
OK   UME::SIMD::SIMD2_32i test Id: 92 - MPREFINC
OK   UME::SIMD::SIMD2_32i test Id: 93 - MPREFINC(function)
OK   UME::SIMD::SIMD2_32i test Id: 94 - SUBV
OK   UME::SIMD::SIMD2_32i test Id: 95 - SUBV(operator-)
OK   UME::SIMD::SIMD2_32i test Id: 96 - SUBV(function)
OK   UME::SIMD::SIMD2_32i test Id: 97 - SUBV gen
OK   UME::SIMD::SIMD2_32i test Id: 98 - SUBV(operator-) gen
OK   UME::SIMD::SIMD2_32i test Id: 99 - SUBV(function) gen
OK   UME::SIMD::SIMD2_32i test Id: 100 - MSUBV
OK   UME::SIMD::SIMD2_32i test Id: 101 - MSUBV(function)
OK   UME::SIMD::SIMD2_32i test Id: 102 - MSUBV gen
OK   UME::SIMD::SIMD2_32i test Id: 103 - MSUBV(function) gen
OK   UME::SIMD::SIMD2_32i test Id: 104 - SUBS gen
OK   UME::SIMD::SIMD2_32i test Id: 105 - SUBS(operator-) gen
OK   UME::SIMD::SIMD2_32i test Id: 106 - SUBS(function) gen
OK   UME::SIMD::SIMD2_32i test Id: 107 - MSUBS
OK   UME::SIMD::SIMD2_32i test Id: 108 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 109 - SUBVA
OK   UME::SIMD::SIMD2_32i test Id: 110 - SUBVA(operator-=)
OK   UME::SIMD::SIMD2_32i test Id: 111 - MSUBVA
OK   UME::SIMD::SIMD2_32i test Id: 112 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD2_32i test Id: 113 - SUBSA
OK   UME::SIMD::SIMD2_32i test Id: 114 - MSUBSA
OK   UME::SIMD::SIMD2_32i test Id: 115 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD2_32i test Id: 116 - SUBFROMV
OK   UME::SIMD::SIMD2_32i test Id: 117 - MSUBFROMV
OK   UME::SIMD::SIMD2_32i test Id: 118 - SUBFROMS
OK   UME::SIMD::SIMD2_32i test Id: 119 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 120 - MSUBFROMS
OK   UME::SIMD::SIMD2_32i test Id: 121 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 122 - SUBFROMVA
OK   UME::SIMD::SIMD2_32i test Id: 123 - MSUBFROMVA
OK   UME::SIMD::SIMD2_32i test Id: 124 - SUBFROMSA
OK   UME::SIMD::SIMD2_32i test Id: 125 - MSUBFROMSA
OK   UME::SIMD::SIMD2_32i test Id: 126 - POSTDEC
OK   UME::SIMD::SIMD2_32i test Id: 127 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD2_32i test Id: 128 - POSTDEC(function)
OK   UME::SIMD::SIMD2_32i test Id: 129 - MPOSTDEC
OK   UME::SIMD::SIMD2_32i test Id: 130 - MPOSTDEC(function)
OK   UME::SIMD::SIMD2_32i test Id: 131 - PREFDEC
OK   UME::SIMD::SIMD2_32i test Id: 132 - PREFDEC(operator--())
OK   UME::SIMD::SIMD2_32i test Id: 133 - PREFDEC(function)
OK   UME::SIMD::SIMD2_32i test Id: 134 - MPREFDEC
OK   UME::SIMD::SIMD2_32i test Id: 135 - MPREFDEC(function)
OK   UME::SIMD::SIMD2_32i test Id: 136 - MULV
OK   UME::SIMD::SIMD2_32i test Id: 137 - MULV(operator*)
OK   UME::SIMD::SIMD2_32i test Id: 138 - MULV(function)
OK   UME::SIMD::SIMD2_32i test Id: 139 - MMULV
OK   UME::SIMD::SIMD2_32i test Id: 140 - MMULV(function)
OK   UME::SIMD::SIMD2_32i test Id: 141 - MULS
OK   UME::SIMD::SIMD2_32i test Id: 142 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 143 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 144 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 145 - MMULS
OK   UME::SIMD::SIMD2_32i test Id: 146 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 147 - MULVA
OK   UME::SIMD::SIMD2_32i test Id: 148 - MULVA(operator*)
OK   UME::SIMD::SIMD2_32i test Id: 149 - MULVA gen
OK   UME::SIMD::SIMD2_32i test Id: 150 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD2_32i test Id: 151 - MMULVA
OK   UME::SIMD::SIMD2_32i test Id: 152 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_32i test Id: 153 - MULSA
OK   UME::SIMD::SIMD2_32i test Id: 154 - MULSA(operator*=)
OK   UME::SIMD::SIMD2_32i test Id: 155 - MMULSA
OK   UME::SIMD::SIMD2_32i test Id: 156 - DIVV
OK   UME::SIMD::SIMD2_32i test Id: 157 - DIVV(operator/)
OK   UME::SIMD::SIMD2_32i test Id: 158 - DIVV(function)
OK   UME::SIMD::SIMD2_32i test Id: 159 - MDIVV
OK   UME::SIMD::SIMD2_32i test Id: 160 - MDIVV(function)
OK   UME::SIMD::SIMD2_32i test Id: 161 - DIVS
OK   UME::SIMD::SIMD2_32i test Id: 162 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 163 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 164 - MDIVS
OK   UME::SIMD::SIMD2_32i test Id: 165 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 166 - DIVVA
OK   UME::SIMD::SIMD2_32i test Id: 167 - DIVVA(operator/=)
OK   UME::SIMD::SIMD2_32i test Id: 168 - DIVVA gen
OK   UME::SIMD::SIMD2_32i test Id: 169 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD2_32i test Id: 170 - MDIVVA
OK   UME::SIMD::SIMD2_32i test Id: 171 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_32i test Id: 172 - DIVSA
OK   UME::SIMD::SIMD2_32i test Id: 173 - DIVSA(operator/=)
OK   UME::SIMD::SIMD2_32i test Id: 174 - MDIVSA
OK   UME::SIMD::SIMD2_32i test Id: 175 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD2_32i test Id: 176 - RCP
OK   UME::SIMD::SIMD2_32i test Id: 177 - RCP(function)
OK   UME::SIMD::SIMD2_32i test Id: 178 - MRCP
OK   UME::SIMD::SIMD2_32i test Id: 179 - MRCP(function)
OK   UME::SIMD::SIMD2_32i test Id: 180 - RCPS
OK   UME::SIMD::SIMD2_32i test Id: 181 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 182 - RCPS(function)
OK   UME::SIMD::SIMD2_32i test Id: 183 - MRCPS
OK   UME::SIMD::SIMD2_32i test Id: 184 - MRCPS (function)
OK   UME::SIMD::SIMD2_32i test Id: 185 - RCPA
OK   UME::SIMD::SIMD2_32i test Id: 186 - MRCPA
OK   UME::SIMD::SIMD2_32i test Id: 187 - RCPSA
OK   UME::SIMD::SIMD2_32i test Id: 188 - MRCPSA
OK   UME::SIMD::SIMD2_32i test Id: 189 - CMPEQV
OK   UME::SIMD::SIMD2_32i test Id: 190 - CMPEQV(operator==)
OK   UME::SIMD::SIMD2_32i test Id: 191 - CMPEQV(function)
OK   UME::SIMD::SIMD2_32i test Id: 192 - CMPEQS
OK   UME::SIMD::SIMD2_32i test Id: 193 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 194 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 195 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 196 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 197 - CMPNEV
OK   UME::SIMD::SIMD2_32i test Id: 198 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD2_32i test Id: 199 - CMPNEV(function)
OK   UME::SIMD::SIMD2_32i test Id: 200 - CMPNES
OK   UME::SIMD::SIMD2_32i test Id: 201 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 202 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 203 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 204 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 205 - CMPGTV
OK   UME::SIMD::SIMD2_32i test Id: 206 - CMPGTV(operator>)
OK   UME::SIMD::SIMD2_32i test Id: 207 - CMPGTV(function)
OK   UME::SIMD::SIMD2_32i test Id: 208 - CMPGTS
OK   UME::SIMD::SIMD2_32i test Id: 209 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 210 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 211 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 212 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 213 - CMPLTV
OK   UME::SIMD::SIMD2_32i test Id: 214 - CMPLTV(operator<)
OK   UME::SIMD::SIMD2_32i test Id: 215 - CMPLTV(function)
OK   UME::SIMD::SIMD2_32i test Id: 216 - CMPLTS
OK   UME::SIMD::SIMD2_32i test Id: 217 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 218 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 219 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 220 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 221 - CMPGEV
OK   UME::SIMD::SIMD2_32i test Id: 222 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD2_32i test Id: 223 - CMPGEV(function)
OK   UME::SIMD::SIMD2_32i test Id: 224 - CMPGES
OK   UME::SIMD::SIMD2_32i test Id: 225 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 226 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 227 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 228 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 229 - CMPLEV
OK   UME::SIMD::SIMD2_32i test Id: 230 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD2_32i test Id: 231 - CMPLEV(function)
OK   UME::SIMD::SIMD2_32i test Id: 232 - CMPLES
OK   UME::SIMD::SIMD2_32i test Id: 233 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 234 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 235 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 236 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 237 - CMPEV
OK   UME::SIMD::SIMD2_32i test Id: 238 - CMPEV(function)
OK   UME::SIMD::SIMD2_32i test Id: 239 - CMPES
OK   UME::SIMD::SIMD2_32i test Id: 240 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 241 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 242 - HADD
OK   UME::SIMD::SIMD2_32i test Id: 243 - HADD(function)
OK   UME::SIMD::SIMD2_32i test Id: 244 - HADD gen
OK   UME::SIMD::SIMD2_32i test Id: 245 - HADD(function) gen
OK   UME::SIMD::SIMD2_32i test Id: 246 - MHADD gen
OK   UME::SIMD::SIMD2_32i test Id: 247 - MHADD(function) gen
OK   UME::SIMD::SIMD2_32i test Id: 248 - HADDS gen
OK   UME::SIMD::SIMD2_32i test Id: 249 - HADDS(function) gen
OK   UME::SIMD::SIMD2_32i test Id: 250 - MHADD gen
OK   UME::SIMD::SIMD2_32i test Id: 251 - MHADDS(function) gen
OK   UME::SIMD::SIMD2_32i test Id: 252 - HMUL gen
OK   UME::SIMD::SIMD2_32i test Id: 253 - HMUL(function) gen
OK   UME::SIMD::SIMD2_32i test Id: 254 - MHMUL gen
OK   UME::SIMD::SIMD2_32i test Id: 255 - MHMUL(function) gen
OK   UME::SIMD::SIMD2_32i test Id: 256 - HMULS gen
OK   UME::SIMD::SIMD2_32i test Id: 257 - HMULS(function) gen
OK   UME::SIMD::SIMD2_32i test Id: 258 - MHMUL gen
OK   UME::SIMD::SIMD2_32i test Id: 259 - MHMULS(function) gen
OK   UME::SIMD::SIMD2_32i test Id: 260 - FMULADDV
OK   UME::SIMD::SIMD2_32i test Id: 261 - FMULADDV(function)
OK   UME::SIMD::SIMD2_32i test Id: 262 - MFMULADDV
OK   UME::SIMD::SIMD2_32i test Id: 263 - MFMULADDV(function)
OK   UME::SIMD::SIMD2_32i test Id: 264 - FMULSUBV
OK   UME::SIMD::SIMD2_32i test Id: 265 - FMULSUBV(function)
OK   UME::SIMD::SIMD2_32i test Id: 266 - MFMULSUBV
OK   UME::SIMD::SIMD2_32i test Id: 267 - MFMULSUBV(function)
OK   UME::SIMD::SIMD2_32i test Id: 268 - FADDMULV
OK   UME::SIMD::SIMD2_32i test Id: 269 - FADDMULV(function)
OK   UME::SIMD::SIMD2_32i test Id: 270 - MFADDMULV
OK   UME::SIMD::SIMD2_32i test Id: 271 - MFADDMULV(function)
OK   UME::SIMD::SIMD2_32i test Id: 272 - FSUBMULV
OK   UME::SIMD::SIMD2_32i test Id: 273 - FSUBMULV(function)
OK   UME::SIMD::SIMD2_32i test Id: 274 - MFSUBMULV
OK   UME::SIMD::SIMD2_32i test Id: 275 - MFSUBMULV(function)
OK   UME::SIMD::SIMD2_32i test Id: 276 - MAXV
OK   UME::SIMD::SIMD2_32i test Id: 277 - MAXV(function)
OK   UME::SIMD::SIMD2_32i test Id: 278 - MMAXV
OK   UME::SIMD::SIMD2_32i test Id: 279 - MMAXV(function)
OK   UME::SIMD::SIMD2_32i test Id: 280 - MAXS
OK   UME::SIMD::SIMD2_32i test Id: 281 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 282 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 283 - MMAXS
OK   UME::SIMD::SIMD2_32i test Id: 284 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 285 - MAXVA
OK   UME::SIMD::SIMD2_32i test Id: 286 - MMAXVA
OK   UME::SIMD::SIMD2_32i test Id: 287 - MAXSA
OK   UME::SIMD::SIMD2_32i test Id: 288 - MMAXSA
OK   UME::SIMD::SIMD2_32i test Id: 289 - MINV
OK   UME::SIMD::SIMD2_32i test Id: 290 - MINV(function)
OK   UME::SIMD::SIMD2_32i test Id: 291 - MMINV
OK   UME::SIMD::SIMD2_32i test Id: 292 - MMINV(function)
OK   UME::SIMD::SIMD2_32i test Id: 293 - MINS
OK   UME::SIMD::SIMD2_32i test Id: 294 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD2_32i test Id: 295 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD2_32i test Id: 296 - MMINS
OK   UME::SIMD::SIMD2_32i test Id: 297 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 298 - MINVA
OK   UME::SIMD::SIMD2_32i test Id: 299 - MMINVA
OK   UME::SIMD::SIMD2_32i test Id: 300 - MINSA
OK   UME::SIMD::SIMD2_32i test Id: 301 - MMINSA
OK   UME::SIMD::SIMD2_32i test Id: 302 - HMAX
OK   UME::SIMD::SIMD2_32i test Id: 303 - HMAX(function)
OK   UME::SIMD::SIMD2_32i test Id: 304 - HMAX
OK   UME::SIMD::SIMD2_32i test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD2_32i test Id: 306 - MHMAX
OK   UME::SIMD::SIMD2_32i test Id: 307 - MHMAX(function)
OK   UME::SIMD::SIMD2_32i test Id: 308 - IMAX
OK   UME::SIMD::SIMD2_32i test Id: 309 - IMAX(function)
OK   UME::SIMD::SIMD2_32i test Id: 310 - MIMAX
OK   UME::SIMD::SIMD2_32i test Id: 311 - MIMAX(function)
OK   UME::SIMD::SIMD2_32i test Id: 312 - HMIN
OK   UME::SIMD::SIMD2_32i test Id: 313 - HMIN(function)
OK   UME::SIMD::SIMD2_32i test Id: 314 - HMIN
OK   UME::SIMD::SIMD2_32i test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD2_32i test Id: 316 - MHMIN gen
OK   UME::SIMD::SIMD2_32i test Id: 317 - MHMIN(function) gen
OK   UME::SIMD::SIMD2_32i test Id: 318 - IMIN
OK   UME::SIMD::SIMD2_32i test Id: 319 - IMIN(function)
OK   UME::SIMD::SIMD2_32i test Id: 320 - MIMIN
OK   UME::SIMD::SIMD2_32i test Id: 321 - MIMIN(function)
OK   UME::SIMD::SIMD2_32i test Id: 322 - REMV gen
OK   UME::SIMD::SIMD2_32i test Id: 323 - REMV(operator%) gen
OK   UME::SIMD::SIMD2_32i test Id: 324 - REMV(function) gen
OK   UME::SIMD::SIMD2_32i test Id: 325 - MREMV gen
OK   UME::SIMD::SIMD2_32i test Id: 326 - MREMV(function) gen
OK   UME::SIMD::SIMD2_32i test Id: 327 - REMS gen
OK   UME::SIMD::SIMD2_32i test Id: 328 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD2_32i test Id: 329 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD2_32i test Id: 330 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD2_32i test Id: 331 - LANDV gen
OK   UME::SIMD::SIMD2_32i test Id: 332 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD2_32i test Id: 333 - LORV gen
OK   UME::SIMD::SIMD2_32i test Id: 334 - LORV gen (operator ||)
OK   UME::SIMD::SIMD2_32i test Id: 335 - BANDV
OK   UME::SIMD::SIMD2_32i test Id: 336 - BANDV(operator&)
OK   UME::SIMD::SIMD2_32i test Id: 337 - BANDV(function)
OK   UME::SIMD::SIMD2_32i test Id: 338 - MBANDV
OK   UME::SIMD::SIMD2_32i test Id: 339 - MBANDV
OK   UME::SIMD::SIMD2_32i test Id: 340 - BANDS
OK   UME::SIMD::SIMD2_32i test Id: 341 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 342 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 343 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 344 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 345 - MBANDS
OK   UME::SIMD::SIMD2_32i test Id: 346 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 347 - BANDVA
OK   UME::SIMD::SIMD2_32i test Id: 348 - MBANDVA
OK   UME::SIMD::SIMD2_32i test Id: 349 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD2_32i test Id: 350 - BANDSA
OK   UME::SIMD::SIMD2_32i test Id: 351 - MBANDSA
OK   UME::SIMD::SIMD2_32i test Id: 352 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD2_32i test Id: 353 - BORV
OK   UME::SIMD::SIMD2_32i test Id: 354 - BORV(operator |)
OK   UME::SIMD::SIMD2_32i test Id: 355 - BORV(function)
OK   UME::SIMD::SIMD2_32i test Id: 356 - MBORV
OK   UME::SIMD::SIMD2_32i test Id: 357 - MBORV(function)
OK   UME::SIMD::SIMD2_32i test Id: 358 - BORS
OK   UME::SIMD::SIMD2_32i test Id: 359 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 360 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 361 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 362 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 363 - MBORS
OK   UME::SIMD::SIMD2_32i test Id: 364 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 365 - BORVA
OK   UME::SIMD::SIMD2_32i test Id: 366 - BORVA(operator|=)
OK   UME::SIMD::SIMD2_32i test Id: 367 - MBORVA
OK   UME::SIMD::SIMD2_32i test Id: 368 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD2_32i test Id: 369 - BORSA
OK   UME::SIMD::SIMD2_32i test Id: 370 - BORSA(operator|=)
OK   UME::SIMD::SIMD2_32i test Id: 371 - MBORSA
OK   UME::SIMD::SIMD2_32i test Id: 372 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD2_32i test Id: 373 - BXORV
OK   UME::SIMD::SIMD2_32i test Id: 374 - BXORV(operator^
OK   UME::SIMD::SIMD2_32i test Id: 375 - BXORV(function
OK   UME::SIMD::SIMD2_32i test Id: 376 - MBXORV
OK   UME::SIMD::SIMD2_32i test Id: 377 - MBXORV(function)
OK   UME::SIMD::SIMD2_32i test Id: 378 - BXORS
OK   UME::SIMD::SIMD2_32i test Id: 379 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 380 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 381 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 382 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 383 - MBXORS
OK   UME::SIMD::SIMD2_32i test Id: 384 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 385 - BXORVA
OK   UME::SIMD::SIMD2_32i test Id: 386 - BXORVA(operator^=)
OK   UME::SIMD::SIMD2_32i test Id: 387 - MBXORVA
OK   UME::SIMD::SIMD2_32i test Id: 388 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD2_32i test Id: 389 - BXORSA
OK   UME::SIMD::SIMD2_32i test Id: 390 - BXORSA(operator^=)
OK   UME::SIMD::SIMD2_32i test Id: 391 - MBXORSA
OK   UME::SIMD::SIMD2_32i test Id: 392 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD2_32i test Id: 393 - BNOT
OK   UME::SIMD::SIMD2_32i test Id: 394 - BNOT(operator!)
OK   UME::SIMD::SIMD2_32i test Id: 395 - BNOT(function)
OK   UME::SIMD::SIMD2_32i test Id: 396 - MBNOT
OK   UME::SIMD::SIMD2_32i test Id: 397 - MBNOT(function)
OK   UME::SIMD::SIMD2_32i test Id: 398 - BNOTA
OK   UME::SIMD::SIMD2_32i test Id: 399 - MBNOTA
OK   UME::SIMD::SIMD2_32i test Id: 400 - BANDNOTV
OK   UME::SIMD::SIMD2_32i test Id: 401 - BANDNOTV (function)
OK   UME::SIMD::SIMD2_32i test Id: 402 - MBANDNOTV
OK   UME::SIMD::SIMD2_32i test Id: 403 - MBANDNOTV (function)
OK   UME::SIMD::SIMD2_32i test Id: 404 - BANDNOTS
OK   UME::SIMD::SIMD2_32i test Id: 405 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD2_32i test Id: 406 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD2_32i test Id: 407 - MBANDNOTS
OK   UME::SIMD::SIMD2_32i test Id: 408 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD2_32i test Id: 409 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD2_32i test Id: 410 - BANDNOTVA
OK   UME::SIMD::SIMD2_32i test Id: 411 - MBANDNOTVA
OK   UME::SIMD::SIMD2_32i test Id: 412 - BANDNOTSA
OK   UME::SIMD::SIMD2_32i test Id: 413 - MBANDNOTSA
OK   UME::SIMD::SIMD2_32i test Id: 414 - HBAND
OK   UME::SIMD::SIMD2_32i test Id: 415 - HBAND
OK   UME::SIMD::SIMD2_32i test Id: 416 - MHBAND
OK   UME::SIMD::SIMD2_32i test Id: 417 - MHBAND(function)
OK   UME::SIMD::SIMD2_32i test Id: 418 - HBANDS
OK   UME::SIMD::SIMD2_32i test Id: 419 - MHBANDS
OK   UME::SIMD::SIMD2_32i test Id: 420 - HBOR
OK   UME::SIMD::SIMD2_32i test Id: 421 - HBOR(function)
OK   UME::SIMD::SIMD2_32i test Id: 422 - MHBOR
OK   UME::SIMD::SIMD2_32i test Id: 423 - MHBOR(function)
OK   UME::SIMD::SIMD2_32i test Id: 424 - HBORS
OK   UME::SIMD::SIMD2_32i test Id: 425 - MHBORS
OK   UME::SIMD::SIMD2_32i test Id: 426 - HBXOR
OK   UME::SIMD::SIMD2_32i test Id: 427 - HBXOR(function)
OK   UME::SIMD::SIMD2_32i test Id: 428 - MHBXOR
OK   UME::SIMD::SIMD2_32i test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD2_32i test Id: 430 - HBXORS
OK   UME::SIMD::SIMD2_32i test Id: 431 - MHBXORS
OK   UME::SIMD::SIMD2_32i test Id: 432 - GATHERU
OK   UME::SIMD::SIMD2_32i test Id: 433 - MGATHERU
OK   UME::SIMD::SIMD2_32i test Id: 434 - GATHERS
OK   UME::SIMD::SIMD2_32i test Id: 435 - MGATHERS
OK   UME::SIMD::SIMD2_32i test Id: 436 - GATHERV
OK   UME::SIMD::SIMD2_32i test Id: 437 - MGATHERV
OK   UME::SIMD::SIMD2_32i test Id: 438 - SCATTERU
OK   UME::SIMD::SIMD2_32i test Id: 439 - MSCATTERU
OK   UME::SIMD::SIMD2_32i test Id: 440 - SCATTERS
OK   UME::SIMD::SIMD2_32i test Id: 441 - MSCATTERS
OK   UME::SIMD::SIMD2_32i test Id: 442 - SCATTERV
OK   UME::SIMD::SIMD2_32i test Id: 443 - MSCATTERV
OK   UME::SIMD::SIMD2_32i test Id: 444 - LSHV gen
OK   UME::SIMD::SIMD2_32i test Id: 445 - LSHV (function) gen
OK   UME::SIMD::SIMD2_32i test Id: 446 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD2_32i test Id: 447 - MLSHV gen
OK   UME::SIMD::SIMD2_32i test Id: 448 - MLSHV (function) gen
OK   UME::SIMD::SIMD2_32i test Id: 449 - LSHS gen
OK   UME::SIMD::SIMD2_32i test Id: 450 - LSHS (function) gen
OK   UME::SIMD::SIMD2_32i test Id: 451 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD2_32i test Id: 452 - MLSHS gen
OK   UME::SIMD::SIMD2_32i test Id: 453 - MLSHS (function) gen
OK   UME::SIMD::SIMD2_32i test Id: 454 - LSHVA gen
OK   UME::SIMD::SIMD2_32i test Id: 455 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD2_32i test Id: 456 - MLSHVA gen
OK   UME::SIMD::SIMD2_32i test Id: 457 - LSHSA gen
OK   UME::SIMD::SIMD2_32i test Id: 458 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD2_32i test Id: 459 - MLSHSA gen
OK   UME::SIMD::SIMD2_32i test Id: 460 - RSHV gen
OK   UME::SIMD::SIMD2_32i test Id: 461 - RSHV (function) gen
OK   UME::SIMD::SIMD2_32i test Id: 462 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD2_32i test Id: 463 - MRSHV gen
OK   UME::SIMD::SIMD2_32i test Id: 464 - MRSHV (function) gen
OK   UME::SIMD::SIMD2_32i test Id: 465 - RSHS gen
OK   UME::SIMD::SIMD2_32i test Id: 466 - RSHS (function) gen
OK   UME::SIMD::SIMD2_32i test Id: 467 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD2_32i test Id: 468 - MRSHS gen
OK   UME::SIMD::SIMD2_32i test Id: 469 - MRSHS (function) gen
OK   UME::SIMD::SIMD2_32i test Id: 470 - RSHVA gen
OK   UME::SIMD::SIMD2_32i test Id: 471 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD2_32i test Id: 472 - MRSHVA gen
OK   UME::SIMD::SIMD2_32i test Id: 473 - RSHSA gen
OK   UME::SIMD::SIMD2_32i test Id: 474 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD2_32i test Id: 475 - MRSHSA gen
OK   UME::SIMD::SIMD2_32i test Id: 476 - ROLV
OK   UME::SIMD::SIMD2_32i test Id: 477 - ROLV(function)
OK   UME::SIMD::SIMD2_32i test Id: 478 - MROLV
OK   UME::SIMD::SIMD2_32i test Id: 479 - MROLV(function)
OK   UME::SIMD::SIMD2_32i test Id: 480 - ROLS
OK   UME::SIMD::SIMD2_32i test Id: 481 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 482 - MROLS
OK   UME::SIMD::SIMD2_32i test Id: 483 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 484 - ROLVA
OK   UME::SIMD::SIMD2_32i test Id: 485 - MROLVA
OK   UME::SIMD::SIMD2_32i test Id: 486 - ROLSA
OK   UME::SIMD::SIMD2_32i test Id: 487 - MROLSA
OK   UME::SIMD::SIMD2_32i test Id: 488 - RORV
OK   UME::SIMD::SIMD2_32i test Id: 489 - RORV(function)
OK   UME::SIMD::SIMD2_32i test Id: 490 - MRORV
OK   UME::SIMD::SIMD2_32i test Id: 491 - MRORV(function)
OK   UME::SIMD::SIMD2_32i test Id: 492 - RORS
OK   UME::SIMD::SIMD2_32i test Id: 493 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 494 - MRORS
OK   UME::SIMD::SIMD2_32i test Id: 495 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32i test Id: 496 - RORVA
OK   UME::SIMD::SIMD2_32i test Id: 497 - MRORVA
OK   UME::SIMD::SIMD2_32i test Id: 498 - RORSA
OK   UME::SIMD::SIMD2_32i test Id: 499 - MRORSA
OK   UME::SIMD::SIMD2_32i test Id: 500 - NEG
OK   UME::SIMD::SIMD2_32i test Id: 501 - NEG(operator-)
OK   UME::SIMD::SIMD2_32i test Id: 502 - NEG(function)
OK   UME::SIMD::SIMD2_32i test Id: 503 - MNEG
OK   UME::SIMD::SIMD2_32i test Id: 504 - MNEG(function)
OK   UME::SIMD::SIMD2_32i test Id: 505 - NEGA
OK   UME::SIMD::SIMD2_32i test Id: 506 - MNEGA
OK   UME::SIMD::SIMD2_32i test Id: 507 - ABS
OK   UME::SIMD::SIMD2_32i test Id: 508 - ABS(function)
OK   UME::SIMD::SIMD2_32i test Id: 509 - MABS
OK   UME::SIMD::SIMD2_32i test Id: 510 - MABS(function)
OK   UME::SIMD::SIMD2_32i test Id: 511 - ABSA
OK   UME::SIMD::SIMD2_32i test Id: 512 - MABSA
OK   UME::SIMD::SIMD2_32i test Id: 513 - COPYSIGN gen
OK   UME::SIMD::SIMD2_32i test Id: 514 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD2_32i test Id: 515 - ITOU
OK   UME::SIMD::SIMD2_32i test Id: 516 - ITOF
OK   UME::SIMD::SIMD2_32i test Id: 517 - PACK
OK   UME::SIMD::SIMD2_32i test Id: 518 - PACKLO
OK   UME::SIMD::SIMD2_32i test Id: 519 - PACKHI
OK   UME::SIMD::SIMD2_32i test Id: 520 - UNPACK
OK   UME::SIMD::SIMD2_32i test Id: 521 - UNPACKLO
OK   UME::SIMD::SIMD2_32i test Id: 522 - UNPACKHi
OK   UME::SIMD::SIMD2_32i test Id: 523 - PROMOTE
OK   UME::SIMD::SIMD2_32i test Id: 524 - DEGRADE
OK   UME::SIMD::SIMD2_32i test Id: 525 - ZERO-CONSTR
OK   UME::SIMD::SIMD2_32f test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD2_32f test Id: 2 - PACK
OK   UME::SIMD::SIMD2_32f test Id: 3 - SET-CONSTR gen
OK   UME::SIMD::SIMD2_32f test Id: 4 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD2_32f test Id: 5 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD2_32f test Id: 6 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD2_32f test Id: 7 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD2_32f test Id: 8 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD2_32f test Id: 9 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD2_32f test Id: 10 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD2_32f test Id: 11 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD2_32f test Id: 12 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD2_32f test Id: 13 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD2_32f test Id: 14 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD2_32f test Id: 15 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD2_32f test Id: 16 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD2_32f test Id: 17 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD2_32f test Id: 18 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD2_32f test Id: 19 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD2_32f test Id: 20 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD2_32f test Id: 21 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD2_32f test Id: 22 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD2_32f test Id: 23 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD2_32f test Id: 24 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD2_32f test Id: 25 - INSERT
OK   UME::SIMD::SIMD2_32f test Id: 26 - INSERT(operator[] =)
OK   UME::SIMD::SIMD2_32f test Id: 27 - EXTRACT
OK   UME::SIMD::SIMD2_32f test Id: 28 - EXTRACT(operator[])
OK   UME::SIMD::SIMD2_32f test Id: 29 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD2_32f test Id: 30 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD2_32f test Id: 31 - ASSIGNV
OK   UME::SIMD::SIMD2_32f test Id: 32 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD2_32f test Id: 33 - MASSIGNV
OK   UME::SIMD::SIMD2_32f test Id: 34 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD2_32f test Id: 35 - ASSIGNS
OK   UME::SIMD::SIMD2_32f test Id: 36 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD2_32f test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD2_32f test Id: 38 - MASSIGNS
OK   UME::SIMD::SIMD2_32f test Id: 39 - LOAD/STORE
OK   UME::SIMD::SIMD2_32f test Id: 40 - MLOAD
OK   UME::SIMD::SIMD2_32f test Id: 41 - MSTORE
OK   UME::SIMD::SIMD2_32f test Id: 42 - LOADA/STOREA
OK   UME::SIMD::SIMD2_32f test Id: 43 - MLOADA
OK   UME::SIMD::SIMD2_32f test Id: 44 - MSTOREA
OK   UME::SIMD::SIMD2_32f test Id: 45 - SWIZZLE
OK   UME::SIMD::SIMD2_32f test Id: 46 - SORTA
OK   UME::SIMD::SIMD2_32f test Id: 47 - SORTD
OK   UME::SIMD::SIMD2_32f test Id: 48 - BLENDV gen
OK   UME::SIMD::SIMD2_32f test Id: 49 - ADDV
OK   UME::SIMD::SIMD2_32f test Id: 50 - ADDV(operator+)
OK   UME::SIMD::SIMD2_32f test Id: 51 - ADDV(function)
OK   UME::SIMD::SIMD2_32f test Id: 52 - ADDV gen
OK   UME::SIMD::SIMD2_32f test Id: 53 - ADDV(operator+) gen
OK   UME::SIMD::SIMD2_32f test Id: 54 - ADDV(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 55 - MADDV
OK   UME::SIMD::SIMD2_32f test Id: 56 - MADDV(function)
OK   UME::SIMD::SIMD2_32f test Id: 57 - MADDV gen
OK   UME::SIMD::SIMD2_32f test Id: 58 - MADDV(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 59 - ADDS
OK   UME::SIMD::SIMD2_32f test Id: 60 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 61 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 62 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD2_32f test Id: 63 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD2_32f test Id: 64 - ADDS gen
OK   UME::SIMD::SIMD2_32f test Id: 65 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD2_32f test Id: 66 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD2_32f test Id: 67 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD2_32f test Id: 68 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD2_32f test Id: 69 - MADDS
OK   UME::SIMD::SIMD2_32f test Id: 70 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 71 - MADDS gen
OK   UME::SIMD::SIMD2_32f test Id: 72 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD2_32f test Id: 73 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD2_32f test Id: 74 - ADDVA
OK   UME::SIMD::SIMD2_32f test Id: 75 - ADDVA(operator+=)
OK   UME::SIMD::SIMD2_32f test Id: 76 - ADDVA gen
OK   UME::SIMD::SIMD2_32f test Id: 77 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD2_32f test Id: 78 - MADDVA
OK   UME::SIMD::SIMD2_32f test Id: 79 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD2_32f test Id: 80 - ADDSA
OK   UME::SIMD::SIMD2_32f test Id: 81 - ADDSA(operator+=)
OK   UME::SIMD::SIMD2_32f test Id: 82 - MADDSA
OK   UME::SIMD::SIMD2_32f test Id: 83 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD2_32f test Id: 84 - SADDV gen
OK   UME::SIMD::SIMD2_32f test Id: 85 - SADDV(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 86 - POSTINC
OK   UME::SIMD::SIMD2_32f test Id: 87 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD2_32f test Id: 88 - POSTINC(function)
OK   UME::SIMD::SIMD2_32f test Id: 89 - MPOSTINC
OK   UME::SIMD::SIMD2_32f test Id: 90 - MPOSTINC(function)
OK   UME::SIMD::SIMD2_32f test Id: 91 - PREFINC
OK   UME::SIMD::SIMD2_32f test Id: 92 - PREFINC(operator++())
OK   UME::SIMD::SIMD2_32f test Id: 93 - PREFINC(function)
OK   UME::SIMD::SIMD2_32f test Id: 94 - MPREFINC
OK   UME::SIMD::SIMD2_32f test Id: 95 - MPREFINC(function)
OK   UME::SIMD::SIMD2_32f test Id: 96 - SUBV
OK   UME::SIMD::SIMD2_32f test Id: 97 - SUBV(operator-)
OK   UME::SIMD::SIMD2_32f test Id: 98 - SUBV(function)
OK   UME::SIMD::SIMD2_32f test Id: 99 - SUBV gen
OK   UME::SIMD::SIMD2_32f test Id: 100 - SUBV(operator-) gen
OK   UME::SIMD::SIMD2_32f test Id: 101 - SUBV(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 102 - MSUBV
OK   UME::SIMD::SIMD2_32f test Id: 103 - MSUBV(function)
OK   UME::SIMD::SIMD2_32f test Id: 104 - MSUBV gen
OK   UME::SIMD::SIMD2_32f test Id: 105 - MSUBV(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 106 - SUBS gen
OK   UME::SIMD::SIMD2_32f test Id: 107 - SUBS(operator-) gen
OK   UME::SIMD::SIMD2_32f test Id: 108 - SUBS(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 109 - MSUBS
OK   UME::SIMD::SIMD2_32f test Id: 110 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 111 - SUBVA
OK   UME::SIMD::SIMD2_32f test Id: 112 - SUBVA(operator-=)
OK   UME::SIMD::SIMD2_32f test Id: 113 - MSUBVA
OK   UME::SIMD::SIMD2_32f test Id: 114 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD2_32f test Id: 115 - SUBSA
OK   UME::SIMD::SIMD2_32f test Id: 116 - MSUBSA
OK   UME::SIMD::SIMD2_32f test Id: 117 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD2_32f test Id: 118 - SUBFROMV
OK   UME::SIMD::SIMD2_32f test Id: 119 - MSUBFROMV
OK   UME::SIMD::SIMD2_32f test Id: 120 - SUBFROMS
OK   UME::SIMD::SIMD2_32f test Id: 121 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 122 - MSUBFROMS
OK   UME::SIMD::SIMD2_32f test Id: 123 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 124 - SUBFROMVA
OK   UME::SIMD::SIMD2_32f test Id: 125 - MSUBFROMVA
OK   UME::SIMD::SIMD2_32f test Id: 126 - SUBFROMSA
OK   UME::SIMD::SIMD2_32f test Id: 127 - MSUBFROMSA
OK   UME::SIMD::SIMD2_32f test Id: 128 - POSTDEC
OK   UME::SIMD::SIMD2_32f test Id: 129 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD2_32f test Id: 130 - POSTDEC(function)
OK   UME::SIMD::SIMD2_32f test Id: 131 - MPOSTDEC
OK   UME::SIMD::SIMD2_32f test Id: 132 - MPOSTDEC(function)
OK   UME::SIMD::SIMD2_32f test Id: 133 - PREFDEC
OK   UME::SIMD::SIMD2_32f test Id: 134 - PREFDEC(operator--())
OK   UME::SIMD::SIMD2_32f test Id: 135 - PREFDEC(function)
OK   UME::SIMD::SIMD2_32f test Id: 136 - MPREFDEC
OK   UME::SIMD::SIMD2_32f test Id: 137 - MPREFDEC(function)
OK   UME::SIMD::SIMD2_32f test Id: 138 - MULV
OK   UME::SIMD::SIMD2_32f test Id: 139 - MULV(operator*)
OK   UME::SIMD::SIMD2_32f test Id: 140 - MULV(function)
OK   UME::SIMD::SIMD2_32f test Id: 141 - MMULV
OK   UME::SIMD::SIMD2_32f test Id: 142 - MMULV(function)
OK   UME::SIMD::SIMD2_32f test Id: 143 - MULS
OK   UME::SIMD::SIMD2_32f test Id: 144 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 145 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 146 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 147 - MMULS
OK   UME::SIMD::SIMD2_32f test Id: 148 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 149 - MULVA
OK   UME::SIMD::SIMD2_32f test Id: 150 - MULVA(operator*)
OK   UME::SIMD::SIMD2_32f test Id: 151 - MULVA gen
OK   UME::SIMD::SIMD2_32f test Id: 152 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD2_32f test Id: 153 - MMULVA
OK   UME::SIMD::SIMD2_32f test Id: 154 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_32f test Id: 155 - MULSA
OK   UME::SIMD::SIMD2_32f test Id: 156 - MULSA(operator*=)
OK   UME::SIMD::SIMD2_32f test Id: 157 - MMULSA
OK   UME::SIMD::SIMD2_32f test Id: 158 - DIVV
OK   UME::SIMD::SIMD2_32f test Id: 159 - DIVV(operator/)
OK   UME::SIMD::SIMD2_32f test Id: 160 - DIVV(function)
OK   UME::SIMD::SIMD2_32f test Id: 161 - MDIVV
OK   UME::SIMD::SIMD2_32f test Id: 162 - MDIVV(function)
OK   UME::SIMD::SIMD2_32f test Id: 163 - DIVS
OK   UME::SIMD::SIMD2_32f test Id: 164 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 165 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 166 - MDIVS
OK   UME::SIMD::SIMD2_32f test Id: 167 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 168 - DIVVA
OK   UME::SIMD::SIMD2_32f test Id: 169 - DIVVA(operator/=)
OK   UME::SIMD::SIMD2_32f test Id: 170 - DIVVA gen
OK   UME::SIMD::SIMD2_32f test Id: 171 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD2_32f test Id: 172 - MDIVVA
OK   UME::SIMD::SIMD2_32f test Id: 173 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_32f test Id: 174 - DIVSA
OK   UME::SIMD::SIMD2_32f test Id: 175 - DIVSA(operator/=)
OK   UME::SIMD::SIMD2_32f test Id: 176 - MDIVSA
OK   UME::SIMD::SIMD2_32f test Id: 177 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD2_32f test Id: 178 - RCP
OK   UME::SIMD::SIMD2_32f test Id: 179 - RCP(function)
OK   UME::SIMD::SIMD2_32f test Id: 180 - MRCP
OK   UME::SIMD::SIMD2_32f test Id: 181 - MRCP(function)
OK   UME::SIMD::SIMD2_32f test Id: 182 - RCPS
OK   UME::SIMD::SIMD2_32f test Id: 183 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 184 - RCPS(function)
OK   UME::SIMD::SIMD2_32f test Id: 185 - MRCPS
OK   UME::SIMD::SIMD2_32f test Id: 186 - MRCPS (function)
OK   UME::SIMD::SIMD2_32f test Id: 187 - RCPA
OK   UME::SIMD::SIMD2_32f test Id: 188 - MRCPA
OK   UME::SIMD::SIMD2_32f test Id: 189 - RCPSA
OK   UME::SIMD::SIMD2_32f test Id: 190 - MRCPSA
OK   UME::SIMD::SIMD2_32f test Id: 191 - CMPEQV
OK   UME::SIMD::SIMD2_32f test Id: 192 - CMPEQV(operator==)
OK   UME::SIMD::SIMD2_32f test Id: 193 - CMPEQV(function)
OK   UME::SIMD::SIMD2_32f test Id: 194 - CMPEQS
OK   UME::SIMD::SIMD2_32f test Id: 195 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 196 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 197 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 198 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 199 - CMPNEV
OK   UME::SIMD::SIMD2_32f test Id: 200 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD2_32f test Id: 201 - CMPNEV(function)
OK   UME::SIMD::SIMD2_32f test Id: 202 - CMPNES
OK   UME::SIMD::SIMD2_32f test Id: 203 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 204 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 205 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 206 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 207 - CMPGTV
OK   UME::SIMD::SIMD2_32f test Id: 208 - CMPGTV(operator>)
OK   UME::SIMD::SIMD2_32f test Id: 209 - CMPGTV(function)
OK   UME::SIMD::SIMD2_32f test Id: 210 - CMPGTS
OK   UME::SIMD::SIMD2_32f test Id: 211 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 212 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 213 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 214 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 215 - CMPLTV
OK   UME::SIMD::SIMD2_32f test Id: 216 - CMPLTV(operator<)
OK   UME::SIMD::SIMD2_32f test Id: 217 - CMPLTV(function)
OK   UME::SIMD::SIMD2_32f test Id: 218 - CMPLTS
OK   UME::SIMD::SIMD2_32f test Id: 219 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 220 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 221 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 222 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 223 - CMPGEV
OK   UME::SIMD::SIMD2_32f test Id: 224 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD2_32f test Id: 225 - CMPGEV(function)
OK   UME::SIMD::SIMD2_32f test Id: 226 - CMPGES
OK   UME::SIMD::SIMD2_32f test Id: 227 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 228 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 229 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 230 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 231 - CMPLEV
OK   UME::SIMD::SIMD2_32f test Id: 232 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD2_32f test Id: 233 - CMPLEV(function)
OK   UME::SIMD::SIMD2_32f test Id: 234 - CMPLES
OK   UME::SIMD::SIMD2_32f test Id: 235 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 236 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 237 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 238 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 239 - CMPEV
OK   UME::SIMD::SIMD2_32f test Id: 240 - CMPEV(function)
OK   UME::SIMD::SIMD2_32f test Id: 241 - CMPES
OK   UME::SIMD::SIMD2_32f test Id: 242 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 243 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 244 - HADD
OK   UME::SIMD::SIMD2_32f test Id: 245 - HADD(function)
OK   UME::SIMD::SIMD2_32f test Id: 246 - HADD gen
OK   UME::SIMD::SIMD2_32f test Id: 247 - HADD(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 248 - MHADD gen
OK   UME::SIMD::SIMD2_32f test Id: 249 - MHADD(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 250 - HADDS gen
OK   UME::SIMD::SIMD2_32f test Id: 251 - HADDS(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 252 - MHADD gen
OK   UME::SIMD::SIMD2_32f test Id: 253 - MHADDS(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 254 - HMUL gen
OK   UME::SIMD::SIMD2_32f test Id: 255 - HMUL(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 256 - MHMUL gen
OK   UME::SIMD::SIMD2_32f test Id: 257 - MHMUL(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 258 - HMULS gen
OK   UME::SIMD::SIMD2_32f test Id: 259 - HMULS(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 260 - MHMUL gen
OK   UME::SIMD::SIMD2_32f test Id: 261 - MHMULS(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 262 - FMULADDV
OK   UME::SIMD::SIMD2_32f test Id: 263 - FMULADDV(function)
OK   UME::SIMD::SIMD2_32f test Id: 264 - MFMULADDV
OK   UME::SIMD::SIMD2_32f test Id: 265 - MFMULADDV(function)
OK   UME::SIMD::SIMD2_32f test Id: 266 - FMULSUBV
OK   UME::SIMD::SIMD2_32f test Id: 267 - FMULSUBV(function)
OK   UME::SIMD::SIMD2_32f test Id: 268 - MFMULSUBV
OK   UME::SIMD::SIMD2_32f test Id: 269 - MFMULSUBV(function)
OK   UME::SIMD::SIMD2_32f test Id: 270 - FADDMULV
OK   UME::SIMD::SIMD2_32f test Id: 271 - FADDMULV(function)
OK   UME::SIMD::SIMD2_32f test Id: 272 - MFADDMULV
OK   UME::SIMD::SIMD2_32f test Id: 273 - MFADDMULV(function)
OK   UME::SIMD::SIMD2_32f test Id: 274 - FSUBMULV
OK   UME::SIMD::SIMD2_32f test Id: 275 - FSUBMULV(function)
OK   UME::SIMD::SIMD2_32f test Id: 276 - MFSUBMULV
OK   UME::SIMD::SIMD2_32f test Id: 277 - MFSUBMULV(function)
OK   UME::SIMD::SIMD2_32f test Id: 278 - MAXV
OK   UME::SIMD::SIMD2_32f test Id: 279 - MAXV(function)
OK   UME::SIMD::SIMD2_32f test Id: 280 - MMAXV
OK   UME::SIMD::SIMD2_32f test Id: 281 - MMAXV(function)
OK   UME::SIMD::SIMD2_32f test Id: 282 - MAXS
OK   UME::SIMD::SIMD2_32f test Id: 283 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 284 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 285 - MMAXS
OK   UME::SIMD::SIMD2_32f test Id: 286 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 287 - MAXVA
OK   UME::SIMD::SIMD2_32f test Id: 288 - MMAXVA
OK   UME::SIMD::SIMD2_32f test Id: 289 - MAXSA
OK   UME::SIMD::SIMD2_32f test Id: 290 - MMAXSA
OK   UME::SIMD::SIMD2_32f test Id: 291 - MINV
OK   UME::SIMD::SIMD2_32f test Id: 292 - MINV(function)
OK   UME::SIMD::SIMD2_32f test Id: 293 - MMINV
OK   UME::SIMD::SIMD2_32f test Id: 294 - MMINV(function)
OK   UME::SIMD::SIMD2_32f test Id: 295 - MINS
OK   UME::SIMD::SIMD2_32f test Id: 296 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD2_32f test Id: 297 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD2_32f test Id: 298 - MMINS
OK   UME::SIMD::SIMD2_32f test Id: 299 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD2_32f test Id: 300 - MINVA
OK   UME::SIMD::SIMD2_32f test Id: 301 - MMINVA
OK   UME::SIMD::SIMD2_32f test Id: 302 - MINSA
OK   UME::SIMD::SIMD2_32f test Id: 303 - MMINSA
OK   UME::SIMD::SIMD2_32f test Id: 304 - HMAX
OK   UME::SIMD::SIMD2_32f test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD2_32f test Id: 306 - HMAX
OK   UME::SIMD::SIMD2_32f test Id: 307 - HMAX(function)
OK   UME::SIMD::SIMD2_32f test Id: 308 - MHMAX
OK   UME::SIMD::SIMD2_32f test Id: 309 - MHMAX(function)
OK   UME::SIMD::SIMD2_32f test Id: 310 - IMAX
OK   UME::SIMD::SIMD2_32f test Id: 311 - IMAX(function)
OK   UME::SIMD::SIMD2_32f test Id: 312 - MIMAX
OK   UME::SIMD::SIMD2_32f test Id: 313 - MIMAX(function)
OK   UME::SIMD::SIMD2_32f test Id: 314 - HMIN
OK   UME::SIMD::SIMD2_32f test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD2_32f test Id: 316 - HMIN
OK   UME::SIMD::SIMD2_32f test Id: 317 - HMIN(function)
OK   UME::SIMD::SIMD2_32f test Id: 318 - MHMIN gen
OK   UME::SIMD::SIMD2_32f test Id: 319 - MHMIN(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 320 - IMIN
OK   UME::SIMD::SIMD2_32f test Id: 321 - IMIN(function)
OK   UME::SIMD::SIMD2_32f test Id: 322 - MIMIN
OK   UME::SIMD::SIMD2_32f test Id: 323 - MIMIN(function)
OK   UME::SIMD::SIMD2_32f test Id: 324 - GATHERU
OK   UME::SIMD::SIMD2_32f test Id: 325 - MGATHERU
OK   UME::SIMD::SIMD2_32f test Id: 326 - GATHERS
OK   UME::SIMD::SIMD2_32f test Id: 327 - MGATHERS
OK   UME::SIMD::SIMD2_32f test Id: 328 - GATHERV
OK   UME::SIMD::SIMD2_32f test Id: 329 - MGATHERV
OK   UME::SIMD::SIMD2_32f test Id: 330 - SCATTERU
OK   UME::SIMD::SIMD2_32f test Id: 331 - MSCATTERU
OK   UME::SIMD::SIMD2_32f test Id: 332 - SCATTERS
OK   UME::SIMD::SIMD2_32f test Id: 333 - MSCATTERS
OK   UME::SIMD::SIMD2_32f test Id: 334 - SCATTERV
OK   UME::SIMD::SIMD2_32f test Id: 335 - MSCATTERV
OK   UME::SIMD::SIMD2_32f test Id: 336 - NEG
OK   UME::SIMD::SIMD2_32f test Id: 337 - NEG(operator-)
OK   UME::SIMD::SIMD2_32f test Id: 338 - NEG(function)
OK   UME::SIMD::SIMD2_32f test Id: 339 - MNEG
OK   UME::SIMD::SIMD2_32f test Id: 340 - MNEG(function)
OK   UME::SIMD::SIMD2_32f test Id: 341 - NEGA
OK   UME::SIMD::SIMD2_32f test Id: 342 - MNEGA
OK   UME::SIMD::SIMD2_32f test Id: 343 - ABS
OK   UME::SIMD::SIMD2_32f test Id: 344 - ABS(function)
OK   UME::SIMD::SIMD2_32f test Id: 345 - MABS
OK   UME::SIMD::SIMD2_32f test Id: 346 - MABS(function)
OK   UME::SIMD::SIMD2_32f test Id: 347 - ABSA
OK   UME::SIMD::SIMD2_32f test Id: 348 - MABSA
OK   UME::SIMD::SIMD2_32f test Id: 349 - COPYSIGN gen
OK   UME::SIMD::SIMD2_32f test Id: 350 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 351 - ROUND
OK   UME::SIMD::SIMD2_32f test Id: 352 - ROUND(function)
OK   UME::SIMD::SIMD2_32f test Id: 353 - MROUND
OK   UME::SIMD::SIMD2_32f test Id: 354 - MROUND(function)
OK   UME::SIMD::SIMD2_32f test Id: 355 - TRUNC gen
OK   UME::SIMD::SIMD2_32f test Id: 356 - TRUNC(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 357 - MTRUNC gen
OK   UME::SIMD::SIMD2_32f test Id: 358 - MTRUNC(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 359 - FLOOR
OK   UME::SIMD::SIMD2_32f test Id: 360 - FLOOR(function)
OK   UME::SIMD::SIMD2_32f test Id: 361 - MFLOOR
OK   UME::SIMD::SIMD2_32f test Id: 362 - MFLOOR(function)
OK   UME::SIMD::SIMD2_32f test Id: 363 - CEIL
OK   UME::SIMD::SIMD2_32f test Id: 364 - CEIL(function)
OK   UME::SIMD::SIMD2_32f test Id: 365 - MCEIL
OK   UME::SIMD::SIMD2_32f test Id: 366 - MCEIL(function)
OK   UME::SIMD::SIMD2_32f test Id: 367 - ISFIN
OK   UME::SIMD::SIMD2_32f test Id: 368 - ISFIN(function)
OK   UME::SIMD::SIMD2_32f test Id: 369 - ISINF
OK   UME::SIMD::SIMD2_32f test Id: 370 - ISINF(function)
OK   UME::SIMD::SIMD2_32f test Id: 371 - ISAN
OK   UME::SIMD::SIMD2_32f test Id: 372 - ISAN(function)
OK   UME::SIMD::SIMD2_32f test Id: 373 - ISNAN
OK   UME::SIMD::SIMD2_32f test Id: 374 - ISNAN(function)
OK   UME::SIMD::SIMD2_32f test Id: 375 - ISNORM
OK   UME::SIMD::SIMD2_32f test Id: 376 - ISNORM(function)
OK   UME::SIMD::SIMD2_32f test Id: 377 - ISSUB
OK   UME::SIMD::SIMD2_32f test Id: 378 - ISSUB(function)
OK   UME::SIMD::SIMD2_32f test Id: 379 - ISZERO
OK   UME::SIMD::SIMD2_32f test Id: 380 - ISZERO(function)
OK   UME::SIMD::SIMD2_32f test Id: 381 - ISZEROSUB
OK   UME::SIMD::SIMD2_32f test Id: 382 - ISZEROSUB(function)
OK   UME::SIMD::SIMD2_32f test Id: 383 - SQR
OK   UME::SIMD::SIMD2_32f test Id: 384 - SQR(function)
OK   UME::SIMD::SIMD2_32f test Id: 385 - MSQR
OK   UME::SIMD::SIMD2_32f test Id: 386 - MSQR(function)
OK   UME::SIMD::SIMD2_32f test Id: 387 - SQRA
OK   UME::SIMD::SIMD2_32f test Id: 388 - MSQRA
OK   UME::SIMD::SIMD2_32f test Id: 389 - SQRT
OK   UME::SIMD::SIMD2_32f test Id: 390 - SQRT(function)
OK   UME::SIMD::SIMD2_32f test Id: 391 - MSQRT
OK   UME::SIMD::SIMD2_32f test Id: 392 - MSQRT
OK   UME::SIMD::SIMD2_32f test Id: 393 - SQRTA
OK   UME::SIMD::SIMD2_32f test Id: 394 - MSQRTA
OK   UME::SIMD::SIMD2_32f test Id: 395 - EXP gen
OK   UME::SIMD::SIMD2_32f test Id: 396 - EXP(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 397 - MEXP gen
OK   UME::SIMD::SIMD2_32f test Id: 398 - MEXP(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 399 - LOG gen
OK   UME::SIMD::SIMD2_32f test Id: 400 - LOG(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 401 - LOG2 gen
OK   UME::SIMD::SIMD2_32f test Id: 402 - LOG2(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 403 - LOG10 gen
OK   UME::SIMD::SIMD2_32f test Id: 404 - LOG10(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 405 - SIN gen
OK   UME::SIMD::SIMD2_32f test Id: 406 - SIN(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 407 - COS gen
OK   UME::SIMD::SIMD2_32f test Id: 408 - COS(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 409 - TAN gen
OK   UME::SIMD::SIMD2_32f test Id: 410 - TAN(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 411 - CTAN gen
OK   UME::SIMD::SIMD2_32f test Id: 412 - CTAN(function) gen
OK   UME::SIMD::SIMD2_32f test Id: 413 - FTOU gen
OK   UME::SIMD::SIMD2_32f test Id: 414 - FTOI gen
OK   UME::SIMD::SIMD2_32f test Id: 415 - PACK
OK   UME::SIMD::SIMD2_32f test Id: 416 - PACKLO
OK   UME::SIMD::SIMD2_32f test Id: 417 - PACKHI
OK   UME::SIMD::SIMD2_32f test Id: 418 - UNPACK
OK   UME::SIMD::SIMD2_32f test Id: 419 - UNPACKLO
OK   UME::SIMD::SIMD2_32f test Id: 420 - UNPACKHi
OK   UME::SIMD::SIMD2_32f test Id: 421 - PROMOTE
OK   UME::SIMD::SIMD1_64u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD1_64u test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD1_64u test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD1_64u test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD1_64u test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD1_64u test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD1_64u test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD1_64u test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD1_64u test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD1_64u test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD1_64u test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD1_64u test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD1_64u test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD1_64u test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD1_64u test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD1_64u test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD1_64u test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD1_64u test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD1_64u test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD1_64u test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD1_64u test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD1_64u test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD1_64u test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD1_64u test Id: 24 - INSERT
OK   UME::SIMD::SIMD1_64u test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD1_64u test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD1_64u test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD1_64u test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD1_64u test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD1_64u test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD1_64u test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD1_64u test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD1_64u test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD1_64u test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD1_64u test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD1_64u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD1_64u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD1_64u test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD1_64u test Id: 39 - MLOAD
OK   UME::SIMD::SIMD1_64u test Id: 40 - MSTORE
OK   UME::SIMD::SIMD1_64u test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD1_64u test Id: 42 - MLOADA
OK   UME::SIMD::SIMD1_64u test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD1_64u test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD1_64u test Id: 45 - SORTA
OK   UME::SIMD::SIMD1_64u test Id: 46 - SORTD
OK   UME::SIMD::SIMD1_64u test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD1_64u test Id: 48 - ADDV
OK   UME::SIMD::SIMD1_64u test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD1_64u test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD1_64u test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD1_64u test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD1_64u test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD1_64u test Id: 54 - MADDV
OK   UME::SIMD::SIMD1_64u test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD1_64u test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD1_64u test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD1_64u test Id: 58 - ADDS
OK   UME::SIMD::SIMD1_64u test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD1_64u test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD1_64u test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD1_64u test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD1_64u test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD1_64u test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD1_64u test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD1_64u test Id: 68 - MADDS
OK   UME::SIMD::SIMD1_64u test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD1_64u test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD1_64u test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD1_64u test Id: 73 - ADDVA
OK   UME::SIMD::SIMD1_64u test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD1_64u test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD1_64u test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD1_64u test Id: 77 - MADDVA
OK   UME::SIMD::SIMD1_64u test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD1_64u test Id: 79 - ADDSA
OK   UME::SIMD::SIMD1_64u test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD1_64u test Id: 81 - MADDSA
OK   UME::SIMD::SIMD1_64u test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD1_64u test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD1_64u test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD1_64u test Id: 85 - POSTINC
OK   UME::SIMD::SIMD1_64u test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD1_64u test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD1_64u test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD1_64u test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD1_64u test Id: 90 - PREFINC
OK   UME::SIMD::SIMD1_64u test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD1_64u test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD1_64u test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD1_64u test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD1_64u test Id: 95 - SUBV
OK   UME::SIMD::SIMD1_64u test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD1_64u test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD1_64u test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD1_64u test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD1_64u test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD1_64u test Id: 101 - MSUBV
OK   UME::SIMD::SIMD1_64u test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD1_64u test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD1_64u test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD1_64u test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD1_64u test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD1_64u test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD1_64u test Id: 108 - MSUBS
OK   UME::SIMD::SIMD1_64u test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 110 - SUBVA
OK   UME::SIMD::SIMD1_64u test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD1_64u test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD1_64u test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD1_64u test Id: 114 - SUBSA
OK   UME::SIMD::SIMD1_64u test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD1_64u test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD1_64u test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD1_64u test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD1_64u test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD1_64u test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD1_64u test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD1_64u test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD1_64u test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD1_64u test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD1_64u test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD1_64u test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD1_64u test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD1_64u test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD1_64u test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD1_64u test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD1_64u test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD1_64u test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD1_64u test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD1_64u test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD1_64u test Id: 137 - MULV
OK   UME::SIMD::SIMD1_64u test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD1_64u test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD1_64u test Id: 140 - MMULV
OK   UME::SIMD::SIMD1_64u test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD1_64u test Id: 142 - MULS
OK   UME::SIMD::SIMD1_64u test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 146 - MMULS
OK   UME::SIMD::SIMD1_64u test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 148 - MULVA
OK   UME::SIMD::SIMD1_64u test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD1_64u test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD1_64u test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD1_64u test Id: 152 - MMULVA
OK   UME::SIMD::SIMD1_64u test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_64u test Id: 154 - MULSA
OK   UME::SIMD::SIMD1_64u test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD1_64u test Id: 156 - MMULSA
OK   UME::SIMD::SIMD1_64u test Id: 157 - DIVV
OK   UME::SIMD::SIMD1_64u test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD1_64u test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD1_64u test Id: 160 - MDIVV
OK   UME::SIMD::SIMD1_64u test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD1_64u test Id: 162 - DIVS
OK   UME::SIMD::SIMD1_64u test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 165 - MDIVS
OK   UME::SIMD::SIMD1_64u test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 167 - DIVVA
OK   UME::SIMD::SIMD1_64u test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD1_64u test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD1_64u test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD1_64u test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD1_64u test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_64u test Id: 173 - DIVSA
OK   UME::SIMD::SIMD1_64u test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD1_64u test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD1_64u test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD1_64u test Id: 177 - RCP
OK   UME::SIMD::SIMD1_64u test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD1_64u test Id: 179 - MRCP
OK   UME::SIMD::SIMD1_64u test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD1_64u test Id: 181 - RCPS
OK   UME::SIMD::SIMD1_64u test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD1_64u test Id: 184 - MRCPS
OK   UME::SIMD::SIMD1_64u test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD1_64u test Id: 186 - RCPA
OK   UME::SIMD::SIMD1_64u test Id: 187 - MRCPA
OK   UME::SIMD::SIMD1_64u test Id: 188 - RCPSA
OK   UME::SIMD::SIMD1_64u test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD1_64u test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD1_64u test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD1_64u test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD1_64u test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD1_64u test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD1_64u test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD1_64u test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD1_64u test Id: 201 - CMPNES
OK   UME::SIMD::SIMD1_64u test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD1_64u test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD1_64u test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD1_64u test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD1_64u test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD1_64u test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD1_64u test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD1_64u test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD1_64u test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD1_64u test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD1_64u test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD1_64u test Id: 225 - CMPGES
OK   UME::SIMD::SIMD1_64u test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD1_64u test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD1_64u test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD1_64u test Id: 233 - CMPLES
OK   UME::SIMD::SIMD1_64u test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 238 - CMPEV
OK   UME::SIMD::SIMD1_64u test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD1_64u test Id: 240 - CMPES
OK   UME::SIMD::SIMD1_64u test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 243 - HADD
OK   UME::SIMD::SIMD1_64u test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD1_64u test Id: 245 - HADD gen
OK   UME::SIMD::SIMD1_64u test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD1_64u test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD1_64u test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD1_64u test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD1_64u test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD1_64u test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD1_64u test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD1_64u test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD1_64u test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD1_64u test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD1_64u test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD1_64u test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD1_64u test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD1_64u test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD1_64u test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD1_64u test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD1_64u test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD1_64u test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD1_64u test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD1_64u test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD1_64u test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD1_64u test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD1_64u test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD1_64u test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD1_64u test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD1_64u test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD1_64u test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD1_64u test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD1_64u test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD1_64u test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD1_64u test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD1_64u test Id: 277 - MAXV
OK   UME::SIMD::SIMD1_64u test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD1_64u test Id: 279 - MMAXV
OK   UME::SIMD::SIMD1_64u test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD1_64u test Id: 281 - MAXS
OK   UME::SIMD::SIMD1_64u test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 284 - MMAXS
OK   UME::SIMD::SIMD1_64u test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 286 - MAXVA
OK   UME::SIMD::SIMD1_64u test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD1_64u test Id: 288 - MAXSA
OK   UME::SIMD::SIMD1_64u test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD1_64u test Id: 290 - MINV
OK   UME::SIMD::SIMD1_64u test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD1_64u test Id: 292 - MMINV
OK   UME::SIMD::SIMD1_64u test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD1_64u test Id: 294 - MINS
OK   UME::SIMD::SIMD1_64u test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD1_64u test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD1_64u test Id: 297 - MMINS
OK   UME::SIMD::SIMD1_64u test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 299 - MINVA
OK   UME::SIMD::SIMD1_64u test Id: 300 - MMINVA
OK   UME::SIMD::SIMD1_64u test Id: 301 - MINSA
OK   UME::SIMD::SIMD1_64u test Id: 302 - MMINSA
OK   UME::SIMD::SIMD1_64u test Id: 303 - HMAX
OK   UME::SIMD::SIMD1_64u test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD1_64u test Id: 305 - HMAX
OK   UME::SIMD::SIMD1_64u test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD1_64u test Id: 307 - MHMAX
OK   UME::SIMD::SIMD1_64u test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD1_64u test Id: 309 - IMAX
OK   UME::SIMD::SIMD1_64u test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD1_64u test Id: 311 - MIMAX
OK   UME::SIMD::SIMD1_64u test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD1_64u test Id: 313 - HMIN
OK   UME::SIMD::SIMD1_64u test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD1_64u test Id: 315 - HMIN
OK   UME::SIMD::SIMD1_64u test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD1_64u test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD1_64u test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD1_64u test Id: 319 - IMIN
OK   UME::SIMD::SIMD1_64u test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD1_64u test Id: 321 - MIMIN
OK   UME::SIMD::SIMD1_64u test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD1_64u test Id: 323 - REMV gen
OK   UME::SIMD::SIMD1_64u test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD1_64u test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD1_64u test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD1_64u test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD1_64u test Id: 328 - REMS gen
OK   UME::SIMD::SIMD1_64u test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD1_64u test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD1_64u test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD1_64u test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD1_64u test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD1_64u test Id: 334 - LORV gen
OK   UME::SIMD::SIMD1_64u test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD1_64u test Id: 336 - BANDV
OK   UME::SIMD::SIMD1_64u test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD1_64u test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD1_64u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD1_64u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD1_64u test Id: 341 - BANDS
OK   UME::SIMD::SIMD1_64u test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 346 - MBANDS
OK   UME::SIMD::SIMD1_64u test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 348 - BANDVA
OK   UME::SIMD::SIMD1_64u test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD1_64u test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD1_64u test Id: 351 - BANDSA
OK   UME::SIMD::SIMD1_64u test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD1_64u test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD1_64u test Id: 354 - BORV
OK   UME::SIMD::SIMD1_64u test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD1_64u test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD1_64u test Id: 357 - MBORV
OK   UME::SIMD::SIMD1_64u test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD1_64u test Id: 359 - BORS
OK   UME::SIMD::SIMD1_64u test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 364 - MBORS
OK   UME::SIMD::SIMD1_64u test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 366 - BORVA
OK   UME::SIMD::SIMD1_64u test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD1_64u test Id: 368 - MBORVA
OK   UME::SIMD::SIMD1_64u test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD1_64u test Id: 370 - BORSA
OK   UME::SIMD::SIMD1_64u test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD1_64u test Id: 372 - MBORSA
OK   UME::SIMD::SIMD1_64u test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD1_64u test Id: 374 - BXORV
OK   UME::SIMD::SIMD1_64u test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD1_64u test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD1_64u test Id: 377 - MBXORV
OK   UME::SIMD::SIMD1_64u test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD1_64u test Id: 379 - BXORS
OK   UME::SIMD::SIMD1_64u test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 384 - MBXORS
OK   UME::SIMD::SIMD1_64u test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 386 - BXORVA
OK   UME::SIMD::SIMD1_64u test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD1_64u test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD1_64u test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD1_64u test Id: 390 - BXORSA
OK   UME::SIMD::SIMD1_64u test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD1_64u test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD1_64u test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD1_64u test Id: 394 - BNOT
OK   UME::SIMD::SIMD1_64u test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD1_64u test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD1_64u test Id: 397 - MBNOT
OK   UME::SIMD::SIMD1_64u test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD1_64u test Id: 399 - BNOTA
OK   UME::SIMD::SIMD1_64u test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD1_64u test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD1_64u test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD1_64u test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD1_64u test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD1_64u test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD1_64u test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD1_64u test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD1_64u test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD1_64u test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD1_64u test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD1_64u test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD1_64u test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD1_64u test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD1_64u test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD1_64u test Id: 415 - HBAND
OK   UME::SIMD::SIMD1_64u test Id: 416 - HBAND
OK   UME::SIMD::SIMD1_64u test Id: 417 - MHBAND
OK   UME::SIMD::SIMD1_64u test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD1_64u test Id: 419 - HBANDS
OK   UME::SIMD::SIMD1_64u test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD1_64u test Id: 421 - HBOR
OK   UME::SIMD::SIMD1_64u test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD1_64u test Id: 423 - MHBOR
OK   UME::SIMD::SIMD1_64u test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD1_64u test Id: 425 - HBORS
OK   UME::SIMD::SIMD1_64u test Id: 426 - MHBORS
OK   UME::SIMD::SIMD1_64u test Id: 427 - HBXOR
OK   UME::SIMD::SIMD1_64u test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD1_64u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD1_64u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD1_64u test Id: 431 - HBXORS
OK   UME::SIMD::SIMD1_64u test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD1_64u test Id: 433 - GATHERU
OK   UME::SIMD::SIMD1_64u test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD1_64u test Id: 435 - GATHERS
OK   UME::SIMD::SIMD1_64u test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD1_64u test Id: 437 - GATHERV
OK   UME::SIMD::SIMD1_64u test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD1_64u test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD1_64u test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD1_64u test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD1_64u test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD1_64u test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD1_64u test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD1_64u test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD1_64u test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD1_64u test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD1_64u test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD1_64u test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD1_64u test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD1_64u test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD1_64u test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD1_64u test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD1_64u test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD1_64u test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD1_64u test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD1_64u test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD1_64u test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD1_64u test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD1_64u test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD1_64u test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD1_64u test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD1_64u test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD1_64u test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD1_64u test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD1_64u test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD1_64u test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD1_64u test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD1_64u test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD1_64u test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD1_64u test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD1_64u test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD1_64u test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD1_64u test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD1_64u test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD1_64u test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD1_64u test Id: 477 - ROLV
OK   UME::SIMD::SIMD1_64u test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD1_64u test Id: 479 - MROLV
OK   UME::SIMD::SIMD1_64u test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD1_64u test Id: 481 - ROLS
OK   UME::SIMD::SIMD1_64u test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 483 - MROLS
OK   UME::SIMD::SIMD1_64u test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 485 - ROLVA
OK   UME::SIMD::SIMD1_64u test Id: 486 - MROLVA
OK   UME::SIMD::SIMD1_64u test Id: 487 - ROLSA
OK   UME::SIMD::SIMD1_64u test Id: 488 - MROLSA
OK   UME::SIMD::SIMD1_64u test Id: 489 - RORV
OK   UME::SIMD::SIMD1_64u test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD1_64u test Id: 491 - MRORV
OK   UME::SIMD::SIMD1_64u test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD1_64u test Id: 493 - RORS
OK   UME::SIMD::SIMD1_64u test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 495 - MRORS
OK   UME::SIMD::SIMD1_64u test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64u test Id: 497 - RORVA
OK   UME::SIMD::SIMD1_64u test Id: 498 - MRORVA
OK   UME::SIMD::SIMD1_64u test Id: 499 - RORSA
OK   UME::SIMD::SIMD1_64u test Id: 500 - MRORSA
OK   UME::SIMD::SIMD1_64u test Id: 501 - UTOI
OK   UME::SIMD::SIMD1_64u test Id: 502 - UTOF
OK   UME::SIMD::SIMD1_64u test Id: 503 - DEGRADE
OK   UME::SIMD::SIMD1_64i test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD1_64i test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD1_64i test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD1_64i test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD1_64i test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD1_64i test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD1_64i test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD1_64i test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD1_64i test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD1_64i test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD1_64i test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD1_64i test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD1_64i test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD1_64i test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD1_64i test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD1_64i test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD1_64i test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD1_64i test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD1_64i test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD1_64i test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD1_64i test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD1_64i test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD1_64i test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD1_64i test Id: 24 - INSERT
OK   UME::SIMD::SIMD1_64i test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD1_64i test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD1_64i test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD1_64i test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD1_64i test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD1_64i test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD1_64i test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD1_64i test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD1_64i test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD1_64i test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD1_64i test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD1_64i test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD1_64i test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD1_64i test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD1_64i test Id: 39 - MLOAD
OK   UME::SIMD::SIMD1_64i test Id: 40 - MSTORE
OK   UME::SIMD::SIMD1_64i test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD1_64i test Id: 42 - MLOADA
OK   UME::SIMD::SIMD1_64i test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD1_64i test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD1_64i test Id: 45 - SORTA
OK   UME::SIMD::SIMD1_64i test Id: 46 - SORTD
OK   UME::SIMD::SIMD1_64i test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD1_64i test Id: 48 - ADDV
OK   UME::SIMD::SIMD1_64i test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD1_64i test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD1_64i test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD1_64i test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD1_64i test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD1_64i test Id: 54 - MADDV
OK   UME::SIMD::SIMD1_64i test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD1_64i test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD1_64i test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD1_64i test Id: 58 - ADDS
OK   UME::SIMD::SIMD1_64i test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD1_64i test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD1_64i test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD1_64i test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD1_64i test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD1_64i test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD1_64i test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD1_64i test Id: 68 - MADDS
OK   UME::SIMD::SIMD1_64i test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD1_64i test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD1_64i test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD1_64i test Id: 73 - ADDVA
OK   UME::SIMD::SIMD1_64i test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD1_64i test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD1_64i test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD1_64i test Id: 77 - MADDVA
OK   UME::SIMD::SIMD1_64i test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD1_64i test Id: 79 - ADDSA
OK   UME::SIMD::SIMD1_64i test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD1_64i test Id: 81 - MADDSA
OK   UME::SIMD::SIMD1_64i test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD1_64i test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD1_64i test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD1_64i test Id: 85 - POSTINC
OK   UME::SIMD::SIMD1_64i test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD1_64i test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD1_64i test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD1_64i test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD1_64i test Id: 90 - PREFINC
OK   UME::SIMD::SIMD1_64i test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD1_64i test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD1_64i test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD1_64i test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD1_64i test Id: 95 - SUBV
OK   UME::SIMD::SIMD1_64i test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD1_64i test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD1_64i test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD1_64i test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD1_64i test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD1_64i test Id: 101 - MSUBV
OK   UME::SIMD::SIMD1_64i test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD1_64i test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD1_64i test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD1_64i test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD1_64i test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD1_64i test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD1_64i test Id: 108 - MSUBS
OK   UME::SIMD::SIMD1_64i test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 110 - SUBVA
OK   UME::SIMD::SIMD1_64i test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD1_64i test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD1_64i test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD1_64i test Id: 114 - SUBSA
OK   UME::SIMD::SIMD1_64i test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD1_64i test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD1_64i test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD1_64i test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD1_64i test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD1_64i test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD1_64i test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD1_64i test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD1_64i test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD1_64i test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD1_64i test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD1_64i test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD1_64i test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD1_64i test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD1_64i test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD1_64i test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD1_64i test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD1_64i test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD1_64i test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD1_64i test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD1_64i test Id: 137 - MULV
OK   UME::SIMD::SIMD1_64i test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD1_64i test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD1_64i test Id: 140 - MMULV
OK   UME::SIMD::SIMD1_64i test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD1_64i test Id: 142 - MULS
OK   UME::SIMD::SIMD1_64i test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 146 - MMULS
OK   UME::SIMD::SIMD1_64i test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 148 - MULVA
OK   UME::SIMD::SIMD1_64i test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD1_64i test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD1_64i test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD1_64i test Id: 152 - MMULVA
OK   UME::SIMD::SIMD1_64i test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_64i test Id: 154 - MULSA
OK   UME::SIMD::SIMD1_64i test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD1_64i test Id: 156 - MMULSA
OK   UME::SIMD::SIMD1_64i test Id: 157 - DIVV
OK   UME::SIMD::SIMD1_64i test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD1_64i test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD1_64i test Id: 160 - MDIVV
OK   UME::SIMD::SIMD1_64i test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD1_64i test Id: 162 - DIVS
OK   UME::SIMD::SIMD1_64i test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 165 - MDIVS
OK   UME::SIMD::SIMD1_64i test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 167 - DIVVA
OK   UME::SIMD::SIMD1_64i test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD1_64i test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD1_64i test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD1_64i test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD1_64i test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_64i test Id: 173 - DIVSA
OK   UME::SIMD::SIMD1_64i test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD1_64i test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD1_64i test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD1_64i test Id: 177 - RCP
OK   UME::SIMD::SIMD1_64i test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD1_64i test Id: 179 - MRCP
OK   UME::SIMD::SIMD1_64i test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD1_64i test Id: 181 - RCPS
OK   UME::SIMD::SIMD1_64i test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD1_64i test Id: 184 - MRCPS
OK   UME::SIMD::SIMD1_64i test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD1_64i test Id: 186 - RCPA
OK   UME::SIMD::SIMD1_64i test Id: 187 - MRCPA
OK   UME::SIMD::SIMD1_64i test Id: 188 - RCPSA
OK   UME::SIMD::SIMD1_64i test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD1_64i test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD1_64i test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD1_64i test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD1_64i test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD1_64i test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD1_64i test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD1_64i test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD1_64i test Id: 201 - CMPNES
OK   UME::SIMD::SIMD1_64i test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD1_64i test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD1_64i test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD1_64i test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD1_64i test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD1_64i test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD1_64i test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD1_64i test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD1_64i test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD1_64i test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD1_64i test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD1_64i test Id: 225 - CMPGES
OK   UME::SIMD::SIMD1_64i test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD1_64i test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD1_64i test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD1_64i test Id: 233 - CMPLES
OK   UME::SIMD::SIMD1_64i test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 238 - CMPEV
OK   UME::SIMD::SIMD1_64i test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD1_64i test Id: 240 - CMPES
OK   UME::SIMD::SIMD1_64i test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 243 - HADD
OK   UME::SIMD::SIMD1_64i test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD1_64i test Id: 245 - HADD gen
OK   UME::SIMD::SIMD1_64i test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD1_64i test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD1_64i test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD1_64i test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD1_64i test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD1_64i test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD1_64i test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD1_64i test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD1_64i test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD1_64i test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD1_64i test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD1_64i test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD1_64i test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD1_64i test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD1_64i test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD1_64i test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD1_64i test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD1_64i test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD1_64i test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD1_64i test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD1_64i test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD1_64i test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD1_64i test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD1_64i test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD1_64i test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD1_64i test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD1_64i test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD1_64i test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD1_64i test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD1_64i test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD1_64i test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD1_64i test Id: 277 - MAXV
OK   UME::SIMD::SIMD1_64i test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD1_64i test Id: 279 - MMAXV
OK   UME::SIMD::SIMD1_64i test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD1_64i test Id: 281 - MAXS
OK   UME::SIMD::SIMD1_64i test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 284 - MMAXS
OK   UME::SIMD::SIMD1_64i test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 286 - MAXVA
OK   UME::SIMD::SIMD1_64i test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD1_64i test Id: 288 - MAXSA
OK   UME::SIMD::SIMD1_64i test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD1_64i test Id: 290 - MINV
OK   UME::SIMD::SIMD1_64i test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD1_64i test Id: 292 - MMINV
OK   UME::SIMD::SIMD1_64i test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD1_64i test Id: 294 - MINS
OK   UME::SIMD::SIMD1_64i test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD1_64i test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD1_64i test Id: 297 - MMINS
OK   UME::SIMD::SIMD1_64i test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 299 - MINVA
OK   UME::SIMD::SIMD1_64i test Id: 300 - MMINVA
OK   UME::SIMD::SIMD1_64i test Id: 301 - MINSA
OK   UME::SIMD::SIMD1_64i test Id: 302 - MMINSA
OK   UME::SIMD::SIMD1_64i test Id: 303 - HMAX
OK   UME::SIMD::SIMD1_64i test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD1_64i test Id: 305 - HMAX
OK   UME::SIMD::SIMD1_64i test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD1_64i test Id: 307 - MHMAX
OK   UME::SIMD::SIMD1_64i test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD1_64i test Id: 309 - IMAX
OK   UME::SIMD::SIMD1_64i test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD1_64i test Id: 311 - MIMAX
OK   UME::SIMD::SIMD1_64i test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD1_64i test Id: 313 - HMIN
OK   UME::SIMD::SIMD1_64i test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD1_64i test Id: 315 - HMIN
OK   UME::SIMD::SIMD1_64i test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD1_64i test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD1_64i test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD1_64i test Id: 319 - IMIN
OK   UME::SIMD::SIMD1_64i test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD1_64i test Id: 321 - MIMIN
OK   UME::SIMD::SIMD1_64i test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD1_64i test Id: 323 - REMV gen
OK   UME::SIMD::SIMD1_64i test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD1_64i test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD1_64i test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD1_64i test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD1_64i test Id: 328 - REMS gen
OK   UME::SIMD::SIMD1_64i test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD1_64i test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD1_64i test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD1_64i test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD1_64i test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD1_64i test Id: 334 - LORV gen
OK   UME::SIMD::SIMD1_64i test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD1_64i test Id: 336 - BANDV
OK   UME::SIMD::SIMD1_64i test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD1_64i test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD1_64i test Id: 339 - MBANDV
OK   UME::SIMD::SIMD1_64i test Id: 340 - MBANDV
OK   UME::SIMD::SIMD1_64i test Id: 341 - BANDS
OK   UME::SIMD::SIMD1_64i test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 346 - MBANDS
OK   UME::SIMD::SIMD1_64i test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 348 - BANDVA
OK   UME::SIMD::SIMD1_64i test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD1_64i test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD1_64i test Id: 351 - BANDSA
OK   UME::SIMD::SIMD1_64i test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD1_64i test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD1_64i test Id: 354 - BORV
OK   UME::SIMD::SIMD1_64i test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD1_64i test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD1_64i test Id: 357 - MBORV
OK   UME::SIMD::SIMD1_64i test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD1_64i test Id: 359 - BORS
OK   UME::SIMD::SIMD1_64i test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 364 - MBORS
OK   UME::SIMD::SIMD1_64i test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 366 - BORVA
OK   UME::SIMD::SIMD1_64i test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD1_64i test Id: 368 - MBORVA
OK   UME::SIMD::SIMD1_64i test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD1_64i test Id: 370 - BORSA
OK   UME::SIMD::SIMD1_64i test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD1_64i test Id: 372 - MBORSA
OK   UME::SIMD::SIMD1_64i test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD1_64i test Id: 374 - BXORV
OK   UME::SIMD::SIMD1_64i test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD1_64i test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD1_64i test Id: 377 - MBXORV
OK   UME::SIMD::SIMD1_64i test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD1_64i test Id: 379 - BXORS
OK   UME::SIMD::SIMD1_64i test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 384 - MBXORS
OK   UME::SIMD::SIMD1_64i test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 386 - BXORVA
OK   UME::SIMD::SIMD1_64i test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD1_64i test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD1_64i test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD1_64i test Id: 390 - BXORSA
OK   UME::SIMD::SIMD1_64i test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD1_64i test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD1_64i test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD1_64i test Id: 394 - BNOT
OK   UME::SIMD::SIMD1_64i test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD1_64i test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD1_64i test Id: 397 - MBNOT
OK   UME::SIMD::SIMD1_64i test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD1_64i test Id: 399 - BNOTA
OK   UME::SIMD::SIMD1_64i test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD1_64i test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD1_64i test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD1_64i test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD1_64i test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD1_64i test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD1_64i test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD1_64i test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD1_64i test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD1_64i test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD1_64i test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD1_64i test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD1_64i test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD1_64i test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD1_64i test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD1_64i test Id: 415 - HBAND
OK   UME::SIMD::SIMD1_64i test Id: 416 - HBAND
OK   UME::SIMD::SIMD1_64i test Id: 417 - MHBAND
OK   UME::SIMD::SIMD1_64i test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD1_64i test Id: 419 - HBANDS
OK   UME::SIMD::SIMD1_64i test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD1_64i test Id: 421 - HBOR
OK   UME::SIMD::SIMD1_64i test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD1_64i test Id: 423 - MHBOR
OK   UME::SIMD::SIMD1_64i test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD1_64i test Id: 425 - HBORS
OK   UME::SIMD::SIMD1_64i test Id: 426 - MHBORS
OK   UME::SIMD::SIMD1_64i test Id: 427 - HBXOR
OK   UME::SIMD::SIMD1_64i test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD1_64i test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD1_64i test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD1_64i test Id: 431 - HBXORS
OK   UME::SIMD::SIMD1_64i test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD1_64i test Id: 433 - GATHERU
OK   UME::SIMD::SIMD1_64i test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD1_64i test Id: 435 - GATHERS
OK   UME::SIMD::SIMD1_64i test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD1_64i test Id: 437 - GATHERV
OK   UME::SIMD::SIMD1_64i test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD1_64i test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD1_64i test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD1_64i test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD1_64i test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD1_64i test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD1_64i test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD1_64i test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD1_64i test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD1_64i test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD1_64i test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD1_64i test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD1_64i test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD1_64i test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD1_64i test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD1_64i test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD1_64i test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD1_64i test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD1_64i test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD1_64i test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD1_64i test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD1_64i test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD1_64i test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD1_64i test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD1_64i test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD1_64i test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD1_64i test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD1_64i test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD1_64i test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD1_64i test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD1_64i test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD1_64i test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD1_64i test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD1_64i test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD1_64i test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD1_64i test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD1_64i test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD1_64i test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD1_64i test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD1_64i test Id: 477 - ROLV
OK   UME::SIMD::SIMD1_64i test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD1_64i test Id: 479 - MROLV
OK   UME::SIMD::SIMD1_64i test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD1_64i test Id: 481 - ROLS
OK   UME::SIMD::SIMD1_64i test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 483 - MROLS
OK   UME::SIMD::SIMD1_64i test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 485 - ROLVA
OK   UME::SIMD::SIMD1_64i test Id: 486 - MROLVA
OK   UME::SIMD::SIMD1_64i test Id: 487 - ROLSA
OK   UME::SIMD::SIMD1_64i test Id: 488 - MROLSA
OK   UME::SIMD::SIMD1_64i test Id: 489 - RORV
OK   UME::SIMD::SIMD1_64i test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD1_64i test Id: 491 - MRORV
OK   UME::SIMD::SIMD1_64i test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD1_64i test Id: 493 - RORS
OK   UME::SIMD::SIMD1_64i test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 495 - MRORS
OK   UME::SIMD::SIMD1_64i test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64i test Id: 497 - RORVA
OK   UME::SIMD::SIMD1_64i test Id: 498 - MRORVA
OK   UME::SIMD::SIMD1_64i test Id: 499 - RORSA
OK   UME::SIMD::SIMD1_64i test Id: 500 - MRORSA
OK   UME::SIMD::SIMD1_64i test Id: 501 - NEG
OK   UME::SIMD::SIMD1_64i test Id: 502 - NEG(operator-)
OK   UME::SIMD::SIMD1_64i test Id: 503 - NEG(function)
OK   UME::SIMD::SIMD1_64i test Id: 504 - MNEG
OK   UME::SIMD::SIMD1_64i test Id: 505 - MNEG(function)
OK   UME::SIMD::SIMD1_64i test Id: 506 - NEGA
OK   UME::SIMD::SIMD1_64i test Id: 507 - MNEGA
OK   UME::SIMD::SIMD1_64i test Id: 508 - ABS
OK   UME::SIMD::SIMD1_64i test Id: 509 - ABS(function)
OK   UME::SIMD::SIMD1_64i test Id: 510 - MABS
OK   UME::SIMD::SIMD1_64i test Id: 511 - MABS(function)
OK   UME::SIMD::SIMD1_64i test Id: 512 - ABSA
OK   UME::SIMD::SIMD1_64i test Id: 513 - MABSA
OK   UME::SIMD::SIMD1_64i test Id: 514 - COPYSIGN gen
OK   UME::SIMD::SIMD1_64i test Id: 515 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD1_64i test Id: 516 - ITOU
OK   UME::SIMD::SIMD1_64i test Id: 517 - ITOF
OK   UME::SIMD::SIMD1_64i test Id: 518 - DEGRADE
OK   UME::SIMD::SIMD1_64f test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD1_64f test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD1_64f test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD1_64f test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD1_64f test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD1_64f test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD1_64f test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD1_64f test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD1_64f test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD1_64f test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD1_64f test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD1_64f test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD1_64f test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD1_64f test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD1_64f test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD1_64f test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD1_64f test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD1_64f test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD1_64f test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD1_64f test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD1_64f test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD1_64f test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD1_64f test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD1_64f test Id: 24 - INSERT
OK   UME::SIMD::SIMD1_64f test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD1_64f test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD1_64f test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD1_64f test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD1_64f test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD1_64f test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD1_64f test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD1_64f test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD1_64f test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD1_64f test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD1_64f test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD1_64f test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD1_64f test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD1_64f test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD1_64f test Id: 39 - MLOAD
OK   UME::SIMD::SIMD1_64f test Id: 40 - MSTORE
OK   UME::SIMD::SIMD1_64f test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD1_64f test Id: 42 - MLOADA
OK   UME::SIMD::SIMD1_64f test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD1_64f test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD1_64f test Id: 45 - SORTA
OK   UME::SIMD::SIMD1_64f test Id: 46 - SORTD
OK   UME::SIMD::SIMD1_64f test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD1_64f test Id: 48 - ADDV
OK   UME::SIMD::SIMD1_64f test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD1_64f test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD1_64f test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD1_64f test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD1_64f test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 54 - MADDV
OK   UME::SIMD::SIMD1_64f test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD1_64f test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD1_64f test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 58 - ADDS
OK   UME::SIMD::SIMD1_64f test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD1_64f test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD1_64f test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD1_64f test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD1_64f test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD1_64f test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD1_64f test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD1_64f test Id: 68 - MADDS
OK   UME::SIMD::SIMD1_64f test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD1_64f test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD1_64f test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD1_64f test Id: 73 - ADDVA
OK   UME::SIMD::SIMD1_64f test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD1_64f test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD1_64f test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD1_64f test Id: 77 - MADDVA
OK   UME::SIMD::SIMD1_64f test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD1_64f test Id: 79 - ADDSA
OK   UME::SIMD::SIMD1_64f test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD1_64f test Id: 81 - MADDSA
OK   UME::SIMD::SIMD1_64f test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD1_64f test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD1_64f test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 85 - POSTINC
OK   UME::SIMD::SIMD1_64f test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD1_64f test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD1_64f test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD1_64f test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD1_64f test Id: 90 - PREFINC
OK   UME::SIMD::SIMD1_64f test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD1_64f test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD1_64f test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD1_64f test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD1_64f test Id: 95 - SUBV
OK   UME::SIMD::SIMD1_64f test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD1_64f test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD1_64f test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD1_64f test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD1_64f test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 101 - MSUBV
OK   UME::SIMD::SIMD1_64f test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD1_64f test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD1_64f test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD1_64f test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD1_64f test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 108 - MSUBS
OK   UME::SIMD::SIMD1_64f test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 110 - SUBVA
OK   UME::SIMD::SIMD1_64f test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD1_64f test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD1_64f test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD1_64f test Id: 114 - SUBSA
OK   UME::SIMD::SIMD1_64f test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD1_64f test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD1_64f test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD1_64f test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD1_64f test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD1_64f test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD1_64f test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD1_64f test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD1_64f test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD1_64f test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD1_64f test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD1_64f test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD1_64f test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD1_64f test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD1_64f test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD1_64f test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD1_64f test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD1_64f test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD1_64f test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD1_64f test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD1_64f test Id: 137 - MULV
OK   UME::SIMD::SIMD1_64f test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD1_64f test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD1_64f test Id: 140 - MMULV
OK   UME::SIMD::SIMD1_64f test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD1_64f test Id: 142 - MULS
OK   UME::SIMD::SIMD1_64f test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 146 - MMULS
OK   UME::SIMD::SIMD1_64f test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 148 - MULVA
OK   UME::SIMD::SIMD1_64f test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD1_64f test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD1_64f test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD1_64f test Id: 152 - MMULVA
OK   UME::SIMD::SIMD1_64f test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_64f test Id: 154 - MULSA
OK   UME::SIMD::SIMD1_64f test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD1_64f test Id: 156 - MMULSA
OK   UME::SIMD::SIMD1_64f test Id: 157 - DIVV
OK   UME::SIMD::SIMD1_64f test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD1_64f test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD1_64f test Id: 160 - MDIVV
OK   UME::SIMD::SIMD1_64f test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD1_64f test Id: 162 - DIVS
OK   UME::SIMD::SIMD1_64f test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 165 - MDIVS
OK   UME::SIMD::SIMD1_64f test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 167 - DIVVA
OK   UME::SIMD::SIMD1_64f test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD1_64f test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD1_64f test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD1_64f test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD1_64f test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD1_64f test Id: 173 - DIVSA
OK   UME::SIMD::SIMD1_64f test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD1_64f test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD1_64f test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD1_64f test Id: 177 - RCP
OK   UME::SIMD::SIMD1_64f test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD1_64f test Id: 179 - MRCP
OK   UME::SIMD::SIMD1_64f test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD1_64f test Id: 181 - RCPS
OK   UME::SIMD::SIMD1_64f test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD1_64f test Id: 184 - MRCPS
OK   UME::SIMD::SIMD1_64f test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD1_64f test Id: 186 - RCPA
OK   UME::SIMD::SIMD1_64f test Id: 187 - MRCPA
OK   UME::SIMD::SIMD1_64f test Id: 188 - RCPSA
OK   UME::SIMD::SIMD1_64f test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD1_64f test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD1_64f test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD1_64f test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD1_64f test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD1_64f test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD1_64f test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD1_64f test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD1_64f test Id: 201 - CMPNES
OK   UME::SIMD::SIMD1_64f test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD1_64f test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD1_64f test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD1_64f test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD1_64f test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD1_64f test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD1_64f test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD1_64f test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD1_64f test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD1_64f test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD1_64f test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD1_64f test Id: 225 - CMPGES
OK   UME::SIMD::SIMD1_64f test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD1_64f test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD1_64f test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD1_64f test Id: 233 - CMPLES
OK   UME::SIMD::SIMD1_64f test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 238 - CMPEV
OK   UME::SIMD::SIMD1_64f test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD1_64f test Id: 240 - CMPES
OK   UME::SIMD::SIMD1_64f test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 243 - HADD
OK   UME::SIMD::SIMD1_64f test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD1_64f test Id: 245 - HADD gen
OK   UME::SIMD::SIMD1_64f test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD1_64f test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD1_64f test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD1_64f test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD1_64f test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD1_64f test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD1_64f test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD1_64f test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD1_64f test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD1_64f test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD1_64f test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD1_64f test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD1_64f test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD1_64f test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD1_64f test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD1_64f test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD1_64f test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD1_64f test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD1_64f test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD1_64f test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD1_64f test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD1_64f test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD1_64f test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD1_64f test Id: 277 - MAXV
OK   UME::SIMD::SIMD1_64f test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD1_64f test Id: 279 - MMAXV
OK   UME::SIMD::SIMD1_64f test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD1_64f test Id: 281 - MAXS
OK   UME::SIMD::SIMD1_64f test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 284 - MMAXS
OK   UME::SIMD::SIMD1_64f test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 286 - MAXVA
OK   UME::SIMD::SIMD1_64f test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD1_64f test Id: 288 - MAXSA
OK   UME::SIMD::SIMD1_64f test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD1_64f test Id: 290 - MINV
OK   UME::SIMD::SIMD1_64f test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD1_64f test Id: 292 - MMINV
OK   UME::SIMD::SIMD1_64f test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD1_64f test Id: 294 - MINS
OK   UME::SIMD::SIMD1_64f test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD1_64f test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD1_64f test Id: 297 - MMINS
OK   UME::SIMD::SIMD1_64f test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD1_64f test Id: 299 - MINVA
OK   UME::SIMD::SIMD1_64f test Id: 300 - MMINVA
OK   UME::SIMD::SIMD1_64f test Id: 301 - MINSA
OK   UME::SIMD::SIMD1_64f test Id: 302 - MMINSA
OK   UME::SIMD::SIMD1_64f test Id: 303 - HMAX
OK   UME::SIMD::SIMD1_64f test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD1_64f test Id: 305 - HMAX
OK   UME::SIMD::SIMD1_64f test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD1_64f test Id: 307 - MHMAX
OK   UME::SIMD::SIMD1_64f test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD1_64f test Id: 309 - IMAX
OK   UME::SIMD::SIMD1_64f test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD1_64f test Id: 311 - MIMAX
OK   UME::SIMD::SIMD1_64f test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD1_64f test Id: 313 - HMIN
OK   UME::SIMD::SIMD1_64f test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD1_64f test Id: 315 - HMIN
OK   UME::SIMD::SIMD1_64f test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD1_64f test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD1_64f test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 319 - IMIN
OK   UME::SIMD::SIMD1_64f test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD1_64f test Id: 321 - MIMIN
OK   UME::SIMD::SIMD1_64f test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD1_64f test Id: 323 - GATHERU
OK   UME::SIMD::SIMD1_64f test Id: 324 - MGATHERU
OK   UME::SIMD::SIMD1_64f test Id: 325 - GATHERS
OK   UME::SIMD::SIMD1_64f test Id: 326 - MGATHERS
OK   UME::SIMD::SIMD1_64f test Id: 327 - GATHERV
OK   UME::SIMD::SIMD1_64f test Id: 328 - MGATHERV
OK   UME::SIMD::SIMD1_64f test Id: 329 - SCATTERU
OK   UME::SIMD::SIMD1_64f test Id: 330 - MSCATTERU
OK   UME::SIMD::SIMD1_64f test Id: 331 - SCATTERS
OK   UME::SIMD::SIMD1_64f test Id: 332 - MSCATTERS
OK   UME::SIMD::SIMD1_64f test Id: 333 - SCATTERV
OK   UME::SIMD::SIMD1_64f test Id: 334 - MSCATTERV
OK   UME::SIMD::SIMD1_64f test Id: 335 - NEG
OK   UME::SIMD::SIMD1_64f test Id: 336 - NEG(operator-)
OK   UME::SIMD::SIMD1_64f test Id: 337 - NEG(function)
OK   UME::SIMD::SIMD1_64f test Id: 338 - MNEG
OK   UME::SIMD::SIMD1_64f test Id: 339 - MNEG(function)
OK   UME::SIMD::SIMD1_64f test Id: 340 - NEGA
OK   UME::SIMD::SIMD1_64f test Id: 341 - MNEGA
OK   UME::SIMD::SIMD1_64f test Id: 342 - ABS
OK   UME::SIMD::SIMD1_64f test Id: 343 - ABS(function)
OK   UME::SIMD::SIMD1_64f test Id: 344 - MABS
OK   UME::SIMD::SIMD1_64f test Id: 345 - MABS(function)
OK   UME::SIMD::SIMD1_64f test Id: 346 - ABSA
OK   UME::SIMD::SIMD1_64f test Id: 347 - MABSA
OK   UME::SIMD::SIMD1_64f test Id: 348 - COPYSIGN gen
OK   UME::SIMD::SIMD1_64f test Id: 349 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 350 - ROUND
OK   UME::SIMD::SIMD1_64f test Id: 351 - ROUND(function)
OK   UME::SIMD::SIMD1_64f test Id: 352 - MROUND
OK   UME::SIMD::SIMD1_64f test Id: 353 - MROUND(function)
OK   UME::SIMD::SIMD1_64f test Id: 354 - TRUNC gen
OK   UME::SIMD::SIMD1_64f test Id: 355 - TRUNC(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 356 - MTRUNC gen
OK   UME::SIMD::SIMD1_64f test Id: 357 - MTRUNC(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 358 - FLOOR
OK   UME::SIMD::SIMD1_64f test Id: 359 - FLOOR(function)
OK   UME::SIMD::SIMD1_64f test Id: 360 - MFLOOR
OK   UME::SIMD::SIMD1_64f test Id: 361 - MFLOOR(function)
OK   UME::SIMD::SIMD1_64f test Id: 362 - CEIL
OK   UME::SIMD::SIMD1_64f test Id: 363 - CEIL(function)
OK   UME::SIMD::SIMD1_64f test Id: 364 - MCEIL
OK   UME::SIMD::SIMD1_64f test Id: 365 - MCEIL(function)
OK   UME::SIMD::SIMD1_64f test Id: 366 - ISFIN
OK   UME::SIMD::SIMD1_64f test Id: 367 - ISFIN(function)
OK   UME::SIMD::SIMD1_64f test Id: 368 - ISINF
OK   UME::SIMD::SIMD1_64f test Id: 369 - ISINF(function)
OK   UME::SIMD::SIMD1_64f test Id: 370 - ISAN
OK   UME::SIMD::SIMD1_64f test Id: 371 - ISAN(function)
OK   UME::SIMD::SIMD1_64f test Id: 372 - ISNAN
OK   UME::SIMD::SIMD1_64f test Id: 373 - ISNAN(function)
OK   UME::SIMD::SIMD1_64f test Id: 374 - ISNORM
OK   UME::SIMD::SIMD1_64f test Id: 375 - ISNORM(function)
OK   UME::SIMD::SIMD1_64f test Id: 376 - ISSUB
OK   UME::SIMD::SIMD1_64f test Id: 377 - ISSUB(function)
OK   UME::SIMD::SIMD1_64f test Id: 378 - ISZERO
OK   UME::SIMD::SIMD1_64f test Id: 379 - ISZERO(function)
OK   UME::SIMD::SIMD1_64f test Id: 380 - ISZEROSUB
OK   UME::SIMD::SIMD1_64f test Id: 381 - ISZEROSUB(function)
OK   UME::SIMD::SIMD1_64f test Id: 382 - SQR
OK   UME::SIMD::SIMD1_64f test Id: 383 - SQR(function)
OK   UME::SIMD::SIMD1_64f test Id: 384 - MSQR
OK   UME::SIMD::SIMD1_64f test Id: 385 - MSQR(function)
OK   UME::SIMD::SIMD1_64f test Id: 386 - SQRA
OK   UME::SIMD::SIMD1_64f test Id: 387 - MSQRA
OK   UME::SIMD::SIMD1_64f test Id: 388 - SQRT
OK   UME::SIMD::SIMD1_64f test Id: 389 - SQRT(function)
OK   UME::SIMD::SIMD1_64f test Id: 390 - MSQRT
OK   UME::SIMD::SIMD1_64f test Id: 391 - MSQRT
OK   UME::SIMD::SIMD1_64f test Id: 392 - SQRTA
OK   UME::SIMD::SIMD1_64f test Id: 393 - MSQRTA
OK   UME::SIMD::SIMD1_64f test Id: 394 - EXP gen
OK   UME::SIMD::SIMD1_64f test Id: 395 - EXP(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 396 - MEXP gen
OK   UME::SIMD::SIMD1_64f test Id: 397 - MEXP(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 398 - LOG gen
OK   UME::SIMD::SIMD1_64f test Id: 399 - LOG(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 400 - LOG2 gen
OK   UME::SIMD::SIMD1_64f test Id: 401 - LOG2(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 402 - LOG10 gen
OK   UME::SIMD::SIMD1_64f test Id: 403 - LOG10(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 404 - SIN gen
OK   UME::SIMD::SIMD1_64f test Id: 405 - SIN(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 406 - COS gen
OK   UME::SIMD::SIMD1_64f test Id: 407 - COS(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 408 - TAN gen
OK   UME::SIMD::SIMD1_64f test Id: 409 - TAN(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 410 - CTAN gen
OK   UME::SIMD::SIMD1_64f test Id: 411 - CTAN(function) gen
OK   UME::SIMD::SIMD1_64f test Id: 412 - FTOU gen
OK   UME::SIMD::SIMD1_64f test Id: 413 - FTOI gen
OK   UME::SIMD::SIMD1_64f test Id: 414 - DEGRADE
OK   UME::SIMD::SIMD16_8u test Id: 1 - SET-CONSTR gen
OK   UME::SIMD::SIMD16_8u test Id: 2 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD16_8u test Id: 3 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD16_8u test Id: 4 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD16_8u test Id: 5 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD16_8u test Id: 6 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD16_8u test Id: 7 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD16_8u test Id: 8 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD16_8u test Id: 9 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD16_8u test Id: 10 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD16_8u test Id: 11 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD16_8u test Id: 12 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD16_8u test Id: 13 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD16_8u test Id: 14 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD16_8u test Id: 15 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD16_8u test Id: 16 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD16_8u test Id: 17 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD16_8u test Id: 18 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD16_8u test Id: 19 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD16_8u test Id: 20 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD16_8u test Id: 21 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD16_8u test Id: 22 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD16_8u test Id: 23 - INSERT
OK   UME::SIMD::SIMD16_8u test Id: 24 - INSERT(operator[] =)
OK   UME::SIMD::SIMD16_8u test Id: 25 - EXTRACT
OK   UME::SIMD::SIMD16_8u test Id: 26 - EXTRACT(operator[])
OK   UME::SIMD::SIMD16_8u test Id: 27 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD16_8u test Id: 28 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD16_8u test Id: 29 - ASSIGNV
OK   UME::SIMD::SIMD16_8u test Id: 30 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD16_8u test Id: 31 - MASSIGNV
OK   UME::SIMD::SIMD16_8u test Id: 32 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD16_8u test Id: 33 - ASSIGNS
OK   UME::SIMD::SIMD16_8u test Id: 34 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD16_8u test Id: 35 - MASSIGNS
OK   UME::SIMD::SIMD16_8u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD16_8u test Id: 37 - LOAD/STORE
OK   UME::SIMD::SIMD16_8u test Id: 38 - MLOAD
OK   UME::SIMD::SIMD16_8u test Id: 39 - MSTORE
OK   UME::SIMD::SIMD16_8u test Id: 40 - LOADA/STOREA
OK   UME::SIMD::SIMD16_8u test Id: 41 - MLOADA
OK   UME::SIMD::SIMD16_8u test Id: 42 - MSTOREA
OK   UME::SIMD::SIMD16_8u test Id: 43 - SWIZZLE
OK   UME::SIMD::SIMD16_8u test Id: 44 - SORTA
OK   UME::SIMD::SIMD16_8u test Id: 45 - SORTD
OK   UME::SIMD::SIMD16_8u test Id: 46 - BLENDV gen
OK   UME::SIMD::SIMD16_8u test Id: 47 - ADDV
OK   UME::SIMD::SIMD16_8u test Id: 48 - ADDV(operator+)
OK   UME::SIMD::SIMD16_8u test Id: 49 - ADDV(function)
OK   UME::SIMD::SIMD16_8u test Id: 50 - ADDV gen
OK   UME::SIMD::SIMD16_8u test Id: 51 - ADDV(operator+) gen
OK   UME::SIMD::SIMD16_8u test Id: 52 - ADDV(function) gen
OK   UME::SIMD::SIMD16_8u test Id: 53 - MADDV
OK   UME::SIMD::SIMD16_8u test Id: 54 - MADDV(function)
OK   UME::SIMD::SIMD16_8u test Id: 55 - MADDV gen
OK   UME::SIMD::SIMD16_8u test Id: 56 - MADDV(function) gen
OK   UME::SIMD::SIMD16_8u test Id: 57 - ADDS
OK   UME::SIMD::SIMD16_8u test Id: 58 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 59 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 60 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD16_8u test Id: 61 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD16_8u test Id: 62 - ADDS gen
OK   UME::SIMD::SIMD16_8u test Id: 63 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD16_8u test Id: 64 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD16_8u test Id: 65 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD16_8u test Id: 66 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD16_8u test Id: 67 - MADDS
OK   UME::SIMD::SIMD16_8u test Id: 68 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 69 - MADDS gen
OK   UME::SIMD::SIMD16_8u test Id: 70 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD16_8u test Id: 71 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD16_8u test Id: 72 - ADDVA
OK   UME::SIMD::SIMD16_8u test Id: 73 - ADDVA(operator+=)
OK   UME::SIMD::SIMD16_8u test Id: 74 - ADDVA gen
OK   UME::SIMD::SIMD16_8u test Id: 75 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD16_8u test Id: 76 - MADDVA
OK   UME::SIMD::SIMD16_8u test Id: 77 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD16_8u test Id: 78 - ADDSA
OK   UME::SIMD::SIMD16_8u test Id: 79 - ADDSA(operator+=)
OK   UME::SIMD::SIMD16_8u test Id: 80 - MADDSA
OK   UME::SIMD::SIMD16_8u test Id: 81 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD16_8u test Id: 82 - SADDV gen
OK   UME::SIMD::SIMD16_8u test Id: 83 - SADDV(function) gen
OK   UME::SIMD::SIMD16_8u test Id: 84 - POSTINC
OK   UME::SIMD::SIMD16_8u test Id: 85 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD16_8u test Id: 86 - POSTINC(function)
OK   UME::SIMD::SIMD16_8u test Id: 87 - MPOSTINC
OK   UME::SIMD::SIMD16_8u test Id: 88 - MPOSTINC(function)
OK   UME::SIMD::SIMD16_8u test Id: 89 - PREFINC
OK   UME::SIMD::SIMD16_8u test Id: 90 - PREFINC(operator++())
OK   UME::SIMD::SIMD16_8u test Id: 91 - PREFINC(function)
OK   UME::SIMD::SIMD16_8u test Id: 92 - MPREFINC
OK   UME::SIMD::SIMD16_8u test Id: 93 - MPREFINC(function)
OK   UME::SIMD::SIMD16_8u test Id: 94 - SUBV
OK   UME::SIMD::SIMD16_8u test Id: 95 - SUBV(operator-)
OK   UME::SIMD::SIMD16_8u test Id: 96 - SUBV(function)
OK   UME::SIMD::SIMD16_8u test Id: 97 - SUBV gen
OK   UME::SIMD::SIMD16_8u test Id: 98 - SUBV(operator-) gen
OK   UME::SIMD::SIMD16_8u test Id: 99 - SUBV(function) gen
OK   UME::SIMD::SIMD16_8u test Id: 100 - MSUBV
OK   UME::SIMD::SIMD16_8u test Id: 101 - MSUBV(function)
OK   UME::SIMD::SIMD16_8u test Id: 102 - MSUBV gen
OK   UME::SIMD::SIMD16_8u test Id: 103 - MSUBV(function) gen
OK   UME::SIMD::SIMD16_8u test Id: 104 - SUBS gen
OK   UME::SIMD::SIMD16_8u test Id: 105 - SUBS(operator-) gen
OK   UME::SIMD::SIMD16_8u test Id: 106 - SUBS(function) gen
OK   UME::SIMD::SIMD16_8u test Id: 107 - MSUBS
OK   UME::SIMD::SIMD16_8u test Id: 108 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 109 - SUBVA
OK   UME::SIMD::SIMD16_8u test Id: 110 - SUBVA(operator-=)
OK   UME::SIMD::SIMD16_8u test Id: 111 - MSUBVA
OK   UME::SIMD::SIMD16_8u test Id: 112 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD16_8u test Id: 113 - SUBSA
OK   UME::SIMD::SIMD16_8u test Id: 114 - MSUBSA
OK   UME::SIMD::SIMD16_8u test Id: 115 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD16_8u test Id: 116 - SUBFROMV
OK   UME::SIMD::SIMD16_8u test Id: 117 - MSUBFROMV
OK   UME::SIMD::SIMD16_8u test Id: 118 - SUBFROMS
OK   UME::SIMD::SIMD16_8u test Id: 119 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 120 - MSUBFROMS
OK   UME::SIMD::SIMD16_8u test Id: 121 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 122 - SUBFROMVA
OK   UME::SIMD::SIMD16_8u test Id: 123 - MSUBFROMVA
OK   UME::SIMD::SIMD16_8u test Id: 124 - SUBFROMSA
OK   UME::SIMD::SIMD16_8u test Id: 125 - MSUBFROMSA
OK   UME::SIMD::SIMD16_8u test Id: 126 - POSTDEC
OK   UME::SIMD::SIMD16_8u test Id: 127 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD16_8u test Id: 128 - POSTDEC(function)
OK   UME::SIMD::SIMD16_8u test Id: 129 - MPOSTDEC
OK   UME::SIMD::SIMD16_8u test Id: 130 - MPOSTDEC(function)
OK   UME::SIMD::SIMD16_8u test Id: 131 - PREFDEC
OK   UME::SIMD::SIMD16_8u test Id: 132 - PREFDEC(operator--())
OK   UME::SIMD::SIMD16_8u test Id: 133 - PREFDEC(function)
OK   UME::SIMD::SIMD16_8u test Id: 134 - MPREFDEC
OK   UME::SIMD::SIMD16_8u test Id: 135 - MPREFDEC(function)
OK   UME::SIMD::SIMD16_8u test Id: 136 - MULV
OK   UME::SIMD::SIMD16_8u test Id: 137 - MULV(operator*)
OK   UME::SIMD::SIMD16_8u test Id: 138 - MULV(function)
OK   UME::SIMD::SIMD16_8u test Id: 139 - MMULV
OK   UME::SIMD::SIMD16_8u test Id: 140 - MMULV(function)
OK   UME::SIMD::SIMD16_8u test Id: 141 - MULS
OK   UME::SIMD::SIMD16_8u test Id: 142 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 143 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 144 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 145 - MMULS
OK   UME::SIMD::SIMD16_8u test Id: 146 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 147 - MULVA
OK   UME::SIMD::SIMD16_8u test Id: 148 - MULVA(operator*)
OK   UME::SIMD::SIMD16_8u test Id: 149 - MULVA gen
OK   UME::SIMD::SIMD16_8u test Id: 150 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD16_8u test Id: 151 - MMULVA
OK   UME::SIMD::SIMD16_8u test Id: 152 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_8u test Id: 153 - MULSA
OK   UME::SIMD::SIMD16_8u test Id: 154 - MULSA(operator*=)
OK   UME::SIMD::SIMD16_8u test Id: 155 - MMULSA
OK   UME::SIMD::SIMD16_8u test Id: 156 - DIVV
OK   UME::SIMD::SIMD16_8u test Id: 157 - DIVV(operator/)
OK   UME::SIMD::SIMD16_8u test Id: 158 - DIVV(function)
OK   UME::SIMD::SIMD16_8u test Id: 159 - MDIVV
OK   UME::SIMD::SIMD16_8u test Id: 160 - MDIVV(function)
OK   UME::SIMD::SIMD16_8u test Id: 161 - DIVS
OK   UME::SIMD::SIMD16_8u test Id: 162 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 163 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 164 - MDIVS
OK   UME::SIMD::SIMD16_8u test Id: 165 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 166 - DIVVA
OK   UME::SIMD::SIMD16_8u test Id: 167 - DIVVA(operator/=)
OK   UME::SIMD::SIMD16_8u test Id: 168 - DIVVA gen
OK   UME::SIMD::SIMD16_8u test Id: 169 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD16_8u test Id: 170 - MDIVVA
OK   UME::SIMD::SIMD16_8u test Id: 171 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_8u test Id: 172 - DIVSA
OK   UME::SIMD::SIMD16_8u test Id: 173 - DIVSA(operator/=)
OK   UME::SIMD::SIMD16_8u test Id: 174 - MDIVSA
OK   UME::SIMD::SIMD16_8u test Id: 175 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD16_8u test Id: 176 - RCP
OK   UME::SIMD::SIMD16_8u test Id: 177 - RCP(function)
OK   UME::SIMD::SIMD16_8u test Id: 178 - MRCP
OK   UME::SIMD::SIMD16_8u test Id: 179 - MRCP(function)
OK   UME::SIMD::SIMD16_8u test Id: 180 - RCPS
OK   UME::SIMD::SIMD16_8u test Id: 181 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 182 - RCPS(function)
OK   UME::SIMD::SIMD16_8u test Id: 183 - MRCPS
OK   UME::SIMD::SIMD16_8u test Id: 184 - MRCPS (function)
OK   UME::SIMD::SIMD16_8u test Id: 185 - RCPA
OK   UME::SIMD::SIMD16_8u test Id: 186 - MRCPA
OK   UME::SIMD::SIMD16_8u test Id: 187 - RCPSA
OK   UME::SIMD::SIMD16_8u test Id: 188 - MRCPSA
OK   UME::SIMD::SIMD16_8u test Id: 189 - CMPEQV
OK   UME::SIMD::SIMD16_8u test Id: 190 - CMPEQV(operator==)
OK   UME::SIMD::SIMD16_8u test Id: 191 - CMPEQV(function)
OK   UME::SIMD::SIMD16_8u test Id: 192 - CMPEQS
OK   UME::SIMD::SIMD16_8u test Id: 193 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 194 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 195 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 196 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 197 - CMPNEV
OK   UME::SIMD::SIMD16_8u test Id: 198 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD16_8u test Id: 199 - CMPNEV(function)
OK   UME::SIMD::SIMD16_8u test Id: 200 - CMPNES
OK   UME::SIMD::SIMD16_8u test Id: 201 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 202 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 203 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 204 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 205 - CMPGTV
OK   UME::SIMD::SIMD16_8u test Id: 206 - CMPGTV(operator>)
OK   UME::SIMD::SIMD16_8u test Id: 207 - CMPGTV(function)
OK   UME::SIMD::SIMD16_8u test Id: 208 - CMPGTS
OK   UME::SIMD::SIMD16_8u test Id: 209 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 210 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 211 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 212 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 213 - CMPLTV
OK   UME::SIMD::SIMD16_8u test Id: 214 - CMPLTV(operator<)
OK   UME::SIMD::SIMD16_8u test Id: 215 - CMPLTV(function)
OK   UME::SIMD::SIMD16_8u test Id: 216 - CMPLTS
OK   UME::SIMD::SIMD16_8u test Id: 217 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 218 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 219 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 220 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 221 - CMPGEV
OK   UME::SIMD::SIMD16_8u test Id: 222 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD16_8u test Id: 223 - CMPGEV(function)
OK   UME::SIMD::SIMD16_8u test Id: 224 - CMPGES
OK   UME::SIMD::SIMD16_8u test Id: 225 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 226 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 227 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 228 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 229 - CMPLEV
OK   UME::SIMD::SIMD16_8u test Id: 230 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD16_8u test Id: 231 - CMPLEV(function)
OK   UME::SIMD::SIMD16_8u test Id: 232 - CMPLES
OK   UME::SIMD::SIMD16_8u test Id: 233 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 234 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 235 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 236 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 237 - CMPEV
OK   UME::SIMD::SIMD16_8u test Id: 238 - CMPEV(function)
OK   UME::SIMD::SIMD16_8u test Id: 239 - CMPES
OK   UME::SIMD::SIMD16_8u test Id: 240 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 241 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 242 - HADD
OK   UME::SIMD::SIMD16_8u test Id: 243 - HADD(function)
OK   UME::SIMD::SIMD16_8u test Id: 244 - HADD gen
OK   UME::SIMD::SIMD16_8u test Id: 245 - HADD(function) gen
OK   UME::SIMD::SIMD16_8u test Id: 246 - MHADD gen
OK   UME::SIMD::SIMD16_8u test Id: 247 - MHADD(function) gen
OK   UME::SIMD::SIMD16_8u test Id: 248 - HADDS gen
OK   UME::SIMD::SIMD16_8u test Id: 249 - HADDS(function) gen
OK   UME::SIMD::SIMD16_8u test Id: 250 - MHADD gen
OK   UME::SIMD::SIMD16_8u test Id: 251 - MHADDS(function) gen
OK   UME::SIMD::SIMD16_8u test Id: 252 - HMUL gen
OK   UME::SIMD::SIMD16_8u test Id: 253 - HMUL(function) gen
OK   UME::SIMD::SIMD16_8u test Id: 254 - MHMUL gen
OK   UME::SIMD::SIMD16_8u test Id: 255 - MHMUL(function) gen
OK   UME::SIMD::SIMD16_8u test Id: 256 - HMULS gen
OK   UME::SIMD::SIMD16_8u test Id: 257 - HMULS(function) gen
OK   UME::SIMD::SIMD16_8u test Id: 258 - MHMUL gen
OK   UME::SIMD::SIMD16_8u test Id: 259 - MHMULS(function) gen
OK   UME::SIMD::SIMD16_8u test Id: 260 - FMULADDV
OK   UME::SIMD::SIMD16_8u test Id: 261 - FMULADDV(function)
OK   UME::SIMD::SIMD16_8u test Id: 262 - MFMULADDV
OK   UME::SIMD::SIMD16_8u test Id: 263 - MFMULADDV(function)
OK   UME::SIMD::SIMD16_8u test Id: 264 - FMULSUBV
OK   UME::SIMD::SIMD16_8u test Id: 265 - FMULSUBV(function)
OK   UME::SIMD::SIMD16_8u test Id: 266 - MFMULSUBV
OK   UME::SIMD::SIMD16_8u test Id: 267 - MFMULSUBV(function)
OK   UME::SIMD::SIMD16_8u test Id: 268 - FADDMULV
OK   UME::SIMD::SIMD16_8u test Id: 269 - FADDMULV(function)
OK   UME::SIMD::SIMD16_8u test Id: 270 - MFADDMULV
OK   UME::SIMD::SIMD16_8u test Id: 271 - MFADDMULV(function)
OK   UME::SIMD::SIMD16_8u test Id: 272 - FSUBMULV
OK   UME::SIMD::SIMD16_8u test Id: 273 - FSUBMULV(function)
OK   UME::SIMD::SIMD16_8u test Id: 274 - MFSUBMULV
OK   UME::SIMD::SIMD16_8u test Id: 275 - MFSUBMULV(function)
OK   UME::SIMD::SIMD16_8u test Id: 276 - MAXV
OK   UME::SIMD::SIMD16_8u test Id: 277 - MAXV(function)
OK   UME::SIMD::SIMD16_8u test Id: 278 - MMAXV
OK   UME::SIMD::SIMD16_8u test Id: 279 - MMAXV(function)
OK   UME::SIMD::SIMD16_8u test Id: 280 - MAXS
OK   UME::SIMD::SIMD16_8u test Id: 281 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 282 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 283 - MMAXS
OK   UME::SIMD::SIMD16_8u test Id: 284 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 285 - MAXVA
OK   UME::SIMD::SIMD16_8u test Id: 286 - MMAXVA
OK   UME::SIMD::SIMD16_8u test Id: 287 - MAXSA
OK   UME::SIMD::SIMD16_8u test Id: 288 - MMAXSA
OK   UME::SIMD::SIMD16_8u test Id: 289 - MINV
OK   UME::SIMD::SIMD16_8u test Id: 290 - MINV(function)
OK   UME::SIMD::SIMD16_8u test Id: 291 - MMINV
OK   UME::SIMD::SIMD16_8u test Id: 292 - MMINV(function)
OK   UME::SIMD::SIMD16_8u test Id: 293 - MINS
OK   UME::SIMD::SIMD16_8u test Id: 294 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD16_8u test Id: 295 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD16_8u test Id: 296 - MMINS
OK   UME::SIMD::SIMD16_8u test Id: 297 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 298 - MINVA
OK   UME::SIMD::SIMD16_8u test Id: 299 - MMINVA
OK   UME::SIMD::SIMD16_8u test Id: 300 - MINSA
OK   UME::SIMD::SIMD16_8u test Id: 301 - MMINSA
OK   UME::SIMD::SIMD16_8u test Id: 302 - HMAX
OK   UME::SIMD::SIMD16_8u test Id: 303 - HMAX(function)
OK   UME::SIMD::SIMD16_8u test Id: 304 - HMAX
OK   UME::SIMD::SIMD16_8u test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD16_8u test Id: 306 - MHMAX
OK   UME::SIMD::SIMD16_8u test Id: 307 - MHMAX(function)
OK   UME::SIMD::SIMD16_8u test Id: 308 - IMAX
OK   UME::SIMD::SIMD16_8u test Id: 309 - IMAX(function)
OK   UME::SIMD::SIMD16_8u test Id: 310 - MIMAX
OK   UME::SIMD::SIMD16_8u test Id: 311 - MIMAX(function)
OK   UME::SIMD::SIMD16_8u test Id: 312 - HMIN
OK   UME::SIMD::SIMD16_8u test Id: 313 - HMIN(function)
OK   UME::SIMD::SIMD16_8u test Id: 314 - HMIN
OK   UME::SIMD::SIMD16_8u test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD16_8u test Id: 316 - MHMIN gen
OK   UME::SIMD::SIMD16_8u test Id: 317 - MHMIN(function) gen
OK   UME::SIMD::SIMD16_8u test Id: 318 - IMIN
OK   UME::SIMD::SIMD16_8u test Id: 319 - IMIN(function)
OK   UME::SIMD::SIMD16_8u test Id: 320 - MIMIN
OK   UME::SIMD::SIMD16_8u test Id: 321 - MIMIN(function)
OK   UME::SIMD::SIMD16_8u test Id: 322 - REMV gen
OK   UME::SIMD::SIMD16_8u test Id: 323 - REMV(operator%) gen
OK   UME::SIMD::SIMD16_8u test Id: 324 - REMV(function) gen
OK   UME::SIMD::SIMD16_8u test Id: 325 - MREMV gen
OK   UME::SIMD::SIMD16_8u test Id: 326 - MREMV(function) gen
OK   UME::SIMD::SIMD16_8u test Id: 327 - REMS gen
OK   UME::SIMD::SIMD16_8u test Id: 328 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD16_8u test Id: 329 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD16_8u test Id: 330 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD16_8u test Id: 331 - LANDV gen
OK   UME::SIMD::SIMD16_8u test Id: 332 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD16_8u test Id: 333 - LORV gen
OK   UME::SIMD::SIMD16_8u test Id: 334 - LORV gen (operator ||)
OK   UME::SIMD::SIMD16_8u test Id: 335 - BANDV
OK   UME::SIMD::SIMD16_8u test Id: 336 - BANDV(operator&)
OK   UME::SIMD::SIMD16_8u test Id: 337 - BANDV(function)
OK   UME::SIMD::SIMD16_8u test Id: 338 - MBANDV
OK   UME::SIMD::SIMD16_8u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD16_8u test Id: 340 - BANDS
OK   UME::SIMD::SIMD16_8u test Id: 341 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 342 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 343 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 344 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 345 - MBANDS
OK   UME::SIMD::SIMD16_8u test Id: 346 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 347 - BANDVA
OK   UME::SIMD::SIMD16_8u test Id: 348 - MBANDVA
OK   UME::SIMD::SIMD16_8u test Id: 349 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD16_8u test Id: 350 - BANDSA
OK   UME::SIMD::SIMD16_8u test Id: 351 - MBANDSA
OK   UME::SIMD::SIMD16_8u test Id: 352 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD16_8u test Id: 353 - BORV
OK   UME::SIMD::SIMD16_8u test Id: 354 - BORV(operator |)
OK   UME::SIMD::SIMD16_8u test Id: 355 - BORV(function)
OK   UME::SIMD::SIMD16_8u test Id: 356 - MBORV
OK   UME::SIMD::SIMD16_8u test Id: 357 - MBORV(function)
OK   UME::SIMD::SIMD16_8u test Id: 358 - BORS
OK   UME::SIMD::SIMD16_8u test Id: 359 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 360 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 361 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 362 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 363 - MBORS
OK   UME::SIMD::SIMD16_8u test Id: 364 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 365 - BORVA
OK   UME::SIMD::SIMD16_8u test Id: 366 - BORVA(operator|=)
OK   UME::SIMD::SIMD16_8u test Id: 367 - MBORVA
OK   UME::SIMD::SIMD16_8u test Id: 368 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD16_8u test Id: 369 - BORSA
OK   UME::SIMD::SIMD16_8u test Id: 370 - BORSA(operator|=)
OK   UME::SIMD::SIMD16_8u test Id: 371 - MBORSA
OK   UME::SIMD::SIMD16_8u test Id: 372 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD16_8u test Id: 373 - BXORV
OK   UME::SIMD::SIMD16_8u test Id: 374 - BXORV(operator^
OK   UME::SIMD::SIMD16_8u test Id: 375 - BXORV(function
OK   UME::SIMD::SIMD16_8u test Id: 376 - MBXORV
OK   UME::SIMD::SIMD16_8u test Id: 377 - MBXORV(function)
OK   UME::SIMD::SIMD16_8u test Id: 378 - BXORS
OK   UME::SIMD::SIMD16_8u test Id: 379 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 380 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 381 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 382 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 383 - MBXORS
OK   UME::SIMD::SIMD16_8u test Id: 384 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 385 - BXORVA
OK   UME::SIMD::SIMD16_8u test Id: 386 - BXORVA(operator^=)
OK   UME::SIMD::SIMD16_8u test Id: 387 - MBXORVA
OK   UME::SIMD::SIMD16_8u test Id: 388 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD16_8u test Id: 389 - BXORSA
OK   UME::SIMD::SIMD16_8u test Id: 390 - BXORSA(operator^=)
OK   UME::SIMD::SIMD16_8u test Id: 391 - MBXORSA
OK   UME::SIMD::SIMD16_8u test Id: 392 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD16_8u test Id: 393 - BNOT
OK   UME::SIMD::SIMD16_8u test Id: 394 - BNOT(operator!)
OK   UME::SIMD::SIMD16_8u test Id: 395 - BNOT(function)
OK   UME::SIMD::SIMD16_8u test Id: 396 - MBNOT
OK   UME::SIMD::SIMD16_8u test Id: 397 - MBNOT(function)
OK   UME::SIMD::SIMD16_8u test Id: 398 - BNOTA
OK   UME::SIMD::SIMD16_8u test Id: 399 - MBNOTA
OK   UME::SIMD::SIMD16_8u test Id: 400 - BANDNOTV
OK   UME::SIMD::SIMD16_8u test Id: 401 - BANDNOTV (function)
OK   UME::SIMD::SIMD16_8u test Id: 402 - MBANDNOTV
OK   UME::SIMD::SIMD16_8u test Id: 403 - MBANDNOTV (function)
OK   UME::SIMD::SIMD16_8u test Id: 404 - BANDNOTS
OK   UME::SIMD::SIMD16_8u test Id: 405 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD16_8u test Id: 406 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD16_8u test Id: 407 - MBANDNOTS
OK   UME::SIMD::SIMD16_8u test Id: 408 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD16_8u test Id: 409 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD16_8u test Id: 410 - BANDNOTVA
OK   UME::SIMD::SIMD16_8u test Id: 411 - MBANDNOTVA
OK   UME::SIMD::SIMD16_8u test Id: 412 - BANDNOTSA
OK   UME::SIMD::SIMD16_8u test Id: 413 - MBANDNOTSA
OK   UME::SIMD::SIMD16_8u test Id: 414 - HBAND
OK   UME::SIMD::SIMD16_8u test Id: 415 - HBAND
OK   UME::SIMD::SIMD16_8u test Id: 416 - MHBAND
OK   UME::SIMD::SIMD16_8u test Id: 417 - MHBAND(function)
OK   UME::SIMD::SIMD16_8u test Id: 418 - HBANDS
OK   UME::SIMD::SIMD16_8u test Id: 419 - MHBANDS
OK   UME::SIMD::SIMD16_8u test Id: 420 - HBOR
OK   UME::SIMD::SIMD16_8u test Id: 421 - HBOR(function)
OK   UME::SIMD::SIMD16_8u test Id: 422 - MHBOR
OK   UME::SIMD::SIMD16_8u test Id: 423 - MHBOR(function)
OK   UME::SIMD::SIMD16_8u test Id: 424 - HBORS
OK   UME::SIMD::SIMD16_8u test Id: 425 - MHBORS
OK   UME::SIMD::SIMD16_8u test Id: 426 - HBXOR
OK   UME::SIMD::SIMD16_8u test Id: 427 - HBXOR(function)
OK   UME::SIMD::SIMD16_8u test Id: 428 - MHBXOR
OK   UME::SIMD::SIMD16_8u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD16_8u test Id: 430 - HBXORS
OK   UME::SIMD::SIMD16_8u test Id: 431 - MHBXORS
OK   UME::SIMD::SIMD16_8u test Id: 432 - GATHERU
OK   UME::SIMD::SIMD16_8u test Id: 433 - MGATHERU
OK   UME::SIMD::SIMD16_8u test Id: 434 - GATHERS
OK   UME::SIMD::SIMD16_8u test Id: 435 - MGATHERS
OK   UME::SIMD::SIMD16_8u test Id: 436 - GATHERV
OK   UME::SIMD::SIMD16_8u test Id: 437 - MGATHERV
OK   UME::SIMD::SIMD16_8u test Id: 438 - SCATTERU
OK   UME::SIMD::SIMD16_8u test Id: 439 - MSCATTERU
OK   UME::SIMD::SIMD16_8u test Id: 440 - SCATTERS
OK   UME::SIMD::SIMD16_8u test Id: 441 - MSCATTERS
OK   UME::SIMD::SIMD16_8u test Id: 442 - SCATTERV
OK   UME::SIMD::SIMD16_8u test Id: 443 - MSCATTERV
OK   UME::SIMD::SIMD16_8u test Id: 444 - LSHV gen
OK   UME::SIMD::SIMD16_8u test Id: 445 - LSHV (function) gen
OK   UME::SIMD::SIMD16_8u test Id: 446 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD16_8u test Id: 447 - MLSHV gen
OK   UME::SIMD::SIMD16_8u test Id: 448 - MLSHV (function) gen
OK   UME::SIMD::SIMD16_8u test Id: 449 - LSHS gen
OK   UME::SIMD::SIMD16_8u test Id: 450 - LSHS (function) gen
OK   UME::SIMD::SIMD16_8u test Id: 451 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD16_8u test Id: 452 - MLSHS gen
OK   UME::SIMD::SIMD16_8u test Id: 453 - MLSHS (function) gen
OK   UME::SIMD::SIMD16_8u test Id: 454 - LSHVA gen
OK   UME::SIMD::SIMD16_8u test Id: 455 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD16_8u test Id: 456 - MLSHVA gen
OK   UME::SIMD::SIMD16_8u test Id: 457 - LSHSA gen
OK   UME::SIMD::SIMD16_8u test Id: 458 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD16_8u test Id: 459 - MLSHSA gen
OK   UME::SIMD::SIMD16_8u test Id: 460 - RSHV gen
OK   UME::SIMD::SIMD16_8u test Id: 461 - RSHV (function) gen
OK   UME::SIMD::SIMD16_8u test Id: 462 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD16_8u test Id: 463 - MRSHV gen
OK   UME::SIMD::SIMD16_8u test Id: 464 - MRSHV (function) gen
OK   UME::SIMD::SIMD16_8u test Id: 465 - RSHS gen
OK   UME::SIMD::SIMD16_8u test Id: 466 - RSHS (function) gen
OK   UME::SIMD::SIMD16_8u test Id: 467 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD16_8u test Id: 468 - MRSHS gen
OK   UME::SIMD::SIMD16_8u test Id: 469 - MRSHS (function) gen
OK   UME::SIMD::SIMD16_8u test Id: 470 - RSHVA gen
OK   UME::SIMD::SIMD16_8u test Id: 471 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD16_8u test Id: 472 - MRSHVA gen
OK   UME::SIMD::SIMD16_8u test Id: 473 - RSHSA gen
OK   UME::SIMD::SIMD16_8u test Id: 474 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD16_8u test Id: 475 - MRSHSA gen
OK   UME::SIMD::SIMD16_8u test Id: 476 - ROLV
OK   UME::SIMD::SIMD16_8u test Id: 477 - ROLV(function)
OK   UME::SIMD::SIMD16_8u test Id: 478 - MROLV
OK   UME::SIMD::SIMD16_8u test Id: 479 - MROLV(function)
OK   UME::SIMD::SIMD16_8u test Id: 480 - ROLS
OK   UME::SIMD::SIMD16_8u test Id: 481 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 482 - MROLS
OK   UME::SIMD::SIMD16_8u test Id: 483 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 484 - ROLVA
OK   UME::SIMD::SIMD16_8u test Id: 485 - MROLVA
OK   UME::SIMD::SIMD16_8u test Id: 486 - ROLSA
OK   UME::SIMD::SIMD16_8u test Id: 487 - MROLSA
OK   UME::SIMD::SIMD16_8u test Id: 488 - RORV
OK   UME::SIMD::SIMD16_8u test Id: 489 - RORV(function)
OK   UME::SIMD::SIMD16_8u test Id: 490 - MRORV
OK   UME::SIMD::SIMD16_8u test Id: 491 - MRORV(function)
OK   UME::SIMD::SIMD16_8u test Id: 492 - RORS
OK   UME::SIMD::SIMD16_8u test Id: 493 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 494 - MRORS
OK   UME::SIMD::SIMD16_8u test Id: 495 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8u test Id: 496 - RORVA
OK   UME::SIMD::SIMD16_8u test Id: 497 - MRORVA
OK   UME::SIMD::SIMD16_8u test Id: 498 - RORSA
OK   UME::SIMD::SIMD16_8u test Id: 499 - MRORSA
OK   UME::SIMD::SIMD16_8u test Id: 500 - UTOI
OK   UME::SIMD::SIMD16_8u test Id: 501 - PACK
OK   UME::SIMD::SIMD16_8u test Id: 502 - PACKLO
OK   UME::SIMD::SIMD16_8u test Id: 503 - PACKHI
OK   UME::SIMD::SIMD16_8u test Id: 504 - UNPACK
OK   UME::SIMD::SIMD16_8u test Id: 505 - UNPACKLO
OK   UME::SIMD::SIMD16_8u test Id: 506 - UNPACKHi
OK   UME::SIMD::SIMD16_8u test Id: 507 - PROMOTE
OK   UME::SIMD::SIMD16_8i test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD16_8i test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD16_8i test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD16_8i test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD16_8i test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD16_8i test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD16_8i test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD16_8i test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD16_8i test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD16_8i test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD16_8i test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD16_8i test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD16_8i test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD16_8i test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD16_8i test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD16_8i test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD16_8i test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD16_8i test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD16_8i test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD16_8i test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD16_8i test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD16_8i test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD16_8i test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD16_8i test Id: 24 - INSERT
OK   UME::SIMD::SIMD16_8i test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD16_8i test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD16_8i test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD16_8i test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD16_8i test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD16_8i test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD16_8i test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD16_8i test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD16_8i test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD16_8i test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD16_8i test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD16_8i test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD16_8i test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD16_8i test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD16_8i test Id: 39 - MLOAD
OK   UME::SIMD::SIMD16_8i test Id: 40 - MSTORE
OK   UME::SIMD::SIMD16_8i test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD16_8i test Id: 42 - MLOADA
OK   UME::SIMD::SIMD16_8i test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD16_8i test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD16_8i test Id: 45 - SORTA
OK   UME::SIMD::SIMD16_8i test Id: 46 - SORTD
OK   UME::SIMD::SIMD16_8i test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD16_8i test Id: 48 - ADDV
OK   UME::SIMD::SIMD16_8i test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD16_8i test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD16_8i test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD16_8i test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD16_8i test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD16_8i test Id: 54 - MADDV
OK   UME::SIMD::SIMD16_8i test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD16_8i test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD16_8i test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD16_8i test Id: 58 - ADDS
OK   UME::SIMD::SIMD16_8i test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD16_8i test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD16_8i test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD16_8i test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD16_8i test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD16_8i test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD16_8i test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD16_8i test Id: 68 - MADDS
OK   UME::SIMD::SIMD16_8i test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD16_8i test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD16_8i test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD16_8i test Id: 73 - ADDVA
OK   UME::SIMD::SIMD16_8i test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD16_8i test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD16_8i test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD16_8i test Id: 77 - MADDVA
OK   UME::SIMD::SIMD16_8i test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD16_8i test Id: 79 - ADDSA
OK   UME::SIMD::SIMD16_8i test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD16_8i test Id: 81 - MADDSA
OK   UME::SIMD::SIMD16_8i test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD16_8i test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD16_8i test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD16_8i test Id: 85 - POSTINC
OK   UME::SIMD::SIMD16_8i test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD16_8i test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD16_8i test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD16_8i test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD16_8i test Id: 90 - PREFINC
OK   UME::SIMD::SIMD16_8i test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD16_8i test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD16_8i test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD16_8i test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD16_8i test Id: 95 - SUBV
OK   UME::SIMD::SIMD16_8i test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD16_8i test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD16_8i test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD16_8i test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD16_8i test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD16_8i test Id: 101 - MSUBV
OK   UME::SIMD::SIMD16_8i test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD16_8i test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD16_8i test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD16_8i test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD16_8i test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD16_8i test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD16_8i test Id: 108 - MSUBS
OK   UME::SIMD::SIMD16_8i test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 110 - SUBVA
OK   UME::SIMD::SIMD16_8i test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD16_8i test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD16_8i test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD16_8i test Id: 114 - SUBSA
OK   UME::SIMD::SIMD16_8i test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD16_8i test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD16_8i test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD16_8i test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD16_8i test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD16_8i test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD16_8i test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD16_8i test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD16_8i test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD16_8i test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD16_8i test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD16_8i test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD16_8i test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD16_8i test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD16_8i test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD16_8i test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD16_8i test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD16_8i test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD16_8i test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD16_8i test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD16_8i test Id: 137 - MULV
OK   UME::SIMD::SIMD16_8i test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD16_8i test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD16_8i test Id: 140 - MMULV
OK   UME::SIMD::SIMD16_8i test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD16_8i test Id: 142 - MULS
OK   UME::SIMD::SIMD16_8i test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 146 - MMULS
OK   UME::SIMD::SIMD16_8i test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 148 - MULVA
OK   UME::SIMD::SIMD16_8i test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD16_8i test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD16_8i test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD16_8i test Id: 152 - MMULVA
OK   UME::SIMD::SIMD16_8i test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_8i test Id: 154 - MULSA
OK   UME::SIMD::SIMD16_8i test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD16_8i test Id: 156 - MMULSA
OK   UME::SIMD::SIMD16_8i test Id: 157 - DIVV
OK   UME::SIMD::SIMD16_8i test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD16_8i test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD16_8i test Id: 160 - MDIVV
OK   UME::SIMD::SIMD16_8i test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD16_8i test Id: 162 - DIVS
OK   UME::SIMD::SIMD16_8i test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 165 - MDIVS
OK   UME::SIMD::SIMD16_8i test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 167 - DIVVA
OK   UME::SIMD::SIMD16_8i test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD16_8i test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD16_8i test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD16_8i test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD16_8i test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_8i test Id: 173 - DIVSA
OK   UME::SIMD::SIMD16_8i test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD16_8i test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD16_8i test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD16_8i test Id: 177 - RCP
OK   UME::SIMD::SIMD16_8i test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD16_8i test Id: 179 - MRCP
OK   UME::SIMD::SIMD16_8i test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD16_8i test Id: 181 - RCPS
OK   UME::SIMD::SIMD16_8i test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD16_8i test Id: 184 - MRCPS
OK   UME::SIMD::SIMD16_8i test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD16_8i test Id: 186 - RCPA
OK   UME::SIMD::SIMD16_8i test Id: 187 - MRCPA
OK   UME::SIMD::SIMD16_8i test Id: 188 - RCPSA
OK   UME::SIMD::SIMD16_8i test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD16_8i test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD16_8i test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD16_8i test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD16_8i test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD16_8i test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD16_8i test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD16_8i test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD16_8i test Id: 201 - CMPNES
OK   UME::SIMD::SIMD16_8i test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD16_8i test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD16_8i test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD16_8i test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD16_8i test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD16_8i test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD16_8i test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD16_8i test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD16_8i test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD16_8i test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD16_8i test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD16_8i test Id: 225 - CMPGES
OK   UME::SIMD::SIMD16_8i test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD16_8i test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD16_8i test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD16_8i test Id: 233 - CMPLES
OK   UME::SIMD::SIMD16_8i test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 238 - CMPEV
OK   UME::SIMD::SIMD16_8i test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD16_8i test Id: 240 - CMPES
OK   UME::SIMD::SIMD16_8i test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 243 - HADD
OK   UME::SIMD::SIMD16_8i test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD16_8i test Id: 245 - HADD gen
OK   UME::SIMD::SIMD16_8i test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD16_8i test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD16_8i test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD16_8i test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD16_8i test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD16_8i test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD16_8i test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD16_8i test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD16_8i test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD16_8i test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD16_8i test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD16_8i test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD16_8i test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD16_8i test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD16_8i test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD16_8i test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD16_8i test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD16_8i test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD16_8i test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD16_8i test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD16_8i test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD16_8i test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD16_8i test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD16_8i test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD16_8i test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD16_8i test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD16_8i test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD16_8i test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD16_8i test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD16_8i test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD16_8i test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD16_8i test Id: 277 - MAXV
OK   UME::SIMD::SIMD16_8i test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD16_8i test Id: 279 - MMAXV
OK   UME::SIMD::SIMD16_8i test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD16_8i test Id: 281 - MAXS
OK   UME::SIMD::SIMD16_8i test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 284 - MMAXS
OK   UME::SIMD::SIMD16_8i test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 286 - MAXVA
OK   UME::SIMD::SIMD16_8i test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD16_8i test Id: 288 - MAXSA
OK   UME::SIMD::SIMD16_8i test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD16_8i test Id: 290 - MINV
OK   UME::SIMD::SIMD16_8i test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD16_8i test Id: 292 - MMINV
OK   UME::SIMD::SIMD16_8i test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD16_8i test Id: 294 - MINS
OK   UME::SIMD::SIMD16_8i test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD16_8i test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD16_8i test Id: 297 - MMINS
OK   UME::SIMD::SIMD16_8i test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 299 - MINVA
OK   UME::SIMD::SIMD16_8i test Id: 300 - MMINVA
OK   UME::SIMD::SIMD16_8i test Id: 301 - MINSA
OK   UME::SIMD::SIMD16_8i test Id: 302 - MMINSA
OK   UME::SIMD::SIMD16_8i test Id: 303 - HMAX
OK   UME::SIMD::SIMD16_8i test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD16_8i test Id: 305 - HMAX
OK   UME::SIMD::SIMD16_8i test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD16_8i test Id: 307 - MHMAX
OK   UME::SIMD::SIMD16_8i test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD16_8i test Id: 309 - IMAX
OK   UME::SIMD::SIMD16_8i test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD16_8i test Id: 311 - MIMAX
OK   UME::SIMD::SIMD16_8i test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD16_8i test Id: 313 - HMIN
OK   UME::SIMD::SIMD16_8i test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD16_8i test Id: 315 - HMIN
OK   UME::SIMD::SIMD16_8i test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD16_8i test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD16_8i test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD16_8i test Id: 319 - IMIN
OK   UME::SIMD::SIMD16_8i test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD16_8i test Id: 321 - MIMIN
OK   UME::SIMD::SIMD16_8i test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD16_8i test Id: 323 - REMV gen
OK   UME::SIMD::SIMD16_8i test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD16_8i test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD16_8i test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD16_8i test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD16_8i test Id: 328 - REMS gen
OK   UME::SIMD::SIMD16_8i test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD16_8i test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD16_8i test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD16_8i test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD16_8i test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD16_8i test Id: 334 - LORV gen
OK   UME::SIMD::SIMD16_8i test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD16_8i test Id: 336 - BANDV
OK   UME::SIMD::SIMD16_8i test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD16_8i test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD16_8i test Id: 339 - MBANDV
OK   UME::SIMD::SIMD16_8i test Id: 340 - MBANDV
OK   UME::SIMD::SIMD16_8i test Id: 341 - BANDS
OK   UME::SIMD::SIMD16_8i test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 346 - MBANDS
OK   UME::SIMD::SIMD16_8i test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 348 - BANDVA
OK   UME::SIMD::SIMD16_8i test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD16_8i test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD16_8i test Id: 351 - BANDSA
OK   UME::SIMD::SIMD16_8i test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD16_8i test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD16_8i test Id: 354 - BORV
OK   UME::SIMD::SIMD16_8i test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD16_8i test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD16_8i test Id: 357 - MBORV
OK   UME::SIMD::SIMD16_8i test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD16_8i test Id: 359 - BORS
OK   UME::SIMD::SIMD16_8i test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 364 - MBORS
OK   UME::SIMD::SIMD16_8i test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 366 - BORVA
OK   UME::SIMD::SIMD16_8i test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD16_8i test Id: 368 - MBORVA
OK   UME::SIMD::SIMD16_8i test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD16_8i test Id: 370 - BORSA
OK   UME::SIMD::SIMD16_8i test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD16_8i test Id: 372 - MBORSA
OK   UME::SIMD::SIMD16_8i test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD16_8i test Id: 374 - BXORV
OK   UME::SIMD::SIMD16_8i test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD16_8i test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD16_8i test Id: 377 - MBXORV
OK   UME::SIMD::SIMD16_8i test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD16_8i test Id: 379 - BXORS
OK   UME::SIMD::SIMD16_8i test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 384 - MBXORS
OK   UME::SIMD::SIMD16_8i test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 386 - BXORVA
OK   UME::SIMD::SIMD16_8i test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD16_8i test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD16_8i test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD16_8i test Id: 390 - BXORSA
OK   UME::SIMD::SIMD16_8i test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD16_8i test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD16_8i test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD16_8i test Id: 394 - BNOT
OK   UME::SIMD::SIMD16_8i test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD16_8i test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD16_8i test Id: 397 - MBNOT
OK   UME::SIMD::SIMD16_8i test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD16_8i test Id: 399 - BNOTA
OK   UME::SIMD::SIMD16_8i test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD16_8i test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD16_8i test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD16_8i test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD16_8i test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD16_8i test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD16_8i test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD16_8i test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD16_8i test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD16_8i test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD16_8i test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD16_8i test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD16_8i test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD16_8i test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD16_8i test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD16_8i test Id: 415 - HBAND
OK   UME::SIMD::SIMD16_8i test Id: 416 - HBAND
OK   UME::SIMD::SIMD16_8i test Id: 417 - MHBAND
OK   UME::SIMD::SIMD16_8i test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD16_8i test Id: 419 - HBANDS
OK   UME::SIMD::SIMD16_8i test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD16_8i test Id: 421 - HBOR
OK   UME::SIMD::SIMD16_8i test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD16_8i test Id: 423 - MHBOR
OK   UME::SIMD::SIMD16_8i test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD16_8i test Id: 425 - HBORS
OK   UME::SIMD::SIMD16_8i test Id: 426 - MHBORS
OK   UME::SIMD::SIMD16_8i test Id: 427 - HBXOR
OK   UME::SIMD::SIMD16_8i test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD16_8i test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD16_8i test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD16_8i test Id: 431 - HBXORS
OK   UME::SIMD::SIMD16_8i test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD16_8i test Id: 433 - GATHERU
OK   UME::SIMD::SIMD16_8i test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD16_8i test Id: 435 - GATHERS
OK   UME::SIMD::SIMD16_8i test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD16_8i test Id: 437 - GATHERV
OK   UME::SIMD::SIMD16_8i test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD16_8i test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD16_8i test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD16_8i test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD16_8i test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD16_8i test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD16_8i test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD16_8i test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD16_8i test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD16_8i test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD16_8i test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD16_8i test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD16_8i test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD16_8i test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD16_8i test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD16_8i test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD16_8i test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD16_8i test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD16_8i test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD16_8i test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD16_8i test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD16_8i test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD16_8i test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD16_8i test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD16_8i test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD16_8i test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD16_8i test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD16_8i test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD16_8i test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD16_8i test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD16_8i test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD16_8i test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD16_8i test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD16_8i test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD16_8i test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD16_8i test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD16_8i test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD16_8i test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD16_8i test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD16_8i test Id: 477 - ROLV
OK   UME::SIMD::SIMD16_8i test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD16_8i test Id: 479 - MROLV
OK   UME::SIMD::SIMD16_8i test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD16_8i test Id: 481 - ROLS
OK   UME::SIMD::SIMD16_8i test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 483 - MROLS
OK   UME::SIMD::SIMD16_8i test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 485 - ROLVA
OK   UME::SIMD::SIMD16_8i test Id: 486 - MROLVA
OK   UME::SIMD::SIMD16_8i test Id: 487 - ROLSA
OK   UME::SIMD::SIMD16_8i test Id: 488 - MROLSA
OK   UME::SIMD::SIMD16_8i test Id: 489 - RORV
OK   UME::SIMD::SIMD16_8i test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD16_8i test Id: 491 - MRORV
OK   UME::SIMD::SIMD16_8i test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD16_8i test Id: 493 - RORS
OK   UME::SIMD::SIMD16_8i test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 495 - MRORS
OK   UME::SIMD::SIMD16_8i test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_8i test Id: 497 - RORVA
OK   UME::SIMD::SIMD16_8i test Id: 498 - MRORVA
OK   UME::SIMD::SIMD16_8i test Id: 499 - RORSA
OK   UME::SIMD::SIMD16_8i test Id: 500 - MRORSA
OK   UME::SIMD::SIMD16_8i test Id: 501 - NEG
OK   UME::SIMD::SIMD16_8i test Id: 502 - NEG(operator-)
OK   UME::SIMD::SIMD16_8i test Id: 503 - NEG(function)
OK   UME::SIMD::SIMD16_8i test Id: 504 - MNEG
OK   UME::SIMD::SIMD16_8i test Id: 505 - MNEG(function)
OK   UME::SIMD::SIMD16_8i test Id: 506 - NEGA
OK   UME::SIMD::SIMD16_8i test Id: 507 - MNEGA
OK   UME::SIMD::SIMD16_8i test Id: 508 - ABS
OK   UME::SIMD::SIMD16_8i test Id: 509 - ABS(function)
OK   UME::SIMD::SIMD16_8i test Id: 510 - MABS
OK   UME::SIMD::SIMD16_8i test Id: 511 - MABS(function)
OK   UME::SIMD::SIMD16_8i test Id: 512 - ABSA
OK   UME::SIMD::SIMD16_8i test Id: 513 - MABSA
OK   UME::SIMD::SIMD16_8i test Id: 514 - COPYSIGN gen
OK   UME::SIMD::SIMD16_8i test Id: 515 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD16_8i test Id: 516 - ITOU
OK   UME::SIMD::SIMD16_8i test Id: 517 - PACK
OK   UME::SIMD::SIMD16_8i test Id: 518 - PACKLO
OK   UME::SIMD::SIMD16_8i test Id: 519 - PACKHI
OK   UME::SIMD::SIMD16_8i test Id: 520 - UNPACK
OK   UME::SIMD::SIMD16_8i test Id: 521 - UNPACKLO
OK   UME::SIMD::SIMD16_8i test Id: 522 - UNPACKHi
OK   UME::SIMD::SIMD16_8i test Id: 523 - PROMOTE
OK   UME::SIMD::SIMD8_16u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD8_16u test Id: 2 - operator=
OK   UME::SIMD::SIMD8_16u test Id: 3 - RSHSA
OK   UME::SIMD::SIMD8_16u test Id: 4 - CMPEQV
OK   UME::SIMD::SIMD8_16u test Id: 5 - CMPEQV(operator==)
OK   UME::SIMD::SIMD8_16u test Id: 6 - CMPNEV
OK   UME::SIMD::SIMD8_16u test Id: 7 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD8_16u test Id: 8 - CMPGTV
OK   UME::SIMD::SIMD8_16u test Id: 9 - CMPGTV(operator>)
OK   UME::SIMD::SIMD8_16u test Id: 10 - CMPLTV
OK   UME::SIMD::SIMD8_16u test Id: 11 - CMPLTV(operator<)
OK   UME::SIMD::SIMD8_16u test Id: 12 - CMPGEV
OK   UME::SIMD::SIMD8_16u test Id: 13 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD8_16u test Id: 14 - CMPLEV
OK   UME::SIMD::SIMD8_16u test Id: 15 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD8_16u test Id: 16 - BANDV
OK   UME::SIMD::SIMD8_16u test Id: 17 - ANDV(operator&)
OK   UME::SIMD::SIMD8_16u test Id: 18 - BANDVA
OK   UME::SIMD::SIMD8_16u test Id: 19 - ANDVA(operator&=)
OK   UME::SIMD::SIMD8_16u test Id: 20 - BORV
OK   UME::SIMD::SIMD8_16u test Id: 21 - BORV(operator|)
OK   UME::SIMD::SIMD8_16u test Id: 22 - BORVA
OK   UME::SIMD::SIMD8_16u test Id: 23 - BORVA(operator|=)
OK   UME::SIMD::SIMD8_16u test Id: 24 - BXORVA
OK   UME::SIMD::SIMD8_16u test Id: 25 - BXORVA(operator^=)
OK   UME::SIMD::SIMD8_16u test Id: 26 - BNOT
OK   UME::SIMD::SIMD8_16u test Id: 27 - SWIZZLE
OK   UME::SIMD::SIMD8_16u test Id: 28 - HADD
OK   UME::SIMD::SIMD8_16u test Id: 29 - MAXV
OK   UME::SIMD::SIMD8_16u test Id: 30 - MINV
OK   UME::SIMD::SIMD8_16u test Id: 31 - SET-CONSTR gen
OK   UME::SIMD::SIMD8_16u test Id: 32 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD8_16u test Id: 33 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD8_16u test Id: 34 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD8_16u test Id: 35 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD8_16u test Id: 36 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD8_16u test Id: 37 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD8_16u test Id: 38 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD8_16u test Id: 39 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD8_16u test Id: 40 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD8_16u test Id: 41 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD8_16u test Id: 42 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD8_16u test Id: 43 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD8_16u test Id: 44 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD8_16u test Id: 45 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD8_16u test Id: 46 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD8_16u test Id: 47 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD8_16u test Id: 48 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD8_16u test Id: 49 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD8_16u test Id: 50 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD8_16u test Id: 51 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD8_16u test Id: 52 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD8_16u test Id: 53 - INSERT
OK   UME::SIMD::SIMD8_16u test Id: 54 - INSERT(operator[] =)
OK   UME::SIMD::SIMD8_16u test Id: 55 - EXTRACT
OK   UME::SIMD::SIMD8_16u test Id: 56 - EXTRACT(operator[])
OK   UME::SIMD::SIMD8_16u test Id: 57 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD8_16u test Id: 58 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD8_16u test Id: 59 - ASSIGNV
OK   UME::SIMD::SIMD8_16u test Id: 60 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD8_16u test Id: 61 - MASSIGNV
OK   UME::SIMD::SIMD8_16u test Id: 62 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD8_16u test Id: 63 - ASSIGNS
OK   UME::SIMD::SIMD8_16u test Id: 64 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD8_16u test Id: 65 - MASSIGNS
OK   UME::SIMD::SIMD8_16u test Id: 66 - MASSIGNS
OK   UME::SIMD::SIMD8_16u test Id: 67 - LOAD/STORE
OK   UME::SIMD::SIMD8_16u test Id: 68 - MLOAD
OK   UME::SIMD::SIMD8_16u test Id: 69 - MSTORE
OK   UME::SIMD::SIMD8_16u test Id: 70 - LOADA/STOREA
OK   UME::SIMD::SIMD8_16u test Id: 71 - MLOADA
OK   UME::SIMD::SIMD8_16u test Id: 72 - MSTOREA
OK   UME::SIMD::SIMD8_16u test Id: 73 - SWIZZLE
OK   UME::SIMD::SIMD8_16u test Id: 74 - SORTA
OK   UME::SIMD::SIMD8_16u test Id: 75 - SORTD
OK   UME::SIMD::SIMD8_16u test Id: 76 - BLENDV gen
OK   UME::SIMD::SIMD8_16u test Id: 77 - ADDV
OK   UME::SIMD::SIMD8_16u test Id: 78 - ADDV(operator+)
OK   UME::SIMD::SIMD8_16u test Id: 79 - ADDV(function)
OK   UME::SIMD::SIMD8_16u test Id: 80 - ADDV gen
OK   UME::SIMD::SIMD8_16u test Id: 81 - ADDV(operator+) gen
OK   UME::SIMD::SIMD8_16u test Id: 82 - ADDV(function) gen
OK   UME::SIMD::SIMD8_16u test Id: 83 - MADDV
OK   UME::SIMD::SIMD8_16u test Id: 84 - MADDV(function)
OK   UME::SIMD::SIMD8_16u test Id: 85 - MADDV gen
OK   UME::SIMD::SIMD8_16u test Id: 86 - MADDV(function) gen
OK   UME::SIMD::SIMD8_16u test Id: 87 - ADDS
OK   UME::SIMD::SIMD8_16u test Id: 88 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 89 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 90 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD8_16u test Id: 91 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD8_16u test Id: 92 - ADDS gen
OK   UME::SIMD::SIMD8_16u test Id: 93 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD8_16u test Id: 94 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD8_16u test Id: 95 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD8_16u test Id: 96 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD8_16u test Id: 97 - MADDS
OK   UME::SIMD::SIMD8_16u test Id: 98 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 99 - MADDS gen
OK   UME::SIMD::SIMD8_16u test Id: 100 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD8_16u test Id: 101 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD8_16u test Id: 102 - ADDVA
OK   UME::SIMD::SIMD8_16u test Id: 103 - ADDVA(operator+=)
OK   UME::SIMD::SIMD8_16u test Id: 104 - ADDVA gen
OK   UME::SIMD::SIMD8_16u test Id: 105 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD8_16u test Id: 106 - MADDVA
OK   UME::SIMD::SIMD8_16u test Id: 107 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD8_16u test Id: 108 - ADDSA
OK   UME::SIMD::SIMD8_16u test Id: 109 - ADDSA(operator+=)
OK   UME::SIMD::SIMD8_16u test Id: 110 - MADDSA
OK   UME::SIMD::SIMD8_16u test Id: 111 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD8_16u test Id: 112 - SADDV gen
OK   UME::SIMD::SIMD8_16u test Id: 113 - SADDV(function) gen
OK   UME::SIMD::SIMD8_16u test Id: 114 - POSTINC
OK   UME::SIMD::SIMD8_16u test Id: 115 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD8_16u test Id: 116 - POSTINC(function)
OK   UME::SIMD::SIMD8_16u test Id: 117 - MPOSTINC
OK   UME::SIMD::SIMD8_16u test Id: 118 - MPOSTINC(function)
OK   UME::SIMD::SIMD8_16u test Id: 119 - PREFINC
OK   UME::SIMD::SIMD8_16u test Id: 120 - PREFINC(operator++())
OK   UME::SIMD::SIMD8_16u test Id: 121 - PREFINC(function)
OK   UME::SIMD::SIMD8_16u test Id: 122 - MPREFINC
OK   UME::SIMD::SIMD8_16u test Id: 123 - MPREFINC(function)
OK   UME::SIMD::SIMD8_16u test Id: 124 - SUBV
OK   UME::SIMD::SIMD8_16u test Id: 125 - SUBV(operator-)
OK   UME::SIMD::SIMD8_16u test Id: 126 - SUBV(function)
OK   UME::SIMD::SIMD8_16u test Id: 127 - SUBV gen
OK   UME::SIMD::SIMD8_16u test Id: 128 - SUBV(operator-) gen
OK   UME::SIMD::SIMD8_16u test Id: 129 - SUBV(function) gen
OK   UME::SIMD::SIMD8_16u test Id: 130 - MSUBV
OK   UME::SIMD::SIMD8_16u test Id: 131 - MSUBV(function)
OK   UME::SIMD::SIMD8_16u test Id: 132 - MSUBV gen
OK   UME::SIMD::SIMD8_16u test Id: 133 - MSUBV(function) gen
OK   UME::SIMD::SIMD8_16u test Id: 134 - SUBS gen
OK   UME::SIMD::SIMD8_16u test Id: 135 - SUBS(operator-) gen
OK   UME::SIMD::SIMD8_16u test Id: 136 - SUBS(function) gen
OK   UME::SIMD::SIMD8_16u test Id: 137 - MSUBS
OK   UME::SIMD::SIMD8_16u test Id: 138 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 139 - SUBVA
OK   UME::SIMD::SIMD8_16u test Id: 140 - SUBVA(operator-=)
OK   UME::SIMD::SIMD8_16u test Id: 141 - MSUBVA
OK   UME::SIMD::SIMD8_16u test Id: 142 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD8_16u test Id: 143 - SUBSA
OK   UME::SIMD::SIMD8_16u test Id: 144 - MSUBSA
OK   UME::SIMD::SIMD8_16u test Id: 145 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD8_16u test Id: 146 - SUBFROMV
OK   UME::SIMD::SIMD8_16u test Id: 147 - MSUBFROMV
OK   UME::SIMD::SIMD8_16u test Id: 148 - SUBFROMS
OK   UME::SIMD::SIMD8_16u test Id: 149 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 150 - MSUBFROMS
OK   UME::SIMD::SIMD8_16u test Id: 151 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 152 - SUBFROMVA
OK   UME::SIMD::SIMD8_16u test Id: 153 - MSUBFROMVA
OK   UME::SIMD::SIMD8_16u test Id: 154 - SUBFROMSA
OK   UME::SIMD::SIMD8_16u test Id: 155 - MSUBFROMSA
OK   UME::SIMD::SIMD8_16u test Id: 156 - POSTDEC
OK   UME::SIMD::SIMD8_16u test Id: 157 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD8_16u test Id: 158 - POSTDEC(function)
OK   UME::SIMD::SIMD8_16u test Id: 159 - MPOSTDEC
OK   UME::SIMD::SIMD8_16u test Id: 160 - MPOSTDEC(function)
OK   UME::SIMD::SIMD8_16u test Id: 161 - PREFDEC
OK   UME::SIMD::SIMD8_16u test Id: 162 - PREFDEC(operator--())
OK   UME::SIMD::SIMD8_16u test Id: 163 - PREFDEC(function)
OK   UME::SIMD::SIMD8_16u test Id: 164 - MPREFDEC
OK   UME::SIMD::SIMD8_16u test Id: 165 - MPREFDEC(function)
OK   UME::SIMD::SIMD8_16u test Id: 166 - MULV
OK   UME::SIMD::SIMD8_16u test Id: 167 - MULV(operator*)
OK   UME::SIMD::SIMD8_16u test Id: 168 - MULV(function)
OK   UME::SIMD::SIMD8_16u test Id: 169 - MMULV
OK   UME::SIMD::SIMD8_16u test Id: 170 - MMULV(function)
OK   UME::SIMD::SIMD8_16u test Id: 171 - MULS
OK   UME::SIMD::SIMD8_16u test Id: 172 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 173 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 174 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 175 - MMULS
OK   UME::SIMD::SIMD8_16u test Id: 176 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 177 - MULVA
OK   UME::SIMD::SIMD8_16u test Id: 178 - MULVA(operator*)
OK   UME::SIMD::SIMD8_16u test Id: 179 - MULVA gen
OK   UME::SIMD::SIMD8_16u test Id: 180 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD8_16u test Id: 181 - MMULVA
OK   UME::SIMD::SIMD8_16u test Id: 182 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_16u test Id: 183 - MULSA
OK   UME::SIMD::SIMD8_16u test Id: 184 - MULSA(operator*=)
OK   UME::SIMD::SIMD8_16u test Id: 185 - MMULSA
OK   UME::SIMD::SIMD8_16u test Id: 186 - DIVV
OK   UME::SIMD::SIMD8_16u test Id: 187 - DIVV(operator/)
OK   UME::SIMD::SIMD8_16u test Id: 188 - DIVV(function)
OK   UME::SIMD::SIMD8_16u test Id: 189 - MDIVV
OK   UME::SIMD::SIMD8_16u test Id: 190 - MDIVV(function)
OK   UME::SIMD::SIMD8_16u test Id: 191 - DIVS
OK   UME::SIMD::SIMD8_16u test Id: 192 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 193 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 194 - MDIVS
OK   UME::SIMD::SIMD8_16u test Id: 195 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 196 - DIVVA
OK   UME::SIMD::SIMD8_16u test Id: 197 - DIVVA(operator/=)
OK   UME::SIMD::SIMD8_16u test Id: 198 - DIVVA gen
OK   UME::SIMD::SIMD8_16u test Id: 199 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD8_16u test Id: 200 - MDIVVA
OK   UME::SIMD::SIMD8_16u test Id: 201 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_16u test Id: 202 - DIVSA
OK   UME::SIMD::SIMD8_16u test Id: 203 - DIVSA(operator/=)
OK   UME::SIMD::SIMD8_16u test Id: 204 - MDIVSA
OK   UME::SIMD::SIMD8_16u test Id: 205 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD8_16u test Id: 206 - RCP
OK   UME::SIMD::SIMD8_16u test Id: 207 - RCP(function)
OK   UME::SIMD::SIMD8_16u test Id: 208 - MRCP
OK   UME::SIMD::SIMD8_16u test Id: 209 - MRCP(function)
OK   UME::SIMD::SIMD8_16u test Id: 210 - RCPS
OK   UME::SIMD::SIMD8_16u test Id: 211 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 212 - RCPS(function)
OK   UME::SIMD::SIMD8_16u test Id: 213 - MRCPS
OK   UME::SIMD::SIMD8_16u test Id: 214 - MRCPS (function)
OK   UME::SIMD::SIMD8_16u test Id: 215 - RCPA
OK   UME::SIMD::SIMD8_16u test Id: 216 - MRCPA
OK   UME::SIMD::SIMD8_16u test Id: 217 - RCPSA
OK   UME::SIMD::SIMD8_16u test Id: 218 - MRCPSA
OK   UME::SIMD::SIMD8_16u test Id: 219 - CMPEQV
OK   UME::SIMD::SIMD8_16u test Id: 220 - CMPEQV(operator==)
OK   UME::SIMD::SIMD8_16u test Id: 221 - CMPEQV(function)
OK   UME::SIMD::SIMD8_16u test Id: 222 - CMPEQS
OK   UME::SIMD::SIMD8_16u test Id: 223 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 224 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 225 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 226 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 227 - CMPNEV
OK   UME::SIMD::SIMD8_16u test Id: 228 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD8_16u test Id: 229 - CMPNEV(function)
OK   UME::SIMD::SIMD8_16u test Id: 230 - CMPNES
OK   UME::SIMD::SIMD8_16u test Id: 231 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 232 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 233 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 234 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 235 - CMPGTV
OK   UME::SIMD::SIMD8_16u test Id: 236 - CMPGTV(operator>)
OK   UME::SIMD::SIMD8_16u test Id: 237 - CMPGTV(function)
OK   UME::SIMD::SIMD8_16u test Id: 238 - CMPGTS
OK   UME::SIMD::SIMD8_16u test Id: 239 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 240 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 241 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 242 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 243 - CMPLTV
OK   UME::SIMD::SIMD8_16u test Id: 244 - CMPLTV(operator<)
OK   UME::SIMD::SIMD8_16u test Id: 245 - CMPLTV(function)
OK   UME::SIMD::SIMD8_16u test Id: 246 - CMPLTS
OK   UME::SIMD::SIMD8_16u test Id: 247 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 248 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 249 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 250 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 251 - CMPGEV
OK   UME::SIMD::SIMD8_16u test Id: 252 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD8_16u test Id: 253 - CMPGEV(function)
OK   UME::SIMD::SIMD8_16u test Id: 254 - CMPGES
OK   UME::SIMD::SIMD8_16u test Id: 255 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 256 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 257 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 258 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 259 - CMPLEV
OK   UME::SIMD::SIMD8_16u test Id: 260 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD8_16u test Id: 261 - CMPLEV(function)
OK   UME::SIMD::SIMD8_16u test Id: 262 - CMPLES
OK   UME::SIMD::SIMD8_16u test Id: 263 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 264 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 265 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 266 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 267 - CMPEV
OK   UME::SIMD::SIMD8_16u test Id: 268 - CMPEV(function)
OK   UME::SIMD::SIMD8_16u test Id: 269 - CMPES
OK   UME::SIMD::SIMD8_16u test Id: 270 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 271 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 272 - HADD
OK   UME::SIMD::SIMD8_16u test Id: 273 - HADD(function)
OK   UME::SIMD::SIMD8_16u test Id: 274 - HADD gen
OK   UME::SIMD::SIMD8_16u test Id: 275 - HADD(function) gen
OK   UME::SIMD::SIMD8_16u test Id: 276 - MHADD gen
OK   UME::SIMD::SIMD8_16u test Id: 277 - MHADD(function) gen
OK   UME::SIMD::SIMD8_16u test Id: 278 - HADDS gen
OK   UME::SIMD::SIMD8_16u test Id: 279 - HADDS(function) gen
OK   UME::SIMD::SIMD8_16u test Id: 280 - MHADD gen
OK   UME::SIMD::SIMD8_16u test Id: 281 - MHADDS(function) gen
OK   UME::SIMD::SIMD8_16u test Id: 282 - HMUL gen
OK   UME::SIMD::SIMD8_16u test Id: 283 - HMUL(function) gen
OK   UME::SIMD::SIMD8_16u test Id: 284 - MHMUL gen
OK   UME::SIMD::SIMD8_16u test Id: 285 - MHMUL(function) gen
OK   UME::SIMD::SIMD8_16u test Id: 286 - HMULS gen
OK   UME::SIMD::SIMD8_16u test Id: 287 - HMULS(function) gen
OK   UME::SIMD::SIMD8_16u test Id: 288 - MHMUL gen
OK   UME::SIMD::SIMD8_16u test Id: 289 - MHMULS(function) gen
OK   UME::SIMD::SIMD8_16u test Id: 290 - FMULADDV
OK   UME::SIMD::SIMD8_16u test Id: 291 - FMULADDV(function)
OK   UME::SIMD::SIMD8_16u test Id: 292 - MFMULADDV
OK   UME::SIMD::SIMD8_16u test Id: 293 - MFMULADDV(function)
OK   UME::SIMD::SIMD8_16u test Id: 294 - FMULSUBV
OK   UME::SIMD::SIMD8_16u test Id: 295 - FMULSUBV(function)
OK   UME::SIMD::SIMD8_16u test Id: 296 - MFMULSUBV
OK   UME::SIMD::SIMD8_16u test Id: 297 - MFMULSUBV(function)
OK   UME::SIMD::SIMD8_16u test Id: 298 - FADDMULV
OK   UME::SIMD::SIMD8_16u test Id: 299 - FADDMULV(function)
OK   UME::SIMD::SIMD8_16u test Id: 300 - MFADDMULV
OK   UME::SIMD::SIMD8_16u test Id: 301 - MFADDMULV(function)
OK   UME::SIMD::SIMD8_16u test Id: 302 - FSUBMULV
OK   UME::SIMD::SIMD8_16u test Id: 303 - FSUBMULV(function)
OK   UME::SIMD::SIMD8_16u test Id: 304 - MFSUBMULV
OK   UME::SIMD::SIMD8_16u test Id: 305 - MFSUBMULV(function)
OK   UME::SIMD::SIMD8_16u test Id: 306 - MAXV
OK   UME::SIMD::SIMD8_16u test Id: 307 - MAXV(function)
OK   UME::SIMD::SIMD8_16u test Id: 308 - MMAXV
OK   UME::SIMD::SIMD8_16u test Id: 309 - MMAXV(function)
OK   UME::SIMD::SIMD8_16u test Id: 310 - MAXS
OK   UME::SIMD::SIMD8_16u test Id: 311 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 312 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 313 - MMAXS
OK   UME::SIMD::SIMD8_16u test Id: 314 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 315 - MAXVA
OK   UME::SIMD::SIMD8_16u test Id: 316 - MMAXVA
OK   UME::SIMD::SIMD8_16u test Id: 317 - MAXSA
OK   UME::SIMD::SIMD8_16u test Id: 318 - MMAXSA
OK   UME::SIMD::SIMD8_16u test Id: 319 - MINV
OK   UME::SIMD::SIMD8_16u test Id: 320 - MINV(function)
OK   UME::SIMD::SIMD8_16u test Id: 321 - MMINV
OK   UME::SIMD::SIMD8_16u test Id: 322 - MMINV(function)
OK   UME::SIMD::SIMD8_16u test Id: 323 - MINS
OK   UME::SIMD::SIMD8_16u test Id: 324 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD8_16u test Id: 325 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD8_16u test Id: 326 - MMINS
OK   UME::SIMD::SIMD8_16u test Id: 327 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 328 - MINVA
OK   UME::SIMD::SIMD8_16u test Id: 329 - MMINVA
OK   UME::SIMD::SIMD8_16u test Id: 330 - MINSA
OK   UME::SIMD::SIMD8_16u test Id: 331 - MMINSA
OK   UME::SIMD::SIMD8_16u test Id: 332 - HMAX
OK   UME::SIMD::SIMD8_16u test Id: 333 - HMAX(function)
OK   UME::SIMD::SIMD8_16u test Id: 334 - HMAX
OK   UME::SIMD::SIMD8_16u test Id: 335 - HMAX(function)
OK   UME::SIMD::SIMD8_16u test Id: 336 - MHMAX
OK   UME::SIMD::SIMD8_16u test Id: 337 - MHMAX(function)
OK   UME::SIMD::SIMD8_16u test Id: 338 - IMAX
OK   UME::SIMD::SIMD8_16u test Id: 339 - IMAX(function)
OK   UME::SIMD::SIMD8_16u test Id: 340 - MIMAX
OK   UME::SIMD::SIMD8_16u test Id: 341 - MIMAX(function)
OK   UME::SIMD::SIMD8_16u test Id: 342 - HMIN
OK   UME::SIMD::SIMD8_16u test Id: 343 - HMIN(function)
OK   UME::SIMD::SIMD8_16u test Id: 344 - HMIN
OK   UME::SIMD::SIMD8_16u test Id: 345 - HMIN(function)
OK   UME::SIMD::SIMD8_16u test Id: 346 - MHMIN gen
OK   UME::SIMD::SIMD8_16u test Id: 347 - MHMIN(function) gen
OK   UME::SIMD::SIMD8_16u test Id: 348 - IMIN
OK   UME::SIMD::SIMD8_16u test Id: 349 - IMIN(function)
OK   UME::SIMD::SIMD8_16u test Id: 350 - MIMIN
OK   UME::SIMD::SIMD8_16u test Id: 351 - MIMIN(function)
OK   UME::SIMD::SIMD8_16u test Id: 352 - REMV gen
OK   UME::SIMD::SIMD8_16u test Id: 353 - REMV(operator%) gen
OK   UME::SIMD::SIMD8_16u test Id: 354 - REMV(function) gen
OK   UME::SIMD::SIMD8_16u test Id: 355 - MREMV gen
OK   UME::SIMD::SIMD8_16u test Id: 356 - MREMV(function) gen
OK   UME::SIMD::SIMD8_16u test Id: 357 - REMS gen
OK   UME::SIMD::SIMD8_16u test Id: 358 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD8_16u test Id: 359 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD8_16u test Id: 360 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD8_16u test Id: 361 - LANDV gen
OK   UME::SIMD::SIMD8_16u test Id: 362 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD8_16u test Id: 363 - LORV gen
OK   UME::SIMD::SIMD8_16u test Id: 364 - LORV gen (operator ||)
OK   UME::SIMD::SIMD8_16u test Id: 365 - BANDV
OK   UME::SIMD::SIMD8_16u test Id: 366 - BANDV(operator&)
OK   UME::SIMD::SIMD8_16u test Id: 367 - BANDV(function)
OK   UME::SIMD::SIMD8_16u test Id: 368 - MBANDV
OK   UME::SIMD::SIMD8_16u test Id: 369 - MBANDV
OK   UME::SIMD::SIMD8_16u test Id: 370 - BANDS
OK   UME::SIMD::SIMD8_16u test Id: 371 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 372 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 373 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 374 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 375 - MBANDS
OK   UME::SIMD::SIMD8_16u test Id: 376 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 377 - BANDVA
OK   UME::SIMD::SIMD8_16u test Id: 378 - MBANDVA
OK   UME::SIMD::SIMD8_16u test Id: 379 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD8_16u test Id: 380 - BANDSA
OK   UME::SIMD::SIMD8_16u test Id: 381 - MBANDSA
OK   UME::SIMD::SIMD8_16u test Id: 382 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD8_16u test Id: 383 - BORV
OK   UME::SIMD::SIMD8_16u test Id: 384 - BORV(operator |)
OK   UME::SIMD::SIMD8_16u test Id: 385 - BORV(function)
OK   UME::SIMD::SIMD8_16u test Id: 386 - MBORV
OK   UME::SIMD::SIMD8_16u test Id: 387 - MBORV(function)
OK   UME::SIMD::SIMD8_16u test Id: 388 - BORS
OK   UME::SIMD::SIMD8_16u test Id: 389 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 390 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 391 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 392 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 393 - MBORS
OK   UME::SIMD::SIMD8_16u test Id: 394 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 395 - BORVA
OK   UME::SIMD::SIMD8_16u test Id: 396 - BORVA(operator|=)
OK   UME::SIMD::SIMD8_16u test Id: 397 - MBORVA
OK   UME::SIMD::SIMD8_16u test Id: 398 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD8_16u test Id: 399 - BORSA
OK   UME::SIMD::SIMD8_16u test Id: 400 - BORSA(operator|=)
OK   UME::SIMD::SIMD8_16u test Id: 401 - MBORSA
OK   UME::SIMD::SIMD8_16u test Id: 402 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD8_16u test Id: 403 - BXORV
OK   UME::SIMD::SIMD8_16u test Id: 404 - BXORV(operator^
OK   UME::SIMD::SIMD8_16u test Id: 405 - BXORV(function
OK   UME::SIMD::SIMD8_16u test Id: 406 - MBXORV
OK   UME::SIMD::SIMD8_16u test Id: 407 - MBXORV(function)
OK   UME::SIMD::SIMD8_16u test Id: 408 - BXORS
OK   UME::SIMD::SIMD8_16u test Id: 409 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 410 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 411 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 412 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 413 - MBXORS
OK   UME::SIMD::SIMD8_16u test Id: 414 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 415 - BXORVA
OK   UME::SIMD::SIMD8_16u test Id: 416 - BXORVA(operator^=)
OK   UME::SIMD::SIMD8_16u test Id: 417 - MBXORVA
OK   UME::SIMD::SIMD8_16u test Id: 418 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD8_16u test Id: 419 - BXORSA
OK   UME::SIMD::SIMD8_16u test Id: 420 - BXORSA(operator^=)
OK   UME::SIMD::SIMD8_16u test Id: 421 - MBXORSA
OK   UME::SIMD::SIMD8_16u test Id: 422 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD8_16u test Id: 423 - BNOT
OK   UME::SIMD::SIMD8_16u test Id: 424 - BNOT(operator!)
OK   UME::SIMD::SIMD8_16u test Id: 425 - BNOT(function)
OK   UME::SIMD::SIMD8_16u test Id: 426 - MBNOT
OK   UME::SIMD::SIMD8_16u test Id: 427 - MBNOT(function)
OK   UME::SIMD::SIMD8_16u test Id: 428 - BNOTA
OK   UME::SIMD::SIMD8_16u test Id: 429 - MBNOTA
OK   UME::SIMD::SIMD8_16u test Id: 430 - BANDNOTV
OK   UME::SIMD::SIMD8_16u test Id: 431 - BANDNOTV (function)
OK   UME::SIMD::SIMD8_16u test Id: 432 - MBANDNOTV
OK   UME::SIMD::SIMD8_16u test Id: 433 - MBANDNOTV (function)
OK   UME::SIMD::SIMD8_16u test Id: 434 - BANDNOTS
OK   UME::SIMD::SIMD8_16u test Id: 435 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD8_16u test Id: 436 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD8_16u test Id: 437 - MBANDNOTS
OK   UME::SIMD::SIMD8_16u test Id: 438 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD8_16u test Id: 439 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD8_16u test Id: 440 - BANDNOTVA
OK   UME::SIMD::SIMD8_16u test Id: 441 - MBANDNOTVA
OK   UME::SIMD::SIMD8_16u test Id: 442 - BANDNOTSA
OK   UME::SIMD::SIMD8_16u test Id: 443 - MBANDNOTSA
OK   UME::SIMD::SIMD8_16u test Id: 444 - HBAND
OK   UME::SIMD::SIMD8_16u test Id: 445 - HBAND
OK   UME::SIMD::SIMD8_16u test Id: 446 - MHBAND
OK   UME::SIMD::SIMD8_16u test Id: 447 - MHBAND(function)
OK   UME::SIMD::SIMD8_16u test Id: 448 - HBANDS
OK   UME::SIMD::SIMD8_16u test Id: 449 - MHBANDS
OK   UME::SIMD::SIMD8_16u test Id: 450 - HBOR
OK   UME::SIMD::SIMD8_16u test Id: 451 - HBOR(function)
OK   UME::SIMD::SIMD8_16u test Id: 452 - MHBOR
OK   UME::SIMD::SIMD8_16u test Id: 453 - MHBOR(function)
OK   UME::SIMD::SIMD8_16u test Id: 454 - HBORS
OK   UME::SIMD::SIMD8_16u test Id: 455 - MHBORS
OK   UME::SIMD::SIMD8_16u test Id: 456 - HBXOR
OK   UME::SIMD::SIMD8_16u test Id: 457 - HBXOR(function)
OK   UME::SIMD::SIMD8_16u test Id: 458 - MHBXOR
OK   UME::SIMD::SIMD8_16u test Id: 459 - MHBXOR
OK   UME::SIMD::SIMD8_16u test Id: 460 - HBXORS
OK   UME::SIMD::SIMD8_16u test Id: 461 - MHBXORS
OK   UME::SIMD::SIMD8_16u test Id: 462 - GATHERU
OK   UME::SIMD::SIMD8_16u test Id: 463 - MGATHERU
OK   UME::SIMD::SIMD8_16u test Id: 464 - GATHERS
OK   UME::SIMD::SIMD8_16u test Id: 465 - MGATHERS
OK   UME::SIMD::SIMD8_16u test Id: 466 - GATHERV
OK   UME::SIMD::SIMD8_16u test Id: 467 - MGATHERV
OK   UME::SIMD::SIMD8_16u test Id: 468 - SCATTERU
OK   UME::SIMD::SIMD8_16u test Id: 469 - MSCATTERU
OK   UME::SIMD::SIMD8_16u test Id: 470 - SCATTERS
OK   UME::SIMD::SIMD8_16u test Id: 471 - MSCATTERS
OK   UME::SIMD::SIMD8_16u test Id: 472 - SCATTERV
OK   UME::SIMD::SIMD8_16u test Id: 473 - MSCATTERV
OK   UME::SIMD::SIMD8_16u test Id: 474 - LSHV gen
OK   UME::SIMD::SIMD8_16u test Id: 475 - LSHV (function) gen
OK   UME::SIMD::SIMD8_16u test Id: 476 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD8_16u test Id: 477 - MLSHV gen
OK   UME::SIMD::SIMD8_16u test Id: 478 - MLSHV (function) gen
OK   UME::SIMD::SIMD8_16u test Id: 479 - LSHS gen
OK   UME::SIMD::SIMD8_16u test Id: 480 - LSHS (function) gen
OK   UME::SIMD::SIMD8_16u test Id: 481 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD8_16u test Id: 482 - MLSHS gen
OK   UME::SIMD::SIMD8_16u test Id: 483 - MLSHS (function) gen
OK   UME::SIMD::SIMD8_16u test Id: 484 - LSHVA gen
OK   UME::SIMD::SIMD8_16u test Id: 485 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD8_16u test Id: 486 - MLSHVA gen
OK   UME::SIMD::SIMD8_16u test Id: 487 - LSHSA gen
OK   UME::SIMD::SIMD8_16u test Id: 488 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD8_16u test Id: 489 - MLSHSA gen
OK   UME::SIMD::SIMD8_16u test Id: 490 - RSHV gen
OK   UME::SIMD::SIMD8_16u test Id: 491 - RSHV (function) gen
OK   UME::SIMD::SIMD8_16u test Id: 492 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD8_16u test Id: 493 - MRSHV gen
OK   UME::SIMD::SIMD8_16u test Id: 494 - MRSHV (function) gen
OK   UME::SIMD::SIMD8_16u test Id: 495 - RSHS gen
OK   UME::SIMD::SIMD8_16u test Id: 496 - RSHS (function) gen
OK   UME::SIMD::SIMD8_16u test Id: 497 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD8_16u test Id: 498 - MRSHS gen
OK   UME::SIMD::SIMD8_16u test Id: 499 - MRSHS (function) gen
OK   UME::SIMD::SIMD8_16u test Id: 500 - RSHVA gen
OK   UME::SIMD::SIMD8_16u test Id: 501 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD8_16u test Id: 502 - MRSHVA gen
OK   UME::SIMD::SIMD8_16u test Id: 503 - RSHSA gen
OK   UME::SIMD::SIMD8_16u test Id: 504 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD8_16u test Id: 505 - MRSHSA gen
OK   UME::SIMD::SIMD8_16u test Id: 506 - ROLV
OK   UME::SIMD::SIMD8_16u test Id: 507 - ROLV(function)
OK   UME::SIMD::SIMD8_16u test Id: 508 - MROLV
OK   UME::SIMD::SIMD8_16u test Id: 509 - MROLV(function)
OK   UME::SIMD::SIMD8_16u test Id: 510 - ROLS
OK   UME::SIMD::SIMD8_16u test Id: 511 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 512 - MROLS
OK   UME::SIMD::SIMD8_16u test Id: 513 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 514 - ROLVA
OK   UME::SIMD::SIMD8_16u test Id: 515 - MROLVA
OK   UME::SIMD::SIMD8_16u test Id: 516 - ROLSA
OK   UME::SIMD::SIMD8_16u test Id: 517 - MROLSA
OK   UME::SIMD::SIMD8_16u test Id: 518 - RORV
OK   UME::SIMD::SIMD8_16u test Id: 519 - RORV(function)
OK   UME::SIMD::SIMD8_16u test Id: 520 - MRORV
OK   UME::SIMD::SIMD8_16u test Id: 521 - MRORV(function)
OK   UME::SIMD::SIMD8_16u test Id: 522 - RORS
OK   UME::SIMD::SIMD8_16u test Id: 523 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 524 - MRORS
OK   UME::SIMD::SIMD8_16u test Id: 525 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16u test Id: 526 - RORVA
OK   UME::SIMD::SIMD8_16u test Id: 527 - MRORVA
OK   UME::SIMD::SIMD8_16u test Id: 528 - RORSA
OK   UME::SIMD::SIMD8_16u test Id: 529 - MRORSA
OK   UME::SIMD::SIMD8_16u test Id: 530 - UTOI
OK   UME::SIMD::SIMD8_16u test Id: 531 - PACK
OK   UME::SIMD::SIMD8_16u test Id: 532 - PACKLO
OK   UME::SIMD::SIMD8_16u test Id: 533 - PACKHI
OK   UME::SIMD::SIMD8_16u test Id: 534 - UNPACK
OK   UME::SIMD::SIMD8_16u test Id: 535 - UNPACKLO
OK   UME::SIMD::SIMD8_16u test Id: 536 - UNPACKHi
OK   UME::SIMD::SIMD8_16u test Id: 537 - PROMOTE
OK   UME::SIMD::SIMD8_16u test Id: 538 - DEGRADE
OK   UME::SIMD::SIMD8_16i test Id: 1 - ZERO-CONSTR()
OK   UME::SIMD::SIMD8_16i test Id: 2 - operator=
OK   UME::SIMD::SIMD8_16i test Id: 3 - LOAD
OK   UME::SIMD::SIMD8_16i test Id: 4 - LOADA
OK   UME::SIMD::SIMD8_16i test Id: 5 - ROLV
OK   UME::SIMD::SIMD8_16i test Id: 6 - MROLV
OK   UME::SIMD::SIMD8_16i test Id: 7 - ROLS
OK   UME::SIMD::SIMD8_16i test Id: 8 - MROLS
OK   UME::SIMD::SIMD8_16i test Id: 9 - ROLVA
OK   UME::SIMD::SIMD8_16i test Id: 10 - MROLVA
OK   UME::SIMD::SIMD8_16i test Id: 11 - ROLSA
OK   UME::SIMD::SIMD8_16i test Id: 12 - MROLSA
OK   UME::SIMD::SIMD8_16i test Id: 13 - ABS
OK   UME::SIMD::SIMD8_16i test Id: 14 - SET-CONSTR gen
OK   UME::SIMD::SIMD8_16i test Id: 15 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD8_16i test Id: 16 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD8_16i test Id: 17 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD8_16i test Id: 18 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD8_16i test Id: 19 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD8_16i test Id: 20 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD8_16i test Id: 21 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD8_16i test Id: 22 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD8_16i test Id: 23 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD8_16i test Id: 24 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD8_16i test Id: 25 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD8_16i test Id: 26 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD8_16i test Id: 27 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD8_16i test Id: 28 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD8_16i test Id: 29 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD8_16i test Id: 30 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD8_16i test Id: 31 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD8_16i test Id: 32 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD8_16i test Id: 33 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD8_16i test Id: 34 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD8_16i test Id: 35 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD8_16i test Id: 36 - INSERT
OK   UME::SIMD::SIMD8_16i test Id: 37 - INSERT(operator[] =)
OK   UME::SIMD::SIMD8_16i test Id: 38 - EXTRACT
OK   UME::SIMD::SIMD8_16i test Id: 39 - EXTRACT(operator[])
OK   UME::SIMD::SIMD8_16i test Id: 40 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD8_16i test Id: 41 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD8_16i test Id: 42 - ASSIGNV
OK   UME::SIMD::SIMD8_16i test Id: 43 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD8_16i test Id: 44 - MASSIGNV
OK   UME::SIMD::SIMD8_16i test Id: 45 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD8_16i test Id: 46 - ASSIGNS
OK   UME::SIMD::SIMD8_16i test Id: 47 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD8_16i test Id: 48 - MASSIGNS
OK   UME::SIMD::SIMD8_16i test Id: 49 - MASSIGNS
OK   UME::SIMD::SIMD8_16i test Id: 50 - LOAD/STORE
OK   UME::SIMD::SIMD8_16i test Id: 51 - MLOAD
OK   UME::SIMD::SIMD8_16i test Id: 52 - MSTORE
OK   UME::SIMD::SIMD8_16i test Id: 53 - LOADA/STOREA
OK   UME::SIMD::SIMD8_16i test Id: 54 - MLOADA
OK   UME::SIMD::SIMD8_16i test Id: 55 - MSTOREA
OK   UME::SIMD::SIMD8_16i test Id: 56 - SWIZZLE
OK   UME::SIMD::SIMD8_16i test Id: 57 - SORTA
OK   UME::SIMD::SIMD8_16i test Id: 58 - SORTD
OK   UME::SIMD::SIMD8_16i test Id: 59 - BLENDV gen
OK   UME::SIMD::SIMD8_16i test Id: 60 - ADDV
OK   UME::SIMD::SIMD8_16i test Id: 61 - ADDV(operator+)
OK   UME::SIMD::SIMD8_16i test Id: 62 - ADDV(function)
OK   UME::SIMD::SIMD8_16i test Id: 63 - ADDV gen
OK   UME::SIMD::SIMD8_16i test Id: 64 - ADDV(operator+) gen
OK   UME::SIMD::SIMD8_16i test Id: 65 - ADDV(function) gen
OK   UME::SIMD::SIMD8_16i test Id: 66 - MADDV
OK   UME::SIMD::SIMD8_16i test Id: 67 - MADDV(function)
OK   UME::SIMD::SIMD8_16i test Id: 68 - MADDV gen
OK   UME::SIMD::SIMD8_16i test Id: 69 - MADDV(function) gen
OK   UME::SIMD::SIMD8_16i test Id: 70 - ADDS
OK   UME::SIMD::SIMD8_16i test Id: 71 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 72 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 73 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD8_16i test Id: 74 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD8_16i test Id: 75 - ADDS gen
OK   UME::SIMD::SIMD8_16i test Id: 76 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD8_16i test Id: 77 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD8_16i test Id: 78 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD8_16i test Id: 79 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD8_16i test Id: 80 - MADDS
OK   UME::SIMD::SIMD8_16i test Id: 81 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 82 - MADDS gen
OK   UME::SIMD::SIMD8_16i test Id: 83 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD8_16i test Id: 84 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD8_16i test Id: 85 - ADDVA
OK   UME::SIMD::SIMD8_16i test Id: 86 - ADDVA(operator+=)
OK   UME::SIMD::SIMD8_16i test Id: 87 - ADDVA gen
OK   UME::SIMD::SIMD8_16i test Id: 88 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD8_16i test Id: 89 - MADDVA
OK   UME::SIMD::SIMD8_16i test Id: 90 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD8_16i test Id: 91 - ADDSA
OK   UME::SIMD::SIMD8_16i test Id: 92 - ADDSA(operator+=)
OK   UME::SIMD::SIMD8_16i test Id: 93 - MADDSA
OK   UME::SIMD::SIMD8_16i test Id: 94 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD8_16i test Id: 95 - SADDV gen
OK   UME::SIMD::SIMD8_16i test Id: 96 - SADDV(function) gen
OK   UME::SIMD::SIMD8_16i test Id: 97 - POSTINC
OK   UME::SIMD::SIMD8_16i test Id: 98 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD8_16i test Id: 99 - POSTINC(function)
OK   UME::SIMD::SIMD8_16i test Id: 100 - MPOSTINC
OK   UME::SIMD::SIMD8_16i test Id: 101 - MPOSTINC(function)
OK   UME::SIMD::SIMD8_16i test Id: 102 - PREFINC
OK   UME::SIMD::SIMD8_16i test Id: 103 - PREFINC(operator++())
OK   UME::SIMD::SIMD8_16i test Id: 104 - PREFINC(function)
OK   UME::SIMD::SIMD8_16i test Id: 105 - MPREFINC
OK   UME::SIMD::SIMD8_16i test Id: 106 - MPREFINC(function)
OK   UME::SIMD::SIMD8_16i test Id: 107 - SUBV
OK   UME::SIMD::SIMD8_16i test Id: 108 - SUBV(operator-)
OK   UME::SIMD::SIMD8_16i test Id: 109 - SUBV(function)
OK   UME::SIMD::SIMD8_16i test Id: 110 - SUBV gen
OK   UME::SIMD::SIMD8_16i test Id: 111 - SUBV(operator-) gen
OK   UME::SIMD::SIMD8_16i test Id: 112 - SUBV(function) gen
OK   UME::SIMD::SIMD8_16i test Id: 113 - MSUBV
OK   UME::SIMD::SIMD8_16i test Id: 114 - MSUBV(function)
OK   UME::SIMD::SIMD8_16i test Id: 115 - MSUBV gen
OK   UME::SIMD::SIMD8_16i test Id: 116 - MSUBV(function) gen
OK   UME::SIMD::SIMD8_16i test Id: 117 - SUBS gen
OK   UME::SIMD::SIMD8_16i test Id: 118 - SUBS(operator-) gen
OK   UME::SIMD::SIMD8_16i test Id: 119 - SUBS(function) gen
OK   UME::SIMD::SIMD8_16i test Id: 120 - MSUBS
OK   UME::SIMD::SIMD8_16i test Id: 121 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 122 - SUBVA
OK   UME::SIMD::SIMD8_16i test Id: 123 - SUBVA(operator-=)
OK   UME::SIMD::SIMD8_16i test Id: 124 - MSUBVA
OK   UME::SIMD::SIMD8_16i test Id: 125 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD8_16i test Id: 126 - SUBSA
OK   UME::SIMD::SIMD8_16i test Id: 127 - MSUBSA
OK   UME::SIMD::SIMD8_16i test Id: 128 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD8_16i test Id: 129 - SUBFROMV
OK   UME::SIMD::SIMD8_16i test Id: 130 - MSUBFROMV
OK   UME::SIMD::SIMD8_16i test Id: 131 - SUBFROMS
OK   UME::SIMD::SIMD8_16i test Id: 132 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 133 - MSUBFROMS
OK   UME::SIMD::SIMD8_16i test Id: 134 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 135 - SUBFROMVA
OK   UME::SIMD::SIMD8_16i test Id: 136 - MSUBFROMVA
OK   UME::SIMD::SIMD8_16i test Id: 137 - SUBFROMSA
OK   UME::SIMD::SIMD8_16i test Id: 138 - MSUBFROMSA
OK   UME::SIMD::SIMD8_16i test Id: 139 - POSTDEC
OK   UME::SIMD::SIMD8_16i test Id: 140 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD8_16i test Id: 141 - POSTDEC(function)
OK   UME::SIMD::SIMD8_16i test Id: 142 - MPOSTDEC
OK   UME::SIMD::SIMD8_16i test Id: 143 - MPOSTDEC(function)
OK   UME::SIMD::SIMD8_16i test Id: 144 - PREFDEC
OK   UME::SIMD::SIMD8_16i test Id: 145 - PREFDEC(operator--())
OK   UME::SIMD::SIMD8_16i test Id: 146 - PREFDEC(function)
OK   UME::SIMD::SIMD8_16i test Id: 147 - MPREFDEC
OK   UME::SIMD::SIMD8_16i test Id: 148 - MPREFDEC(function)
OK   UME::SIMD::SIMD8_16i test Id: 149 - MULV
OK   UME::SIMD::SIMD8_16i test Id: 150 - MULV(operator*)
OK   UME::SIMD::SIMD8_16i test Id: 151 - MULV(function)
OK   UME::SIMD::SIMD8_16i test Id: 152 - MMULV
OK   UME::SIMD::SIMD8_16i test Id: 153 - MMULV(function)
OK   UME::SIMD::SIMD8_16i test Id: 154 - MULS
OK   UME::SIMD::SIMD8_16i test Id: 155 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 156 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 157 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 158 - MMULS
OK   UME::SIMD::SIMD8_16i test Id: 159 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 160 - MULVA
OK   UME::SIMD::SIMD8_16i test Id: 161 - MULVA(operator*)
OK   UME::SIMD::SIMD8_16i test Id: 162 - MULVA gen
OK   UME::SIMD::SIMD8_16i test Id: 163 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD8_16i test Id: 164 - MMULVA
OK   UME::SIMD::SIMD8_16i test Id: 165 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_16i test Id: 166 - MULSA
OK   UME::SIMD::SIMD8_16i test Id: 167 - MULSA(operator*=)
OK   UME::SIMD::SIMD8_16i test Id: 168 - MMULSA
OK   UME::SIMD::SIMD8_16i test Id: 169 - DIVV
OK   UME::SIMD::SIMD8_16i test Id: 170 - DIVV(operator/)
OK   UME::SIMD::SIMD8_16i test Id: 171 - DIVV(function)
OK   UME::SIMD::SIMD8_16i test Id: 172 - MDIVV
OK   UME::SIMD::SIMD8_16i test Id: 173 - MDIVV(function)
OK   UME::SIMD::SIMD8_16i test Id: 174 - DIVS
OK   UME::SIMD::SIMD8_16i test Id: 175 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 176 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 177 - MDIVS
OK   UME::SIMD::SIMD8_16i test Id: 178 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 179 - DIVVA
OK   UME::SIMD::SIMD8_16i test Id: 180 - DIVVA(operator/=)
OK   UME::SIMD::SIMD8_16i test Id: 181 - DIVVA gen
OK   UME::SIMD::SIMD8_16i test Id: 182 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD8_16i test Id: 183 - MDIVVA
OK   UME::SIMD::SIMD8_16i test Id: 184 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_16i test Id: 185 - DIVSA
OK   UME::SIMD::SIMD8_16i test Id: 186 - DIVSA(operator/=)
OK   UME::SIMD::SIMD8_16i test Id: 187 - MDIVSA
OK   UME::SIMD::SIMD8_16i test Id: 188 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD8_16i test Id: 189 - RCP
OK   UME::SIMD::SIMD8_16i test Id: 190 - RCP(function)
OK   UME::SIMD::SIMD8_16i test Id: 191 - MRCP
OK   UME::SIMD::SIMD8_16i test Id: 192 - MRCP(function)
OK   UME::SIMD::SIMD8_16i test Id: 193 - RCPS
OK   UME::SIMD::SIMD8_16i test Id: 194 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 195 - RCPS(function)
OK   UME::SIMD::SIMD8_16i test Id: 196 - MRCPS
OK   UME::SIMD::SIMD8_16i test Id: 197 - MRCPS (function)
OK   UME::SIMD::SIMD8_16i test Id: 198 - RCPA
OK   UME::SIMD::SIMD8_16i test Id: 199 - MRCPA
OK   UME::SIMD::SIMD8_16i test Id: 200 - RCPSA
OK   UME::SIMD::SIMD8_16i test Id: 201 - MRCPSA
OK   UME::SIMD::SIMD8_16i test Id: 202 - CMPEQV
OK   UME::SIMD::SIMD8_16i test Id: 203 - CMPEQV(operator==)
OK   UME::SIMD::SIMD8_16i test Id: 204 - CMPEQV(function)
OK   UME::SIMD::SIMD8_16i test Id: 205 - CMPEQS
OK   UME::SIMD::SIMD8_16i test Id: 206 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 207 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 208 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 209 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 210 - CMPNEV
OK   UME::SIMD::SIMD8_16i test Id: 211 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD8_16i test Id: 212 - CMPNEV(function)
OK   UME::SIMD::SIMD8_16i test Id: 213 - CMPNES
OK   UME::SIMD::SIMD8_16i test Id: 214 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 215 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 216 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 217 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 218 - CMPGTV
OK   UME::SIMD::SIMD8_16i test Id: 219 - CMPGTV(operator>)
OK   UME::SIMD::SIMD8_16i test Id: 220 - CMPGTV(function)
OK   UME::SIMD::SIMD8_16i test Id: 221 - CMPGTS
OK   UME::SIMD::SIMD8_16i test Id: 222 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 223 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 224 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 225 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 226 - CMPLTV
OK   UME::SIMD::SIMD8_16i test Id: 227 - CMPLTV(operator<)
OK   UME::SIMD::SIMD8_16i test Id: 228 - CMPLTV(function)
OK   UME::SIMD::SIMD8_16i test Id: 229 - CMPLTS
OK   UME::SIMD::SIMD8_16i test Id: 230 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 231 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 232 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 233 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 234 - CMPGEV
OK   UME::SIMD::SIMD8_16i test Id: 235 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD8_16i test Id: 236 - CMPGEV(function)
OK   UME::SIMD::SIMD8_16i test Id: 237 - CMPGES
OK   UME::SIMD::SIMD8_16i test Id: 238 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 239 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 240 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 241 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 242 - CMPLEV
OK   UME::SIMD::SIMD8_16i test Id: 243 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD8_16i test Id: 244 - CMPLEV(function)
OK   UME::SIMD::SIMD8_16i test Id: 245 - CMPLES
OK   UME::SIMD::SIMD8_16i test Id: 246 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 247 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 248 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 249 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 250 - CMPEV
OK   UME::SIMD::SIMD8_16i test Id: 251 - CMPEV(function)
OK   UME::SIMD::SIMD8_16i test Id: 252 - CMPES
OK   UME::SIMD::SIMD8_16i test Id: 253 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 254 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 255 - HADD
OK   UME::SIMD::SIMD8_16i test Id: 256 - HADD(function)
OK   UME::SIMD::SIMD8_16i test Id: 257 - HADD gen
OK   UME::SIMD::SIMD8_16i test Id: 258 - HADD(function) gen
OK   UME::SIMD::SIMD8_16i test Id: 259 - MHADD gen
OK   UME::SIMD::SIMD8_16i test Id: 260 - MHADD(function) gen
OK   UME::SIMD::SIMD8_16i test Id: 261 - HADDS gen
OK   UME::SIMD::SIMD8_16i test Id: 262 - HADDS(function) gen
OK   UME::SIMD::SIMD8_16i test Id: 263 - MHADD gen
OK   UME::SIMD::SIMD8_16i test Id: 264 - MHADDS(function) gen
OK   UME::SIMD::SIMD8_16i test Id: 265 - HMUL gen
OK   UME::SIMD::SIMD8_16i test Id: 266 - HMUL(function) gen
OK   UME::SIMD::SIMD8_16i test Id: 267 - MHMUL gen
OK   UME::SIMD::SIMD8_16i test Id: 268 - MHMUL(function) gen
OK   UME::SIMD::SIMD8_16i test Id: 269 - HMULS gen
OK   UME::SIMD::SIMD8_16i test Id: 270 - HMULS(function) gen
OK   UME::SIMD::SIMD8_16i test Id: 271 - MHMUL gen
OK   UME::SIMD::SIMD8_16i test Id: 272 - MHMULS(function) gen
OK   UME::SIMD::SIMD8_16i test Id: 273 - FMULADDV
OK   UME::SIMD::SIMD8_16i test Id: 274 - FMULADDV(function)
OK   UME::SIMD::SIMD8_16i test Id: 275 - MFMULADDV
OK   UME::SIMD::SIMD8_16i test Id: 276 - MFMULADDV(function)
OK   UME::SIMD::SIMD8_16i test Id: 277 - FMULSUBV
OK   UME::SIMD::SIMD8_16i test Id: 278 - FMULSUBV(function)
OK   UME::SIMD::SIMD8_16i test Id: 279 - MFMULSUBV
OK   UME::SIMD::SIMD8_16i test Id: 280 - MFMULSUBV(function)
OK   UME::SIMD::SIMD8_16i test Id: 281 - FADDMULV
OK   UME::SIMD::SIMD8_16i test Id: 282 - FADDMULV(function)
OK   UME::SIMD::SIMD8_16i test Id: 283 - MFADDMULV
OK   UME::SIMD::SIMD8_16i test Id: 284 - MFADDMULV(function)
OK   UME::SIMD::SIMD8_16i test Id: 285 - FSUBMULV
OK   UME::SIMD::SIMD8_16i test Id: 286 - FSUBMULV(function)
OK   UME::SIMD::SIMD8_16i test Id: 287 - MFSUBMULV
OK   UME::SIMD::SIMD8_16i test Id: 288 - MFSUBMULV(function)
OK   UME::SIMD::SIMD8_16i test Id: 289 - MAXV
OK   UME::SIMD::SIMD8_16i test Id: 290 - MAXV(function)
OK   UME::SIMD::SIMD8_16i test Id: 291 - MMAXV
OK   UME::SIMD::SIMD8_16i test Id: 292 - MMAXV(function)
OK   UME::SIMD::SIMD8_16i test Id: 293 - MAXS
OK   UME::SIMD::SIMD8_16i test Id: 294 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 295 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 296 - MMAXS
OK   UME::SIMD::SIMD8_16i test Id: 297 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 298 - MAXVA
OK   UME::SIMD::SIMD8_16i test Id: 299 - MMAXVA
OK   UME::SIMD::SIMD8_16i test Id: 300 - MAXSA
OK   UME::SIMD::SIMD8_16i test Id: 301 - MMAXSA
OK   UME::SIMD::SIMD8_16i test Id: 302 - MINV
OK   UME::SIMD::SIMD8_16i test Id: 303 - MINV(function)
OK   UME::SIMD::SIMD8_16i test Id: 304 - MMINV
OK   UME::SIMD::SIMD8_16i test Id: 305 - MMINV(function)
OK   UME::SIMD::SIMD8_16i test Id: 306 - MINS
OK   UME::SIMD::SIMD8_16i test Id: 307 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD8_16i test Id: 308 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD8_16i test Id: 309 - MMINS
OK   UME::SIMD::SIMD8_16i test Id: 310 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 311 - MINVA
OK   UME::SIMD::SIMD8_16i test Id: 312 - MMINVA
OK   UME::SIMD::SIMD8_16i test Id: 313 - MINSA
OK   UME::SIMD::SIMD8_16i test Id: 314 - MMINSA
OK   UME::SIMD::SIMD8_16i test Id: 315 - HMAX
OK   UME::SIMD::SIMD8_16i test Id: 316 - HMAX(function)
OK   UME::SIMD::SIMD8_16i test Id: 317 - HMAX
OK   UME::SIMD::SIMD8_16i test Id: 318 - HMAX(function)
OK   UME::SIMD::SIMD8_16i test Id: 319 - MHMAX
OK   UME::SIMD::SIMD8_16i test Id: 320 - MHMAX(function)
OK   UME::SIMD::SIMD8_16i test Id: 321 - IMAX
OK   UME::SIMD::SIMD8_16i test Id: 322 - IMAX(function)
OK   UME::SIMD::SIMD8_16i test Id: 323 - MIMAX
OK   UME::SIMD::SIMD8_16i test Id: 324 - MIMAX(function)
OK   UME::SIMD::SIMD8_16i test Id: 325 - HMIN
OK   UME::SIMD::SIMD8_16i test Id: 326 - HMIN(function)
OK   UME::SIMD::SIMD8_16i test Id: 327 - HMIN
OK   UME::SIMD::SIMD8_16i test Id: 328 - HMIN(function)
OK   UME::SIMD::SIMD8_16i test Id: 329 - MHMIN gen
OK   UME::SIMD::SIMD8_16i test Id: 330 - MHMIN(function) gen
OK   UME::SIMD::SIMD8_16i test Id: 331 - IMIN
OK   UME::SIMD::SIMD8_16i test Id: 332 - IMIN(function)
OK   UME::SIMD::SIMD8_16i test Id: 333 - MIMIN
OK   UME::SIMD::SIMD8_16i test Id: 334 - MIMIN(function)
OK   UME::SIMD::SIMD8_16i test Id: 335 - REMV gen
OK   UME::SIMD::SIMD8_16i test Id: 336 - REMV(operator%) gen
OK   UME::SIMD::SIMD8_16i test Id: 337 - REMV(function) gen
OK   UME::SIMD::SIMD8_16i test Id: 338 - MREMV gen
OK   UME::SIMD::SIMD8_16i test Id: 339 - MREMV(function) gen
OK   UME::SIMD::SIMD8_16i test Id: 340 - REMS gen
OK   UME::SIMD::SIMD8_16i test Id: 341 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD8_16i test Id: 342 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD8_16i test Id: 343 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD8_16i test Id: 344 - LANDV gen
OK   UME::SIMD::SIMD8_16i test Id: 345 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD8_16i test Id: 346 - LORV gen
OK   UME::SIMD::SIMD8_16i test Id: 347 - LORV gen (operator ||)
OK   UME::SIMD::SIMD8_16i test Id: 348 - BANDV
OK   UME::SIMD::SIMD8_16i test Id: 349 - BANDV(operator&)
OK   UME::SIMD::SIMD8_16i test Id: 350 - BANDV(function)
OK   UME::SIMD::SIMD8_16i test Id: 351 - MBANDV
OK   UME::SIMD::SIMD8_16i test Id: 352 - MBANDV
OK   UME::SIMD::SIMD8_16i test Id: 353 - BANDS
OK   UME::SIMD::SIMD8_16i test Id: 354 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 355 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 356 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 357 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 358 - MBANDS
OK   UME::SIMD::SIMD8_16i test Id: 359 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 360 - BANDVA
OK   UME::SIMD::SIMD8_16i test Id: 361 - MBANDVA
OK   UME::SIMD::SIMD8_16i test Id: 362 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD8_16i test Id: 363 - BANDSA
OK   UME::SIMD::SIMD8_16i test Id: 364 - MBANDSA
OK   UME::SIMD::SIMD8_16i test Id: 365 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD8_16i test Id: 366 - BORV
OK   UME::SIMD::SIMD8_16i test Id: 367 - BORV(operator |)
OK   UME::SIMD::SIMD8_16i test Id: 368 - BORV(function)
OK   UME::SIMD::SIMD8_16i test Id: 369 - MBORV
OK   UME::SIMD::SIMD8_16i test Id: 370 - MBORV(function)
OK   UME::SIMD::SIMD8_16i test Id: 371 - BORS
OK   UME::SIMD::SIMD8_16i test Id: 372 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 373 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 374 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 375 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 376 - MBORS
OK   UME::SIMD::SIMD8_16i test Id: 377 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 378 - BORVA
OK   UME::SIMD::SIMD8_16i test Id: 379 - BORVA(operator|=)
OK   UME::SIMD::SIMD8_16i test Id: 380 - MBORVA
OK   UME::SIMD::SIMD8_16i test Id: 381 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD8_16i test Id: 382 - BORSA
OK   UME::SIMD::SIMD8_16i test Id: 383 - BORSA(operator|=)
OK   UME::SIMD::SIMD8_16i test Id: 384 - MBORSA
OK   UME::SIMD::SIMD8_16i test Id: 385 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD8_16i test Id: 386 - BXORV
OK   UME::SIMD::SIMD8_16i test Id: 387 - BXORV(operator^
OK   UME::SIMD::SIMD8_16i test Id: 388 - BXORV(function
OK   UME::SIMD::SIMD8_16i test Id: 389 - MBXORV
OK   UME::SIMD::SIMD8_16i test Id: 390 - MBXORV(function)
OK   UME::SIMD::SIMD8_16i test Id: 391 - BXORS
OK   UME::SIMD::SIMD8_16i test Id: 392 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 393 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 394 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 395 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 396 - MBXORS
OK   UME::SIMD::SIMD8_16i test Id: 397 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 398 - BXORVA
OK   UME::SIMD::SIMD8_16i test Id: 399 - BXORVA(operator^=)
OK   UME::SIMD::SIMD8_16i test Id: 400 - MBXORVA
OK   UME::SIMD::SIMD8_16i test Id: 401 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD8_16i test Id: 402 - BXORSA
OK   UME::SIMD::SIMD8_16i test Id: 403 - BXORSA(operator^=)
OK   UME::SIMD::SIMD8_16i test Id: 404 - MBXORSA
OK   UME::SIMD::SIMD8_16i test Id: 405 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD8_16i test Id: 406 - BNOT
OK   UME::SIMD::SIMD8_16i test Id: 407 - BNOT(operator!)
OK   UME::SIMD::SIMD8_16i test Id: 408 - BNOT(function)
OK   UME::SIMD::SIMD8_16i test Id: 409 - MBNOT
OK   UME::SIMD::SIMD8_16i test Id: 410 - MBNOT(function)
OK   UME::SIMD::SIMD8_16i test Id: 411 - BNOTA
OK   UME::SIMD::SIMD8_16i test Id: 412 - MBNOTA
OK   UME::SIMD::SIMD8_16i test Id: 413 - BANDNOTV
OK   UME::SIMD::SIMD8_16i test Id: 414 - BANDNOTV (function)
OK   UME::SIMD::SIMD8_16i test Id: 415 - MBANDNOTV
OK   UME::SIMD::SIMD8_16i test Id: 416 - MBANDNOTV (function)
OK   UME::SIMD::SIMD8_16i test Id: 417 - BANDNOTS
OK   UME::SIMD::SIMD8_16i test Id: 418 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD8_16i test Id: 419 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD8_16i test Id: 420 - MBANDNOTS
OK   UME::SIMD::SIMD8_16i test Id: 421 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD8_16i test Id: 422 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD8_16i test Id: 423 - BANDNOTVA
OK   UME::SIMD::SIMD8_16i test Id: 424 - MBANDNOTVA
OK   UME::SIMD::SIMD8_16i test Id: 425 - BANDNOTSA
OK   UME::SIMD::SIMD8_16i test Id: 426 - MBANDNOTSA
OK   UME::SIMD::SIMD8_16i test Id: 427 - HBAND
OK   UME::SIMD::SIMD8_16i test Id: 428 - HBAND
OK   UME::SIMD::SIMD8_16i test Id: 429 - MHBAND
OK   UME::SIMD::SIMD8_16i test Id: 430 - MHBAND(function)
OK   UME::SIMD::SIMD8_16i test Id: 431 - HBANDS
OK   UME::SIMD::SIMD8_16i test Id: 432 - MHBANDS
OK   UME::SIMD::SIMD8_16i test Id: 433 - HBOR
OK   UME::SIMD::SIMD8_16i test Id: 434 - HBOR(function)
OK   UME::SIMD::SIMD8_16i test Id: 435 - MHBOR
OK   UME::SIMD::SIMD8_16i test Id: 436 - MHBOR(function)
OK   UME::SIMD::SIMD8_16i test Id: 437 - HBORS
OK   UME::SIMD::SIMD8_16i test Id: 438 - MHBORS
OK   UME::SIMD::SIMD8_16i test Id: 439 - HBXOR
OK   UME::SIMD::SIMD8_16i test Id: 440 - HBXOR(function)
OK   UME::SIMD::SIMD8_16i test Id: 441 - MHBXOR
OK   UME::SIMD::SIMD8_16i test Id: 442 - MHBXOR
OK   UME::SIMD::SIMD8_16i test Id: 443 - HBXORS
OK   UME::SIMD::SIMD8_16i test Id: 444 - MHBXORS
OK   UME::SIMD::SIMD8_16i test Id: 445 - GATHERU
OK   UME::SIMD::SIMD8_16i test Id: 446 - MGATHERU
OK   UME::SIMD::SIMD8_16i test Id: 447 - GATHERS
OK   UME::SIMD::SIMD8_16i test Id: 448 - MGATHERS
OK   UME::SIMD::SIMD8_16i test Id: 449 - GATHERV
OK   UME::SIMD::SIMD8_16i test Id: 450 - MGATHERV
OK   UME::SIMD::SIMD8_16i test Id: 451 - SCATTERU
OK   UME::SIMD::SIMD8_16i test Id: 452 - MSCATTERU
OK   UME::SIMD::SIMD8_16i test Id: 453 - SCATTERS
OK   UME::SIMD::SIMD8_16i test Id: 454 - MSCATTERS
OK   UME::SIMD::SIMD8_16i test Id: 455 - SCATTERV
OK   UME::SIMD::SIMD8_16i test Id: 456 - MSCATTERV
OK   UME::SIMD::SIMD8_16i test Id: 457 - LSHV gen
OK   UME::SIMD::SIMD8_16i test Id: 458 - LSHV (function) gen
OK   UME::SIMD::SIMD8_16i test Id: 459 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD8_16i test Id: 460 - MLSHV gen
OK   UME::SIMD::SIMD8_16i test Id: 461 - MLSHV (function) gen
OK   UME::SIMD::SIMD8_16i test Id: 462 - LSHS gen
OK   UME::SIMD::SIMD8_16i test Id: 463 - LSHS (function) gen
OK   UME::SIMD::SIMD8_16i test Id: 464 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD8_16i test Id: 465 - MLSHS gen
OK   UME::SIMD::SIMD8_16i test Id: 466 - MLSHS (function) gen
OK   UME::SIMD::SIMD8_16i test Id: 467 - LSHVA gen
OK   UME::SIMD::SIMD8_16i test Id: 468 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD8_16i test Id: 469 - MLSHVA gen
OK   UME::SIMD::SIMD8_16i test Id: 470 - LSHSA gen
OK   UME::SIMD::SIMD8_16i test Id: 471 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD8_16i test Id: 472 - MLSHSA gen
OK   UME::SIMD::SIMD8_16i test Id: 473 - RSHV gen
OK   UME::SIMD::SIMD8_16i test Id: 474 - RSHV (function) gen
OK   UME::SIMD::SIMD8_16i test Id: 475 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD8_16i test Id: 476 - MRSHV gen
OK   UME::SIMD::SIMD8_16i test Id: 477 - MRSHV (function) gen
OK   UME::SIMD::SIMD8_16i test Id: 478 - RSHS gen
OK   UME::SIMD::SIMD8_16i test Id: 479 - RSHS (function) gen
OK   UME::SIMD::SIMD8_16i test Id: 480 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD8_16i test Id: 481 - MRSHS gen
OK   UME::SIMD::SIMD8_16i test Id: 482 - MRSHS (function) gen
OK   UME::SIMD::SIMD8_16i test Id: 483 - RSHVA gen
OK   UME::SIMD::SIMD8_16i test Id: 484 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD8_16i test Id: 485 - MRSHVA gen
OK   UME::SIMD::SIMD8_16i test Id: 486 - RSHSA gen
OK   UME::SIMD::SIMD8_16i test Id: 487 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD8_16i test Id: 488 - MRSHSA gen
OK   UME::SIMD::SIMD8_16i test Id: 489 - ROLV
OK   UME::SIMD::SIMD8_16i test Id: 490 - ROLV(function)
OK   UME::SIMD::SIMD8_16i test Id: 491 - MROLV
OK   UME::SIMD::SIMD8_16i test Id: 492 - MROLV(function)
OK   UME::SIMD::SIMD8_16i test Id: 493 - ROLS
OK   UME::SIMD::SIMD8_16i test Id: 494 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 495 - MROLS
OK   UME::SIMD::SIMD8_16i test Id: 496 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 497 - ROLVA
OK   UME::SIMD::SIMD8_16i test Id: 498 - MROLVA
OK   UME::SIMD::SIMD8_16i test Id: 499 - ROLSA
OK   UME::SIMD::SIMD8_16i test Id: 500 - MROLSA
OK   UME::SIMD::SIMD8_16i test Id: 501 - RORV
OK   UME::SIMD::SIMD8_16i test Id: 502 - RORV(function)
OK   UME::SIMD::SIMD8_16i test Id: 503 - MRORV
OK   UME::SIMD::SIMD8_16i test Id: 504 - MRORV(function)
OK   UME::SIMD::SIMD8_16i test Id: 505 - RORS
OK   UME::SIMD::SIMD8_16i test Id: 506 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 507 - MRORS
OK   UME::SIMD::SIMD8_16i test Id: 508 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_16i test Id: 509 - RORVA
OK   UME::SIMD::SIMD8_16i test Id: 510 - MRORVA
OK   UME::SIMD::SIMD8_16i test Id: 511 - RORSA
OK   UME::SIMD::SIMD8_16i test Id: 512 - MRORSA
OK   UME::SIMD::SIMD8_16i test Id: 513 - NEG
OK   UME::SIMD::SIMD8_16i test Id: 514 - NEG(operator-)
OK   UME::SIMD::SIMD8_16i test Id: 515 - NEG(function)
OK   UME::SIMD::SIMD8_16i test Id: 516 - MNEG
OK   UME::SIMD::SIMD8_16i test Id: 517 - MNEG(function)
OK   UME::SIMD::SIMD8_16i test Id: 518 - NEGA
OK   UME::SIMD::SIMD8_16i test Id: 519 - MNEGA
OK   UME::SIMD::SIMD8_16i test Id: 520 - ABS
OK   UME::SIMD::SIMD8_16i test Id: 521 - ABS(function)
OK   UME::SIMD::SIMD8_16i test Id: 522 - MABS
OK   UME::SIMD::SIMD8_16i test Id: 523 - MABS(function)
OK   UME::SIMD::SIMD8_16i test Id: 524 - ABSA
OK   UME::SIMD::SIMD8_16i test Id: 525 - MABSA
OK   UME::SIMD::SIMD8_16i test Id: 526 - COPYSIGN gen
OK   UME::SIMD::SIMD8_16i test Id: 527 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD8_16i test Id: 528 - ITOU
OK   UME::SIMD::SIMD8_16i test Id: 529 - PACK
OK   UME::SIMD::SIMD8_16i test Id: 530 - PACKLO
OK   UME::SIMD::SIMD8_16i test Id: 531 - PACKHI
OK   UME::SIMD::SIMD8_16i test Id: 532 - UNPACK
OK   UME::SIMD::SIMD8_16i test Id: 533 - UNPACKLO
OK   UME::SIMD::SIMD8_16i test Id: 534 - UNPACKHi
OK   UME::SIMD::SIMD8_16i test Id: 535 - PROMOTE
OK   UME::SIMD::SIMD8_16i test Id: 536 - DEGRADE
OK   UME::SIMD::SIMD4_32u test Id: 1 - SET-CONSTR gen
OK   UME::SIMD::SIMD4_32u test Id: 2 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD4_32u test Id: 3 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD4_32u test Id: 4 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD4_32u test Id: 5 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD4_32u test Id: 6 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD4_32u test Id: 7 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD4_32u test Id: 8 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD4_32u test Id: 9 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD4_32u test Id: 10 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD4_32u test Id: 11 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD4_32u test Id: 12 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD4_32u test Id: 13 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD4_32u test Id: 14 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD4_32u test Id: 15 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD4_32u test Id: 16 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD4_32u test Id: 17 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD4_32u test Id: 18 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD4_32u test Id: 19 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD4_32u test Id: 20 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD4_32u test Id: 21 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD4_32u test Id: 22 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD4_32u test Id: 23 - INSERT
OK   UME::SIMD::SIMD4_32u test Id: 24 - INSERT(operator[] =)
OK   UME::SIMD::SIMD4_32u test Id: 25 - EXTRACT
OK   UME::SIMD::SIMD4_32u test Id: 26 - EXTRACT(operator[])
OK   UME::SIMD::SIMD4_32u test Id: 27 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD4_32u test Id: 28 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD4_32u test Id: 29 - ASSIGNV
OK   UME::SIMD::SIMD4_32u test Id: 30 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD4_32u test Id: 31 - MASSIGNV
OK   UME::SIMD::SIMD4_32u test Id: 32 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD4_32u test Id: 33 - ASSIGNS
OK   UME::SIMD::SIMD4_32u test Id: 34 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD4_32u test Id: 35 - MASSIGNS
OK   UME::SIMD::SIMD4_32u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD4_32u test Id: 37 - LOAD/STORE
OK   UME::SIMD::SIMD4_32u test Id: 38 - MLOAD
OK   UME::SIMD::SIMD4_32u test Id: 39 - MSTORE
OK   UME::SIMD::SIMD4_32u test Id: 40 - LOADA/STOREA
OK   UME::SIMD::SIMD4_32u test Id: 41 - MLOADA
OK   UME::SIMD::SIMD4_32u test Id: 42 - MSTOREA
OK   UME::SIMD::SIMD4_32u test Id: 43 - SWIZZLE
OK   UME::SIMD::SIMD4_32u test Id: 44 - SORTA
OK   UME::SIMD::SIMD4_32u test Id: 45 - SORTD
OK   UME::SIMD::SIMD4_32u test Id: 46 - BLENDV gen
OK   UME::SIMD::SIMD4_32u test Id: 47 - ADDV
OK   UME::SIMD::SIMD4_32u test Id: 48 - ADDV(operator+)
OK   UME::SIMD::SIMD4_32u test Id: 49 - ADDV(function)
OK   UME::SIMD::SIMD4_32u test Id: 50 - ADDV gen
OK   UME::SIMD::SIMD4_32u test Id: 51 - ADDV(operator+) gen
OK   UME::SIMD::SIMD4_32u test Id: 52 - ADDV(function) gen
OK   UME::SIMD::SIMD4_32u test Id: 53 - MADDV
OK   UME::SIMD::SIMD4_32u test Id: 54 - MADDV(function)
OK   UME::SIMD::SIMD4_32u test Id: 55 - MADDV gen
OK   UME::SIMD::SIMD4_32u test Id: 56 - MADDV(function) gen
OK   UME::SIMD::SIMD4_32u test Id: 57 - ADDS
OK   UME::SIMD::SIMD4_32u test Id: 58 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 59 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 60 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD4_32u test Id: 61 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD4_32u test Id: 62 - ADDS gen
OK   UME::SIMD::SIMD4_32u test Id: 63 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD4_32u test Id: 64 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD4_32u test Id: 65 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD4_32u test Id: 66 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD4_32u test Id: 67 - MADDS
OK   UME::SIMD::SIMD4_32u test Id: 68 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 69 - MADDS gen
OK   UME::SIMD::SIMD4_32u test Id: 70 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD4_32u test Id: 71 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD4_32u test Id: 72 - ADDVA
OK   UME::SIMD::SIMD4_32u test Id: 73 - ADDVA(operator+=)
OK   UME::SIMD::SIMD4_32u test Id: 74 - ADDVA gen
OK   UME::SIMD::SIMD4_32u test Id: 75 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD4_32u test Id: 76 - MADDVA
OK   UME::SIMD::SIMD4_32u test Id: 77 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD4_32u test Id: 78 - ADDSA
OK   UME::SIMD::SIMD4_32u test Id: 79 - ADDSA(operator+=)
OK   UME::SIMD::SIMD4_32u test Id: 80 - MADDSA
OK   UME::SIMD::SIMD4_32u test Id: 81 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD4_32u test Id: 82 - SADDV gen
OK   UME::SIMD::SIMD4_32u test Id: 83 - SADDV(function) gen
OK   UME::SIMD::SIMD4_32u test Id: 84 - POSTINC
OK   UME::SIMD::SIMD4_32u test Id: 85 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD4_32u test Id: 86 - POSTINC(function)
OK   UME::SIMD::SIMD4_32u test Id: 87 - MPOSTINC
OK   UME::SIMD::SIMD4_32u test Id: 88 - MPOSTINC(function)
OK   UME::SIMD::SIMD4_32u test Id: 89 - PREFINC
OK   UME::SIMD::SIMD4_32u test Id: 90 - PREFINC(operator++())
OK   UME::SIMD::SIMD4_32u test Id: 91 - PREFINC(function)
OK   UME::SIMD::SIMD4_32u test Id: 92 - MPREFINC
OK   UME::SIMD::SIMD4_32u test Id: 93 - MPREFINC(function)
OK   UME::SIMD::SIMD4_32u test Id: 94 - SUBV
OK   UME::SIMD::SIMD4_32u test Id: 95 - SUBV(operator-)
OK   UME::SIMD::SIMD4_32u test Id: 96 - SUBV(function)
OK   UME::SIMD::SIMD4_32u test Id: 97 - SUBV gen
OK   UME::SIMD::SIMD4_32u test Id: 98 - SUBV(operator-) gen
OK   UME::SIMD::SIMD4_32u test Id: 99 - SUBV(function) gen
OK   UME::SIMD::SIMD4_32u test Id: 100 - MSUBV
OK   UME::SIMD::SIMD4_32u test Id: 101 - MSUBV(function)
OK   UME::SIMD::SIMD4_32u test Id: 102 - MSUBV gen
OK   UME::SIMD::SIMD4_32u test Id: 103 - MSUBV(function) gen
OK   UME::SIMD::SIMD4_32u test Id: 104 - SUBS gen
OK   UME::SIMD::SIMD4_32u test Id: 105 - SUBS(operator-) gen
OK   UME::SIMD::SIMD4_32u test Id: 106 - SUBS(function) gen
OK   UME::SIMD::SIMD4_32u test Id: 107 - MSUBS
OK   UME::SIMD::SIMD4_32u test Id: 108 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 109 - SUBVA
OK   UME::SIMD::SIMD4_32u test Id: 110 - SUBVA(operator-=)
OK   UME::SIMD::SIMD4_32u test Id: 111 - MSUBVA
OK   UME::SIMD::SIMD4_32u test Id: 112 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD4_32u test Id: 113 - SUBSA
OK   UME::SIMD::SIMD4_32u test Id: 114 - MSUBSA
OK   UME::SIMD::SIMD4_32u test Id: 115 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD4_32u test Id: 116 - SUBFROMV
OK   UME::SIMD::SIMD4_32u test Id: 117 - MSUBFROMV
OK   UME::SIMD::SIMD4_32u test Id: 118 - SUBFROMS
OK   UME::SIMD::SIMD4_32u test Id: 119 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 120 - MSUBFROMS
OK   UME::SIMD::SIMD4_32u test Id: 121 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 122 - SUBFROMVA
OK   UME::SIMD::SIMD4_32u test Id: 123 - MSUBFROMVA
OK   UME::SIMD::SIMD4_32u test Id: 124 - SUBFROMSA
OK   UME::SIMD::SIMD4_32u test Id: 125 - MSUBFROMSA
OK   UME::SIMD::SIMD4_32u test Id: 126 - POSTDEC
OK   UME::SIMD::SIMD4_32u test Id: 127 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD4_32u test Id: 128 - POSTDEC(function)
OK   UME::SIMD::SIMD4_32u test Id: 129 - MPOSTDEC
OK   UME::SIMD::SIMD4_32u test Id: 130 - MPOSTDEC(function)
OK   UME::SIMD::SIMD4_32u test Id: 131 - PREFDEC
OK   UME::SIMD::SIMD4_32u test Id: 132 - PREFDEC(operator--())
OK   UME::SIMD::SIMD4_32u test Id: 133 - PREFDEC(function)
OK   UME::SIMD::SIMD4_32u test Id: 134 - MPREFDEC
OK   UME::SIMD::SIMD4_32u test Id: 135 - MPREFDEC(function)
OK   UME::SIMD::SIMD4_32u test Id: 136 - MULV
OK   UME::SIMD::SIMD4_32u test Id: 137 - MULV(operator*)
OK   UME::SIMD::SIMD4_32u test Id: 138 - MULV(function)
OK   UME::SIMD::SIMD4_32u test Id: 139 - MMULV
OK   UME::SIMD::SIMD4_32u test Id: 140 - MMULV(function)
OK   UME::SIMD::SIMD4_32u test Id: 141 - MULS
OK   UME::SIMD::SIMD4_32u test Id: 142 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 143 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 144 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 145 - MMULS
OK   UME::SIMD::SIMD4_32u test Id: 146 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 147 - MULVA
OK   UME::SIMD::SIMD4_32u test Id: 148 - MULVA(operator*)
OK   UME::SIMD::SIMD4_32u test Id: 149 - MULVA gen
OK   UME::SIMD::SIMD4_32u test Id: 150 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD4_32u test Id: 151 - MMULVA
OK   UME::SIMD::SIMD4_32u test Id: 152 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_32u test Id: 153 - MULSA
OK   UME::SIMD::SIMD4_32u test Id: 154 - MULSA(operator*=)
OK   UME::SIMD::SIMD4_32u test Id: 155 - MMULSA
OK   UME::SIMD::SIMD4_32u test Id: 156 - DIVV
OK   UME::SIMD::SIMD4_32u test Id: 157 - DIVV(operator/)
OK   UME::SIMD::SIMD4_32u test Id: 158 - DIVV(function)
OK   UME::SIMD::SIMD4_32u test Id: 159 - MDIVV
OK   UME::SIMD::SIMD4_32u test Id: 160 - MDIVV(function)
OK   UME::SIMD::SIMD4_32u test Id: 161 - DIVS
OK   UME::SIMD::SIMD4_32u test Id: 162 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 163 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 164 - MDIVS
OK   UME::SIMD::SIMD4_32u test Id: 165 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 166 - DIVVA
OK   UME::SIMD::SIMD4_32u test Id: 167 - DIVVA(operator/=)
OK   UME::SIMD::SIMD4_32u test Id: 168 - DIVVA gen
OK   UME::SIMD::SIMD4_32u test Id: 169 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD4_32u test Id: 170 - MDIVVA
OK   UME::SIMD::SIMD4_32u test Id: 171 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_32u test Id: 172 - DIVSA
OK   UME::SIMD::SIMD4_32u test Id: 173 - DIVSA(operator/=)
OK   UME::SIMD::SIMD4_32u test Id: 174 - MDIVSA
OK   UME::SIMD::SIMD4_32u test Id: 175 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD4_32u test Id: 176 - RCP
OK   UME::SIMD::SIMD4_32u test Id: 177 - RCP(function)
OK   UME::SIMD::SIMD4_32u test Id: 178 - MRCP
OK   UME::SIMD::SIMD4_32u test Id: 179 - MRCP(function)
OK   UME::SIMD::SIMD4_32u test Id: 180 - RCPS
OK   UME::SIMD::SIMD4_32u test Id: 181 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 182 - RCPS(function)
OK   UME::SIMD::SIMD4_32u test Id: 183 - MRCPS
OK   UME::SIMD::SIMD4_32u test Id: 184 - MRCPS (function)
OK   UME::SIMD::SIMD4_32u test Id: 185 - RCPA
OK   UME::SIMD::SIMD4_32u test Id: 186 - MRCPA
OK   UME::SIMD::SIMD4_32u test Id: 187 - RCPSA
OK   UME::SIMD::SIMD4_32u test Id: 188 - MRCPSA
OK   UME::SIMD::SIMD4_32u test Id: 189 - CMPEQV
OK   UME::SIMD::SIMD4_32u test Id: 190 - CMPEQV(operator==)
OK   UME::SIMD::SIMD4_32u test Id: 191 - CMPEQV(function)
OK   UME::SIMD::SIMD4_32u test Id: 192 - CMPEQS
OK   UME::SIMD::SIMD4_32u test Id: 193 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 194 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 195 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 196 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 197 - CMPNEV
OK   UME::SIMD::SIMD4_32u test Id: 198 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD4_32u test Id: 199 - CMPNEV(function)
OK   UME::SIMD::SIMD4_32u test Id: 200 - CMPNES
OK   UME::SIMD::SIMD4_32u test Id: 201 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 202 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 203 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 204 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 205 - CMPGTV
OK   UME::SIMD::SIMD4_32u test Id: 206 - CMPGTV(operator>)
OK   UME::SIMD::SIMD4_32u test Id: 207 - CMPGTV(function)
OK   UME::SIMD::SIMD4_32u test Id: 208 - CMPGTS
OK   UME::SIMD::SIMD4_32u test Id: 209 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 210 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 211 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 212 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 213 - CMPLTV
OK   UME::SIMD::SIMD4_32u test Id: 214 - CMPLTV(operator<)
OK   UME::SIMD::SIMD4_32u test Id: 215 - CMPLTV(function)
OK   UME::SIMD::SIMD4_32u test Id: 216 - CMPLTS
OK   UME::SIMD::SIMD4_32u test Id: 217 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 218 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 219 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 220 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 221 - CMPGEV
OK   UME::SIMD::SIMD4_32u test Id: 222 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD4_32u test Id: 223 - CMPGEV(function)
OK   UME::SIMD::SIMD4_32u test Id: 224 - CMPGES
OK   UME::SIMD::SIMD4_32u test Id: 225 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 226 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 227 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 228 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 229 - CMPLEV
OK   UME::SIMD::SIMD4_32u test Id: 230 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD4_32u test Id: 231 - CMPLEV(function)
OK   UME::SIMD::SIMD4_32u test Id: 232 - CMPLES
OK   UME::SIMD::SIMD4_32u test Id: 233 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 234 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 235 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 236 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 237 - CMPEV
OK   UME::SIMD::SIMD4_32u test Id: 238 - CMPEV(function)
OK   UME::SIMD::SIMD4_32u test Id: 239 - CMPES
OK   UME::SIMD::SIMD4_32u test Id: 240 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 241 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 242 - HADD
OK   UME::SIMD::SIMD4_32u test Id: 243 - HADD(function)
OK   UME::SIMD::SIMD4_32u test Id: 244 - HADD gen
OK   UME::SIMD::SIMD4_32u test Id: 245 - HADD(function) gen
OK   UME::SIMD::SIMD4_32u test Id: 246 - MHADD gen
OK   UME::SIMD::SIMD4_32u test Id: 247 - MHADD(function) gen
OK   UME::SIMD::SIMD4_32u test Id: 248 - HADDS gen
OK   UME::SIMD::SIMD4_32u test Id: 249 - HADDS(function) gen
OK   UME::SIMD::SIMD4_32u test Id: 250 - MHADD gen
OK   UME::SIMD::SIMD4_32u test Id: 251 - MHADDS(function) gen
OK   UME::SIMD::SIMD4_32u test Id: 252 - HMUL gen
OK   UME::SIMD::SIMD4_32u test Id: 253 - HMUL(function) gen
OK   UME::SIMD::SIMD4_32u test Id: 254 - MHMUL gen
OK   UME::SIMD::SIMD4_32u test Id: 255 - MHMUL(function) gen
OK   UME::SIMD::SIMD4_32u test Id: 256 - HMULS gen
OK   UME::SIMD::SIMD4_32u test Id: 257 - HMULS(function) gen
OK   UME::SIMD::SIMD4_32u test Id: 258 - MHMUL gen
OK   UME::SIMD::SIMD4_32u test Id: 259 - MHMULS(function) gen
OK   UME::SIMD::SIMD4_32u test Id: 260 - FMULADDV
OK   UME::SIMD::SIMD4_32u test Id: 261 - FMULADDV(function)
OK   UME::SIMD::SIMD4_32u test Id: 262 - MFMULADDV
OK   UME::SIMD::SIMD4_32u test Id: 263 - MFMULADDV(function)
OK   UME::SIMD::SIMD4_32u test Id: 264 - FMULSUBV
OK   UME::SIMD::SIMD4_32u test Id: 265 - FMULSUBV(function)
OK   UME::SIMD::SIMD4_32u test Id: 266 - MFMULSUBV
OK   UME::SIMD::SIMD4_32u test Id: 267 - MFMULSUBV(function)
OK   UME::SIMD::SIMD4_32u test Id: 268 - FADDMULV
OK   UME::SIMD::SIMD4_32u test Id: 269 - FADDMULV(function)
OK   UME::SIMD::SIMD4_32u test Id: 270 - MFADDMULV
OK   UME::SIMD::SIMD4_32u test Id: 271 - MFADDMULV(function)
OK   UME::SIMD::SIMD4_32u test Id: 272 - FSUBMULV
OK   UME::SIMD::SIMD4_32u test Id: 273 - FSUBMULV(function)
OK   UME::SIMD::SIMD4_32u test Id: 274 - MFSUBMULV
OK   UME::SIMD::SIMD4_32u test Id: 275 - MFSUBMULV(function)
OK   UME::SIMD::SIMD4_32u test Id: 276 - MAXV
OK   UME::SIMD::SIMD4_32u test Id: 277 - MAXV(function)
OK   UME::SIMD::SIMD4_32u test Id: 278 - MMAXV
OK   UME::SIMD::SIMD4_32u test Id: 279 - MMAXV(function)
OK   UME::SIMD::SIMD4_32u test Id: 280 - MAXS
OK   UME::SIMD::SIMD4_32u test Id: 281 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 282 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 283 - MMAXS
OK   UME::SIMD::SIMD4_32u test Id: 284 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 285 - MAXVA
OK   UME::SIMD::SIMD4_32u test Id: 286 - MMAXVA
OK   UME::SIMD::SIMD4_32u test Id: 287 - MAXSA
OK   UME::SIMD::SIMD4_32u test Id: 288 - MMAXSA
OK   UME::SIMD::SIMD4_32u test Id: 289 - MINV
OK   UME::SIMD::SIMD4_32u test Id: 290 - MINV(function)
OK   UME::SIMD::SIMD4_32u test Id: 291 - MMINV
OK   UME::SIMD::SIMD4_32u test Id: 292 - MMINV(function)
OK   UME::SIMD::SIMD4_32u test Id: 293 - MINS
OK   UME::SIMD::SIMD4_32u test Id: 294 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD4_32u test Id: 295 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD4_32u test Id: 296 - MMINS
OK   UME::SIMD::SIMD4_32u test Id: 297 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 298 - MINVA
OK   UME::SIMD::SIMD4_32u test Id: 299 - MMINVA
OK   UME::SIMD::SIMD4_32u test Id: 300 - MINSA
OK   UME::SIMD::SIMD4_32u test Id: 301 - MMINSA
OK   UME::SIMD::SIMD4_32u test Id: 302 - HMAX
OK   UME::SIMD::SIMD4_32u test Id: 303 - HMAX(function)
OK   UME::SIMD::SIMD4_32u test Id: 304 - HMAX
OK   UME::SIMD::SIMD4_32u test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD4_32u test Id: 306 - MHMAX
OK   UME::SIMD::SIMD4_32u test Id: 307 - MHMAX(function)
OK   UME::SIMD::SIMD4_32u test Id: 308 - IMAX
OK   UME::SIMD::SIMD4_32u test Id: 309 - IMAX(function)
OK   UME::SIMD::SIMD4_32u test Id: 310 - MIMAX
OK   UME::SIMD::SIMD4_32u test Id: 311 - MIMAX(function)
OK   UME::SIMD::SIMD4_32u test Id: 312 - HMIN
OK   UME::SIMD::SIMD4_32u test Id: 313 - HMIN(function)
OK   UME::SIMD::SIMD4_32u test Id: 314 - HMIN
OK   UME::SIMD::SIMD4_32u test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD4_32u test Id: 316 - MHMIN gen
OK   UME::SIMD::SIMD4_32u test Id: 317 - MHMIN(function) gen
OK   UME::SIMD::SIMD4_32u test Id: 318 - IMIN
OK   UME::SIMD::SIMD4_32u test Id: 319 - IMIN(function)
OK   UME::SIMD::SIMD4_32u test Id: 320 - MIMIN
OK   UME::SIMD::SIMD4_32u test Id: 321 - MIMIN(function)
OK   UME::SIMD::SIMD4_32u test Id: 322 - REMV gen
OK   UME::SIMD::SIMD4_32u test Id: 323 - REMV(operator%) gen
OK   UME::SIMD::SIMD4_32u test Id: 324 - REMV(function) gen
OK   UME::SIMD::SIMD4_32u test Id: 325 - MREMV gen
OK   UME::SIMD::SIMD4_32u test Id: 326 - MREMV(function) gen
OK   UME::SIMD::SIMD4_32u test Id: 327 - REMS gen
OK   UME::SIMD::SIMD4_32u test Id: 328 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD4_32u test Id: 329 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD4_32u test Id: 330 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD4_32u test Id: 331 - LANDV gen
OK   UME::SIMD::SIMD4_32u test Id: 332 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD4_32u test Id: 333 - LORV gen
OK   UME::SIMD::SIMD4_32u test Id: 334 - LORV gen (operator ||)
OK   UME::SIMD::SIMD4_32u test Id: 335 - BANDV
OK   UME::SIMD::SIMD4_32u test Id: 336 - BANDV(operator&)
OK   UME::SIMD::SIMD4_32u test Id: 337 - BANDV(function)
OK   UME::SIMD::SIMD4_32u test Id: 338 - MBANDV
OK   UME::SIMD::SIMD4_32u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD4_32u test Id: 340 - BANDS
OK   UME::SIMD::SIMD4_32u test Id: 341 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 342 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 343 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 344 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 345 - MBANDS
OK   UME::SIMD::SIMD4_32u test Id: 346 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 347 - BANDVA
OK   UME::SIMD::SIMD4_32u test Id: 348 - MBANDVA
OK   UME::SIMD::SIMD4_32u test Id: 349 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD4_32u test Id: 350 - BANDSA
OK   UME::SIMD::SIMD4_32u test Id: 351 - MBANDSA
OK   UME::SIMD::SIMD4_32u test Id: 352 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD4_32u test Id: 353 - BORV
OK   UME::SIMD::SIMD4_32u test Id: 354 - BORV(operator |)
OK   UME::SIMD::SIMD4_32u test Id: 355 - BORV(function)
OK   UME::SIMD::SIMD4_32u test Id: 356 - MBORV
OK   UME::SIMD::SIMD4_32u test Id: 357 - MBORV(function)
OK   UME::SIMD::SIMD4_32u test Id: 358 - BORS
OK   UME::SIMD::SIMD4_32u test Id: 359 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 360 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 361 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 362 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 363 - MBORS
OK   UME::SIMD::SIMD4_32u test Id: 364 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 365 - BORVA
OK   UME::SIMD::SIMD4_32u test Id: 366 - BORVA(operator|=)
OK   UME::SIMD::SIMD4_32u test Id: 367 - MBORVA
OK   UME::SIMD::SIMD4_32u test Id: 368 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD4_32u test Id: 369 - BORSA
OK   UME::SIMD::SIMD4_32u test Id: 370 - BORSA(operator|=)
OK   UME::SIMD::SIMD4_32u test Id: 371 - MBORSA
OK   UME::SIMD::SIMD4_32u test Id: 372 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD4_32u test Id: 373 - BXORV
OK   UME::SIMD::SIMD4_32u test Id: 374 - BXORV(operator^
OK   UME::SIMD::SIMD4_32u test Id: 375 - BXORV(function
OK   UME::SIMD::SIMD4_32u test Id: 376 - MBXORV
OK   UME::SIMD::SIMD4_32u test Id: 377 - MBXORV(function)
OK   UME::SIMD::SIMD4_32u test Id: 378 - BXORS
OK   UME::SIMD::SIMD4_32u test Id: 379 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 380 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 381 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 382 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 383 - MBXORS
OK   UME::SIMD::SIMD4_32u test Id: 384 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 385 - BXORVA
OK   UME::SIMD::SIMD4_32u test Id: 386 - BXORVA(operator^=)
OK   UME::SIMD::SIMD4_32u test Id: 387 - MBXORVA
OK   UME::SIMD::SIMD4_32u test Id: 388 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD4_32u test Id: 389 - BXORSA
OK   UME::SIMD::SIMD4_32u test Id: 390 - BXORSA(operator^=)
OK   UME::SIMD::SIMD4_32u test Id: 391 - MBXORSA
OK   UME::SIMD::SIMD4_32u test Id: 392 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD4_32u test Id: 393 - BNOT
OK   UME::SIMD::SIMD4_32u test Id: 394 - BNOT(operator!)
OK   UME::SIMD::SIMD4_32u test Id: 395 - BNOT(function)
OK   UME::SIMD::SIMD4_32u test Id: 396 - MBNOT
OK   UME::SIMD::SIMD4_32u test Id: 397 - MBNOT(function)
OK   UME::SIMD::SIMD4_32u test Id: 398 - BNOTA
OK   UME::SIMD::SIMD4_32u test Id: 399 - MBNOTA
OK   UME::SIMD::SIMD4_32u test Id: 400 - BANDNOTV
OK   UME::SIMD::SIMD4_32u test Id: 401 - BANDNOTV (function)
OK   UME::SIMD::SIMD4_32u test Id: 402 - MBANDNOTV
OK   UME::SIMD::SIMD4_32u test Id: 403 - MBANDNOTV (function)
OK   UME::SIMD::SIMD4_32u test Id: 404 - BANDNOTS
OK   UME::SIMD::SIMD4_32u test Id: 405 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD4_32u test Id: 406 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD4_32u test Id: 407 - MBANDNOTS
OK   UME::SIMD::SIMD4_32u test Id: 408 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD4_32u test Id: 409 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD4_32u test Id: 410 - BANDNOTVA
OK   UME::SIMD::SIMD4_32u test Id: 411 - MBANDNOTVA
OK   UME::SIMD::SIMD4_32u test Id: 412 - BANDNOTSA
OK   UME::SIMD::SIMD4_32u test Id: 413 - MBANDNOTSA
OK   UME::SIMD::SIMD4_32u test Id: 414 - HBAND
OK   UME::SIMD::SIMD4_32u test Id: 415 - HBAND
OK   UME::SIMD::SIMD4_32u test Id: 416 - MHBAND
OK   UME::SIMD::SIMD4_32u test Id: 417 - MHBAND(function)
OK   UME::SIMD::SIMD4_32u test Id: 418 - HBANDS
OK   UME::SIMD::SIMD4_32u test Id: 419 - MHBANDS
OK   UME::SIMD::SIMD4_32u test Id: 420 - HBOR
OK   UME::SIMD::SIMD4_32u test Id: 421 - HBOR(function)
OK   UME::SIMD::SIMD4_32u test Id: 422 - MHBOR
OK   UME::SIMD::SIMD4_32u test Id: 423 - MHBOR(function)
OK   UME::SIMD::SIMD4_32u test Id: 424 - HBORS
OK   UME::SIMD::SIMD4_32u test Id: 425 - MHBORS
OK   UME::SIMD::SIMD4_32u test Id: 426 - HBXOR
OK   UME::SIMD::SIMD4_32u test Id: 427 - HBXOR(function)
OK   UME::SIMD::SIMD4_32u test Id: 428 - MHBXOR
OK   UME::SIMD::SIMD4_32u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD4_32u test Id: 430 - HBXORS
OK   UME::SIMD::SIMD4_32u test Id: 431 - MHBXORS
OK   UME::SIMD::SIMD4_32u test Id: 432 - GATHERU
OK   UME::SIMD::SIMD4_32u test Id: 433 - MGATHERU
OK   UME::SIMD::SIMD4_32u test Id: 434 - GATHERS
OK   UME::SIMD::SIMD4_32u test Id: 435 - MGATHERS
OK   UME::SIMD::SIMD4_32u test Id: 436 - GATHERV
OK   UME::SIMD::SIMD4_32u test Id: 437 - MGATHERV
OK   UME::SIMD::SIMD4_32u test Id: 438 - SCATTERU
OK   UME::SIMD::SIMD4_32u test Id: 439 - MSCATTERU
OK   UME::SIMD::SIMD4_32u test Id: 440 - SCATTERS
OK   UME::SIMD::SIMD4_32u test Id: 441 - MSCATTERS
OK   UME::SIMD::SIMD4_32u test Id: 442 - SCATTERV
OK   UME::SIMD::SIMD4_32u test Id: 443 - MSCATTERV
OK   UME::SIMD::SIMD4_32u test Id: 444 - LSHV gen
OK   UME::SIMD::SIMD4_32u test Id: 445 - LSHV (function) gen
OK   UME::SIMD::SIMD4_32u test Id: 446 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD4_32u test Id: 447 - MLSHV gen
OK   UME::SIMD::SIMD4_32u test Id: 448 - MLSHV (function) gen
OK   UME::SIMD::SIMD4_32u test Id: 449 - LSHS gen
OK   UME::SIMD::SIMD4_32u test Id: 450 - LSHS (function) gen
OK   UME::SIMD::SIMD4_32u test Id: 451 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD4_32u test Id: 452 - MLSHS gen
OK   UME::SIMD::SIMD4_32u test Id: 453 - MLSHS (function) gen
OK   UME::SIMD::SIMD4_32u test Id: 454 - LSHVA gen
OK   UME::SIMD::SIMD4_32u test Id: 455 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD4_32u test Id: 456 - MLSHVA gen
OK   UME::SIMD::SIMD4_32u test Id: 457 - LSHSA gen
OK   UME::SIMD::SIMD4_32u test Id: 458 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD4_32u test Id: 459 - MLSHSA gen
OK   UME::SIMD::SIMD4_32u test Id: 460 - RSHV gen
OK   UME::SIMD::SIMD4_32u test Id: 461 - RSHV (function) gen
OK   UME::SIMD::SIMD4_32u test Id: 462 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD4_32u test Id: 463 - MRSHV gen
OK   UME::SIMD::SIMD4_32u test Id: 464 - MRSHV (function) gen
OK   UME::SIMD::SIMD4_32u test Id: 465 - RSHS gen
OK   UME::SIMD::SIMD4_32u test Id: 466 - RSHS (function) gen
OK   UME::SIMD::SIMD4_32u test Id: 467 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD4_32u test Id: 468 - MRSHS gen
OK   UME::SIMD::SIMD4_32u test Id: 469 - MRSHS (function) gen
OK   UME::SIMD::SIMD4_32u test Id: 470 - RSHVA gen
OK   UME::SIMD::SIMD4_32u test Id: 471 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD4_32u test Id: 472 - MRSHVA gen
OK   UME::SIMD::SIMD4_32u test Id: 473 - RSHSA gen
OK   UME::SIMD::SIMD4_32u test Id: 474 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD4_32u test Id: 475 - MRSHSA gen
OK   UME::SIMD::SIMD4_32u test Id: 476 - ROLV
OK   UME::SIMD::SIMD4_32u test Id: 477 - ROLV(function)
OK   UME::SIMD::SIMD4_32u test Id: 478 - MROLV
OK   UME::SIMD::SIMD4_32u test Id: 479 - MROLV(function)
OK   UME::SIMD::SIMD4_32u test Id: 480 - ROLS
OK   UME::SIMD::SIMD4_32u test Id: 481 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 482 - MROLS
OK   UME::SIMD::SIMD4_32u test Id: 483 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 484 - ROLVA
OK   UME::SIMD::SIMD4_32u test Id: 485 - MROLVA
OK   UME::SIMD::SIMD4_32u test Id: 486 - ROLSA
OK   UME::SIMD::SIMD4_32u test Id: 487 - MROLSA
OK   UME::SIMD::SIMD4_32u test Id: 488 - RORV
OK   UME::SIMD::SIMD4_32u test Id: 489 - RORV(function)
OK   UME::SIMD::SIMD4_32u test Id: 490 - MRORV
OK   UME::SIMD::SIMD4_32u test Id: 491 - MRORV(function)
OK   UME::SIMD::SIMD4_32u test Id: 492 - RORS
OK   UME::SIMD::SIMD4_32u test Id: 493 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 494 - MRORS
OK   UME::SIMD::SIMD4_32u test Id: 495 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32u test Id: 496 - RORVA
OK   UME::SIMD::SIMD4_32u test Id: 497 - MRORVA
OK   UME::SIMD::SIMD4_32u test Id: 498 - RORSA
OK   UME::SIMD::SIMD4_32u test Id: 499 - MRORSA
OK   UME::SIMD::SIMD4_32u test Id: 500 - UTOI
OK   UME::SIMD::SIMD4_32u test Id: 501 - UTOF
OK   UME::SIMD::SIMD4_32u test Id: 502 - PACK
OK   UME::SIMD::SIMD4_32u test Id: 503 - PACKLO
OK   UME::SIMD::SIMD4_32u test Id: 504 - PACKHI
OK   UME::SIMD::SIMD4_32u test Id: 505 - UNPACK
OK   UME::SIMD::SIMD4_32u test Id: 506 - UNPACKLO
OK   UME::SIMD::SIMD4_32u test Id: 507 - UNPACKHi
OK   UME::SIMD::SIMD4_32u test Id: 508 - PROMOTE
OK   UME::SIMD::SIMD4_32u test Id: 509 - DEGRADE
OK   UME::SIMD::SIMD4_32u test Id: 510 - ZERO-CONSTR
OK   UME::SIMD::SIMD4_32u test Id: 511 - SET-CONSTR
OK   UME::SIMD::SIMD4_32u test Id: 512 - FULL-CONSTR
OK   UME::SIMD::SIMD4_32u test Id: 513 - ITOU operator uint_vec()
OK   UME::SIMD::SIMD4_32u test Id: 514 - LENGTH
OK   UME::SIMD::SIMD4_32u test Id: 515 - ALIGNMENT
OK   UME::SIMD::SIMD4_32u test Id: 516 - ASSIGNV
OK   UME::SIMD::SIMD4_32u test Id: 517 - LOADA
OK   UME::SIMD::SIMD4_32u test Id: 518 - STORE
OK   UME::SIMD::SIMD4_32u test Id: 519 - STOREA
OK   UME::SIMD::SIMD4_32u test Id: 520 - ADDV
OK   UME::SIMD::SIMD4_32u test Id: 521 - ADDV(operator+)
OK   UME::SIMD::SIMD4_32u test Id: 522 - MADDV
OK   UME::SIMD::SIMD4_32u test Id: 523 - ADDS
OK   UME::SIMD::SIMD4_32u test Id: 524 - MADDS
OK   UME::SIMD::SIMD4_32u test Id: 525 - ADDVA
OK   UME::SIMD::SIMD4_32u test Id: 526 - ADDVA(operator+=)
OK   UME::SIMD::SIMD4_32u test Id: 527 - ADDSA
OK   UME::SIMD::SIMD4_32u test Id: 528 - SADDV
OK   UME::SIMD::SIMD4_32u test Id: 529 - MSADDV
OK   UME::SIMD::SIMD4_32u test Id: 530 - SADDS
OK   UME::SIMD::SIMD4_32u test Id: 531 - MSADDS
OK   UME::SIMD::SIMD4_32u test Id: 532 - SADDVA
OK   UME::SIMD::SIMD4_32u test Id: 533 - MSADDVA
OK   UME::SIMD::SIMD4_32u test Id: 534 - SADDSA
OK   UME::SIMD::SIMD4_32u test Id: 535 - MSADDSA
OK   UME::SIMD::SIMD4_32u test Id: 536 - POSTINC 1
OK   UME::SIMD::SIMD4_32u test Id: 537 - POSTINC 2
OK   UME::SIMD::SIMD4_32u test Id: 538 - POSTINC 1(operator++)
OK   UME::SIMD::SIMD4_32u test Id: 539 - POSTINC 2(operator++)
OK   UME::SIMD::SIMD4_32u test Id: 540 - PREFINC 1
OK   UME::SIMD::SIMD4_32u test Id: 541 - PREFINC 2
OK   UME::SIMD::SIMD4_32u test Id: 542 - PREFINC 1(operator++)
OK   UME::SIMD::SIMD4_32u test Id: 543 - PREFINC 2(operator++)
OK   UME::SIMD::SIMD4_32u test Id: 544 - SUBV
OK   UME::SIMD::SIMD4_32u test Id: 545 - SUBV(operator-)
OK   UME::SIMD::SIMD4_32u test Id: 546 - SUBS
OK   UME::SIMD::SIMD4_32u test Id: 547 - SUBVA
OK   UME::SIMD::SIMD4_32u test Id: 548 - SUBVA(operator-=)
OK   UME::SIMD::SIMD4_32u test Id: 549 - SUBSA
OK   UME::SIMD::SIMD4_32u test Id: 550 - POSTDEC 1
OK   UME::SIMD::SIMD4_32u test Id: 551 - POSTDEC 2
OK   UME::SIMD::SIMD4_32u test Id: 552 - POSTDEC 1(operator--)
OK   UME::SIMD::SIMD4_32u test Id: 553 - POSTDEC 2(operaotr--)
OK   UME::SIMD::SIMD4_32u test Id: 554 - PREFDEC 1(operator--)
OK   UME::SIMD::SIMD4_32u test Id: 555 - PREFDEC 2(operator--)
OK   UME::SIMD::SIMD4_32u test Id: 556 - MULV 1
OK   UME::SIMD::SIMD4_32u test Id: 557 - MULV 1(operator*)
OK   UME::SIMD::SIMD4_32u test Id: 558 - MULV 2
OK   UME::SIMD::SIMD4_32u test Id: 559 - MULV 2(operator*)
OK   UME::SIMD::SIMD4_32u test Id: 560 - MULS 1
OK   UME::SIMD::SIMD4_32u test Id: 561 - MULS 2
OK   UME::SIMD::SIMD4_32u test Id: 562 - MULVA
OK   UME::SIMD::SIMD4_32u test Id: 563 - MULVA(operator*=)
OK   UME::SIMD::SIMD4_32u test Id: 564 - MULSA
OK   UME::SIMD::SIMD4_32u test Id: 565 - DIVV
OK   UME::SIMD::SIMD4_32u test Id: 566 - DIVV(operator/)
OK   UME::SIMD::SIMD4_32u test Id: 567 - DIVS
OK   UME::SIMD::SIMD4_32u test Id: 568 - DIVVA
OK   UME::SIMD::SIMD4_32u test Id: 569 - DIVVA(operator/=)
OK   UME::SIMD::SIMD4_32u test Id: 570 - DIVSA
OK   UME::SIMD::SIMD4_32u test Id: 571 - RCPS
OK   UME::SIMD::SIMD4_32u test Id: 572 - GATHERS
OK   UME::SIMD::SIMD4_32u test Id: 573 - MGATHERS
OK   UME::SIMD::SIMD4_32u test Id: 574 - GATHERV
OK   UME::SIMD::SIMD4_32u test Id: 575 - MGATHERV
OK   UME::SIMD::SIMD4_32u test Id: 576 - SCATTERS
OK   UME::SIMD::SIMD4_32u test Id: 577 - SCATTERV
OK   UME::SIMD::SIMD4_32u test Id: 578 - MSCATTERV
OK   UME::SIMD::SIMD4_32u test Id: 579 - ROLV
OK   UME::SIMD::SIMD4_32u test Id: 580 - MROLV
OK   UME::SIMD::SIMD4_32u test Id: 581 - ROLS
OK   UME::SIMD::SIMD4_32u test Id: 582 - MROLS
OK   UME::SIMD::SIMD4_32u test Id: 583 - ROLVA
OK   UME::SIMD::SIMD4_32u test Id: 584 - MROLVA
OK   UME::SIMD::SIMD4_32u test Id: 585 - ROLSA
OK   UME::SIMD::SIMD4_32u test Id: 586 - CMPEQV
OK   UME::SIMD::SIMD4_32u test Id: 587 - CMPEQV(operator==)
OK   UME::SIMD::SIMD4_32u test Id: 588 - CMPEQS
OK   UME::SIMD::SIMD4_32u test Id: 589 - CMPNEV
OK   UME::SIMD::SIMD4_32u test Id: 590 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD4_32u test Id: 591 - CMPNES
OK   UME::SIMD::SIMD4_32u test Id: 592 - CMPGTV
OK   UME::SIMD::SIMD4_32u test Id: 593 - CMPGTV(operator>)
OK   UME::SIMD::SIMD4_32u test Id: 594 - CMPGTS
OK   UME::SIMD::SIMD4_32u test Id: 595 - CMPLTV
OK   UME::SIMD::SIMD4_32u test Id: 596 - CMPLTV(operator<)
OK   UME::SIMD::SIMD4_32u test Id: 597 - CMPLTS
OK   UME::SIMD::SIMD4_32u test Id: 598 - CMPGEV
OK   UME::SIMD::SIMD4_32u test Id: 599 - CMPGEV(operator >=)
OK   UME::SIMD::SIMD4_32u test Id: 600 - CMPGES
OK   UME::SIMD::SIMD4_32u test Id: 601 - CMPLEV
OK   UME::SIMD::SIMD4_32u test Id: 602 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD4_32u test Id: 603 - CMPLES
OK   UME::SIMD::SIMD4_32u test Id: 604 - BANDV
OK   UME::SIMD::SIMD4_32u test Id: 605 - BANDV(operator&)
OK   UME::SIMD::SIMD4_32u test Id: 606 - BANDS
OK   UME::SIMD::SIMD4_32u test Id: 607 - MBANDS
OK   UME::SIMD::SIMD4_32u test Id: 608 - BANDVA
OK   UME::SIMD::SIMD4_32u test Id: 609 - BANDVA(operator&=)
OK   UME::SIMD::SIMD4_32u test Id: 610 - MBANDVA
OK   UME::SIMD::SIMD4_32u test Id: 611 - MBANDSA
OK   UME::SIMD::SIMD4_32u test Id: 612 - BNOT
OK   UME::SIMD::SIMD4_32u test Id: 613 - BNOT(operator~)
OK   UME::SIMD::SIMD4_32u test Id: 614 - MBNOT
OK   UME::SIMD::SIMD4_32u test Id: 615 - MBNOTA
OK   UME::SIMD::SIMD4_32u test Id: 616 - HBAND
OK   UME::SIMD::SIMD4_32u test Id: 617 - MHBAND
OK   UME::SIMD::SIMD4_32u test Id: 618 - HBANDS
OK   UME::SIMD::SIMD4_32u test Id: 619 - MHBANDS
OK   UME::SIMD::SIMD4_32u test Id: 620 - HBOR
OK   UME::SIMD::SIMD4_32u test Id: 621 - MHBOR
OK   UME::SIMD::SIMD4_32u test Id: 622 - HBORS
OK   UME::SIMD::SIMD4_32u test Id: 623 - MHBORS
OK   UME::SIMD::SIMD4_32u test Id: 624 - HMUL
OK   UME::SIMD::SIMD4_32u test Id: 625 - MHMUL
OK   UME::SIMD::SIMD4_32u test Id: 626 - HMULS
OK   UME::SIMD::SIMD4_32i test Id: 1 - SET-CONSTR gen
OK   UME::SIMD::SIMD4_32i test Id: 2 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD4_32i test Id: 3 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD4_32i test Id: 4 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD4_32i test Id: 5 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD4_32i test Id: 6 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD4_32i test Id: 7 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD4_32i test Id: 8 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD4_32i test Id: 9 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD4_32i test Id: 10 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD4_32i test Id: 11 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD4_32i test Id: 12 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD4_32i test Id: 13 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD4_32i test Id: 14 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD4_32i test Id: 15 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD4_32i test Id: 16 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD4_32i test Id: 17 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD4_32i test Id: 18 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD4_32i test Id: 19 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD4_32i test Id: 20 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD4_32i test Id: 21 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD4_32i test Id: 22 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD4_32i test Id: 23 - INSERT
OK   UME::SIMD::SIMD4_32i test Id: 24 - INSERT(operator[] =)
OK   UME::SIMD::SIMD4_32i test Id: 25 - EXTRACT
OK   UME::SIMD::SIMD4_32i test Id: 26 - EXTRACT(operator[])
OK   UME::SIMD::SIMD4_32i test Id: 27 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD4_32i test Id: 28 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD4_32i test Id: 29 - ASSIGNV
OK   UME::SIMD::SIMD4_32i test Id: 30 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD4_32i test Id: 31 - MASSIGNV
OK   UME::SIMD::SIMD4_32i test Id: 32 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD4_32i test Id: 33 - ASSIGNS
OK   UME::SIMD::SIMD4_32i test Id: 34 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD4_32i test Id: 35 - MASSIGNS
OK   UME::SIMD::SIMD4_32i test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD4_32i test Id: 37 - LOAD/STORE
OK   UME::SIMD::SIMD4_32i test Id: 38 - MLOAD
OK   UME::SIMD::SIMD4_32i test Id: 39 - MSTORE
OK   UME::SIMD::SIMD4_32i test Id: 40 - LOADA/STOREA
OK   UME::SIMD::SIMD4_32i test Id: 41 - MLOADA
OK   UME::SIMD::SIMD4_32i test Id: 42 - MSTOREA
OK   UME::SIMD::SIMD4_32i test Id: 43 - SWIZZLE
OK   UME::SIMD::SIMD4_32i test Id: 44 - SORTA
OK   UME::SIMD::SIMD4_32i test Id: 45 - SORTD
OK   UME::SIMD::SIMD4_32i test Id: 46 - BLENDV gen
OK   UME::SIMD::SIMD4_32i test Id: 47 - ADDV
OK   UME::SIMD::SIMD4_32i test Id: 48 - ADDV(operator+)
OK   UME::SIMD::SIMD4_32i test Id: 49 - ADDV(function)
OK   UME::SIMD::SIMD4_32i test Id: 50 - ADDV gen
OK   UME::SIMD::SIMD4_32i test Id: 51 - ADDV(operator+) gen
OK   UME::SIMD::SIMD4_32i test Id: 52 - ADDV(function) gen
OK   UME::SIMD::SIMD4_32i test Id: 53 - MADDV
OK   UME::SIMD::SIMD4_32i test Id: 54 - MADDV(function)
OK   UME::SIMD::SIMD4_32i test Id: 55 - MADDV gen
OK   UME::SIMD::SIMD4_32i test Id: 56 - MADDV(function) gen
OK   UME::SIMD::SIMD4_32i test Id: 57 - ADDS
OK   UME::SIMD::SIMD4_32i test Id: 58 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 59 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 60 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD4_32i test Id: 61 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD4_32i test Id: 62 - ADDS gen
OK   UME::SIMD::SIMD4_32i test Id: 63 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD4_32i test Id: 64 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD4_32i test Id: 65 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD4_32i test Id: 66 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD4_32i test Id: 67 - MADDS
OK   UME::SIMD::SIMD4_32i test Id: 68 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 69 - MADDS gen
OK   UME::SIMD::SIMD4_32i test Id: 70 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD4_32i test Id: 71 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD4_32i test Id: 72 - ADDVA
OK   UME::SIMD::SIMD4_32i test Id: 73 - ADDVA(operator+=)
OK   UME::SIMD::SIMD4_32i test Id: 74 - ADDVA gen
OK   UME::SIMD::SIMD4_32i test Id: 75 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD4_32i test Id: 76 - MADDVA
OK   UME::SIMD::SIMD4_32i test Id: 77 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD4_32i test Id: 78 - ADDSA
OK   UME::SIMD::SIMD4_32i test Id: 79 - ADDSA(operator+=)
OK   UME::SIMD::SIMD4_32i test Id: 80 - MADDSA
OK   UME::SIMD::SIMD4_32i test Id: 81 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD4_32i test Id: 82 - SADDV gen
OK   UME::SIMD::SIMD4_32i test Id: 83 - SADDV(function) gen
OK   UME::SIMD::SIMD4_32i test Id: 84 - POSTINC
OK   UME::SIMD::SIMD4_32i test Id: 85 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD4_32i test Id: 86 - POSTINC(function)
OK   UME::SIMD::SIMD4_32i test Id: 87 - MPOSTINC
OK   UME::SIMD::SIMD4_32i test Id: 88 - MPOSTINC(function)
OK   UME::SIMD::SIMD4_32i test Id: 89 - PREFINC
OK   UME::SIMD::SIMD4_32i test Id: 90 - PREFINC(operator++())
OK   UME::SIMD::SIMD4_32i test Id: 91 - PREFINC(function)
OK   UME::SIMD::SIMD4_32i test Id: 92 - MPREFINC
OK   UME::SIMD::SIMD4_32i test Id: 93 - MPREFINC(function)
OK   UME::SIMD::SIMD4_32i test Id: 94 - SUBV
OK   UME::SIMD::SIMD4_32i test Id: 95 - SUBV(operator-)
OK   UME::SIMD::SIMD4_32i test Id: 96 - SUBV(function)
OK   UME::SIMD::SIMD4_32i test Id: 97 - SUBV gen
OK   UME::SIMD::SIMD4_32i test Id: 98 - SUBV(operator-) gen
OK   UME::SIMD::SIMD4_32i test Id: 99 - SUBV(function) gen
OK   UME::SIMD::SIMD4_32i test Id: 100 - MSUBV
OK   UME::SIMD::SIMD4_32i test Id: 101 - MSUBV(function)
OK   UME::SIMD::SIMD4_32i test Id: 102 - MSUBV gen
OK   UME::SIMD::SIMD4_32i test Id: 103 - MSUBV(function) gen
OK   UME::SIMD::SIMD4_32i test Id: 104 - SUBS gen
OK   UME::SIMD::SIMD4_32i test Id: 105 - SUBS(operator-) gen
OK   UME::SIMD::SIMD4_32i test Id: 106 - SUBS(function) gen
OK   UME::SIMD::SIMD4_32i test Id: 107 - MSUBS
OK   UME::SIMD::SIMD4_32i test Id: 108 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 109 - SUBVA
OK   UME::SIMD::SIMD4_32i test Id: 110 - SUBVA(operator-=)
OK   UME::SIMD::SIMD4_32i test Id: 111 - MSUBVA
OK   UME::SIMD::SIMD4_32i test Id: 112 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD4_32i test Id: 113 - SUBSA
OK   UME::SIMD::SIMD4_32i test Id: 114 - MSUBSA
OK   UME::SIMD::SIMD4_32i test Id: 115 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD4_32i test Id: 116 - SUBFROMV
OK   UME::SIMD::SIMD4_32i test Id: 117 - MSUBFROMV
OK   UME::SIMD::SIMD4_32i test Id: 118 - SUBFROMS
OK   UME::SIMD::SIMD4_32i test Id: 119 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 120 - MSUBFROMS
OK   UME::SIMD::SIMD4_32i test Id: 121 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 122 - SUBFROMVA
OK   UME::SIMD::SIMD4_32i test Id: 123 - MSUBFROMVA
OK   UME::SIMD::SIMD4_32i test Id: 124 - SUBFROMSA
OK   UME::SIMD::SIMD4_32i test Id: 125 - MSUBFROMSA
OK   UME::SIMD::SIMD4_32i test Id: 126 - POSTDEC
OK   UME::SIMD::SIMD4_32i test Id: 127 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD4_32i test Id: 128 - POSTDEC(function)
OK   UME::SIMD::SIMD4_32i test Id: 129 - MPOSTDEC
OK   UME::SIMD::SIMD4_32i test Id: 130 - MPOSTDEC(function)
OK   UME::SIMD::SIMD4_32i test Id: 131 - PREFDEC
OK   UME::SIMD::SIMD4_32i test Id: 132 - PREFDEC(operator--())
OK   UME::SIMD::SIMD4_32i test Id: 133 - PREFDEC(function)
OK   UME::SIMD::SIMD4_32i test Id: 134 - MPREFDEC
OK   UME::SIMD::SIMD4_32i test Id: 135 - MPREFDEC(function)
OK   UME::SIMD::SIMD4_32i test Id: 136 - MULV
OK   UME::SIMD::SIMD4_32i test Id: 137 - MULV(operator*)
OK   UME::SIMD::SIMD4_32i test Id: 138 - MULV(function)
OK   UME::SIMD::SIMD4_32i test Id: 139 - MMULV
OK   UME::SIMD::SIMD4_32i test Id: 140 - MMULV(function)
OK   UME::SIMD::SIMD4_32i test Id: 141 - MULS
OK   UME::SIMD::SIMD4_32i test Id: 142 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 143 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 144 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 145 - MMULS
OK   UME::SIMD::SIMD4_32i test Id: 146 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 147 - MULVA
OK   UME::SIMD::SIMD4_32i test Id: 148 - MULVA(operator*)
OK   UME::SIMD::SIMD4_32i test Id: 149 - MULVA gen
OK   UME::SIMD::SIMD4_32i test Id: 150 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD4_32i test Id: 151 - MMULVA
OK   UME::SIMD::SIMD4_32i test Id: 152 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_32i test Id: 153 - MULSA
OK   UME::SIMD::SIMD4_32i test Id: 154 - MULSA(operator*=)
OK   UME::SIMD::SIMD4_32i test Id: 155 - MMULSA
OK   UME::SIMD::SIMD4_32i test Id: 156 - DIVV
OK   UME::SIMD::SIMD4_32i test Id: 157 - DIVV(operator/)
OK   UME::SIMD::SIMD4_32i test Id: 158 - DIVV(function)
OK   UME::SIMD::SIMD4_32i test Id: 159 - MDIVV
OK   UME::SIMD::SIMD4_32i test Id: 160 - MDIVV(function)
OK   UME::SIMD::SIMD4_32i test Id: 161 - DIVS
OK   UME::SIMD::SIMD4_32i test Id: 162 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 163 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 164 - MDIVS
OK   UME::SIMD::SIMD4_32i test Id: 165 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 166 - DIVVA
OK   UME::SIMD::SIMD4_32i test Id: 167 - DIVVA(operator/=)
OK   UME::SIMD::SIMD4_32i test Id: 168 - DIVVA gen
OK   UME::SIMD::SIMD4_32i test Id: 169 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD4_32i test Id: 170 - MDIVVA
OK   UME::SIMD::SIMD4_32i test Id: 171 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_32i test Id: 172 - DIVSA
OK   UME::SIMD::SIMD4_32i test Id: 173 - DIVSA(operator/=)
OK   UME::SIMD::SIMD4_32i test Id: 174 - MDIVSA
OK   UME::SIMD::SIMD4_32i test Id: 175 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD4_32i test Id: 176 - RCP
OK   UME::SIMD::SIMD4_32i test Id: 177 - RCP(function)
OK   UME::SIMD::SIMD4_32i test Id: 178 - MRCP
OK   UME::SIMD::SIMD4_32i test Id: 179 - MRCP(function)
OK   UME::SIMD::SIMD4_32i test Id: 180 - RCPS
OK   UME::SIMD::SIMD4_32i test Id: 181 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 182 - RCPS(function)
OK   UME::SIMD::SIMD4_32i test Id: 183 - MRCPS
OK   UME::SIMD::SIMD4_32i test Id: 184 - MRCPS (function)
OK   UME::SIMD::SIMD4_32i test Id: 185 - RCPA
OK   UME::SIMD::SIMD4_32i test Id: 186 - MRCPA
OK   UME::SIMD::SIMD4_32i test Id: 187 - RCPSA
OK   UME::SIMD::SIMD4_32i test Id: 188 - MRCPSA
OK   UME::SIMD::SIMD4_32i test Id: 189 - CMPEQV
OK   UME::SIMD::SIMD4_32i test Id: 190 - CMPEQV(operator==)
OK   UME::SIMD::SIMD4_32i test Id: 191 - CMPEQV(function)
OK   UME::SIMD::SIMD4_32i test Id: 192 - CMPEQS
OK   UME::SIMD::SIMD4_32i test Id: 193 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 194 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 195 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 196 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 197 - CMPNEV
OK   UME::SIMD::SIMD4_32i test Id: 198 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD4_32i test Id: 199 - CMPNEV(function)
OK   UME::SIMD::SIMD4_32i test Id: 200 - CMPNES
OK   UME::SIMD::SIMD4_32i test Id: 201 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 202 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 203 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 204 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 205 - CMPGTV
OK   UME::SIMD::SIMD4_32i test Id: 206 - CMPGTV(operator>)
OK   UME::SIMD::SIMD4_32i test Id: 207 - CMPGTV(function)
OK   UME::SIMD::SIMD4_32i test Id: 208 - CMPGTS
OK   UME::SIMD::SIMD4_32i test Id: 209 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 210 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 211 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 212 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 213 - CMPLTV
OK   UME::SIMD::SIMD4_32i test Id: 214 - CMPLTV(operator<)
OK   UME::SIMD::SIMD4_32i test Id: 215 - CMPLTV(function)
OK   UME::SIMD::SIMD4_32i test Id: 216 - CMPLTS
OK   UME::SIMD::SIMD4_32i test Id: 217 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 218 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 219 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 220 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 221 - CMPGEV
OK   UME::SIMD::SIMD4_32i test Id: 222 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD4_32i test Id: 223 - CMPGEV(function)
OK   UME::SIMD::SIMD4_32i test Id: 224 - CMPGES
OK   UME::SIMD::SIMD4_32i test Id: 225 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 226 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 227 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 228 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 229 - CMPLEV
OK   UME::SIMD::SIMD4_32i test Id: 230 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD4_32i test Id: 231 - CMPLEV(function)
OK   UME::SIMD::SIMD4_32i test Id: 232 - CMPLES
OK   UME::SIMD::SIMD4_32i test Id: 233 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 234 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 235 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 236 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 237 - CMPEV
OK   UME::SIMD::SIMD4_32i test Id: 238 - CMPEV(function)
OK   UME::SIMD::SIMD4_32i test Id: 239 - CMPES
OK   UME::SIMD::SIMD4_32i test Id: 240 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 241 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 242 - HADD
OK   UME::SIMD::SIMD4_32i test Id: 243 - HADD(function)
OK   UME::SIMD::SIMD4_32i test Id: 244 - HADD gen
OK   UME::SIMD::SIMD4_32i test Id: 245 - HADD(function) gen
OK   UME::SIMD::SIMD4_32i test Id: 246 - MHADD gen
OK   UME::SIMD::SIMD4_32i test Id: 247 - MHADD(function) gen
OK   UME::SIMD::SIMD4_32i test Id: 248 - HADDS gen
OK   UME::SIMD::SIMD4_32i test Id: 249 - HADDS(function) gen
OK   UME::SIMD::SIMD4_32i test Id: 250 - MHADD gen
OK   UME::SIMD::SIMD4_32i test Id: 251 - MHADDS(function) gen
OK   UME::SIMD::SIMD4_32i test Id: 252 - HMUL gen
OK   UME::SIMD::SIMD4_32i test Id: 253 - HMUL(function) gen
OK   UME::SIMD::SIMD4_32i test Id: 254 - MHMUL gen
OK   UME::SIMD::SIMD4_32i test Id: 255 - MHMUL(function) gen
OK   UME::SIMD::SIMD4_32i test Id: 256 - HMULS gen
OK   UME::SIMD::SIMD4_32i test Id: 257 - HMULS(function) gen
OK   UME::SIMD::SIMD4_32i test Id: 258 - MHMUL gen
OK   UME::SIMD::SIMD4_32i test Id: 259 - MHMULS(function) gen
OK   UME::SIMD::SIMD4_32i test Id: 260 - FMULADDV
OK   UME::SIMD::SIMD4_32i test Id: 261 - FMULADDV(function)
OK   UME::SIMD::SIMD4_32i test Id: 262 - MFMULADDV
OK   UME::SIMD::SIMD4_32i test Id: 263 - MFMULADDV(function)
OK   UME::SIMD::SIMD4_32i test Id: 264 - FMULSUBV
OK   UME::SIMD::SIMD4_32i test Id: 265 - FMULSUBV(function)
OK   UME::SIMD::SIMD4_32i test Id: 266 - MFMULSUBV
OK   UME::SIMD::SIMD4_32i test Id: 267 - MFMULSUBV(function)
OK   UME::SIMD::SIMD4_32i test Id: 268 - FADDMULV
OK   UME::SIMD::SIMD4_32i test Id: 269 - FADDMULV(function)
OK   UME::SIMD::SIMD4_32i test Id: 270 - MFADDMULV
OK   UME::SIMD::SIMD4_32i test Id: 271 - MFADDMULV(function)
OK   UME::SIMD::SIMD4_32i test Id: 272 - FSUBMULV
OK   UME::SIMD::SIMD4_32i test Id: 273 - FSUBMULV(function)
OK   UME::SIMD::SIMD4_32i test Id: 274 - MFSUBMULV
OK   UME::SIMD::SIMD4_32i test Id: 275 - MFSUBMULV(function)
OK   UME::SIMD::SIMD4_32i test Id: 276 - MAXV
OK   UME::SIMD::SIMD4_32i test Id: 277 - MAXV(function)
OK   UME::SIMD::SIMD4_32i test Id: 278 - MMAXV
OK   UME::SIMD::SIMD4_32i test Id: 279 - MMAXV(function)
OK   UME::SIMD::SIMD4_32i test Id: 280 - MAXS
OK   UME::SIMD::SIMD4_32i test Id: 281 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 282 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 283 - MMAXS
OK   UME::SIMD::SIMD4_32i test Id: 284 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 285 - MAXVA
OK   UME::SIMD::SIMD4_32i test Id: 286 - MMAXVA
OK   UME::SIMD::SIMD4_32i test Id: 287 - MAXSA
OK   UME::SIMD::SIMD4_32i test Id: 288 - MMAXSA
OK   UME::SIMD::SIMD4_32i test Id: 289 - MINV
OK   UME::SIMD::SIMD4_32i test Id: 290 - MINV(function)
OK   UME::SIMD::SIMD4_32i test Id: 291 - MMINV
OK   UME::SIMD::SIMD4_32i test Id: 292 - MMINV(function)
OK   UME::SIMD::SIMD4_32i test Id: 293 - MINS
OK   UME::SIMD::SIMD4_32i test Id: 294 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD4_32i test Id: 295 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD4_32i test Id: 296 - MMINS
OK   UME::SIMD::SIMD4_32i test Id: 297 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 298 - MINVA
OK   UME::SIMD::SIMD4_32i test Id: 299 - MMINVA
OK   UME::SIMD::SIMD4_32i test Id: 300 - MINSA
OK   UME::SIMD::SIMD4_32i test Id: 301 - MMINSA
OK   UME::SIMD::SIMD4_32i test Id: 302 - HMAX
OK   UME::SIMD::SIMD4_32i test Id: 303 - HMAX(function)
OK   UME::SIMD::SIMD4_32i test Id: 304 - HMAX
OK   UME::SIMD::SIMD4_32i test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD4_32i test Id: 306 - MHMAX
OK   UME::SIMD::SIMD4_32i test Id: 307 - MHMAX(function)
OK   UME::SIMD::SIMD4_32i test Id: 308 - IMAX
OK   UME::SIMD::SIMD4_32i test Id: 309 - IMAX(function)
OK   UME::SIMD::SIMD4_32i test Id: 310 - MIMAX
OK   UME::SIMD::SIMD4_32i test Id: 311 - MIMAX(function)
OK   UME::SIMD::SIMD4_32i test Id: 312 - HMIN
OK   UME::SIMD::SIMD4_32i test Id: 313 - HMIN(function)
OK   UME::SIMD::SIMD4_32i test Id: 314 - HMIN
OK   UME::SIMD::SIMD4_32i test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD4_32i test Id: 316 - MHMIN gen
OK   UME::SIMD::SIMD4_32i test Id: 317 - MHMIN(function) gen
OK   UME::SIMD::SIMD4_32i test Id: 318 - IMIN
OK   UME::SIMD::SIMD4_32i test Id: 319 - IMIN(function)
OK   UME::SIMD::SIMD4_32i test Id: 320 - MIMIN
OK   UME::SIMD::SIMD4_32i test Id: 321 - MIMIN(function)
OK   UME::SIMD::SIMD4_32i test Id: 322 - REMV gen
OK   UME::SIMD::SIMD4_32i test Id: 323 - REMV(operator%) gen
OK   UME::SIMD::SIMD4_32i test Id: 324 - REMV(function) gen
OK   UME::SIMD::SIMD4_32i test Id: 325 - MREMV gen
OK   UME::SIMD::SIMD4_32i test Id: 326 - MREMV(function) gen
OK   UME::SIMD::SIMD4_32i test Id: 327 - REMS gen
OK   UME::SIMD::SIMD4_32i test Id: 328 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD4_32i test Id: 329 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD4_32i test Id: 330 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD4_32i test Id: 331 - LANDV gen
OK   UME::SIMD::SIMD4_32i test Id: 332 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD4_32i test Id: 333 - LORV gen
OK   UME::SIMD::SIMD4_32i test Id: 334 - LORV gen (operator ||)
OK   UME::SIMD::SIMD4_32i test Id: 335 - BANDV
OK   UME::SIMD::SIMD4_32i test Id: 336 - BANDV(operator&)
OK   UME::SIMD::SIMD4_32i test Id: 337 - BANDV(function)
OK   UME::SIMD::SIMD4_32i test Id: 338 - MBANDV
OK   UME::SIMD::SIMD4_32i test Id: 339 - MBANDV
OK   UME::SIMD::SIMD4_32i test Id: 340 - BANDS
OK   UME::SIMD::SIMD4_32i test Id: 341 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 342 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 343 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 344 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 345 - MBANDS
OK   UME::SIMD::SIMD4_32i test Id: 346 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 347 - BANDVA
OK   UME::SIMD::SIMD4_32i test Id: 348 - MBANDVA
OK   UME::SIMD::SIMD4_32i test Id: 349 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD4_32i test Id: 350 - BANDSA
OK   UME::SIMD::SIMD4_32i test Id: 351 - MBANDSA
OK   UME::SIMD::SIMD4_32i test Id: 352 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD4_32i test Id: 353 - BORV
OK   UME::SIMD::SIMD4_32i test Id: 354 - BORV(operator |)
OK   UME::SIMD::SIMD4_32i test Id: 355 - BORV(function)
OK   UME::SIMD::SIMD4_32i test Id: 356 - MBORV
OK   UME::SIMD::SIMD4_32i test Id: 357 - MBORV(function)
OK   UME::SIMD::SIMD4_32i test Id: 358 - BORS
OK   UME::SIMD::SIMD4_32i test Id: 359 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 360 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 361 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 362 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 363 - MBORS
OK   UME::SIMD::SIMD4_32i test Id: 364 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 365 - BORVA
OK   UME::SIMD::SIMD4_32i test Id: 366 - BORVA(operator|=)
OK   UME::SIMD::SIMD4_32i test Id: 367 - MBORVA
OK   UME::SIMD::SIMD4_32i test Id: 368 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD4_32i test Id: 369 - BORSA
OK   UME::SIMD::SIMD4_32i test Id: 370 - BORSA(operator|=)
OK   UME::SIMD::SIMD4_32i test Id: 371 - MBORSA
OK   UME::SIMD::SIMD4_32i test Id: 372 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD4_32i test Id: 373 - BXORV
OK   UME::SIMD::SIMD4_32i test Id: 374 - BXORV(operator^
OK   UME::SIMD::SIMD4_32i test Id: 375 - BXORV(function
OK   UME::SIMD::SIMD4_32i test Id: 376 - MBXORV
OK   UME::SIMD::SIMD4_32i test Id: 377 - MBXORV(function)
OK   UME::SIMD::SIMD4_32i test Id: 378 - BXORS
OK   UME::SIMD::SIMD4_32i test Id: 379 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 380 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 381 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 382 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 383 - MBXORS
OK   UME::SIMD::SIMD4_32i test Id: 384 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 385 - BXORVA
OK   UME::SIMD::SIMD4_32i test Id: 386 - BXORVA(operator^=)
OK   UME::SIMD::SIMD4_32i test Id: 387 - MBXORVA
OK   UME::SIMD::SIMD4_32i test Id: 388 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD4_32i test Id: 389 - BXORSA
OK   UME::SIMD::SIMD4_32i test Id: 390 - BXORSA(operator^=)
OK   UME::SIMD::SIMD4_32i test Id: 391 - MBXORSA
OK   UME::SIMD::SIMD4_32i test Id: 392 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD4_32i test Id: 393 - BNOT
OK   UME::SIMD::SIMD4_32i test Id: 394 - BNOT(operator!)
OK   UME::SIMD::SIMD4_32i test Id: 395 - BNOT(function)
OK   UME::SIMD::SIMD4_32i test Id: 396 - MBNOT
OK   UME::SIMD::SIMD4_32i test Id: 397 - MBNOT(function)
OK   UME::SIMD::SIMD4_32i test Id: 398 - BNOTA
OK   UME::SIMD::SIMD4_32i test Id: 399 - MBNOTA
OK   UME::SIMD::SIMD4_32i test Id: 400 - BANDNOTV
OK   UME::SIMD::SIMD4_32i test Id: 401 - BANDNOTV (function)
OK   UME::SIMD::SIMD4_32i test Id: 402 - MBANDNOTV
OK   UME::SIMD::SIMD4_32i test Id: 403 - MBANDNOTV (function)
OK   UME::SIMD::SIMD4_32i test Id: 404 - BANDNOTS
OK   UME::SIMD::SIMD4_32i test Id: 405 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD4_32i test Id: 406 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD4_32i test Id: 407 - MBANDNOTS
OK   UME::SIMD::SIMD4_32i test Id: 408 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD4_32i test Id: 409 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD4_32i test Id: 410 - BANDNOTVA
OK   UME::SIMD::SIMD4_32i test Id: 411 - MBANDNOTVA
OK   UME::SIMD::SIMD4_32i test Id: 412 - BANDNOTSA
OK   UME::SIMD::SIMD4_32i test Id: 413 - MBANDNOTSA
OK   UME::SIMD::SIMD4_32i test Id: 414 - HBAND
OK   UME::SIMD::SIMD4_32i test Id: 415 - HBAND
OK   UME::SIMD::SIMD4_32i test Id: 416 - MHBAND
OK   UME::SIMD::SIMD4_32i test Id: 417 - MHBAND(function)
OK   UME::SIMD::SIMD4_32i test Id: 418 - HBANDS
OK   UME::SIMD::SIMD4_32i test Id: 419 - MHBANDS
OK   UME::SIMD::SIMD4_32i test Id: 420 - HBOR
OK   UME::SIMD::SIMD4_32i test Id: 421 - HBOR(function)
OK   UME::SIMD::SIMD4_32i test Id: 422 - MHBOR
OK   UME::SIMD::SIMD4_32i test Id: 423 - MHBOR(function)
OK   UME::SIMD::SIMD4_32i test Id: 424 - HBORS
OK   UME::SIMD::SIMD4_32i test Id: 425 - MHBORS
OK   UME::SIMD::SIMD4_32i test Id: 426 - HBXOR
OK   UME::SIMD::SIMD4_32i test Id: 427 - HBXOR(function)
OK   UME::SIMD::SIMD4_32i test Id: 428 - MHBXOR
OK   UME::SIMD::SIMD4_32i test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD4_32i test Id: 430 - HBXORS
OK   UME::SIMD::SIMD4_32i test Id: 431 - MHBXORS
OK   UME::SIMD::SIMD4_32i test Id: 432 - GATHERU
OK   UME::SIMD::SIMD4_32i test Id: 433 - MGATHERU
OK   UME::SIMD::SIMD4_32i test Id: 434 - GATHERS
OK   UME::SIMD::SIMD4_32i test Id: 435 - MGATHERS
OK   UME::SIMD::SIMD4_32i test Id: 436 - GATHERV
OK   UME::SIMD::SIMD4_32i test Id: 437 - MGATHERV
OK   UME::SIMD::SIMD4_32i test Id: 438 - SCATTERU
OK   UME::SIMD::SIMD4_32i test Id: 439 - MSCATTERU
OK   UME::SIMD::SIMD4_32i test Id: 440 - SCATTERS
OK   UME::SIMD::SIMD4_32i test Id: 441 - MSCATTERS
OK   UME::SIMD::SIMD4_32i test Id: 442 - SCATTERV
OK   UME::SIMD::SIMD4_32i test Id: 443 - MSCATTERV
OK   UME::SIMD::SIMD4_32i test Id: 444 - LSHV gen
OK   UME::SIMD::SIMD4_32i test Id: 445 - LSHV (function) gen
OK   UME::SIMD::SIMD4_32i test Id: 446 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD4_32i test Id: 447 - MLSHV gen
OK   UME::SIMD::SIMD4_32i test Id: 448 - MLSHV (function) gen
OK   UME::SIMD::SIMD4_32i test Id: 449 - LSHS gen
OK   UME::SIMD::SIMD4_32i test Id: 450 - LSHS (function) gen
OK   UME::SIMD::SIMD4_32i test Id: 451 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD4_32i test Id: 452 - MLSHS gen
OK   UME::SIMD::SIMD4_32i test Id: 453 - MLSHS (function) gen
OK   UME::SIMD::SIMD4_32i test Id: 454 - LSHVA gen
OK   UME::SIMD::SIMD4_32i test Id: 455 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD4_32i test Id: 456 - MLSHVA gen
OK   UME::SIMD::SIMD4_32i test Id: 457 - LSHSA gen
OK   UME::SIMD::SIMD4_32i test Id: 458 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD4_32i test Id: 459 - MLSHSA gen
OK   UME::SIMD::SIMD4_32i test Id: 460 - RSHV gen
OK   UME::SIMD::SIMD4_32i test Id: 461 - RSHV (function) gen
OK   UME::SIMD::SIMD4_32i test Id: 462 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD4_32i test Id: 463 - MRSHV gen
OK   UME::SIMD::SIMD4_32i test Id: 464 - MRSHV (function) gen
OK   UME::SIMD::SIMD4_32i test Id: 465 - RSHS gen
OK   UME::SIMD::SIMD4_32i test Id: 466 - RSHS (function) gen
OK   UME::SIMD::SIMD4_32i test Id: 467 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD4_32i test Id: 468 - MRSHS gen
OK   UME::SIMD::SIMD4_32i test Id: 469 - MRSHS (function) gen
OK   UME::SIMD::SIMD4_32i test Id: 470 - RSHVA gen
OK   UME::SIMD::SIMD4_32i test Id: 471 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD4_32i test Id: 472 - MRSHVA gen
OK   UME::SIMD::SIMD4_32i test Id: 473 - RSHSA gen
OK   UME::SIMD::SIMD4_32i test Id: 474 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD4_32i test Id: 475 - MRSHSA gen
OK   UME::SIMD::SIMD4_32i test Id: 476 - ROLV
OK   UME::SIMD::SIMD4_32i test Id: 477 - ROLV(function)
OK   UME::SIMD::SIMD4_32i test Id: 478 - MROLV
OK   UME::SIMD::SIMD4_32i test Id: 479 - MROLV(function)
OK   UME::SIMD::SIMD4_32i test Id: 480 - ROLS
OK   UME::SIMD::SIMD4_32i test Id: 481 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 482 - MROLS
OK   UME::SIMD::SIMD4_32i test Id: 483 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 484 - ROLVA
OK   UME::SIMD::SIMD4_32i test Id: 485 - MROLVA
OK   UME::SIMD::SIMD4_32i test Id: 486 - ROLSA
OK   UME::SIMD::SIMD4_32i test Id: 487 - MROLSA
OK   UME::SIMD::SIMD4_32i test Id: 488 - RORV
OK   UME::SIMD::SIMD4_32i test Id: 489 - RORV(function)
OK   UME::SIMD::SIMD4_32i test Id: 490 - MRORV
OK   UME::SIMD::SIMD4_32i test Id: 491 - MRORV(function)
OK   UME::SIMD::SIMD4_32i test Id: 492 - RORS
OK   UME::SIMD::SIMD4_32i test Id: 493 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 494 - MRORS
OK   UME::SIMD::SIMD4_32i test Id: 495 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32i test Id: 496 - RORVA
OK   UME::SIMD::SIMD4_32i test Id: 497 - MRORVA
OK   UME::SIMD::SIMD4_32i test Id: 498 - RORSA
OK   UME::SIMD::SIMD4_32i test Id: 499 - MRORSA
OK   UME::SIMD::SIMD4_32i test Id: 500 - NEG
OK   UME::SIMD::SIMD4_32i test Id: 501 - NEG(operator-)
OK   UME::SIMD::SIMD4_32i test Id: 502 - NEG(function)
OK   UME::SIMD::SIMD4_32i test Id: 503 - MNEG
OK   UME::SIMD::SIMD4_32i test Id: 504 - MNEG(function)
OK   UME::SIMD::SIMD4_32i test Id: 505 - NEGA
OK   UME::SIMD::SIMD4_32i test Id: 506 - MNEGA
OK   UME::SIMD::SIMD4_32i test Id: 507 - ABS
OK   UME::SIMD::SIMD4_32i test Id: 508 - ABS(function)
OK   UME::SIMD::SIMD4_32i test Id: 509 - MABS
OK   UME::SIMD::SIMD4_32i test Id: 510 - MABS(function)
OK   UME::SIMD::SIMD4_32i test Id: 511 - ABSA
OK   UME::SIMD::SIMD4_32i test Id: 512 - MABSA
OK   UME::SIMD::SIMD4_32i test Id: 513 - COPYSIGN gen
OK   UME::SIMD::SIMD4_32i test Id: 514 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD4_32i test Id: 515 - ITOU
OK   UME::SIMD::SIMD4_32i test Id: 516 - ITOF
OK   UME::SIMD::SIMD4_32i test Id: 517 - PACK
OK   UME::SIMD::SIMD4_32i test Id: 518 - PACKLO
OK   UME::SIMD::SIMD4_32i test Id: 519 - PACKHI
OK   UME::SIMD::SIMD4_32i test Id: 520 - UNPACK
OK   UME::SIMD::SIMD4_32i test Id: 521 - UNPACKLO
OK   UME::SIMD::SIMD4_32i test Id: 522 - UNPACKHi
OK   UME::SIMD::SIMD4_32i test Id: 523 - PROMOTE
OK   UME::SIMD::SIMD4_32i test Id: 524 - DEGRADE
OK   UME::SIMD::SIMD4_32i test Id: 525 - ZERO-CONSTR
OK   UME::SIMD::SIMD4_32i test Id: 526 - SET-CONSTR
OK   UME::SIMD::SIMD4_32i test Id: 527 - FULL-CONSTR
OK   UME::SIMD::SIMD4_32i test Id: 528 - UTOI
OK   UME::SIMD::SIMD4_32i test Id: 529 - LENGTH
OK   UME::SIMD::SIMD4_32i test Id: 530 - ALIGNEMENT
OK   UME::SIMD::SIMD4_32i test Id: 531 - operator=
OK   UME::SIMD::SIMD4_32i test Id: 532 - LOAD
OK   UME::SIMD::SIMD4_32i test Id: 533 - LOADA
OK   UME::SIMD::SIMD4_32i test Id: 534 - STORE
OK   UME::SIMD::SIMD4_32i test Id: 535 - STOREA
OK   UME::SIMD::SIMD4_32i test Id: 536 - GATHERS
OK   UME::SIMD::SIMD4_32i test Id: 537 - MGATHERS
OK   UME::SIMD::SIMD4_32i test Id: 538 - GATHERV
OK   UME::SIMD::SIMD4_32i test Id: 539 - MGATHERV
OK   UME::SIMD::SIMD4_32i test Id: 540 - SCATTERS
OK   UME::SIMD::SIMD4_32i test Id: 541 - SCATTERV
OK   UME::SIMD::SIMD4_32i test Id: 542 - MSCATTERV
OK   UME::SIMD::SIMD4_32i test Id: 543 - ADDV
OK   UME::SIMD::SIMD4_32i test Id: 544 - ADDV(operator+)
OK   UME::SIMD::SIMD4_32i test Id: 545 - MADDV
OK   UME::SIMD::SIMD4_32i test Id: 546 - ADDS
OK   UME::SIMD::SIMD4_32i test Id: 547 - MADDS
OK   UME::SIMD::SIMD4_32i test Id: 548 - ADDVA
OK   UME::SIMD::SIMD4_32i test Id: 549 - ADDVA(operator+=)
OK   UME::SIMD::SIMD4_32i test Id: 550 - ADDSA
OK   UME::SIMD::SIMD4_32i test Id: 551 - SADDV
OK   UME::SIMD::SIMD4_32i test Id: 552 - MSADDV
OK   UME::SIMD::SIMD4_32i test Id: 553 - POSTINC 1
OK   UME::SIMD::SIMD4_32i test Id: 554 - POSTINC 2
OK   UME::SIMD::SIMD4_32i test Id: 555 - POSTINC 1(operator++)
OK   UME::SIMD::SIMD4_32i test Id: 556 - POSTINC 2(operator++)
OK   UME::SIMD::SIMD4_32i test Id: 557 - PREFINC 1
OK   UME::SIMD::SIMD4_32i test Id: 558 - PREFINC 2
OK   UME::SIMD::SIMD4_32i test Id: 559 - PREFINC 1(operator++)
OK   UME::SIMD::SIMD4_32i test Id: 560 - PREFINC 2(operator++)
OK   UME::SIMD::SIMD4_32i test Id: 561 - SUBV
OK   UME::SIMD::SIMD4_32i test Id: 562 - SUBV(operator-)
OK   UME::SIMD::SIMD4_32i test Id: 563 - SUBS
OK   UME::SIMD::SIMD4_32i test Id: 564 - SUBVA
OK   UME::SIMD::SIMD4_32i test Id: 565 - SUBVA(operator-=)
OK   UME::SIMD::SIMD4_32i test Id: 566 - SUBSA
OK   UME::SIMD::SIMD4_32i test Id: 567 - SSUBV
OK   UME::SIMD::SIMD4_32i test Id: 568 - MSSUBV
OK   UME::SIMD::SIMD4_32i test Id: 569 - SSUBS
OK   UME::SIMD::SIMD4_32i test Id: 570 - MSSUBS
OK   UME::SIMD::SIMD4_32i test Id: 571 - SSUBVA
OK   UME::SIMD::SIMD4_32i test Id: 572 - MSSUBVA
OK   UME::SIMD::SIMD4_32i test Id: 573 - SSUBSA
OK   UME::SIMD::SIMD4_32i test Id: 574 - MSSUBSA
OK   UME::SIMD::SIMD4_32i test Id: 575 - SUBFROMV
OK   UME::SIMD::SIMD4_32i test Id: 576 - MSUBFROMV
OK   UME::SIMD::SIMD4_32i test Id: 577 - SUBFROMS
OK   UME::SIMD::SIMD4_32i test Id: 578 - MSUBFROMS
OK   UME::SIMD::SIMD4_32i test Id: 579 - SUBFROMVA
OK   UME::SIMD::SIMD4_32i test Id: 580 - MSUBFROMVA
OK   UME::SIMD::SIMD4_32i test Id: 581 - SUBFROMSA
OK   UME::SIMD::SIMD4_32i test Id: 582 - MSUBFROMSA
OK   UME::SIMD::SIMD4_32i test Id: 583 - POSTDEC 1
OK   UME::SIMD::SIMD4_32i test Id: 584 - POSTDEC 2
OK   UME::SIMD::SIMD4_32i test Id: 585 - POSTDEC 1(operator--)
OK   UME::SIMD::SIMD4_32i test Id: 586 - POSTDEC 2(operator--)
OK   UME::SIMD::SIMD4_32i test Id: 587 - PREFDEC 1
OK   UME::SIMD::SIMD4_32i test Id: 588 - PREFDEC 2
OK   UME::SIMD::SIMD4_32i test Id: 589 - PREFDEC 1(operator--)
OK   UME::SIMD::SIMD4_32i test Id: 590 - PREFDEC 2(operator--)
OK   UME::SIMD::SIMD4_32i test Id: 591 - MULV 1
OK   UME::SIMD::SIMD4_32i test Id: 592 - MULV 1(operator*)
OK   UME::SIMD::SIMD4_32i test Id: 593 - MULV 2
OK   UME::SIMD::SIMD4_32i test Id: 594 - MULV 2(operator*)
OK   UME::SIMD::SIMD4_32i test Id: 595 - MULS 1
OK   UME::SIMD::SIMD4_32i test Id: 596 - MULS 2
OK   UME::SIMD::SIMD4_32i test Id: 597 - MULVA
OK   UME::SIMD::SIMD4_32i test Id: 598 - MULVA(operator*=)
OK   UME::SIMD::SIMD4_32i test Id: 599 - MULSA
OK   UME::SIMD::SIMD4_32i test Id: 600 - DIVV
OK   UME::SIMD::SIMD4_32i test Id: 601 - DIVV(operator/)
OK   UME::SIMD::SIMD4_32i test Id: 602 - DIVS
OK   UME::SIMD::SIMD4_32i test Id: 603 - DIVVA
OK   UME::SIMD::SIMD4_32i test Id: 604 - DIVVA(operator/=)
OK   UME::SIMD::SIMD4_32i test Id: 605 - DIVSA
OK   UME::SIMD::SIMD4_32i test Id: 606 - RCPS
OK   UME::SIMD::SIMD4_32i test Id: 607 - RSHV
OK   UME::SIMD::SIMD4_32i test Id: 608 - RSHS
OK   UME::SIMD::SIMD4_32i test Id: 609 - RSHVA
OK   UME::SIMD::SIMD4_32i test Id: 610 - RSHSA
OK   UME::SIMD::SIMD4_32i test Id: 611 - MROLV
OK   UME::SIMD::SIMD4_32i test Id: 612 - ROLS
OK   UME::SIMD::SIMD4_32i test Id: 613 - MROLS
OK   UME::SIMD::SIMD4_32i test Id: 614 - ROLVA
OK   UME::SIMD::SIMD4_32i test Id: 615 - MROLVA
OK   UME::SIMD::SIMD4_32i test Id: 616 - ROLSA
OK   UME::SIMD::SIMD4_32i test Id: 617 - CMPEQV
OK   UME::SIMD::SIMD4_32i test Id: 618 - CMPEQV(operator==)
OK   UME::SIMD::SIMD4_32i test Id: 619 - CMPEQS
OK   UME::SIMD::SIMD4_32i test Id: 620 - CMPNEV
OK   UME::SIMD::SIMD4_32i test Id: 621 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD4_32i test Id: 622 - CMPNES
OK   UME::SIMD::SIMD4_32i test Id: 623 - CMPGTV
OK   UME::SIMD::SIMD4_32i test Id: 624 - CMPGTV(operator>)
OK   UME::SIMD::SIMD4_32i test Id: 625 - CMPGTS
OK   UME::SIMD::SIMD4_32i test Id: 626 - CMPLTV
OK   UME::SIMD::SIMD4_32i test Id: 627 - CMPLTV(operator<)
OK   UME::SIMD::SIMD4_32i test Id: 628 - CMPLTS
OK   UME::SIMD::SIMD4_32i test Id: 629 - CMPGEV
OK   UME::SIMD::SIMD4_32i test Id: 630 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD4_32i test Id: 631 - CMPGES
OK   UME::SIMD::SIMD4_32i test Id: 632 - CMPLEV
OK   UME::SIMD::SIMD4_32i test Id: 633 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD4_32i test Id: 634 - CMPLES
OK   UME::SIMD::SIMD4_32i test Id: 635 - BANDV
OK   UME::SIMD::SIMD4_32i test Id: 636 - BANDV(operator&)
OK   UME::SIMD::SIMD4_32i test Id: 637 - BANDS
OK   UME::SIMD::SIMD4_32i test Id: 638 - MBANDS
OK   UME::SIMD::SIMD4_32i test Id: 639 - BANDVA
OK   UME::SIMD::SIMD4_32i test Id: 640 - BANDVA(operator&=)
OK   UME::SIMD::SIMD4_32i test Id: 641 - MBANDVA
OK   UME::SIMD::SIMD4_32i test Id: 642 - MBANDSA
OK   UME::SIMD::SIMD4_32i test Id: 643 - BNOT
OK   UME::SIMD::SIMD4_32i test Id: 644 - BNOT(operator~)
OK   UME::SIMD::SIMD4_32i test Id: 645 - MBNOT
OK   UME::SIMD::SIMD4_32i test Id: 646 - MBNOTA
OK   UME::SIMD::SIMD4_32i test Id: 647 - HMUL
OK   UME::SIMD::SIMD4_32i test Id: 648 - MHMUL
OK   UME::SIMD::SIMD4_32i test Id: 649 - HMULS
OK   UME::SIMD::SIMD4_32i test Id: 650 - HMULS
OK   UME::SIMD::SIMD4_32i test Id: 651 - HBAND
OK   UME::SIMD::SIMD4_32i test Id: 652 - MHBAND
OK   UME::SIMD::SIMD4_32i test Id: 653 - HBANDS
OK   UME::SIMD::SIMD4_32i test Id: 654 - MHBANDS
OK   UME::SIMD::SIMD4_32i test Id: 655 - HOR
OK   UME::SIMD::SIMD4_32i test Id: 656 - MHBOR
OK   UME::SIMD::SIMD4_32i test Id: 657 - HBORS
OK   UME::SIMD::SIMD4_32i test Id: 658 - MHBORS
OK   UME::SIMD::SIMD4_32i test Id: 659 - HBXOR
OK   UME::SIMD::SIMD4_32i test Id: 660 - MHBXOR
OK   UME::SIMD::SIMD4_32i test Id: 661 - HBXORS
OK   UME::SIMD::SIMD4_32i test Id: 662 - MHBXORS
OK   UME::SIMD::SIMD4_32i test Id: 663 - NEG
OK   UME::SIMD::SIMD4_32i test Id: 664 - NEG(operator-)
OK   UME::SIMD::SIMD4_32i test Id: 665 - NEG(operator-)
OK   UME::SIMD::SIMD4_32f test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD4_32f test Id: 2 - SET-CONSTR
OK   UME::SIMD::SIMD4_32f test Id: 3 - LOAD-CONSTR
OK   UME::SIMD::SIMD4_32f test Id: 4 - FULL-CONSTR
OK   UME::SIMD::SIMD4_32f test Id: 5 - operator=
OK   UME::SIMD::SIMD4_32f test Id: 6 - SET-CONSTR gen
OK   UME::SIMD::SIMD4_32f test Id: 7 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD4_32f test Id: 8 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD4_32f test Id: 9 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD4_32f test Id: 10 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD4_32f test Id: 11 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD4_32f test Id: 12 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD4_32f test Id: 13 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD4_32f test Id: 14 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD4_32f test Id: 15 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD4_32f test Id: 16 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD4_32f test Id: 17 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD4_32f test Id: 18 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD4_32f test Id: 19 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD4_32f test Id: 20 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD4_32f test Id: 21 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD4_32f test Id: 22 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD4_32f test Id: 23 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD4_32f test Id: 24 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD4_32f test Id: 25 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD4_32f test Id: 26 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD4_32f test Id: 27 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD4_32f test Id: 28 - INSERT
OK   UME::SIMD::SIMD4_32f test Id: 29 - INSERT(operator[] =)
OK   UME::SIMD::SIMD4_32f test Id: 30 - EXTRACT
OK   UME::SIMD::SIMD4_32f test Id: 31 - EXTRACT(operator[])
OK   UME::SIMD::SIMD4_32f test Id: 32 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD4_32f test Id: 33 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD4_32f test Id: 34 - ASSIGNV
OK   UME::SIMD::SIMD4_32f test Id: 35 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD4_32f test Id: 36 - MASSIGNV
OK   UME::SIMD::SIMD4_32f test Id: 37 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD4_32f test Id: 38 - ASSIGNS
OK   UME::SIMD::SIMD4_32f test Id: 39 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD4_32f test Id: 40 - MASSIGNS
OK   UME::SIMD::SIMD4_32f test Id: 41 - MASSIGNS
OK   UME::SIMD::SIMD4_32f test Id: 42 - LOAD/STORE
OK   UME::SIMD::SIMD4_32f test Id: 43 - MLOAD
OK   UME::SIMD::SIMD4_32f test Id: 44 - MSTORE
OK   UME::SIMD::SIMD4_32f test Id: 45 - LOADA/STOREA
OK   UME::SIMD::SIMD4_32f test Id: 46 - MLOADA
OK   UME::SIMD::SIMD4_32f test Id: 47 - MSTOREA
OK   UME::SIMD::SIMD4_32f test Id: 48 - SWIZZLE
OK   UME::SIMD::SIMD4_32f test Id: 49 - SORTA
OK   UME::SIMD::SIMD4_32f test Id: 50 - SORTD
OK   UME::SIMD::SIMD4_32f test Id: 51 - BLENDV gen
OK   UME::SIMD::SIMD4_32f test Id: 52 - ADDV
OK   UME::SIMD::SIMD4_32f test Id: 53 - ADDV(operator+)
OK   UME::SIMD::SIMD4_32f test Id: 54 - ADDV(function)
OK   UME::SIMD::SIMD4_32f test Id: 55 - ADDV gen
OK   UME::SIMD::SIMD4_32f test Id: 56 - ADDV(operator+) gen
OK   UME::SIMD::SIMD4_32f test Id: 57 - ADDV(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 58 - MADDV
OK   UME::SIMD::SIMD4_32f test Id: 59 - MADDV(function)
OK   UME::SIMD::SIMD4_32f test Id: 60 - MADDV gen
OK   UME::SIMD::SIMD4_32f test Id: 61 - MADDV(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 62 - ADDS
OK   UME::SIMD::SIMD4_32f test Id: 63 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 64 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 65 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD4_32f test Id: 66 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD4_32f test Id: 67 - ADDS gen
OK   UME::SIMD::SIMD4_32f test Id: 68 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD4_32f test Id: 69 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD4_32f test Id: 70 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD4_32f test Id: 71 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD4_32f test Id: 72 - MADDS
OK   UME::SIMD::SIMD4_32f test Id: 73 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 74 - MADDS gen
OK   UME::SIMD::SIMD4_32f test Id: 75 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD4_32f test Id: 76 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD4_32f test Id: 77 - ADDVA
OK   UME::SIMD::SIMD4_32f test Id: 78 - ADDVA(operator+=)
OK   UME::SIMD::SIMD4_32f test Id: 79 - ADDVA gen
OK   UME::SIMD::SIMD4_32f test Id: 80 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD4_32f test Id: 81 - MADDVA
OK   UME::SIMD::SIMD4_32f test Id: 82 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD4_32f test Id: 83 - ADDSA
OK   UME::SIMD::SIMD4_32f test Id: 84 - ADDSA(operator+=)
OK   UME::SIMD::SIMD4_32f test Id: 85 - MADDSA
OK   UME::SIMD::SIMD4_32f test Id: 86 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD4_32f test Id: 87 - SADDV gen
OK   UME::SIMD::SIMD4_32f test Id: 88 - SADDV(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 89 - POSTINC
OK   UME::SIMD::SIMD4_32f test Id: 90 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD4_32f test Id: 91 - POSTINC(function)
OK   UME::SIMD::SIMD4_32f test Id: 92 - MPOSTINC
OK   UME::SIMD::SIMD4_32f test Id: 93 - MPOSTINC(function)
OK   UME::SIMD::SIMD4_32f test Id: 94 - PREFINC
OK   UME::SIMD::SIMD4_32f test Id: 95 - PREFINC(operator++())
OK   UME::SIMD::SIMD4_32f test Id: 96 - PREFINC(function)
OK   UME::SIMD::SIMD4_32f test Id: 97 - MPREFINC
OK   UME::SIMD::SIMD4_32f test Id: 98 - MPREFINC(function)
OK   UME::SIMD::SIMD4_32f test Id: 99 - SUBV
OK   UME::SIMD::SIMD4_32f test Id: 100 - SUBV(operator-)
OK   UME::SIMD::SIMD4_32f test Id: 101 - SUBV(function)
OK   UME::SIMD::SIMD4_32f test Id: 102 - SUBV gen
OK   UME::SIMD::SIMD4_32f test Id: 103 - SUBV(operator-) gen
OK   UME::SIMD::SIMD4_32f test Id: 104 - SUBV(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 105 - MSUBV
OK   UME::SIMD::SIMD4_32f test Id: 106 - MSUBV(function)
OK   UME::SIMD::SIMD4_32f test Id: 107 - MSUBV gen
OK   UME::SIMD::SIMD4_32f test Id: 108 - MSUBV(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 109 - SUBS gen
OK   UME::SIMD::SIMD4_32f test Id: 110 - SUBS(operator-) gen
OK   UME::SIMD::SIMD4_32f test Id: 111 - SUBS(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 112 - MSUBS
OK   UME::SIMD::SIMD4_32f test Id: 113 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 114 - SUBVA
OK   UME::SIMD::SIMD4_32f test Id: 115 - SUBVA(operator-=)
OK   UME::SIMD::SIMD4_32f test Id: 116 - MSUBVA
OK   UME::SIMD::SIMD4_32f test Id: 117 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD4_32f test Id: 118 - SUBSA
OK   UME::SIMD::SIMD4_32f test Id: 119 - MSUBSA
OK   UME::SIMD::SIMD4_32f test Id: 120 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD4_32f test Id: 121 - SUBFROMV
OK   UME::SIMD::SIMD4_32f test Id: 122 - MSUBFROMV
OK   UME::SIMD::SIMD4_32f test Id: 123 - SUBFROMS
OK   UME::SIMD::SIMD4_32f test Id: 124 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 125 - MSUBFROMS
OK   UME::SIMD::SIMD4_32f test Id: 126 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 127 - SUBFROMVA
OK   UME::SIMD::SIMD4_32f test Id: 128 - MSUBFROMVA
OK   UME::SIMD::SIMD4_32f test Id: 129 - SUBFROMSA
OK   UME::SIMD::SIMD4_32f test Id: 130 - MSUBFROMSA
OK   UME::SIMD::SIMD4_32f test Id: 131 - POSTDEC
OK   UME::SIMD::SIMD4_32f test Id: 132 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD4_32f test Id: 133 - POSTDEC(function)
OK   UME::SIMD::SIMD4_32f test Id: 134 - MPOSTDEC
OK   UME::SIMD::SIMD4_32f test Id: 135 - MPOSTDEC(function)
OK   UME::SIMD::SIMD4_32f test Id: 136 - PREFDEC
OK   UME::SIMD::SIMD4_32f test Id: 137 - PREFDEC(operator--())
OK   UME::SIMD::SIMD4_32f test Id: 138 - PREFDEC(function)
OK   UME::SIMD::SIMD4_32f test Id: 139 - MPREFDEC
OK   UME::SIMD::SIMD4_32f test Id: 140 - MPREFDEC(function)
OK   UME::SIMD::SIMD4_32f test Id: 141 - MULV
OK   UME::SIMD::SIMD4_32f test Id: 142 - MULV(operator*)
OK   UME::SIMD::SIMD4_32f test Id: 143 - MULV(function)
OK   UME::SIMD::SIMD4_32f test Id: 144 - MMULV
OK   UME::SIMD::SIMD4_32f test Id: 145 - MMULV(function)
OK   UME::SIMD::SIMD4_32f test Id: 146 - MULS
OK   UME::SIMD::SIMD4_32f test Id: 147 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 148 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 149 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 150 - MMULS
OK   UME::SIMD::SIMD4_32f test Id: 151 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 152 - MULVA
OK   UME::SIMD::SIMD4_32f test Id: 153 - MULVA(operator*)
OK   UME::SIMD::SIMD4_32f test Id: 154 - MULVA gen
OK   UME::SIMD::SIMD4_32f test Id: 155 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD4_32f test Id: 156 - MMULVA
OK   UME::SIMD::SIMD4_32f test Id: 157 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_32f test Id: 158 - MULSA
OK   UME::SIMD::SIMD4_32f test Id: 159 - MULSA(operator*=)
OK   UME::SIMD::SIMD4_32f test Id: 160 - MMULSA
OK   UME::SIMD::SIMD4_32f test Id: 161 - DIVV
OK   UME::SIMD::SIMD4_32f test Id: 162 - DIVV(operator/)
OK   UME::SIMD::SIMD4_32f test Id: 163 - DIVV(function)
OK   UME::SIMD::SIMD4_32f test Id: 164 - MDIVV
OK   UME::SIMD::SIMD4_32f test Id: 165 - MDIVV(function)
OK   UME::SIMD::SIMD4_32f test Id: 166 - DIVS
OK   UME::SIMD::SIMD4_32f test Id: 167 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 168 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 169 - MDIVS
OK   UME::SIMD::SIMD4_32f test Id: 170 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 171 - DIVVA
OK   UME::SIMD::SIMD4_32f test Id: 172 - DIVVA(operator/=)
OK   UME::SIMD::SIMD4_32f test Id: 173 - DIVVA gen
OK   UME::SIMD::SIMD4_32f test Id: 174 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD4_32f test Id: 175 - MDIVVA
OK   UME::SIMD::SIMD4_32f test Id: 176 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_32f test Id: 177 - DIVSA
OK   UME::SIMD::SIMD4_32f test Id: 178 - DIVSA(operator/=)
OK   UME::SIMD::SIMD4_32f test Id: 179 - MDIVSA
OK   UME::SIMD::SIMD4_32f test Id: 180 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD4_32f test Id: 181 - RCP
OK   UME::SIMD::SIMD4_32f test Id: 182 - RCP(function)
OK   UME::SIMD::SIMD4_32f test Id: 183 - MRCP
OK   UME::SIMD::SIMD4_32f test Id: 184 - MRCP(function)
OK   UME::SIMD::SIMD4_32f test Id: 185 - RCPS
OK   UME::SIMD::SIMD4_32f test Id: 186 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 187 - RCPS(function)
OK   UME::SIMD::SIMD4_32f test Id: 188 - MRCPS
OK   UME::SIMD::SIMD4_32f test Id: 189 - MRCPS (function)
OK   UME::SIMD::SIMD4_32f test Id: 190 - RCPA
OK   UME::SIMD::SIMD4_32f test Id: 191 - MRCPA
OK   UME::SIMD::SIMD4_32f test Id: 192 - RCPSA
OK   UME::SIMD::SIMD4_32f test Id: 193 - MRCPSA
OK   UME::SIMD::SIMD4_32f test Id: 194 - CMPEQV
OK   UME::SIMD::SIMD4_32f test Id: 195 - CMPEQV(operator==)
OK   UME::SIMD::SIMD4_32f test Id: 196 - CMPEQV(function)
OK   UME::SIMD::SIMD4_32f test Id: 197 - CMPEQS
OK   UME::SIMD::SIMD4_32f test Id: 198 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 199 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 200 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 201 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 202 - CMPNEV
OK   UME::SIMD::SIMD4_32f test Id: 203 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD4_32f test Id: 204 - CMPNEV(function)
OK   UME::SIMD::SIMD4_32f test Id: 205 - CMPNES
OK   UME::SIMD::SIMD4_32f test Id: 206 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 207 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 208 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 209 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 210 - CMPGTV
OK   UME::SIMD::SIMD4_32f test Id: 211 - CMPGTV(operator>)
OK   UME::SIMD::SIMD4_32f test Id: 212 - CMPGTV(function)
OK   UME::SIMD::SIMD4_32f test Id: 213 - CMPGTS
OK   UME::SIMD::SIMD4_32f test Id: 214 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 215 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 216 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 217 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 218 - CMPLTV
OK   UME::SIMD::SIMD4_32f test Id: 219 - CMPLTV(operator<)
OK   UME::SIMD::SIMD4_32f test Id: 220 - CMPLTV(function)
OK   UME::SIMD::SIMD4_32f test Id: 221 - CMPLTS
OK   UME::SIMD::SIMD4_32f test Id: 222 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 223 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 224 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 225 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 226 - CMPGEV
OK   UME::SIMD::SIMD4_32f test Id: 227 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD4_32f test Id: 228 - CMPGEV(function)
OK   UME::SIMD::SIMD4_32f test Id: 229 - CMPGES
OK   UME::SIMD::SIMD4_32f test Id: 230 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 231 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 232 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 233 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 234 - CMPLEV
OK   UME::SIMD::SIMD4_32f test Id: 235 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD4_32f test Id: 236 - CMPLEV(function)
OK   UME::SIMD::SIMD4_32f test Id: 237 - CMPLES
OK   UME::SIMD::SIMD4_32f test Id: 238 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 239 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 240 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 241 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 242 - CMPEV
OK   UME::SIMD::SIMD4_32f test Id: 243 - CMPEV(function)
OK   UME::SIMD::SIMD4_32f test Id: 244 - CMPES
OK   UME::SIMD::SIMD4_32f test Id: 245 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 246 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 247 - HADD
OK   UME::SIMD::SIMD4_32f test Id: 248 - HADD(function)
OK   UME::SIMD::SIMD4_32f test Id: 249 - HADD gen
OK   UME::SIMD::SIMD4_32f test Id: 250 - HADD(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD4_32f test Id: 252 - MHADD(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 253 - HADDS gen
OK   UME::SIMD::SIMD4_32f test Id: 254 - HADDS(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 255 - MHADD gen
OK   UME::SIMD::SIMD4_32f test Id: 256 - MHADDS(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 257 - HMUL gen
OK   UME::SIMD::SIMD4_32f test Id: 258 - HMUL(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD4_32f test Id: 260 - MHMUL(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 261 - HMULS gen
OK   UME::SIMD::SIMD4_32f test Id: 262 - HMULS(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 263 - MHMUL gen
OK   UME::SIMD::SIMD4_32f test Id: 264 - MHMULS(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 265 - FMULADDV
OK   UME::SIMD::SIMD4_32f test Id: 266 - FMULADDV(function)
OK   UME::SIMD::SIMD4_32f test Id: 267 - MFMULADDV
OK   UME::SIMD::SIMD4_32f test Id: 268 - MFMULADDV(function)
OK   UME::SIMD::SIMD4_32f test Id: 269 - FMULSUBV
OK   UME::SIMD::SIMD4_32f test Id: 270 - FMULSUBV(function)
OK   UME::SIMD::SIMD4_32f test Id: 271 - MFMULSUBV
OK   UME::SIMD::SIMD4_32f test Id: 272 - MFMULSUBV(function)
OK   UME::SIMD::SIMD4_32f test Id: 273 - FADDMULV
OK   UME::SIMD::SIMD4_32f test Id: 274 - FADDMULV(function)
OK   UME::SIMD::SIMD4_32f test Id: 275 - MFADDMULV
OK   UME::SIMD::SIMD4_32f test Id: 276 - MFADDMULV(function)
OK   UME::SIMD::SIMD4_32f test Id: 277 - FSUBMULV
OK   UME::SIMD::SIMD4_32f test Id: 278 - FSUBMULV(function)
OK   UME::SIMD::SIMD4_32f test Id: 279 - MFSUBMULV
OK   UME::SIMD::SIMD4_32f test Id: 280 - MFSUBMULV(function)
OK   UME::SIMD::SIMD4_32f test Id: 281 - MAXV
OK   UME::SIMD::SIMD4_32f test Id: 282 - MAXV(function)
OK   UME::SIMD::SIMD4_32f test Id: 283 - MMAXV
OK   UME::SIMD::SIMD4_32f test Id: 284 - MMAXV(function)
OK   UME::SIMD::SIMD4_32f test Id: 285 - MAXS
OK   UME::SIMD::SIMD4_32f test Id: 286 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 287 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 288 - MMAXS
OK   UME::SIMD::SIMD4_32f test Id: 289 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 290 - MAXVA
OK   UME::SIMD::SIMD4_32f test Id: 291 - MMAXVA
OK   UME::SIMD::SIMD4_32f test Id: 292 - MAXSA
OK   UME::SIMD::SIMD4_32f test Id: 293 - MMAXSA
OK   UME::SIMD::SIMD4_32f test Id: 294 - MINV
OK   UME::SIMD::SIMD4_32f test Id: 295 - MINV(function)
OK   UME::SIMD::SIMD4_32f test Id: 296 - MMINV
OK   UME::SIMD::SIMD4_32f test Id: 297 - MMINV(function)
OK   UME::SIMD::SIMD4_32f test Id: 298 - MINS
OK   UME::SIMD::SIMD4_32f test Id: 299 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD4_32f test Id: 300 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD4_32f test Id: 301 - MMINS
OK   UME::SIMD::SIMD4_32f test Id: 302 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD4_32f test Id: 303 - MINVA
OK   UME::SIMD::SIMD4_32f test Id: 304 - MMINVA
OK   UME::SIMD::SIMD4_32f test Id: 305 - MINSA
OK   UME::SIMD::SIMD4_32f test Id: 306 - MMINSA
OK   UME::SIMD::SIMD4_32f test Id: 307 - HMAX
OK   UME::SIMD::SIMD4_32f test Id: 308 - HMAX(function)
OK   UME::SIMD::SIMD4_32f test Id: 309 - HMAX
OK   UME::SIMD::SIMD4_32f test Id: 310 - HMAX(function)
OK   UME::SIMD::SIMD4_32f test Id: 311 - MHMAX
OK   UME::SIMD::SIMD4_32f test Id: 312 - MHMAX(function)
OK   UME::SIMD::SIMD4_32f test Id: 313 - IMAX
OK   UME::SIMD::SIMD4_32f test Id: 314 - IMAX(function)
OK   UME::SIMD::SIMD4_32f test Id: 315 - MIMAX
OK   UME::SIMD::SIMD4_32f test Id: 316 - MIMAX(function)
OK   UME::SIMD::SIMD4_32f test Id: 317 - HMIN
OK   UME::SIMD::SIMD4_32f test Id: 318 - HMIN(function)
OK   UME::SIMD::SIMD4_32f test Id: 319 - HMIN
OK   UME::SIMD::SIMD4_32f test Id: 320 - HMIN(function)
OK   UME::SIMD::SIMD4_32f test Id: 321 - MHMIN gen
OK   UME::SIMD::SIMD4_32f test Id: 322 - MHMIN(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 323 - IMIN
OK   UME::SIMD::SIMD4_32f test Id: 324 - IMIN(function)
OK   UME::SIMD::SIMD4_32f test Id: 325 - MIMIN
OK   UME::SIMD::SIMD4_32f test Id: 326 - MIMIN(function)
OK   UME::SIMD::SIMD4_32f test Id: 327 - GATHERU
OK   UME::SIMD::SIMD4_32f test Id: 328 - MGATHERU
OK   UME::SIMD::SIMD4_32f test Id: 329 - GATHERS
OK   UME::SIMD::SIMD4_32f test Id: 330 - MGATHERS
OK   UME::SIMD::SIMD4_32f test Id: 331 - GATHERV
OK   UME::SIMD::SIMD4_32f test Id: 332 - MGATHERV
OK   UME::SIMD::SIMD4_32f test Id: 333 - SCATTERU
OK   UME::SIMD::SIMD4_32f test Id: 334 - MSCATTERU
OK   UME::SIMD::SIMD4_32f test Id: 335 - SCATTERS
OK   UME::SIMD::SIMD4_32f test Id: 336 - MSCATTERS
OK   UME::SIMD::SIMD4_32f test Id: 337 - SCATTERV
OK   UME::SIMD::SIMD4_32f test Id: 338 - MSCATTERV
OK   UME::SIMD::SIMD4_32f test Id: 339 - NEG
OK   UME::SIMD::SIMD4_32f test Id: 340 - NEG(operator-)
OK   UME::SIMD::SIMD4_32f test Id: 341 - NEG(function)
OK   UME::SIMD::SIMD4_32f test Id: 342 - MNEG
OK   UME::SIMD::SIMD4_32f test Id: 343 - MNEG(function)
OK   UME::SIMD::SIMD4_32f test Id: 344 - NEGA
OK   UME::SIMD::SIMD4_32f test Id: 345 - MNEGA
OK   UME::SIMD::SIMD4_32f test Id: 346 - ABS
OK   UME::SIMD::SIMD4_32f test Id: 347 - ABS(function)
OK   UME::SIMD::SIMD4_32f test Id: 348 - MABS
OK   UME::SIMD::SIMD4_32f test Id: 349 - MABS(function)
OK   UME::SIMD::SIMD4_32f test Id: 350 - ABSA
OK   UME::SIMD::SIMD4_32f test Id: 351 - MABSA
OK   UME::SIMD::SIMD4_32f test Id: 352 - COPYSIGN gen
OK   UME::SIMD::SIMD4_32f test Id: 353 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 354 - ROUND
OK   UME::SIMD::SIMD4_32f test Id: 355 - ROUND(function)
OK   UME::SIMD::SIMD4_32f test Id: 356 - MROUND
OK   UME::SIMD::SIMD4_32f test Id: 357 - MROUND(function)
OK   UME::SIMD::SIMD4_32f test Id: 358 - TRUNC gen
OK   UME::SIMD::SIMD4_32f test Id: 359 - TRUNC(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 360 - MTRUNC gen
OK   UME::SIMD::SIMD4_32f test Id: 361 - MTRUNC(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 362 - FLOOR
OK   UME::SIMD::SIMD4_32f test Id: 363 - FLOOR(function)
OK   UME::SIMD::SIMD4_32f test Id: 364 - MFLOOR
OK   UME::SIMD::SIMD4_32f test Id: 365 - MFLOOR(function)
OK   UME::SIMD::SIMD4_32f test Id: 366 - CEIL
OK   UME::SIMD::SIMD4_32f test Id: 367 - CEIL(function)
OK   UME::SIMD::SIMD4_32f test Id: 368 - MCEIL
OK   UME::SIMD::SIMD4_32f test Id: 369 - MCEIL(function)
OK   UME::SIMD::SIMD4_32f test Id: 370 - ISFIN
OK   UME::SIMD::SIMD4_32f test Id: 371 - ISFIN(function)
OK   UME::SIMD::SIMD4_32f test Id: 372 - ISINF
OK   UME::SIMD::SIMD4_32f test Id: 373 - ISINF(function)
OK   UME::SIMD::SIMD4_32f test Id: 374 - ISAN
OK   UME::SIMD::SIMD4_32f test Id: 375 - ISAN(function)
OK   UME::SIMD::SIMD4_32f test Id: 376 - ISNAN
OK   UME::SIMD::SIMD4_32f test Id: 377 - ISNAN(function)
OK   UME::SIMD::SIMD4_32f test Id: 378 - ISNORM
OK   UME::SIMD::SIMD4_32f test Id: 379 - ISNORM(function)
OK   UME::SIMD::SIMD4_32f test Id: 380 - ISSUB
OK   UME::SIMD::SIMD4_32f test Id: 381 - ISSUB(function)
OK   UME::SIMD::SIMD4_32f test Id: 382 - ISZERO
OK   UME::SIMD::SIMD4_32f test Id: 383 - ISZERO(function)
OK   UME::SIMD::SIMD4_32f test Id: 384 - ISZEROSUB
OK   UME::SIMD::SIMD4_32f test Id: 385 - ISZEROSUB(function)
OK   UME::SIMD::SIMD4_32f test Id: 386 - SQR
OK   UME::SIMD::SIMD4_32f test Id: 387 - SQR(function)
OK   UME::SIMD::SIMD4_32f test Id: 388 - MSQR
OK   UME::SIMD::SIMD4_32f test Id: 389 - MSQR(function)
OK   UME::SIMD::SIMD4_32f test Id: 390 - SQRA
OK   UME::SIMD::SIMD4_32f test Id: 391 - MSQRA
OK   UME::SIMD::SIMD4_32f test Id: 392 - SQRT
OK   UME::SIMD::SIMD4_32f test Id: 393 - SQRT(function)
OK   UME::SIMD::SIMD4_32f test Id: 394 - MSQRT
OK   UME::SIMD::SIMD4_32f test Id: 395 - MSQRT
OK   UME::SIMD::SIMD4_32f test Id: 396 - SQRTA
OK   UME::SIMD::SIMD4_32f test Id: 397 - MSQRTA
OK   UME::SIMD::SIMD4_32f test Id: 398 - EXP gen
OK   UME::SIMD::SIMD4_32f test Id: 399 - EXP(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 400 - MEXP gen
OK   UME::SIMD::SIMD4_32f test Id: 401 - MEXP(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 402 - LOG gen
OK   UME::SIMD::SIMD4_32f test Id: 403 - LOG(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 404 - LOG2 gen
OK   UME::SIMD::SIMD4_32f test Id: 405 - LOG2(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 406 - LOG10 gen
OK   UME::SIMD::SIMD4_32f test Id: 407 - LOG10(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 408 - SIN gen
OK   UME::SIMD::SIMD4_32f test Id: 409 - SIN(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 410 - COS gen
OK   UME::SIMD::SIMD4_32f test Id: 411 - COS(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 412 - TAN gen
OK   UME::SIMD::SIMD4_32f test Id: 413 - TAN(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 414 - CTAN gen
OK   UME::SIMD::SIMD4_32f test Id: 415 - CTAN(function) gen
OK   UME::SIMD::SIMD4_32f test Id: 416 - FTOU gen
OK   UME::SIMD::SIMD4_32f test Id: 417 - FTOI gen
OK   UME::SIMD::SIMD4_32f test Id: 418 - PACK
OK   UME::SIMD::SIMD4_32f test Id: 419 - PACKLO
OK   UME::SIMD::SIMD4_32f test Id: 420 - PACKHI
OK   UME::SIMD::SIMD4_32f test Id: 421 - UNPACK
OK   UME::SIMD::SIMD4_32f test Id: 422 - UNPACKLO
OK   UME::SIMD::SIMD4_32f test Id: 423 - UNPACKHi
OK   UME::SIMD::SIMD4_32f test Id: 424 - PROMOTE
OK   UME::SIMD::SIMD4_32f test Id: 425 - ADDV
OK   UME::SIMD::SIMD4_32f test Id: 426 - ADDV(operator+)
OK   UME::SIMD::SIMD4_32f test Id: 427 - ADDV function
OK   UME::SIMD::SIMD4_32f test Id: 428 - ADDS
OK   UME::SIMD::SIMD4_32f test Id: 429 - ADDS function
OK   UME::SIMD::SIMD4_32f test Id: 430 - MULV
OK   UME::SIMD::SIMD4_32f test Id: 431 - MULV(operator*)
OK   UME::SIMD::SIMD4_32f test Id: 432 - MULS
OK   UME::SIMD::SIMD4_32f test Id: 433 - RCP
OK   UME::SIMD::SIMD4_32f test Id: 434 - MRCP
OK   UME::SIMD::SIMD4_32f test Id: 435 - RCPS
OK   UME::SIMD::SIMD4_32f test Id: 436 - MRCPS
OK   UME::SIMD::SIMD4_32f test Id: 437 - RCPA
OK   UME::SIMD::SIMD4_32f test Id: 438 - MRCPA
OK   UME::SIMD::SIMD4_32f test Id: 439 - RCPSA
OK   UME::SIMD::SIMD4_32f test Id: 440 - MRCPSA
OK   UME::SIMD::SIMD4_32f test Id: 441 - PACK
OK   UME::SIMD::SIMD4_32f test Id: 442 - UNPACK
OK   UME::SIMD::SIMD4_32f test Id: 443 - FMULADDV
OK   UME::SIMD::SIMD4_32f test Id: 444 - MFMULADDV
OK   UME::SIMD::SIMD4_32f test Id: 445 - FMULSUBV
OK   UME::SIMD::SIMD4_32f test Id: 446 - MFMULSUBV
OK   UME::SIMD::SIMD4_32f test Id: 447 - FADDMULV
OK   UME::SIMD::SIMD4_32f test Id: 448 - MFADDMULV
OK   UME::SIMD::SIMD4_32f test Id: 449 - FSUBMULV
OK   UME::SIMD::SIMD4_32f test Id: 450 - MFSUBMULV
OK   UME::SIMD::SIMD4_32f test Id: 451 - MAXV
OK   UME::SIMD::SIMD4_32f test Id: 452 - MMAXV
OK   UME::SIMD::SIMD4_32f test Id: 453 - MAXS
OK   UME::SIMD::SIMD4_32f test Id: 454 - MMAXS
OK   UME::SIMD::SIMD4_32f test Id: 455 - MAXVA
OK   UME::SIMD::SIMD4_32f test Id: 456 - MMAXVA
OK   UME::SIMD::SIMD4_32f test Id: 457 - MAXSA
OK   UME::SIMD::SIMD4_32f test Id: 458 - MMAXSA
OK   UME::SIMD::SIMD4_32f test Id: 459 - MINV
OK   UME::SIMD::SIMD4_32f test Id: 460 - MMINV
OK   UME::SIMD::SIMD4_32f test Id: 461 - MINS
OK   UME::SIMD::SIMD4_32f test Id: 462 - MMINS
OK   UME::SIMD::SIMD4_32f test Id: 463 - MINVA
OK   UME::SIMD::SIMD4_32f test Id: 464 - MMINVA
OK   UME::SIMD::SIMD4_32f test Id: 465 - MINSA
OK   UME::SIMD::SIMD4_32f test Id: 466 - MMINSA
OK   UME::SIMD::SIMD4_32f test Id: 467 - HMAX
OK   UME::SIMD::SIMD4_32f test Id: 468 - MHMAX
OK   UME::SIMD::SIMD4_32f test Id: 469 - IMAX
OK   UME::SIMD::SIMD4_32f test Id: 470 - MIMAX
OK   UME::SIMD::SIMD4_32f test Id: 471 - HMIN
OK   UME::SIMD::SIMD4_32f test Id: 472 - MHMIN
OK   UME::SIMD::SIMD4_32f test Id: 473 - IMIN
OK   UME::SIMD::SIMD4_32f test Id: 474 - MIMIN
OK   UME::SIMD::SIMD4_32f test Id: 475 - SQR
OK   UME::SIMD::SIMD4_32f test Id: 476 - MSQR
OK   UME::SIMD::SIMD4_32f test Id: 477 - SQRA
OK   UME::SIMD::SIMD4_32f test Id: 478 - MSQRA
OK   UME::SIMD::SIMD4_32f test Id: 479 - SQRT
OK   UME::SIMD::SIMD4_32f test Id: 480 - ROUND
OK   UME::SIMD::SIMD4_32f test Id: 481 - TRUNC
OK   UME::SIMD::SIMD4_32f test Id: 482 - FLOOR
OK   UME::SIMD::SIMD4_32f test Id: 483 - MFLOOR
OK   UME::SIMD::SIMD4_32f test Id: 484 - CEIL
OK   UME::SIMD::SIMD4_32f test Id: 485 - MCEIL
OK   UME::SIMD::SIMD4_32f test Id: 486 - ISFIN
OK   UME::SIMD::SIMD4_32f test Id: 487 - ISINF
OK   UME::SIMD::SIMD4_32f test Id: 488 - ISAN
OK   UME::SIMD::SIMD4_32f test Id: 489 - ISNAN
OK   UME::SIMD::SIMD4_32f test Id: 490 - ISNORM
OK   UME::SIMD::SIMD4_32f test Id: 491 - ISSUB
OK   UME::SIMD::SIMD4_32f test Id: 492 - SIN
OK   UME::SIMD::SIMD4_32f test Id: 493 - MSIN
OK   UME::SIMD::SIMD4_32f test Id: 494 - COS
OK   UME::SIMD::SIMD4_32f test Id: 495 - MCOS
OK   UME::SIMD::SIMD4_32f test Id: 496 - TAN
OK   UME::SIMD::SIMD4_32f test Id: 497 - MTAN
OK   UME::SIMD::SIMD4_32f test Id: 498 - CTAN
OK   UME::SIMD::SIMD4_32f test Id: 499 - MCTAN
OK   UME::SIMD::SIMD2_64u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD2_64u test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD2_64u test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD2_64u test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD2_64u test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD2_64u test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD2_64u test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD2_64u test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD2_64u test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD2_64u test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD2_64u test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD2_64u test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD2_64u test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD2_64u test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD2_64u test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD2_64u test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD2_64u test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD2_64u test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD2_64u test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD2_64u test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD2_64u test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD2_64u test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD2_64u test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD2_64u test Id: 24 - INSERT
OK   UME::SIMD::SIMD2_64u test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD2_64u test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD2_64u test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD2_64u test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD2_64u test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD2_64u test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD2_64u test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD2_64u test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD2_64u test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD2_64u test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD2_64u test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD2_64u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD2_64u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD2_64u test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD2_64u test Id: 39 - MLOAD
OK   UME::SIMD::SIMD2_64u test Id: 40 - MSTORE
OK   UME::SIMD::SIMD2_64u test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD2_64u test Id: 42 - MLOADA
OK   UME::SIMD::SIMD2_64u test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD2_64u test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD2_64u test Id: 45 - SORTA
OK   UME::SIMD::SIMD2_64u test Id: 46 - SORTD
OK   UME::SIMD::SIMD2_64u test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD2_64u test Id: 48 - ADDV
OK   UME::SIMD::SIMD2_64u test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD2_64u test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD2_64u test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD2_64u test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD2_64u test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD2_64u test Id: 54 - MADDV
OK   UME::SIMD::SIMD2_64u test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD2_64u test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD2_64u test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD2_64u test Id: 58 - ADDS
OK   UME::SIMD::SIMD2_64u test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD2_64u test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD2_64u test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD2_64u test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD2_64u test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD2_64u test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD2_64u test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD2_64u test Id: 68 - MADDS
OK   UME::SIMD::SIMD2_64u test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD2_64u test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD2_64u test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD2_64u test Id: 73 - ADDVA
OK   UME::SIMD::SIMD2_64u test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD2_64u test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD2_64u test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD2_64u test Id: 77 - MADDVA
OK   UME::SIMD::SIMD2_64u test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD2_64u test Id: 79 - ADDSA
OK   UME::SIMD::SIMD2_64u test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD2_64u test Id: 81 - MADDSA
OK   UME::SIMD::SIMD2_64u test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD2_64u test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD2_64u test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD2_64u test Id: 85 - POSTINC
OK   UME::SIMD::SIMD2_64u test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD2_64u test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD2_64u test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD2_64u test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD2_64u test Id: 90 - PREFINC
OK   UME::SIMD::SIMD2_64u test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD2_64u test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD2_64u test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD2_64u test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD2_64u test Id: 95 - SUBV
OK   UME::SIMD::SIMD2_64u test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD2_64u test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD2_64u test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD2_64u test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD2_64u test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD2_64u test Id: 101 - MSUBV
OK   UME::SIMD::SIMD2_64u test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD2_64u test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD2_64u test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD2_64u test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD2_64u test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD2_64u test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD2_64u test Id: 108 - MSUBS
OK   UME::SIMD::SIMD2_64u test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 110 - SUBVA
OK   UME::SIMD::SIMD2_64u test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD2_64u test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD2_64u test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD2_64u test Id: 114 - SUBSA
OK   UME::SIMD::SIMD2_64u test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD2_64u test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD2_64u test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD2_64u test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD2_64u test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD2_64u test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD2_64u test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD2_64u test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD2_64u test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD2_64u test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD2_64u test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD2_64u test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD2_64u test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD2_64u test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD2_64u test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD2_64u test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD2_64u test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD2_64u test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD2_64u test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD2_64u test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD2_64u test Id: 137 - MULV
OK   UME::SIMD::SIMD2_64u test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD2_64u test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD2_64u test Id: 140 - MMULV
OK   UME::SIMD::SIMD2_64u test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD2_64u test Id: 142 - MULS
OK   UME::SIMD::SIMD2_64u test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 146 - MMULS
OK   UME::SIMD::SIMD2_64u test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 148 - MULVA
OK   UME::SIMD::SIMD2_64u test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD2_64u test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD2_64u test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD2_64u test Id: 152 - MMULVA
OK   UME::SIMD::SIMD2_64u test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_64u test Id: 154 - MULSA
OK   UME::SIMD::SIMD2_64u test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD2_64u test Id: 156 - MMULSA
OK   UME::SIMD::SIMD2_64u test Id: 157 - DIVV
OK   UME::SIMD::SIMD2_64u test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD2_64u test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD2_64u test Id: 160 - MDIVV
OK   UME::SIMD::SIMD2_64u test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD2_64u test Id: 162 - DIVS
OK   UME::SIMD::SIMD2_64u test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 165 - MDIVS
OK   UME::SIMD::SIMD2_64u test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 167 - DIVVA
OK   UME::SIMD::SIMD2_64u test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD2_64u test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD2_64u test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD2_64u test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD2_64u test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_64u test Id: 173 - DIVSA
OK   UME::SIMD::SIMD2_64u test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD2_64u test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD2_64u test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD2_64u test Id: 177 - RCP
OK   UME::SIMD::SIMD2_64u test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD2_64u test Id: 179 - MRCP
OK   UME::SIMD::SIMD2_64u test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD2_64u test Id: 181 - RCPS
OK   UME::SIMD::SIMD2_64u test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD2_64u test Id: 184 - MRCPS
OK   UME::SIMD::SIMD2_64u test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD2_64u test Id: 186 - RCPA
OK   UME::SIMD::SIMD2_64u test Id: 187 - MRCPA
OK   UME::SIMD::SIMD2_64u test Id: 188 - RCPSA
OK   UME::SIMD::SIMD2_64u test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD2_64u test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD2_64u test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD2_64u test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD2_64u test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD2_64u test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD2_64u test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD2_64u test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD2_64u test Id: 201 - CMPNES
OK   UME::SIMD::SIMD2_64u test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD2_64u test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD2_64u test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD2_64u test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD2_64u test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD2_64u test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD2_64u test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD2_64u test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD2_64u test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD2_64u test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD2_64u test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD2_64u test Id: 225 - CMPGES
OK   UME::SIMD::SIMD2_64u test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD2_64u test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD2_64u test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD2_64u test Id: 233 - CMPLES
OK   UME::SIMD::SIMD2_64u test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 238 - CMPEV
OK   UME::SIMD::SIMD2_64u test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD2_64u test Id: 240 - CMPES
OK   UME::SIMD::SIMD2_64u test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 243 - HADD
OK   UME::SIMD::SIMD2_64u test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD2_64u test Id: 245 - HADD gen
OK   UME::SIMD::SIMD2_64u test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD2_64u test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD2_64u test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD2_64u test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD2_64u test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD2_64u test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD2_64u test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD2_64u test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD2_64u test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD2_64u test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD2_64u test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD2_64u test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD2_64u test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD2_64u test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD2_64u test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD2_64u test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD2_64u test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD2_64u test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD2_64u test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD2_64u test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD2_64u test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD2_64u test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD2_64u test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD2_64u test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD2_64u test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD2_64u test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD2_64u test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD2_64u test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD2_64u test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD2_64u test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD2_64u test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD2_64u test Id: 277 - MAXV
OK   UME::SIMD::SIMD2_64u test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD2_64u test Id: 279 - MMAXV
OK   UME::SIMD::SIMD2_64u test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD2_64u test Id: 281 - MAXS
OK   UME::SIMD::SIMD2_64u test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 284 - MMAXS
OK   UME::SIMD::SIMD2_64u test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 286 - MAXVA
OK   UME::SIMD::SIMD2_64u test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD2_64u test Id: 288 - MAXSA
OK   UME::SIMD::SIMD2_64u test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD2_64u test Id: 290 - MINV
OK   UME::SIMD::SIMD2_64u test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD2_64u test Id: 292 - MMINV
OK   UME::SIMD::SIMD2_64u test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD2_64u test Id: 294 - MINS
OK   UME::SIMD::SIMD2_64u test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD2_64u test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD2_64u test Id: 297 - MMINS
OK   UME::SIMD::SIMD2_64u test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 299 - MINVA
OK   UME::SIMD::SIMD2_64u test Id: 300 - MMINVA
OK   UME::SIMD::SIMD2_64u test Id: 301 - MINSA
OK   UME::SIMD::SIMD2_64u test Id: 302 - MMINSA
OK   UME::SIMD::SIMD2_64u test Id: 303 - HMAX
OK   UME::SIMD::SIMD2_64u test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD2_64u test Id: 305 - HMAX
OK   UME::SIMD::SIMD2_64u test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD2_64u test Id: 307 - MHMAX
OK   UME::SIMD::SIMD2_64u test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD2_64u test Id: 309 - IMAX
OK   UME::SIMD::SIMD2_64u test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD2_64u test Id: 311 - MIMAX
OK   UME::SIMD::SIMD2_64u test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD2_64u test Id: 313 - HMIN
OK   UME::SIMD::SIMD2_64u test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD2_64u test Id: 315 - HMIN
OK   UME::SIMD::SIMD2_64u test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD2_64u test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD2_64u test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD2_64u test Id: 319 - IMIN
OK   UME::SIMD::SIMD2_64u test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD2_64u test Id: 321 - MIMIN
OK   UME::SIMD::SIMD2_64u test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD2_64u test Id: 323 - REMV gen
OK   UME::SIMD::SIMD2_64u test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD2_64u test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD2_64u test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD2_64u test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD2_64u test Id: 328 - REMS gen
OK   UME::SIMD::SIMD2_64u test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD2_64u test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD2_64u test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD2_64u test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD2_64u test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD2_64u test Id: 334 - LORV gen
OK   UME::SIMD::SIMD2_64u test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD2_64u test Id: 336 - BANDV
OK   UME::SIMD::SIMD2_64u test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD2_64u test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD2_64u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD2_64u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD2_64u test Id: 341 - BANDS
OK   UME::SIMD::SIMD2_64u test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 346 - MBANDS
OK   UME::SIMD::SIMD2_64u test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 348 - BANDVA
OK   UME::SIMD::SIMD2_64u test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD2_64u test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD2_64u test Id: 351 - BANDSA
OK   UME::SIMD::SIMD2_64u test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD2_64u test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD2_64u test Id: 354 - BORV
OK   UME::SIMD::SIMD2_64u test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD2_64u test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD2_64u test Id: 357 - MBORV
OK   UME::SIMD::SIMD2_64u test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD2_64u test Id: 359 - BORS
OK   UME::SIMD::SIMD2_64u test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 364 - MBORS
OK   UME::SIMD::SIMD2_64u test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 366 - BORVA
OK   UME::SIMD::SIMD2_64u test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD2_64u test Id: 368 - MBORVA
OK   UME::SIMD::SIMD2_64u test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD2_64u test Id: 370 - BORSA
OK   UME::SIMD::SIMD2_64u test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD2_64u test Id: 372 - MBORSA
OK   UME::SIMD::SIMD2_64u test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD2_64u test Id: 374 - BXORV
OK   UME::SIMD::SIMD2_64u test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD2_64u test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD2_64u test Id: 377 - MBXORV
OK   UME::SIMD::SIMD2_64u test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD2_64u test Id: 379 - BXORS
OK   UME::SIMD::SIMD2_64u test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 384 - MBXORS
OK   UME::SIMD::SIMD2_64u test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 386 - BXORVA
OK   UME::SIMD::SIMD2_64u test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD2_64u test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD2_64u test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD2_64u test Id: 390 - BXORSA
OK   UME::SIMD::SIMD2_64u test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD2_64u test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD2_64u test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD2_64u test Id: 394 - BNOT
OK   UME::SIMD::SIMD2_64u test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD2_64u test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD2_64u test Id: 397 - MBNOT
OK   UME::SIMD::SIMD2_64u test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD2_64u test Id: 399 - BNOTA
OK   UME::SIMD::SIMD2_64u test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD2_64u test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD2_64u test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD2_64u test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD2_64u test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD2_64u test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD2_64u test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD2_64u test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD2_64u test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD2_64u test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD2_64u test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD2_64u test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD2_64u test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD2_64u test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD2_64u test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD2_64u test Id: 415 - HBAND
OK   UME::SIMD::SIMD2_64u test Id: 416 - HBAND
OK   UME::SIMD::SIMD2_64u test Id: 417 - MHBAND
OK   UME::SIMD::SIMD2_64u test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD2_64u test Id: 419 - HBANDS
OK   UME::SIMD::SIMD2_64u test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD2_64u test Id: 421 - HBOR
OK   UME::SIMD::SIMD2_64u test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD2_64u test Id: 423 - MHBOR
OK   UME::SIMD::SIMD2_64u test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD2_64u test Id: 425 - HBORS
OK   UME::SIMD::SIMD2_64u test Id: 426 - MHBORS
OK   UME::SIMD::SIMD2_64u test Id: 427 - HBXOR
OK   UME::SIMD::SIMD2_64u test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD2_64u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD2_64u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD2_64u test Id: 431 - HBXORS
OK   UME::SIMD::SIMD2_64u test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD2_64u test Id: 433 - GATHERU
OK   UME::SIMD::SIMD2_64u test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD2_64u test Id: 435 - GATHERS
OK   UME::SIMD::SIMD2_64u test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD2_64u test Id: 437 - GATHERV
OK   UME::SIMD::SIMD2_64u test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD2_64u test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD2_64u test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD2_64u test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD2_64u test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD2_64u test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD2_64u test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD2_64u test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD2_64u test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD2_64u test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD2_64u test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD2_64u test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD2_64u test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD2_64u test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD2_64u test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD2_64u test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD2_64u test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD2_64u test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD2_64u test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD2_64u test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD2_64u test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD2_64u test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD2_64u test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD2_64u test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD2_64u test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD2_64u test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD2_64u test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD2_64u test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD2_64u test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD2_64u test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD2_64u test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD2_64u test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD2_64u test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD2_64u test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD2_64u test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD2_64u test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD2_64u test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD2_64u test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD2_64u test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD2_64u test Id: 477 - ROLV
OK   UME::SIMD::SIMD2_64u test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD2_64u test Id: 479 - MROLV
OK   UME::SIMD::SIMD2_64u test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD2_64u test Id: 481 - ROLS
OK   UME::SIMD::SIMD2_64u test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 483 - MROLS
OK   UME::SIMD::SIMD2_64u test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 485 - ROLVA
OK   UME::SIMD::SIMD2_64u test Id: 486 - MROLVA
OK   UME::SIMD::SIMD2_64u test Id: 487 - ROLSA
OK   UME::SIMD::SIMD2_64u test Id: 488 - MROLSA
OK   UME::SIMD::SIMD2_64u test Id: 489 - RORV
OK   UME::SIMD::SIMD2_64u test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD2_64u test Id: 491 - MRORV
OK   UME::SIMD::SIMD2_64u test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD2_64u test Id: 493 - RORS
OK   UME::SIMD::SIMD2_64u test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 495 - MRORS
OK   UME::SIMD::SIMD2_64u test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64u test Id: 497 - RORVA
OK   UME::SIMD::SIMD2_64u test Id: 498 - MRORVA
OK   UME::SIMD::SIMD2_64u test Id: 499 - RORSA
OK   UME::SIMD::SIMD2_64u test Id: 500 - MRORSA
OK   UME::SIMD::SIMD2_64u test Id: 501 - UTOI
OK   UME::SIMD::SIMD2_64u test Id: 502 - UTOF
OK   UME::SIMD::SIMD2_64u test Id: 503 - PACK
OK   UME::SIMD::SIMD2_64u test Id: 504 - PACKLO
OK   UME::SIMD::SIMD2_64u test Id: 505 - PACKHI
OK   UME::SIMD::SIMD2_64u test Id: 506 - UNPACK
OK   UME::SIMD::SIMD2_64u test Id: 507 - UNPACKLO
OK   UME::SIMD::SIMD2_64u test Id: 508 - UNPACKHi
OK   UME::SIMD::SIMD2_64u test Id: 509 - DEGRADE
OK   UME::SIMD::SIMD2_64i test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD2_64i test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD2_64i test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD2_64i test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD2_64i test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD2_64i test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD2_64i test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD2_64i test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD2_64i test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD2_64i test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD2_64i test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD2_64i test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD2_64i test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD2_64i test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD2_64i test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD2_64i test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD2_64i test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD2_64i test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD2_64i test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD2_64i test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD2_64i test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD2_64i test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD2_64i test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD2_64i test Id: 24 - INSERT
OK   UME::SIMD::SIMD2_64i test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD2_64i test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD2_64i test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD2_64i test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD2_64i test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD2_64i test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD2_64i test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD2_64i test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD2_64i test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD2_64i test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD2_64i test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD2_64i test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD2_64i test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD2_64i test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD2_64i test Id: 39 - MLOAD
OK   UME::SIMD::SIMD2_64i test Id: 40 - MSTORE
OK   UME::SIMD::SIMD2_64i test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD2_64i test Id: 42 - MLOADA
OK   UME::SIMD::SIMD2_64i test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD2_64i test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD2_64i test Id: 45 - SORTA
OK   UME::SIMD::SIMD2_64i test Id: 46 - SORTD
OK   UME::SIMD::SIMD2_64i test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD2_64i test Id: 48 - ADDV
OK   UME::SIMD::SIMD2_64i test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD2_64i test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD2_64i test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD2_64i test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD2_64i test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD2_64i test Id: 54 - MADDV
OK   UME::SIMD::SIMD2_64i test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD2_64i test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD2_64i test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD2_64i test Id: 58 - ADDS
OK   UME::SIMD::SIMD2_64i test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD2_64i test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD2_64i test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD2_64i test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD2_64i test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD2_64i test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD2_64i test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD2_64i test Id: 68 - MADDS
OK   UME::SIMD::SIMD2_64i test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD2_64i test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD2_64i test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD2_64i test Id: 73 - ADDVA
OK   UME::SIMD::SIMD2_64i test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD2_64i test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD2_64i test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD2_64i test Id: 77 - MADDVA
OK   UME::SIMD::SIMD2_64i test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD2_64i test Id: 79 - ADDSA
OK   UME::SIMD::SIMD2_64i test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD2_64i test Id: 81 - MADDSA
OK   UME::SIMD::SIMD2_64i test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD2_64i test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD2_64i test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD2_64i test Id: 85 - POSTINC
OK   UME::SIMD::SIMD2_64i test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD2_64i test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD2_64i test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD2_64i test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD2_64i test Id: 90 - PREFINC
OK   UME::SIMD::SIMD2_64i test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD2_64i test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD2_64i test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD2_64i test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD2_64i test Id: 95 - SUBV
OK   UME::SIMD::SIMD2_64i test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD2_64i test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD2_64i test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD2_64i test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD2_64i test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD2_64i test Id: 101 - MSUBV
OK   UME::SIMD::SIMD2_64i test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD2_64i test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD2_64i test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD2_64i test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD2_64i test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD2_64i test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD2_64i test Id: 108 - MSUBS
OK   UME::SIMD::SIMD2_64i test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 110 - SUBVA
OK   UME::SIMD::SIMD2_64i test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD2_64i test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD2_64i test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD2_64i test Id: 114 - SUBSA
OK   UME::SIMD::SIMD2_64i test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD2_64i test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD2_64i test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD2_64i test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD2_64i test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD2_64i test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD2_64i test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD2_64i test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD2_64i test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD2_64i test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD2_64i test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD2_64i test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD2_64i test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD2_64i test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD2_64i test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD2_64i test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD2_64i test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD2_64i test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD2_64i test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD2_64i test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD2_64i test Id: 137 - MULV
OK   UME::SIMD::SIMD2_64i test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD2_64i test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD2_64i test Id: 140 - MMULV
OK   UME::SIMD::SIMD2_64i test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD2_64i test Id: 142 - MULS
OK   UME::SIMD::SIMD2_64i test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 146 - MMULS
OK   UME::SIMD::SIMD2_64i test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 148 - MULVA
OK   UME::SIMD::SIMD2_64i test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD2_64i test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD2_64i test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD2_64i test Id: 152 - MMULVA
OK   UME::SIMD::SIMD2_64i test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_64i test Id: 154 - MULSA
OK   UME::SIMD::SIMD2_64i test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD2_64i test Id: 156 - MMULSA
OK   UME::SIMD::SIMD2_64i test Id: 157 - DIVV
OK   UME::SIMD::SIMD2_64i test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD2_64i test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD2_64i test Id: 160 - MDIVV
OK   UME::SIMD::SIMD2_64i test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD2_64i test Id: 162 - DIVS
OK   UME::SIMD::SIMD2_64i test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 165 - MDIVS
OK   UME::SIMD::SIMD2_64i test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 167 - DIVVA
OK   UME::SIMD::SIMD2_64i test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD2_64i test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD2_64i test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD2_64i test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD2_64i test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_64i test Id: 173 - DIVSA
OK   UME::SIMD::SIMD2_64i test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD2_64i test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD2_64i test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD2_64i test Id: 177 - RCP
OK   UME::SIMD::SIMD2_64i test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD2_64i test Id: 179 - MRCP
OK   UME::SIMD::SIMD2_64i test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD2_64i test Id: 181 - RCPS
OK   UME::SIMD::SIMD2_64i test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD2_64i test Id: 184 - MRCPS
OK   UME::SIMD::SIMD2_64i test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD2_64i test Id: 186 - RCPA
OK   UME::SIMD::SIMD2_64i test Id: 187 - MRCPA
OK   UME::SIMD::SIMD2_64i test Id: 188 - RCPSA
OK   UME::SIMD::SIMD2_64i test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD2_64i test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD2_64i test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD2_64i test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD2_64i test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD2_64i test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD2_64i test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD2_64i test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD2_64i test Id: 201 - CMPNES
OK   UME::SIMD::SIMD2_64i test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD2_64i test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD2_64i test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD2_64i test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD2_64i test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD2_64i test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD2_64i test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD2_64i test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD2_64i test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD2_64i test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD2_64i test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD2_64i test Id: 225 - CMPGES
OK   UME::SIMD::SIMD2_64i test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD2_64i test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD2_64i test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD2_64i test Id: 233 - CMPLES
OK   UME::SIMD::SIMD2_64i test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 238 - CMPEV
OK   UME::SIMD::SIMD2_64i test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD2_64i test Id: 240 - CMPES
OK   UME::SIMD::SIMD2_64i test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 243 - HADD
OK   UME::SIMD::SIMD2_64i test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD2_64i test Id: 245 - HADD gen
OK   UME::SIMD::SIMD2_64i test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD2_64i test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD2_64i test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD2_64i test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD2_64i test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD2_64i test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD2_64i test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD2_64i test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD2_64i test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD2_64i test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD2_64i test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD2_64i test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD2_64i test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD2_64i test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD2_64i test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD2_64i test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD2_64i test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD2_64i test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD2_64i test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD2_64i test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD2_64i test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD2_64i test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD2_64i test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD2_64i test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD2_64i test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD2_64i test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD2_64i test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD2_64i test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD2_64i test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD2_64i test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD2_64i test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD2_64i test Id: 277 - MAXV
OK   UME::SIMD::SIMD2_64i test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD2_64i test Id: 279 - MMAXV
OK   UME::SIMD::SIMD2_64i test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD2_64i test Id: 281 - MAXS
OK   UME::SIMD::SIMD2_64i test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 284 - MMAXS
OK   UME::SIMD::SIMD2_64i test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 286 - MAXVA
OK   UME::SIMD::SIMD2_64i test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD2_64i test Id: 288 - MAXSA
OK   UME::SIMD::SIMD2_64i test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD2_64i test Id: 290 - MINV
OK   UME::SIMD::SIMD2_64i test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD2_64i test Id: 292 - MMINV
OK   UME::SIMD::SIMD2_64i test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD2_64i test Id: 294 - MINS
OK   UME::SIMD::SIMD2_64i test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD2_64i test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD2_64i test Id: 297 - MMINS
OK   UME::SIMD::SIMD2_64i test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 299 - MINVA
OK   UME::SIMD::SIMD2_64i test Id: 300 - MMINVA
OK   UME::SIMD::SIMD2_64i test Id: 301 - MINSA
OK   UME::SIMD::SIMD2_64i test Id: 302 - MMINSA
OK   UME::SIMD::SIMD2_64i test Id: 303 - HMAX
OK   UME::SIMD::SIMD2_64i test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD2_64i test Id: 305 - HMAX
OK   UME::SIMD::SIMD2_64i test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD2_64i test Id: 307 - MHMAX
OK   UME::SIMD::SIMD2_64i test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD2_64i test Id: 309 - IMAX
OK   UME::SIMD::SIMD2_64i test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD2_64i test Id: 311 - MIMAX
OK   UME::SIMD::SIMD2_64i test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD2_64i test Id: 313 - HMIN
OK   UME::SIMD::SIMD2_64i test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD2_64i test Id: 315 - HMIN
OK   UME::SIMD::SIMD2_64i test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD2_64i test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD2_64i test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD2_64i test Id: 319 - IMIN
OK   UME::SIMD::SIMD2_64i test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD2_64i test Id: 321 - MIMIN
OK   UME::SIMD::SIMD2_64i test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD2_64i test Id: 323 - REMV gen
OK   UME::SIMD::SIMD2_64i test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD2_64i test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD2_64i test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD2_64i test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD2_64i test Id: 328 - REMS gen
OK   UME::SIMD::SIMD2_64i test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD2_64i test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD2_64i test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD2_64i test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD2_64i test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD2_64i test Id: 334 - LORV gen
OK   UME::SIMD::SIMD2_64i test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD2_64i test Id: 336 - BANDV
OK   UME::SIMD::SIMD2_64i test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD2_64i test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD2_64i test Id: 339 - MBANDV
OK   UME::SIMD::SIMD2_64i test Id: 340 - MBANDV
OK   UME::SIMD::SIMD2_64i test Id: 341 - BANDS
OK   UME::SIMD::SIMD2_64i test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 346 - MBANDS
OK   UME::SIMD::SIMD2_64i test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 348 - BANDVA
OK   UME::SIMD::SIMD2_64i test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD2_64i test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD2_64i test Id: 351 - BANDSA
OK   UME::SIMD::SIMD2_64i test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD2_64i test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD2_64i test Id: 354 - BORV
OK   UME::SIMD::SIMD2_64i test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD2_64i test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD2_64i test Id: 357 - MBORV
OK   UME::SIMD::SIMD2_64i test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD2_64i test Id: 359 - BORS
OK   UME::SIMD::SIMD2_64i test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 364 - MBORS
OK   UME::SIMD::SIMD2_64i test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 366 - BORVA
OK   UME::SIMD::SIMD2_64i test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD2_64i test Id: 368 - MBORVA
OK   UME::SIMD::SIMD2_64i test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD2_64i test Id: 370 - BORSA
OK   UME::SIMD::SIMD2_64i test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD2_64i test Id: 372 - MBORSA
OK   UME::SIMD::SIMD2_64i test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD2_64i test Id: 374 - BXORV
OK   UME::SIMD::SIMD2_64i test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD2_64i test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD2_64i test Id: 377 - MBXORV
OK   UME::SIMD::SIMD2_64i test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD2_64i test Id: 379 - BXORS
OK   UME::SIMD::SIMD2_64i test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 384 - MBXORS
OK   UME::SIMD::SIMD2_64i test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 386 - BXORVA
OK   UME::SIMD::SIMD2_64i test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD2_64i test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD2_64i test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD2_64i test Id: 390 - BXORSA
OK   UME::SIMD::SIMD2_64i test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD2_64i test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD2_64i test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD2_64i test Id: 394 - BNOT
OK   UME::SIMD::SIMD2_64i test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD2_64i test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD2_64i test Id: 397 - MBNOT
OK   UME::SIMD::SIMD2_64i test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD2_64i test Id: 399 - BNOTA
OK   UME::SIMD::SIMD2_64i test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD2_64i test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD2_64i test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD2_64i test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD2_64i test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD2_64i test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD2_64i test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD2_64i test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD2_64i test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD2_64i test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD2_64i test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD2_64i test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD2_64i test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD2_64i test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD2_64i test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD2_64i test Id: 415 - HBAND
OK   UME::SIMD::SIMD2_64i test Id: 416 - HBAND
OK   UME::SIMD::SIMD2_64i test Id: 417 - MHBAND
OK   UME::SIMD::SIMD2_64i test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD2_64i test Id: 419 - HBANDS
OK   UME::SIMD::SIMD2_64i test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD2_64i test Id: 421 - HBOR
OK   UME::SIMD::SIMD2_64i test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD2_64i test Id: 423 - MHBOR
OK   UME::SIMD::SIMD2_64i test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD2_64i test Id: 425 - HBORS
OK   UME::SIMD::SIMD2_64i test Id: 426 - MHBORS
OK   UME::SIMD::SIMD2_64i test Id: 427 - HBXOR
OK   UME::SIMD::SIMD2_64i test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD2_64i test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD2_64i test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD2_64i test Id: 431 - HBXORS
OK   UME::SIMD::SIMD2_64i test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD2_64i test Id: 433 - GATHERU
OK   UME::SIMD::SIMD2_64i test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD2_64i test Id: 435 - GATHERS
OK   UME::SIMD::SIMD2_64i test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD2_64i test Id: 437 - GATHERV
OK   UME::SIMD::SIMD2_64i test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD2_64i test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD2_64i test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD2_64i test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD2_64i test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD2_64i test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD2_64i test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD2_64i test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD2_64i test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD2_64i test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD2_64i test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD2_64i test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD2_64i test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD2_64i test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD2_64i test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD2_64i test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD2_64i test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD2_64i test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD2_64i test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD2_64i test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD2_64i test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD2_64i test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD2_64i test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD2_64i test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD2_64i test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD2_64i test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD2_64i test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD2_64i test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD2_64i test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD2_64i test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD2_64i test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD2_64i test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD2_64i test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD2_64i test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD2_64i test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD2_64i test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD2_64i test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD2_64i test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD2_64i test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD2_64i test Id: 477 - ROLV
OK   UME::SIMD::SIMD2_64i test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD2_64i test Id: 479 - MROLV
OK   UME::SIMD::SIMD2_64i test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD2_64i test Id: 481 - ROLS
OK   UME::SIMD::SIMD2_64i test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 483 - MROLS
OK   UME::SIMD::SIMD2_64i test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 485 - ROLVA
OK   UME::SIMD::SIMD2_64i test Id: 486 - MROLVA
OK   UME::SIMD::SIMD2_64i test Id: 487 - ROLSA
OK   UME::SIMD::SIMD2_64i test Id: 488 - MROLSA
OK   UME::SIMD::SIMD2_64i test Id: 489 - RORV
OK   UME::SIMD::SIMD2_64i test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD2_64i test Id: 491 - MRORV
OK   UME::SIMD::SIMD2_64i test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD2_64i test Id: 493 - RORS
OK   UME::SIMD::SIMD2_64i test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 495 - MRORS
OK   UME::SIMD::SIMD2_64i test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64i test Id: 497 - RORVA
OK   UME::SIMD::SIMD2_64i test Id: 498 - MRORVA
OK   UME::SIMD::SIMD2_64i test Id: 499 - RORSA
OK   UME::SIMD::SIMD2_64i test Id: 500 - MRORSA
OK   UME::SIMD::SIMD2_64i test Id: 501 - NEG
OK   UME::SIMD::SIMD2_64i test Id: 502 - NEG(operator-)
OK   UME::SIMD::SIMD2_64i test Id: 503 - NEG(function)
OK   UME::SIMD::SIMD2_64i test Id: 504 - MNEG
OK   UME::SIMD::SIMD2_64i test Id: 505 - MNEG(function)
OK   UME::SIMD::SIMD2_64i test Id: 506 - NEGA
OK   UME::SIMD::SIMD2_64i test Id: 507 - MNEGA
OK   UME::SIMD::SIMD2_64i test Id: 508 - ABS
OK   UME::SIMD::SIMD2_64i test Id: 509 - ABS(function)
OK   UME::SIMD::SIMD2_64i test Id: 510 - MABS
OK   UME::SIMD::SIMD2_64i test Id: 511 - MABS(function)
OK   UME::SIMD::SIMD2_64i test Id: 512 - ABSA
OK   UME::SIMD::SIMD2_64i test Id: 513 - MABSA
OK   UME::SIMD::SIMD2_64i test Id: 514 - COPYSIGN gen
OK   UME::SIMD::SIMD2_64i test Id: 515 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD2_64i test Id: 516 - ITOU
OK   UME::SIMD::SIMD2_64i test Id: 517 - PACK
OK   UME::SIMD::SIMD2_64i test Id: 518 - PACKLO
OK   UME::SIMD::SIMD2_64i test Id: 519 - PACKHI
OK   UME::SIMD::SIMD2_64i test Id: 520 - UNPACK
OK   UME::SIMD::SIMD2_64i test Id: 521 - UNPACKLO
OK   UME::SIMD::SIMD2_64i test Id: 522 - UNPACKHi
OK   UME::SIMD::SIMD2_64i test Id: 523 - DEGRADE
OK   UME::SIMD::SIMD2_64f test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD2_64f test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD2_64f test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD2_64f test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD2_64f test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD2_64f test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD2_64f test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD2_64f test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD2_64f test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD2_64f test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD2_64f test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD2_64f test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD2_64f test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD2_64f test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD2_64f test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD2_64f test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD2_64f test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD2_64f test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD2_64f test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD2_64f test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD2_64f test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD2_64f test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD2_64f test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD2_64f test Id: 24 - INSERT
OK   UME::SIMD::SIMD2_64f test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD2_64f test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD2_64f test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD2_64f test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD2_64f test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD2_64f test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD2_64f test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD2_64f test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD2_64f test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD2_64f test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD2_64f test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD2_64f test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD2_64f test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD2_64f test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD2_64f test Id: 39 - MLOAD
OK   UME::SIMD::SIMD2_64f test Id: 40 - MSTORE
OK   UME::SIMD::SIMD2_64f test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD2_64f test Id: 42 - MLOADA
OK   UME::SIMD::SIMD2_64f test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD2_64f test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD2_64f test Id: 45 - SORTA
OK   UME::SIMD::SIMD2_64f test Id: 46 - SORTD
OK   UME::SIMD::SIMD2_64f test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD2_64f test Id: 48 - ADDV
OK   UME::SIMD::SIMD2_64f test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD2_64f test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD2_64f test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD2_64f test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD2_64f test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 54 - MADDV
OK   UME::SIMD::SIMD2_64f test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD2_64f test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD2_64f test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 58 - ADDS
OK   UME::SIMD::SIMD2_64f test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD2_64f test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD2_64f test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD2_64f test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD2_64f test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD2_64f test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD2_64f test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD2_64f test Id: 68 - MADDS
OK   UME::SIMD::SIMD2_64f test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD2_64f test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD2_64f test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD2_64f test Id: 73 - ADDVA
OK   UME::SIMD::SIMD2_64f test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD2_64f test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD2_64f test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD2_64f test Id: 77 - MADDVA
OK   UME::SIMD::SIMD2_64f test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD2_64f test Id: 79 - ADDSA
OK   UME::SIMD::SIMD2_64f test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD2_64f test Id: 81 - MADDSA
OK   UME::SIMD::SIMD2_64f test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD2_64f test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD2_64f test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 85 - POSTINC
OK   UME::SIMD::SIMD2_64f test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD2_64f test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD2_64f test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD2_64f test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD2_64f test Id: 90 - PREFINC
OK   UME::SIMD::SIMD2_64f test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD2_64f test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD2_64f test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD2_64f test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD2_64f test Id: 95 - SUBV
OK   UME::SIMD::SIMD2_64f test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD2_64f test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD2_64f test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD2_64f test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD2_64f test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 101 - MSUBV
OK   UME::SIMD::SIMD2_64f test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD2_64f test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD2_64f test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD2_64f test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD2_64f test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 108 - MSUBS
OK   UME::SIMD::SIMD2_64f test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 110 - SUBVA
OK   UME::SIMD::SIMD2_64f test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD2_64f test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD2_64f test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD2_64f test Id: 114 - SUBSA
OK   UME::SIMD::SIMD2_64f test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD2_64f test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD2_64f test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD2_64f test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD2_64f test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD2_64f test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD2_64f test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD2_64f test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD2_64f test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD2_64f test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD2_64f test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD2_64f test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD2_64f test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD2_64f test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD2_64f test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD2_64f test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD2_64f test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD2_64f test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD2_64f test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD2_64f test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD2_64f test Id: 137 - MULV
OK   UME::SIMD::SIMD2_64f test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD2_64f test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD2_64f test Id: 140 - MMULV
OK   UME::SIMD::SIMD2_64f test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD2_64f test Id: 142 - MULS
OK   UME::SIMD::SIMD2_64f test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 146 - MMULS
OK   UME::SIMD::SIMD2_64f test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 148 - MULVA
OK   UME::SIMD::SIMD2_64f test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD2_64f test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD2_64f test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD2_64f test Id: 152 - MMULVA
OK   UME::SIMD::SIMD2_64f test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_64f test Id: 154 - MULSA
OK   UME::SIMD::SIMD2_64f test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD2_64f test Id: 156 - MMULSA
OK   UME::SIMD::SIMD2_64f test Id: 157 - DIVV
OK   UME::SIMD::SIMD2_64f test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD2_64f test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD2_64f test Id: 160 - MDIVV
OK   UME::SIMD::SIMD2_64f test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD2_64f test Id: 162 - DIVS
OK   UME::SIMD::SIMD2_64f test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 165 - MDIVS
OK   UME::SIMD::SIMD2_64f test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 167 - DIVVA
OK   UME::SIMD::SIMD2_64f test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD2_64f test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD2_64f test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD2_64f test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD2_64f test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD2_64f test Id: 173 - DIVSA
OK   UME::SIMD::SIMD2_64f test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD2_64f test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD2_64f test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD2_64f test Id: 177 - RCP
OK   UME::SIMD::SIMD2_64f test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD2_64f test Id: 179 - MRCP
OK   UME::SIMD::SIMD2_64f test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD2_64f test Id: 181 - RCPS
OK   UME::SIMD::SIMD2_64f test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD2_64f test Id: 184 - MRCPS
OK   UME::SIMD::SIMD2_64f test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD2_64f test Id: 186 - RCPA
OK   UME::SIMD::SIMD2_64f test Id: 187 - MRCPA
OK   UME::SIMD::SIMD2_64f test Id: 188 - RCPSA
OK   UME::SIMD::SIMD2_64f test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD2_64f test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD2_64f test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD2_64f test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD2_64f test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD2_64f test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD2_64f test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD2_64f test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD2_64f test Id: 201 - CMPNES
OK   UME::SIMD::SIMD2_64f test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD2_64f test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD2_64f test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD2_64f test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD2_64f test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD2_64f test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD2_64f test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD2_64f test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD2_64f test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD2_64f test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD2_64f test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD2_64f test Id: 225 - CMPGES
OK   UME::SIMD::SIMD2_64f test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD2_64f test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD2_64f test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD2_64f test Id: 233 - CMPLES
OK   UME::SIMD::SIMD2_64f test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 238 - CMPEV
OK   UME::SIMD::SIMD2_64f test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD2_64f test Id: 240 - CMPES
OK   UME::SIMD::SIMD2_64f test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 243 - HADD
OK   UME::SIMD::SIMD2_64f test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD2_64f test Id: 245 - HADD gen
OK   UME::SIMD::SIMD2_64f test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD2_64f test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD2_64f test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD2_64f test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD2_64f test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD2_64f test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD2_64f test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD2_64f test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD2_64f test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD2_64f test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD2_64f test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD2_64f test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD2_64f test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD2_64f test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD2_64f test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD2_64f test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD2_64f test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD2_64f test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD2_64f test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD2_64f test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD2_64f test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD2_64f test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD2_64f test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD2_64f test Id: 277 - MAXV
OK   UME::SIMD::SIMD2_64f test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD2_64f test Id: 279 - MMAXV
OK   UME::SIMD::SIMD2_64f test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD2_64f test Id: 281 - MAXS
OK   UME::SIMD::SIMD2_64f test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 284 - MMAXS
OK   UME::SIMD::SIMD2_64f test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 286 - MAXVA
OK   UME::SIMD::SIMD2_64f test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD2_64f test Id: 288 - MAXSA
OK   UME::SIMD::SIMD2_64f test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD2_64f test Id: 290 - MINV
OK   UME::SIMD::SIMD2_64f test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD2_64f test Id: 292 - MMINV
OK   UME::SIMD::SIMD2_64f test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD2_64f test Id: 294 - MINS
OK   UME::SIMD::SIMD2_64f test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD2_64f test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD2_64f test Id: 297 - MMINS
OK   UME::SIMD::SIMD2_64f test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD2_64f test Id: 299 - MINVA
OK   UME::SIMD::SIMD2_64f test Id: 300 - MMINVA
OK   UME::SIMD::SIMD2_64f test Id: 301 - MINSA
OK   UME::SIMD::SIMD2_64f test Id: 302 - MMINSA
OK   UME::SIMD::SIMD2_64f test Id: 303 - HMAX
OK   UME::SIMD::SIMD2_64f test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD2_64f test Id: 305 - HMAX
OK   UME::SIMD::SIMD2_64f test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD2_64f test Id: 307 - MHMAX
OK   UME::SIMD::SIMD2_64f test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD2_64f test Id: 309 - IMAX
OK   UME::SIMD::SIMD2_64f test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD2_64f test Id: 311 - MIMAX
OK   UME::SIMD::SIMD2_64f test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD2_64f test Id: 313 - HMIN
OK   UME::SIMD::SIMD2_64f test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD2_64f test Id: 315 - HMIN
OK   UME::SIMD::SIMD2_64f test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD2_64f test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD2_64f test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 319 - IMIN
OK   UME::SIMD::SIMD2_64f test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD2_64f test Id: 321 - MIMIN
OK   UME::SIMD::SIMD2_64f test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD2_64f test Id: 323 - GATHERU
OK   UME::SIMD::SIMD2_64f test Id: 324 - MGATHERU
OK   UME::SIMD::SIMD2_64f test Id: 325 - GATHERS
OK   UME::SIMD::SIMD2_64f test Id: 326 - MGATHERS
OK   UME::SIMD::SIMD2_64f test Id: 327 - GATHERV
OK   UME::SIMD::SIMD2_64f test Id: 328 - MGATHERV
OK   UME::SIMD::SIMD2_64f test Id: 329 - SCATTERU
OK   UME::SIMD::SIMD2_64f test Id: 330 - MSCATTERU
OK   UME::SIMD::SIMD2_64f test Id: 331 - SCATTERS
OK   UME::SIMD::SIMD2_64f test Id: 332 - MSCATTERS
OK   UME::SIMD::SIMD2_64f test Id: 333 - SCATTERV
OK   UME::SIMD::SIMD2_64f test Id: 334 - MSCATTERV
OK   UME::SIMD::SIMD2_64f test Id: 335 - NEG
OK   UME::SIMD::SIMD2_64f test Id: 336 - NEG(operator-)
OK   UME::SIMD::SIMD2_64f test Id: 337 - NEG(function)
OK   UME::SIMD::SIMD2_64f test Id: 338 - MNEG
OK   UME::SIMD::SIMD2_64f test Id: 339 - MNEG(function)
OK   UME::SIMD::SIMD2_64f test Id: 340 - NEGA
OK   UME::SIMD::SIMD2_64f test Id: 341 - MNEGA
OK   UME::SIMD::SIMD2_64f test Id: 342 - ABS
OK   UME::SIMD::SIMD2_64f test Id: 343 - ABS(function)
OK   UME::SIMD::SIMD2_64f test Id: 344 - MABS
OK   UME::SIMD::SIMD2_64f test Id: 345 - MABS(function)
OK   UME::SIMD::SIMD2_64f test Id: 346 - ABSA
OK   UME::SIMD::SIMD2_64f test Id: 347 - MABSA
OK   UME::SIMD::SIMD2_64f test Id: 348 - COPYSIGN gen
OK   UME::SIMD::SIMD2_64f test Id: 349 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 350 - ROUND
OK   UME::SIMD::SIMD2_64f test Id: 351 - ROUND(function)
OK   UME::SIMD::SIMD2_64f test Id: 352 - MROUND
OK   UME::SIMD::SIMD2_64f test Id: 353 - MROUND(function)
OK   UME::SIMD::SIMD2_64f test Id: 354 - TRUNC gen
OK   UME::SIMD::SIMD2_64f test Id: 355 - TRUNC(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 356 - MTRUNC gen
OK   UME::SIMD::SIMD2_64f test Id: 357 - MTRUNC(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 358 - FLOOR
OK   UME::SIMD::SIMD2_64f test Id: 359 - FLOOR(function)
OK   UME::SIMD::SIMD2_64f test Id: 360 - MFLOOR
OK   UME::SIMD::SIMD2_64f test Id: 361 - MFLOOR(function)
OK   UME::SIMD::SIMD2_64f test Id: 362 - CEIL
OK   UME::SIMD::SIMD2_64f test Id: 363 - CEIL(function)
OK   UME::SIMD::SIMD2_64f test Id: 364 - MCEIL
OK   UME::SIMD::SIMD2_64f test Id: 365 - MCEIL(function)
OK   UME::SIMD::SIMD2_64f test Id: 366 - ISFIN
OK   UME::SIMD::SIMD2_64f test Id: 367 - ISFIN(function)
OK   UME::SIMD::SIMD2_64f test Id: 368 - ISINF
OK   UME::SIMD::SIMD2_64f test Id: 369 - ISINF(function)
OK   UME::SIMD::SIMD2_64f test Id: 370 - ISAN
OK   UME::SIMD::SIMD2_64f test Id: 371 - ISAN(function)
OK   UME::SIMD::SIMD2_64f test Id: 372 - ISNAN
OK   UME::SIMD::SIMD2_64f test Id: 373 - ISNAN(function)
OK   UME::SIMD::SIMD2_64f test Id: 374 - ISNORM
OK   UME::SIMD::SIMD2_64f test Id: 375 - ISNORM(function)
OK   UME::SIMD::SIMD2_64f test Id: 376 - ISSUB
OK   UME::SIMD::SIMD2_64f test Id: 377 - ISSUB(function)
OK   UME::SIMD::SIMD2_64f test Id: 378 - ISZERO
OK   UME::SIMD::SIMD2_64f test Id: 379 - ISZERO(function)
OK   UME::SIMD::SIMD2_64f test Id: 380 - ISZEROSUB
OK   UME::SIMD::SIMD2_64f test Id: 381 - ISZEROSUB(function)
OK   UME::SIMD::SIMD2_64f test Id: 382 - SQR
OK   UME::SIMD::SIMD2_64f test Id: 383 - SQR(function)
OK   UME::SIMD::SIMD2_64f test Id: 384 - MSQR
OK   UME::SIMD::SIMD2_64f test Id: 385 - MSQR(function)
OK   UME::SIMD::SIMD2_64f test Id: 386 - SQRA
OK   UME::SIMD::SIMD2_64f test Id: 387 - MSQRA
OK   UME::SIMD::SIMD2_64f test Id: 388 - SQRT
OK   UME::SIMD::SIMD2_64f test Id: 389 - SQRT(function)
OK   UME::SIMD::SIMD2_64f test Id: 390 - MSQRT
OK   UME::SIMD::SIMD2_64f test Id: 391 - MSQRT
OK   UME::SIMD::SIMD2_64f test Id: 392 - SQRTA
OK   UME::SIMD::SIMD2_64f test Id: 393 - MSQRTA
OK   UME::SIMD::SIMD2_64f test Id: 394 - EXP gen
OK   UME::SIMD::SIMD2_64f test Id: 395 - EXP(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 396 - MEXP gen
OK   UME::SIMD::SIMD2_64f test Id: 397 - MEXP(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 398 - LOG gen
OK   UME::SIMD::SIMD2_64f test Id: 399 - LOG(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 400 - LOG2 gen
OK   UME::SIMD::SIMD2_64f test Id: 401 - LOG2(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 402 - LOG10 gen
OK   UME::SIMD::SIMD2_64f test Id: 403 - LOG10(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 404 - SIN gen
OK   UME::SIMD::SIMD2_64f test Id: 405 - SIN(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 406 - COS gen
OK   UME::SIMD::SIMD2_64f test Id: 407 - COS(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 408 - TAN gen
OK   UME::SIMD::SIMD2_64f test Id: 409 - TAN(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 410 - CTAN gen
OK   UME::SIMD::SIMD2_64f test Id: 411 - CTAN(function) gen
OK   UME::SIMD::SIMD2_64f test Id: 412 - FTOU gen
OK   UME::SIMD::SIMD2_64f test Id: 413 - FTOI gen
OK   UME::SIMD::SIMD2_64f test Id: 414 - PACK
OK   UME::SIMD::SIMD2_64f test Id: 415 - PACKLO
OK   UME::SIMD::SIMD2_64f test Id: 416 - PACKHI
OK   UME::SIMD::SIMD2_64f test Id: 417 - UNPACK
OK   UME::SIMD::SIMD2_64f test Id: 418 - UNPACKLO
OK   UME::SIMD::SIMD2_64f test Id: 419 - UNPACKHi
OK   UME::SIMD::SIMD2_64f test Id: 420 - DEGRADE
OK   UME::SIMD::SIMD32_8u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD32_8u test Id: 2 - SET-CONSTR
OK   UME::SIMD::SIMD32_8u test Id: 3 - SET-CONSTR gen
OK   UME::SIMD::SIMD32_8u test Id: 4 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD32_8u test Id: 5 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD32_8u test Id: 6 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD32_8u test Id: 7 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD32_8u test Id: 8 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD32_8u test Id: 9 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD32_8u test Id: 10 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD32_8u test Id: 11 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD32_8u test Id: 12 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD32_8u test Id: 13 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD32_8u test Id: 14 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD32_8u test Id: 15 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD32_8u test Id: 16 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD32_8u test Id: 17 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD32_8u test Id: 18 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD32_8u test Id: 19 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD32_8u test Id: 20 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD32_8u test Id: 21 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD32_8u test Id: 22 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD32_8u test Id: 23 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD32_8u test Id: 24 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD32_8u test Id: 25 - INSERT
OK   UME::SIMD::SIMD32_8u test Id: 26 - INSERT(operator[] =)
OK   UME::SIMD::SIMD32_8u test Id: 27 - EXTRACT
OK   UME::SIMD::SIMD32_8u test Id: 28 - EXTRACT(operator[])
OK   UME::SIMD::SIMD32_8u test Id: 29 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD32_8u test Id: 30 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD32_8u test Id: 31 - ASSIGNV
OK   UME::SIMD::SIMD32_8u test Id: 32 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD32_8u test Id: 33 - MASSIGNV
OK   UME::SIMD::SIMD32_8u test Id: 34 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD32_8u test Id: 35 - ASSIGNS
OK   UME::SIMD::SIMD32_8u test Id: 36 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD32_8u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD32_8u test Id: 38 - MASSIGNS
OK   UME::SIMD::SIMD32_8u test Id: 39 - LOAD/STORE
OK   UME::SIMD::SIMD32_8u test Id: 40 - MLOAD
OK   UME::SIMD::SIMD32_8u test Id: 41 - MSTORE
OK   UME::SIMD::SIMD32_8u test Id: 42 - LOADA/STOREA
OK   UME::SIMD::SIMD32_8u test Id: 43 - MLOADA
OK   UME::SIMD::SIMD32_8u test Id: 44 - MSTOREA
OK   UME::SIMD::SIMD32_8u test Id: 45 - SWIZZLE
OK   UME::SIMD::SIMD32_8u test Id: 46 - SORTA
OK   UME::SIMD::SIMD32_8u test Id: 47 - SORTD
OK   UME::SIMD::SIMD32_8u test Id: 48 - BLENDV gen
OK   UME::SIMD::SIMD32_8u test Id: 49 - ADDV
OK   UME::SIMD::SIMD32_8u test Id: 50 - ADDV(operator+)
OK   UME::SIMD::SIMD32_8u test Id: 51 - ADDV(function)
OK   UME::SIMD::SIMD32_8u test Id: 52 - ADDV gen
OK   UME::SIMD::SIMD32_8u test Id: 53 - ADDV(operator+) gen
OK   UME::SIMD::SIMD32_8u test Id: 54 - ADDV(function) gen
OK   UME::SIMD::SIMD32_8u test Id: 55 - MADDV
OK   UME::SIMD::SIMD32_8u test Id: 56 - MADDV(function)
OK   UME::SIMD::SIMD32_8u test Id: 57 - MADDV gen
OK   UME::SIMD::SIMD32_8u test Id: 58 - MADDV(function) gen
OK   UME::SIMD::SIMD32_8u test Id: 59 - ADDS
OK   UME::SIMD::SIMD32_8u test Id: 60 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 61 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 62 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD32_8u test Id: 63 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD32_8u test Id: 64 - ADDS gen
OK   UME::SIMD::SIMD32_8u test Id: 65 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD32_8u test Id: 66 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD32_8u test Id: 67 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD32_8u test Id: 68 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD32_8u test Id: 69 - MADDS
OK   UME::SIMD::SIMD32_8u test Id: 70 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 71 - MADDS gen
OK   UME::SIMD::SIMD32_8u test Id: 72 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD32_8u test Id: 73 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD32_8u test Id: 74 - ADDVA
OK   UME::SIMD::SIMD32_8u test Id: 75 - ADDVA(operator+=)
OK   UME::SIMD::SIMD32_8u test Id: 76 - ADDVA gen
OK   UME::SIMD::SIMD32_8u test Id: 77 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD32_8u test Id: 78 - MADDVA
OK   UME::SIMD::SIMD32_8u test Id: 79 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD32_8u test Id: 80 - ADDSA
OK   UME::SIMD::SIMD32_8u test Id: 81 - ADDSA(operator+=)
OK   UME::SIMD::SIMD32_8u test Id: 82 - MADDSA
OK   UME::SIMD::SIMD32_8u test Id: 83 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD32_8u test Id: 84 - SADDV gen
OK   UME::SIMD::SIMD32_8u test Id: 85 - SADDV(function) gen
OK   UME::SIMD::SIMD32_8u test Id: 86 - POSTINC
OK   UME::SIMD::SIMD32_8u test Id: 87 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD32_8u test Id: 88 - POSTINC(function)
OK   UME::SIMD::SIMD32_8u test Id: 89 - MPOSTINC
OK   UME::SIMD::SIMD32_8u test Id: 90 - MPOSTINC(function)
OK   UME::SIMD::SIMD32_8u test Id: 91 - PREFINC
OK   UME::SIMD::SIMD32_8u test Id: 92 - PREFINC(operator++())
OK   UME::SIMD::SIMD32_8u test Id: 93 - PREFINC(function)
OK   UME::SIMD::SIMD32_8u test Id: 94 - MPREFINC
OK   UME::SIMD::SIMD32_8u test Id: 95 - MPREFINC(function)
OK   UME::SIMD::SIMD32_8u test Id: 96 - SUBV
OK   UME::SIMD::SIMD32_8u test Id: 97 - SUBV(operator-)
OK   UME::SIMD::SIMD32_8u test Id: 98 - SUBV(function)
OK   UME::SIMD::SIMD32_8u test Id: 99 - SUBV gen
OK   UME::SIMD::SIMD32_8u test Id: 100 - SUBV(operator-) gen
OK   UME::SIMD::SIMD32_8u test Id: 101 - SUBV(function) gen
OK   UME::SIMD::SIMD32_8u test Id: 102 - MSUBV
OK   UME::SIMD::SIMD32_8u test Id: 103 - MSUBV(function)
OK   UME::SIMD::SIMD32_8u test Id: 104 - MSUBV gen
OK   UME::SIMD::SIMD32_8u test Id: 105 - MSUBV(function) gen
OK   UME::SIMD::SIMD32_8u test Id: 106 - SUBS gen
OK   UME::SIMD::SIMD32_8u test Id: 107 - SUBS(operator-) gen
OK   UME::SIMD::SIMD32_8u test Id: 108 - SUBS(function) gen
OK   UME::SIMD::SIMD32_8u test Id: 109 - MSUBS
OK   UME::SIMD::SIMD32_8u test Id: 110 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 111 - SUBVA
OK   UME::SIMD::SIMD32_8u test Id: 112 - SUBVA(operator-=)
OK   UME::SIMD::SIMD32_8u test Id: 113 - MSUBVA
OK   UME::SIMD::SIMD32_8u test Id: 114 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD32_8u test Id: 115 - SUBSA
OK   UME::SIMD::SIMD32_8u test Id: 116 - MSUBSA
OK   UME::SIMD::SIMD32_8u test Id: 117 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD32_8u test Id: 118 - SUBFROMV
OK   UME::SIMD::SIMD32_8u test Id: 119 - MSUBFROMV
OK   UME::SIMD::SIMD32_8u test Id: 120 - SUBFROMS
OK   UME::SIMD::SIMD32_8u test Id: 121 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 122 - MSUBFROMS
OK   UME::SIMD::SIMD32_8u test Id: 123 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 124 - SUBFROMVA
OK   UME::SIMD::SIMD32_8u test Id: 125 - MSUBFROMVA
OK   UME::SIMD::SIMD32_8u test Id: 126 - SUBFROMSA
OK   UME::SIMD::SIMD32_8u test Id: 127 - MSUBFROMSA
OK   UME::SIMD::SIMD32_8u test Id: 128 - POSTDEC
OK   UME::SIMD::SIMD32_8u test Id: 129 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD32_8u test Id: 130 - POSTDEC(function)
OK   UME::SIMD::SIMD32_8u test Id: 131 - MPOSTDEC
OK   UME::SIMD::SIMD32_8u test Id: 132 - MPOSTDEC(function)
OK   UME::SIMD::SIMD32_8u test Id: 133 - PREFDEC
OK   UME::SIMD::SIMD32_8u test Id: 134 - PREFDEC(operator--())
OK   UME::SIMD::SIMD32_8u test Id: 135 - PREFDEC(function)
OK   UME::SIMD::SIMD32_8u test Id: 136 - MPREFDEC
OK   UME::SIMD::SIMD32_8u test Id: 137 - MPREFDEC(function)
OK   UME::SIMD::SIMD32_8u test Id: 138 - MULV
OK   UME::SIMD::SIMD32_8u test Id: 139 - MULV(operator*)
OK   UME::SIMD::SIMD32_8u test Id: 140 - MULV(function)
OK   UME::SIMD::SIMD32_8u test Id: 141 - MMULV
OK   UME::SIMD::SIMD32_8u test Id: 142 - MMULV(function)
OK   UME::SIMD::SIMD32_8u test Id: 143 - MULS
OK   UME::SIMD::SIMD32_8u test Id: 144 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 145 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 146 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 147 - MMULS
OK   UME::SIMD::SIMD32_8u test Id: 148 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 149 - MULVA
OK   UME::SIMD::SIMD32_8u test Id: 150 - MULVA(operator*)
OK   UME::SIMD::SIMD32_8u test Id: 151 - MULVA gen
OK   UME::SIMD::SIMD32_8u test Id: 152 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD32_8u test Id: 153 - MMULVA
OK   UME::SIMD::SIMD32_8u test Id: 154 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD32_8u test Id: 155 - MULSA
OK   UME::SIMD::SIMD32_8u test Id: 156 - MULSA(operator*=)
OK   UME::SIMD::SIMD32_8u test Id: 157 - MMULSA
OK   UME::SIMD::SIMD32_8u test Id: 158 - DIVV
OK   UME::SIMD::SIMD32_8u test Id: 159 - DIVV(operator/)
OK   UME::SIMD::SIMD32_8u test Id: 160 - DIVV(function)
OK   UME::SIMD::SIMD32_8u test Id: 161 - MDIVV
OK   UME::SIMD::SIMD32_8u test Id: 162 - MDIVV(function)
OK   UME::SIMD::SIMD32_8u test Id: 163 - DIVS
OK   UME::SIMD::SIMD32_8u test Id: 164 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 165 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 166 - MDIVS
OK   UME::SIMD::SIMD32_8u test Id: 167 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 168 - DIVVA
OK   UME::SIMD::SIMD32_8u test Id: 169 - DIVVA(operator/=)
OK   UME::SIMD::SIMD32_8u test Id: 170 - DIVVA gen
OK   UME::SIMD::SIMD32_8u test Id: 171 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD32_8u test Id: 172 - MDIVVA
OK   UME::SIMD::SIMD32_8u test Id: 173 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD32_8u test Id: 174 - DIVSA
OK   UME::SIMD::SIMD32_8u test Id: 175 - DIVSA(operator/=)
OK   UME::SIMD::SIMD32_8u test Id: 176 - MDIVSA
OK   UME::SIMD::SIMD32_8u test Id: 177 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD32_8u test Id: 178 - RCP
OK   UME::SIMD::SIMD32_8u test Id: 179 - RCP(function)
OK   UME::SIMD::SIMD32_8u test Id: 180 - MRCP
OK   UME::SIMD::SIMD32_8u test Id: 181 - MRCP(function)
OK   UME::SIMD::SIMD32_8u test Id: 182 - RCPS
OK   UME::SIMD::SIMD32_8u test Id: 183 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 184 - RCPS(function)
OK   UME::SIMD::SIMD32_8u test Id: 185 - MRCPS
OK   UME::SIMD::SIMD32_8u test Id: 186 - MRCPS (function)
OK   UME::SIMD::SIMD32_8u test Id: 187 - RCPA
OK   UME::SIMD::SIMD32_8u test Id: 188 - MRCPA
OK   UME::SIMD::SIMD32_8u test Id: 189 - RCPSA
OK   UME::SIMD::SIMD32_8u test Id: 190 - MRCPSA
OK   UME::SIMD::SIMD32_8u test Id: 191 - CMPEQV
OK   UME::SIMD::SIMD32_8u test Id: 192 - CMPEQV(operator==)
OK   UME::SIMD::SIMD32_8u test Id: 193 - CMPEQV(function)
OK   UME::SIMD::SIMD32_8u test Id: 194 - CMPEQS
OK   UME::SIMD::SIMD32_8u test Id: 195 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 196 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 197 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 198 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 199 - CMPNEV
OK   UME::SIMD::SIMD32_8u test Id: 200 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD32_8u test Id: 201 - CMPNEV(function)
OK   UME::SIMD::SIMD32_8u test Id: 202 - CMPNES
OK   UME::SIMD::SIMD32_8u test Id: 203 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 204 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 205 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 206 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 207 - CMPGTV
OK   UME::SIMD::SIMD32_8u test Id: 208 - CMPGTV(operator>)
OK   UME::SIMD::SIMD32_8u test Id: 209 - CMPGTV(function)
OK   UME::SIMD::SIMD32_8u test Id: 210 - CMPGTS
OK   UME::SIMD::SIMD32_8u test Id: 211 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 212 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 213 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 214 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 215 - CMPLTV
OK   UME::SIMD::SIMD32_8u test Id: 216 - CMPLTV(operator<)
OK   UME::SIMD::SIMD32_8u test Id: 217 - CMPLTV(function)
OK   UME::SIMD::SIMD32_8u test Id: 218 - CMPLTS
OK   UME::SIMD::SIMD32_8u test Id: 219 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 220 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 221 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 222 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 223 - CMPGEV
OK   UME::SIMD::SIMD32_8u test Id: 224 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD32_8u test Id: 225 - CMPGEV(function)
OK   UME::SIMD::SIMD32_8u test Id: 226 - CMPGES
OK   UME::SIMD::SIMD32_8u test Id: 227 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 228 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 229 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 230 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 231 - CMPLEV
OK   UME::SIMD::SIMD32_8u test Id: 232 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD32_8u test Id: 233 - CMPLEV(function)
OK   UME::SIMD::SIMD32_8u test Id: 234 - CMPLES
OK   UME::SIMD::SIMD32_8u test Id: 235 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 236 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 237 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 238 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 239 - CMPEV
OK   UME::SIMD::SIMD32_8u test Id: 240 - CMPEV(function)
OK   UME::SIMD::SIMD32_8u test Id: 241 - CMPES
OK   UME::SIMD::SIMD32_8u test Id: 242 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 243 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 244 - HADD
OK   UME::SIMD::SIMD32_8u test Id: 245 - HADD(function)
OK   UME::SIMD::SIMD32_8u test Id: 246 - HADD gen
OK   UME::SIMD::SIMD32_8u test Id: 247 - HADD(function) gen
OK   UME::SIMD::SIMD32_8u test Id: 248 - MHADD gen
OK   UME::SIMD::SIMD32_8u test Id: 249 - MHADD(function) gen
OK   UME::SIMD::SIMD32_8u test Id: 250 - HADDS gen
OK   UME::SIMD::SIMD32_8u test Id: 251 - HADDS(function) gen
OK   UME::SIMD::SIMD32_8u test Id: 252 - MHADD gen
OK   UME::SIMD::SIMD32_8u test Id: 253 - MHADDS(function) gen
OK   UME::SIMD::SIMD32_8u test Id: 254 - HMUL gen
OK   UME::SIMD::SIMD32_8u test Id: 255 - HMUL(function) gen
OK   UME::SIMD::SIMD32_8u test Id: 256 - MHMUL gen
OK   UME::SIMD::SIMD32_8u test Id: 257 - MHMUL(function) gen
OK   UME::SIMD::SIMD32_8u test Id: 258 - HMULS gen
OK   UME::SIMD::SIMD32_8u test Id: 259 - HMULS(function) gen
OK   UME::SIMD::SIMD32_8u test Id: 260 - MHMUL gen
OK   UME::SIMD::SIMD32_8u test Id: 261 - MHMULS(function) gen
OK   UME::SIMD::SIMD32_8u test Id: 262 - FMULADDV
OK   UME::SIMD::SIMD32_8u test Id: 263 - FMULADDV(function)
OK   UME::SIMD::SIMD32_8u test Id: 264 - MFMULADDV
OK   UME::SIMD::SIMD32_8u test Id: 265 - MFMULADDV(function)
OK   UME::SIMD::SIMD32_8u test Id: 266 - FMULSUBV
OK   UME::SIMD::SIMD32_8u test Id: 267 - FMULSUBV(function)
OK   UME::SIMD::SIMD32_8u test Id: 268 - MFMULSUBV
OK   UME::SIMD::SIMD32_8u test Id: 269 - MFMULSUBV(function)
OK   UME::SIMD::SIMD32_8u test Id: 270 - FADDMULV
OK   UME::SIMD::SIMD32_8u test Id: 271 - FADDMULV(function)
OK   UME::SIMD::SIMD32_8u test Id: 272 - MFADDMULV
OK   UME::SIMD::SIMD32_8u test Id: 273 - MFADDMULV(function)
OK   UME::SIMD::SIMD32_8u test Id: 274 - FSUBMULV
OK   UME::SIMD::SIMD32_8u test Id: 275 - FSUBMULV(function)
OK   UME::SIMD::SIMD32_8u test Id: 276 - MFSUBMULV
OK   UME::SIMD::SIMD32_8u test Id: 277 - MFSUBMULV(function)
OK   UME::SIMD::SIMD32_8u test Id: 278 - MAXV
OK   UME::SIMD::SIMD32_8u test Id: 279 - MAXV(function)
OK   UME::SIMD::SIMD32_8u test Id: 280 - MMAXV
OK   UME::SIMD::SIMD32_8u test Id: 281 - MMAXV(function)
OK   UME::SIMD::SIMD32_8u test Id: 282 - MAXS
OK   UME::SIMD::SIMD32_8u test Id: 283 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 284 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 285 - MMAXS
OK   UME::SIMD::SIMD32_8u test Id: 286 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 287 - MAXVA
OK   UME::SIMD::SIMD32_8u test Id: 288 - MMAXVA
OK   UME::SIMD::SIMD32_8u test Id: 289 - MAXSA
OK   UME::SIMD::SIMD32_8u test Id: 290 - MMAXSA
OK   UME::SIMD::SIMD32_8u test Id: 291 - MINV
OK   UME::SIMD::SIMD32_8u test Id: 292 - MINV(function)
OK   UME::SIMD::SIMD32_8u test Id: 293 - MMINV
OK   UME::SIMD::SIMD32_8u test Id: 294 - MMINV(function)
OK   UME::SIMD::SIMD32_8u test Id: 295 - MINS
OK   UME::SIMD::SIMD32_8u test Id: 296 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD32_8u test Id: 297 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD32_8u test Id: 298 - MMINS
OK   UME::SIMD::SIMD32_8u test Id: 299 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 300 - MINVA
OK   UME::SIMD::SIMD32_8u test Id: 301 - MMINVA
OK   UME::SIMD::SIMD32_8u test Id: 302 - MINSA
OK   UME::SIMD::SIMD32_8u test Id: 303 - MMINSA
OK   UME::SIMD::SIMD32_8u test Id: 304 - HMAX
OK   UME::SIMD::SIMD32_8u test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD32_8u test Id: 306 - HMAX
OK   UME::SIMD::SIMD32_8u test Id: 307 - HMAX(function)
OK   UME::SIMD::SIMD32_8u test Id: 308 - MHMAX
OK   UME::SIMD::SIMD32_8u test Id: 309 - MHMAX(function)
OK   UME::SIMD::SIMD32_8u test Id: 310 - IMAX
OK   UME::SIMD::SIMD32_8u test Id: 311 - IMAX(function)
OK   UME::SIMD::SIMD32_8u test Id: 312 - MIMAX
OK   UME::SIMD::SIMD32_8u test Id: 313 - MIMAX(function)
OK   UME::SIMD::SIMD32_8u test Id: 314 - HMIN
OK   UME::SIMD::SIMD32_8u test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD32_8u test Id: 316 - HMIN
OK   UME::SIMD::SIMD32_8u test Id: 317 - HMIN(function)
OK   UME::SIMD::SIMD32_8u test Id: 318 - MHMIN gen
OK   UME::SIMD::SIMD32_8u test Id: 319 - MHMIN(function) gen
OK   UME::SIMD::SIMD32_8u test Id: 320 - IMIN
OK   UME::SIMD::SIMD32_8u test Id: 321 - IMIN(function)
OK   UME::SIMD::SIMD32_8u test Id: 322 - MIMIN
OK   UME::SIMD::SIMD32_8u test Id: 323 - MIMIN(function)
OK   UME::SIMD::SIMD32_8u test Id: 324 - REMV gen
OK   UME::SIMD::SIMD32_8u test Id: 325 - REMV(operator%) gen
OK   UME::SIMD::SIMD32_8u test Id: 326 - REMV(function) gen
OK   UME::SIMD::SIMD32_8u test Id: 327 - MREMV gen
OK   UME::SIMD::SIMD32_8u test Id: 328 - MREMV(function) gen
OK   UME::SIMD::SIMD32_8u test Id: 329 - REMS gen
OK   UME::SIMD::SIMD32_8u test Id: 330 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD32_8u test Id: 331 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD32_8u test Id: 332 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD32_8u test Id: 333 - LANDV gen
OK   UME::SIMD::SIMD32_8u test Id: 334 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD32_8u test Id: 335 - LORV gen
OK   UME::SIMD::SIMD32_8u test Id: 336 - LORV gen (operator ||)
OK   UME::SIMD::SIMD32_8u test Id: 337 - BANDV
OK   UME::SIMD::SIMD32_8u test Id: 338 - BANDV(operator&)
OK   UME::SIMD::SIMD32_8u test Id: 339 - BANDV(function)
OK   UME::SIMD::SIMD32_8u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD32_8u test Id: 341 - MBANDV
OK   UME::SIMD::SIMD32_8u test Id: 342 - BANDS
OK   UME::SIMD::SIMD32_8u test Id: 343 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 344 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 345 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 346 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 347 - MBANDS
OK   UME::SIMD::SIMD32_8u test Id: 348 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 349 - BANDVA
OK   UME::SIMD::SIMD32_8u test Id: 350 - MBANDVA
OK   UME::SIMD::SIMD32_8u test Id: 351 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD32_8u test Id: 352 - BANDSA
OK   UME::SIMD::SIMD32_8u test Id: 353 - MBANDSA
OK   UME::SIMD::SIMD32_8u test Id: 354 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD32_8u test Id: 355 - BORV
OK   UME::SIMD::SIMD32_8u test Id: 356 - BORV(operator |)
OK   UME::SIMD::SIMD32_8u test Id: 357 - BORV(function)
OK   UME::SIMD::SIMD32_8u test Id: 358 - MBORV
OK   UME::SIMD::SIMD32_8u test Id: 359 - MBORV(function)
OK   UME::SIMD::SIMD32_8u test Id: 360 - BORS
OK   UME::SIMD::SIMD32_8u test Id: 361 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 362 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 363 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 364 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 365 - MBORS
OK   UME::SIMD::SIMD32_8u test Id: 366 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 367 - BORVA
OK   UME::SIMD::SIMD32_8u test Id: 368 - BORVA(operator|=)
OK   UME::SIMD::SIMD32_8u test Id: 369 - MBORVA
OK   UME::SIMD::SIMD32_8u test Id: 370 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD32_8u test Id: 371 - BORSA
OK   UME::SIMD::SIMD32_8u test Id: 372 - BORSA(operator|=)
OK   UME::SIMD::SIMD32_8u test Id: 373 - MBORSA
OK   UME::SIMD::SIMD32_8u test Id: 374 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD32_8u test Id: 375 - BXORV
OK   UME::SIMD::SIMD32_8u test Id: 376 - BXORV(operator^
OK   UME::SIMD::SIMD32_8u test Id: 377 - BXORV(function
OK   UME::SIMD::SIMD32_8u test Id: 378 - MBXORV
OK   UME::SIMD::SIMD32_8u test Id: 379 - MBXORV(function)
OK   UME::SIMD::SIMD32_8u test Id: 380 - BXORS
OK   UME::SIMD::SIMD32_8u test Id: 381 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 382 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 383 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 384 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 385 - MBXORS
OK   UME::SIMD::SIMD32_8u test Id: 386 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 387 - BXORVA
OK   UME::SIMD::SIMD32_8u test Id: 388 - BXORVA(operator^=)
OK   UME::SIMD::SIMD32_8u test Id: 389 - MBXORVA
OK   UME::SIMD::SIMD32_8u test Id: 390 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD32_8u test Id: 391 - BXORSA
OK   UME::SIMD::SIMD32_8u test Id: 392 - BXORSA(operator^=)
OK   UME::SIMD::SIMD32_8u test Id: 393 - MBXORSA
OK   UME::SIMD::SIMD32_8u test Id: 394 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD32_8u test Id: 395 - BNOT
OK   UME::SIMD::SIMD32_8u test Id: 396 - BNOT(operator!)
OK   UME::SIMD::SIMD32_8u test Id: 397 - BNOT(function)
OK   UME::SIMD::SIMD32_8u test Id: 398 - MBNOT
OK   UME::SIMD::SIMD32_8u test Id: 399 - MBNOT(function)
OK   UME::SIMD::SIMD32_8u test Id: 400 - BNOTA
OK   UME::SIMD::SIMD32_8u test Id: 401 - MBNOTA
OK   UME::SIMD::SIMD32_8u test Id: 402 - BANDNOTV
OK   UME::SIMD::SIMD32_8u test Id: 403 - BANDNOTV (function)
OK   UME::SIMD::SIMD32_8u test Id: 404 - MBANDNOTV
OK   UME::SIMD::SIMD32_8u test Id: 405 - MBANDNOTV (function)
OK   UME::SIMD::SIMD32_8u test Id: 406 - BANDNOTS
OK   UME::SIMD::SIMD32_8u test Id: 407 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD32_8u test Id: 408 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD32_8u test Id: 409 - MBANDNOTS
OK   UME::SIMD::SIMD32_8u test Id: 410 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD32_8u test Id: 411 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD32_8u test Id: 412 - BANDNOTVA
OK   UME::SIMD::SIMD32_8u test Id: 413 - MBANDNOTVA
OK   UME::SIMD::SIMD32_8u test Id: 414 - BANDNOTSA
OK   UME::SIMD::SIMD32_8u test Id: 415 - MBANDNOTSA
OK   UME::SIMD::SIMD32_8u test Id: 416 - HBAND
OK   UME::SIMD::SIMD32_8u test Id: 417 - HBAND
OK   UME::SIMD::SIMD32_8u test Id: 418 - MHBAND
OK   UME::SIMD::SIMD32_8u test Id: 419 - MHBAND(function)
OK   UME::SIMD::SIMD32_8u test Id: 420 - HBANDS
OK   UME::SIMD::SIMD32_8u test Id: 421 - MHBANDS
OK   UME::SIMD::SIMD32_8u test Id: 422 - HBOR
OK   UME::SIMD::SIMD32_8u test Id: 423 - HBOR(function)
OK   UME::SIMD::SIMD32_8u test Id: 424 - MHBOR
OK   UME::SIMD::SIMD32_8u test Id: 425 - MHBOR(function)
OK   UME::SIMD::SIMD32_8u test Id: 426 - HBORS
OK   UME::SIMD::SIMD32_8u test Id: 427 - MHBORS
OK   UME::SIMD::SIMD32_8u test Id: 428 - HBXOR
OK   UME::SIMD::SIMD32_8u test Id: 429 - HBXOR(function)
OK   UME::SIMD::SIMD32_8u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD32_8u test Id: 431 - MHBXOR
OK   UME::SIMD::SIMD32_8u test Id: 432 - HBXORS
OK   UME::SIMD::SIMD32_8u test Id: 433 - MHBXORS
OK   UME::SIMD::SIMD32_8u test Id: 434 - GATHERU
OK   UME::SIMD::SIMD32_8u test Id: 435 - MGATHERU
OK   UME::SIMD::SIMD32_8u test Id: 436 - GATHERS
OK   UME::SIMD::SIMD32_8u test Id: 437 - MGATHERS
OK   UME::SIMD::SIMD32_8u test Id: 438 - GATHERV
OK   UME::SIMD::SIMD32_8u test Id: 439 - MGATHERV
OK   UME::SIMD::SIMD32_8u test Id: 440 - SCATTERU
OK   UME::SIMD::SIMD32_8u test Id: 441 - MSCATTERU
OK   UME::SIMD::SIMD32_8u test Id: 442 - SCATTERS
OK   UME::SIMD::SIMD32_8u test Id: 443 - MSCATTERS
OK   UME::SIMD::SIMD32_8u test Id: 444 - SCATTERV
OK   UME::SIMD::SIMD32_8u test Id: 445 - MSCATTERV
OK   UME::SIMD::SIMD32_8u test Id: 446 - LSHV gen
OK   UME::SIMD::SIMD32_8u test Id: 447 - LSHV (function) gen
OK   UME::SIMD::SIMD32_8u test Id: 448 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD32_8u test Id: 449 - MLSHV gen
OK   UME::SIMD::SIMD32_8u test Id: 450 - MLSHV (function) gen
OK   UME::SIMD::SIMD32_8u test Id: 451 - LSHS gen
OK   UME::SIMD::SIMD32_8u test Id: 452 - LSHS (function) gen
OK   UME::SIMD::SIMD32_8u test Id: 453 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD32_8u test Id: 454 - MLSHS gen
OK   UME::SIMD::SIMD32_8u test Id: 455 - MLSHS (function) gen
OK   UME::SIMD::SIMD32_8u test Id: 456 - LSHVA gen
OK   UME::SIMD::SIMD32_8u test Id: 457 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD32_8u test Id: 458 - MLSHVA gen
OK   UME::SIMD::SIMD32_8u test Id: 459 - LSHSA gen
OK   UME::SIMD::SIMD32_8u test Id: 460 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD32_8u test Id: 461 - MLSHSA gen
OK   UME::SIMD::SIMD32_8u test Id: 462 - RSHV gen
OK   UME::SIMD::SIMD32_8u test Id: 463 - RSHV (function) gen
OK   UME::SIMD::SIMD32_8u test Id: 464 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD32_8u test Id: 465 - MRSHV gen
OK   UME::SIMD::SIMD32_8u test Id: 466 - MRSHV (function) gen
OK   UME::SIMD::SIMD32_8u test Id: 467 - RSHS gen
OK   UME::SIMD::SIMD32_8u test Id: 468 - RSHS (function) gen
OK   UME::SIMD::SIMD32_8u test Id: 469 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD32_8u test Id: 470 - MRSHS gen
OK   UME::SIMD::SIMD32_8u test Id: 471 - MRSHS (function) gen
OK   UME::SIMD::SIMD32_8u test Id: 472 - RSHVA gen
OK   UME::SIMD::SIMD32_8u test Id: 473 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD32_8u test Id: 474 - MRSHVA gen
OK   UME::SIMD::SIMD32_8u test Id: 475 - RSHSA gen
OK   UME::SIMD::SIMD32_8u test Id: 476 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD32_8u test Id: 477 - MRSHSA gen
OK   UME::SIMD::SIMD32_8u test Id: 478 - ROLV
OK   UME::SIMD::SIMD32_8u test Id: 479 - ROLV(function)
OK   UME::SIMD::SIMD32_8u test Id: 480 - MROLV
OK   UME::SIMD::SIMD32_8u test Id: 481 - MROLV(function)
OK   UME::SIMD::SIMD32_8u test Id: 482 - ROLS
OK   UME::SIMD::SIMD32_8u test Id: 483 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 484 - MROLS
OK   UME::SIMD::SIMD32_8u test Id: 485 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 486 - ROLVA
OK   UME::SIMD::SIMD32_8u test Id: 487 - MROLVA
OK   UME::SIMD::SIMD32_8u test Id: 488 - ROLSA
OK   UME::SIMD::SIMD32_8u test Id: 489 - MROLSA
OK   UME::SIMD::SIMD32_8u test Id: 490 - RORV
OK   UME::SIMD::SIMD32_8u test Id: 491 - RORV(function)
OK   UME::SIMD::SIMD32_8u test Id: 492 - MRORV
OK   UME::SIMD::SIMD32_8u test Id: 493 - MRORV(function)
OK   UME::SIMD::SIMD32_8u test Id: 494 - RORS
OK   UME::SIMD::SIMD32_8u test Id: 495 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 496 - MRORS
OK   UME::SIMD::SIMD32_8u test Id: 497 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8u test Id: 498 - RORVA
OK   UME::SIMD::SIMD32_8u test Id: 499 - MRORVA
OK   UME::SIMD::SIMD32_8u test Id: 500 - RORSA
OK   UME::SIMD::SIMD32_8u test Id: 501 - MRORSA
OK   UME::SIMD::SIMD32_8u test Id: 502 - UTOI
OK   UME::SIMD::SIMD32_8u test Id: 503 - PACK
OK   UME::SIMD::SIMD32_8u test Id: 504 - PACKLO
OK   UME::SIMD::SIMD32_8u test Id: 505 - PACKHI
OK   UME::SIMD::SIMD32_8u test Id: 506 - UNPACK
OK   UME::SIMD::SIMD32_8u test Id: 507 - UNPACKLO
OK   UME::SIMD::SIMD32_8u test Id: 508 - UNPACKHi
OK   UME::SIMD::SIMD32_8u test Id: 509 - PROMOTE
OK   UME::SIMD::SIMD32_8i test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD32_8i test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD32_8i test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD32_8i test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD32_8i test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD32_8i test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD32_8i test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD32_8i test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD32_8i test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD32_8i test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD32_8i test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD32_8i test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD32_8i test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD32_8i test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD32_8i test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD32_8i test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD32_8i test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD32_8i test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD32_8i test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD32_8i test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD32_8i test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD32_8i test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD32_8i test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD32_8i test Id: 24 - INSERT
OK   UME::SIMD::SIMD32_8i test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD32_8i test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD32_8i test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD32_8i test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD32_8i test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD32_8i test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD32_8i test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD32_8i test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD32_8i test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD32_8i test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD32_8i test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD32_8i test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD32_8i test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD32_8i test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD32_8i test Id: 39 - MLOAD
OK   UME::SIMD::SIMD32_8i test Id: 40 - MSTORE
OK   UME::SIMD::SIMD32_8i test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD32_8i test Id: 42 - MLOADA
OK   UME::SIMD::SIMD32_8i test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD32_8i test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD32_8i test Id: 45 - SORTA
OK   UME::SIMD::SIMD32_8i test Id: 46 - SORTD
OK   UME::SIMD::SIMD32_8i test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD32_8i test Id: 48 - ADDV
OK   UME::SIMD::SIMD32_8i test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD32_8i test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD32_8i test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD32_8i test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD32_8i test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD32_8i test Id: 54 - MADDV
OK   UME::SIMD::SIMD32_8i test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD32_8i test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD32_8i test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD32_8i test Id: 58 - ADDS
OK   UME::SIMD::SIMD32_8i test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD32_8i test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD32_8i test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD32_8i test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD32_8i test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD32_8i test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD32_8i test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD32_8i test Id: 68 - MADDS
OK   UME::SIMD::SIMD32_8i test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD32_8i test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD32_8i test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD32_8i test Id: 73 - ADDVA
OK   UME::SIMD::SIMD32_8i test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD32_8i test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD32_8i test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD32_8i test Id: 77 - MADDVA
OK   UME::SIMD::SIMD32_8i test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD32_8i test Id: 79 - ADDSA
OK   UME::SIMD::SIMD32_8i test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD32_8i test Id: 81 - MADDSA
OK   UME::SIMD::SIMD32_8i test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD32_8i test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD32_8i test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD32_8i test Id: 85 - POSTINC
OK   UME::SIMD::SIMD32_8i test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD32_8i test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD32_8i test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD32_8i test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD32_8i test Id: 90 - PREFINC
OK   UME::SIMD::SIMD32_8i test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD32_8i test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD32_8i test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD32_8i test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD32_8i test Id: 95 - SUBV
OK   UME::SIMD::SIMD32_8i test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD32_8i test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD32_8i test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD32_8i test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD32_8i test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD32_8i test Id: 101 - MSUBV
OK   UME::SIMD::SIMD32_8i test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD32_8i test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD32_8i test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD32_8i test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD32_8i test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD32_8i test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD32_8i test Id: 108 - MSUBS
OK   UME::SIMD::SIMD32_8i test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 110 - SUBVA
OK   UME::SIMD::SIMD32_8i test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD32_8i test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD32_8i test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD32_8i test Id: 114 - SUBSA
OK   UME::SIMD::SIMD32_8i test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD32_8i test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD32_8i test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD32_8i test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD32_8i test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD32_8i test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD32_8i test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD32_8i test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD32_8i test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD32_8i test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD32_8i test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD32_8i test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD32_8i test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD32_8i test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD32_8i test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD32_8i test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD32_8i test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD32_8i test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD32_8i test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD32_8i test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD32_8i test Id: 137 - MULV
OK   UME::SIMD::SIMD32_8i test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD32_8i test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD32_8i test Id: 140 - MMULV
OK   UME::SIMD::SIMD32_8i test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD32_8i test Id: 142 - MULS
OK   UME::SIMD::SIMD32_8i test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 146 - MMULS
OK   UME::SIMD::SIMD32_8i test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 148 - MULVA
OK   UME::SIMD::SIMD32_8i test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD32_8i test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD32_8i test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD32_8i test Id: 152 - MMULVA
OK   UME::SIMD::SIMD32_8i test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD32_8i test Id: 154 - MULSA
OK   UME::SIMD::SIMD32_8i test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD32_8i test Id: 156 - MMULSA
OK   UME::SIMD::SIMD32_8i test Id: 157 - DIVV
OK   UME::SIMD::SIMD32_8i test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD32_8i test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD32_8i test Id: 160 - MDIVV
OK   UME::SIMD::SIMD32_8i test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD32_8i test Id: 162 - DIVS
OK   UME::SIMD::SIMD32_8i test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 165 - MDIVS
OK   UME::SIMD::SIMD32_8i test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 167 - DIVVA
OK   UME::SIMD::SIMD32_8i test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD32_8i test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD32_8i test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD32_8i test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD32_8i test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD32_8i test Id: 173 - DIVSA
OK   UME::SIMD::SIMD32_8i test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD32_8i test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD32_8i test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD32_8i test Id: 177 - RCP
OK   UME::SIMD::SIMD32_8i test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD32_8i test Id: 179 - MRCP
OK   UME::SIMD::SIMD32_8i test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD32_8i test Id: 181 - RCPS
OK   UME::SIMD::SIMD32_8i test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD32_8i test Id: 184 - MRCPS
OK   UME::SIMD::SIMD32_8i test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD32_8i test Id: 186 - RCPA
OK   UME::SIMD::SIMD32_8i test Id: 187 - MRCPA
OK   UME::SIMD::SIMD32_8i test Id: 188 - RCPSA
OK   UME::SIMD::SIMD32_8i test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD32_8i test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD32_8i test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD32_8i test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD32_8i test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD32_8i test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD32_8i test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD32_8i test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD32_8i test Id: 201 - CMPNES
OK   UME::SIMD::SIMD32_8i test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD32_8i test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD32_8i test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD32_8i test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD32_8i test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD32_8i test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD32_8i test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD32_8i test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD32_8i test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD32_8i test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD32_8i test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD32_8i test Id: 225 - CMPGES
OK   UME::SIMD::SIMD32_8i test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD32_8i test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD32_8i test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD32_8i test Id: 233 - CMPLES
OK   UME::SIMD::SIMD32_8i test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 238 - CMPEV
OK   UME::SIMD::SIMD32_8i test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD32_8i test Id: 240 - CMPES
OK   UME::SIMD::SIMD32_8i test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 243 - HADD
OK   UME::SIMD::SIMD32_8i test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD32_8i test Id: 245 - HADD gen
OK   UME::SIMD::SIMD32_8i test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD32_8i test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD32_8i test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD32_8i test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD32_8i test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD32_8i test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD32_8i test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD32_8i test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD32_8i test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD32_8i test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD32_8i test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD32_8i test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD32_8i test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD32_8i test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD32_8i test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD32_8i test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD32_8i test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD32_8i test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD32_8i test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD32_8i test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD32_8i test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD32_8i test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD32_8i test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD32_8i test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD32_8i test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD32_8i test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD32_8i test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD32_8i test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD32_8i test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD32_8i test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD32_8i test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD32_8i test Id: 277 - MAXV
OK   UME::SIMD::SIMD32_8i test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD32_8i test Id: 279 - MMAXV
OK   UME::SIMD::SIMD32_8i test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD32_8i test Id: 281 - MAXS
OK   UME::SIMD::SIMD32_8i test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 284 - MMAXS
OK   UME::SIMD::SIMD32_8i test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 286 - MAXVA
OK   UME::SIMD::SIMD32_8i test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD32_8i test Id: 288 - MAXSA
OK   UME::SIMD::SIMD32_8i test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD32_8i test Id: 290 - MINV
OK   UME::SIMD::SIMD32_8i test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD32_8i test Id: 292 - MMINV
OK   UME::SIMD::SIMD32_8i test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD32_8i test Id: 294 - MINS
OK   UME::SIMD::SIMD32_8i test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD32_8i test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD32_8i test Id: 297 - MMINS
OK   UME::SIMD::SIMD32_8i test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 299 - MINVA
OK   UME::SIMD::SIMD32_8i test Id: 300 - MMINVA
OK   UME::SIMD::SIMD32_8i test Id: 301 - MINSA
OK   UME::SIMD::SIMD32_8i test Id: 302 - MMINSA
OK   UME::SIMD::SIMD32_8i test Id: 303 - HMAX
OK   UME::SIMD::SIMD32_8i test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD32_8i test Id: 305 - HMAX
OK   UME::SIMD::SIMD32_8i test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD32_8i test Id: 307 - MHMAX
OK   UME::SIMD::SIMD32_8i test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD32_8i test Id: 309 - IMAX
OK   UME::SIMD::SIMD32_8i test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD32_8i test Id: 311 - MIMAX
OK   UME::SIMD::SIMD32_8i test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD32_8i test Id: 313 - HMIN
OK   UME::SIMD::SIMD32_8i test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD32_8i test Id: 315 - HMIN
OK   UME::SIMD::SIMD32_8i test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD32_8i test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD32_8i test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD32_8i test Id: 319 - IMIN
OK   UME::SIMD::SIMD32_8i test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD32_8i test Id: 321 - MIMIN
OK   UME::SIMD::SIMD32_8i test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD32_8i test Id: 323 - REMV gen
OK   UME::SIMD::SIMD32_8i test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD32_8i test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD32_8i test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD32_8i test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD32_8i test Id: 328 - REMS gen
OK   UME::SIMD::SIMD32_8i test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD32_8i test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD32_8i test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD32_8i test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD32_8i test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD32_8i test Id: 334 - LORV gen
OK   UME::SIMD::SIMD32_8i test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD32_8i test Id: 336 - BANDV
OK   UME::SIMD::SIMD32_8i test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD32_8i test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD32_8i test Id: 339 - MBANDV
OK   UME::SIMD::SIMD32_8i test Id: 340 - MBANDV
OK   UME::SIMD::SIMD32_8i test Id: 341 - BANDS
OK   UME::SIMD::SIMD32_8i test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 346 - MBANDS
OK   UME::SIMD::SIMD32_8i test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 348 - BANDVA
OK   UME::SIMD::SIMD32_8i test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD32_8i test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD32_8i test Id: 351 - BANDSA
OK   UME::SIMD::SIMD32_8i test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD32_8i test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD32_8i test Id: 354 - BORV
OK   UME::SIMD::SIMD32_8i test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD32_8i test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD32_8i test Id: 357 - MBORV
OK   UME::SIMD::SIMD32_8i test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD32_8i test Id: 359 - BORS
OK   UME::SIMD::SIMD32_8i test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 364 - MBORS
OK   UME::SIMD::SIMD32_8i test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 366 - BORVA
OK   UME::SIMD::SIMD32_8i test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD32_8i test Id: 368 - MBORVA
OK   UME::SIMD::SIMD32_8i test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD32_8i test Id: 370 - BORSA
OK   UME::SIMD::SIMD32_8i test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD32_8i test Id: 372 - MBORSA
OK   UME::SIMD::SIMD32_8i test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD32_8i test Id: 374 - BXORV
OK   UME::SIMD::SIMD32_8i test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD32_8i test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD32_8i test Id: 377 - MBXORV
OK   UME::SIMD::SIMD32_8i test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD32_8i test Id: 379 - BXORS
OK   UME::SIMD::SIMD32_8i test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 384 - MBXORS
OK   UME::SIMD::SIMD32_8i test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 386 - BXORVA
OK   UME::SIMD::SIMD32_8i test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD32_8i test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD32_8i test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD32_8i test Id: 390 - BXORSA
OK   UME::SIMD::SIMD32_8i test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD32_8i test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD32_8i test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD32_8i test Id: 394 - BNOT
OK   UME::SIMD::SIMD32_8i test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD32_8i test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD32_8i test Id: 397 - MBNOT
OK   UME::SIMD::SIMD32_8i test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD32_8i test Id: 399 - BNOTA
OK   UME::SIMD::SIMD32_8i test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD32_8i test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD32_8i test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD32_8i test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD32_8i test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD32_8i test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD32_8i test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD32_8i test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD32_8i test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD32_8i test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD32_8i test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD32_8i test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD32_8i test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD32_8i test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD32_8i test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD32_8i test Id: 415 - HBAND
OK   UME::SIMD::SIMD32_8i test Id: 416 - HBAND
OK   UME::SIMD::SIMD32_8i test Id: 417 - MHBAND
OK   UME::SIMD::SIMD32_8i test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD32_8i test Id: 419 - HBANDS
OK   UME::SIMD::SIMD32_8i test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD32_8i test Id: 421 - HBOR
OK   UME::SIMD::SIMD32_8i test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD32_8i test Id: 423 - MHBOR
OK   UME::SIMD::SIMD32_8i test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD32_8i test Id: 425 - HBORS
OK   UME::SIMD::SIMD32_8i test Id: 426 - MHBORS
OK   UME::SIMD::SIMD32_8i test Id: 427 - HBXOR
OK   UME::SIMD::SIMD32_8i test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD32_8i test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD32_8i test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD32_8i test Id: 431 - HBXORS
OK   UME::SIMD::SIMD32_8i test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD32_8i test Id: 433 - GATHERU
OK   UME::SIMD::SIMD32_8i test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD32_8i test Id: 435 - GATHERS
OK   UME::SIMD::SIMD32_8i test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD32_8i test Id: 437 - GATHERV
OK   UME::SIMD::SIMD32_8i test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD32_8i test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD32_8i test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD32_8i test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD32_8i test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD32_8i test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD32_8i test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD32_8i test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD32_8i test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD32_8i test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD32_8i test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD32_8i test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD32_8i test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD32_8i test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD32_8i test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD32_8i test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD32_8i test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD32_8i test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD32_8i test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD32_8i test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD32_8i test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD32_8i test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD32_8i test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD32_8i test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD32_8i test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD32_8i test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD32_8i test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD32_8i test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD32_8i test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD32_8i test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD32_8i test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD32_8i test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD32_8i test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD32_8i test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD32_8i test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD32_8i test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD32_8i test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD32_8i test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD32_8i test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD32_8i test Id: 477 - ROLV
OK   UME::SIMD::SIMD32_8i test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD32_8i test Id: 479 - MROLV
OK   UME::SIMD::SIMD32_8i test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD32_8i test Id: 481 - ROLS
OK   UME::SIMD::SIMD32_8i test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 483 - MROLS
OK   UME::SIMD::SIMD32_8i test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 485 - ROLVA
OK   UME::SIMD::SIMD32_8i test Id: 486 - MROLVA
OK   UME::SIMD::SIMD32_8i test Id: 487 - ROLSA
OK   UME::SIMD::SIMD32_8i test Id: 488 - MROLSA
OK   UME::SIMD::SIMD32_8i test Id: 489 - RORV
OK   UME::SIMD::SIMD32_8i test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD32_8i test Id: 491 - MRORV
OK   UME::SIMD::SIMD32_8i test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD32_8i test Id: 493 - RORS
OK   UME::SIMD::SIMD32_8i test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 495 - MRORS
OK   UME::SIMD::SIMD32_8i test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_8i test Id: 497 - RORVA
OK   UME::SIMD::SIMD32_8i test Id: 498 - MRORVA
OK   UME::SIMD::SIMD32_8i test Id: 499 - RORSA
OK   UME::SIMD::SIMD32_8i test Id: 500 - MRORSA
OK   UME::SIMD::SIMD32_8i test Id: 501 - NEG
OK   UME::SIMD::SIMD32_8i test Id: 502 - NEG(operator-)
OK   UME::SIMD::SIMD32_8i test Id: 503 - NEG(function)
OK   UME::SIMD::SIMD32_8i test Id: 504 - MNEG
OK   UME::SIMD::SIMD32_8i test Id: 505 - MNEG(function)
OK   UME::SIMD::SIMD32_8i test Id: 506 - NEGA
OK   UME::SIMD::SIMD32_8i test Id: 507 - MNEGA
OK   UME::SIMD::SIMD32_8i test Id: 508 - ABS
OK   UME::SIMD::SIMD32_8i test Id: 509 - ABS(function)
OK   UME::SIMD::SIMD32_8i test Id: 510 - MABS
OK   UME::SIMD::SIMD32_8i test Id: 511 - MABS(function)
OK   UME::SIMD::SIMD32_8i test Id: 512 - ABSA
OK   UME::SIMD::SIMD32_8i test Id: 513 - MABSA
OK   UME::SIMD::SIMD32_8i test Id: 514 - COPYSIGN gen
OK   UME::SIMD::SIMD32_8i test Id: 515 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD32_8i test Id: 516 - ITOU
OK   UME::SIMD::SIMD32_8i test Id: 517 - PACK
OK   UME::SIMD::SIMD32_8i test Id: 518 - PACKLO
OK   UME::SIMD::SIMD32_8i test Id: 519 - PACKHI
OK   UME::SIMD::SIMD32_8i test Id: 520 - UNPACK
OK   UME::SIMD::SIMD32_8i test Id: 521 - UNPACKLO
OK   UME::SIMD::SIMD32_8i test Id: 522 - UNPACKHi
OK   UME::SIMD::SIMD32_8i test Id: 523 - PROMOTE
OK   UME::SIMD::SIMD16_16u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD16_16u test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD16_16u test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD16_16u test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD16_16u test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD16_16u test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD16_16u test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD16_16u test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD16_16u test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD16_16u test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD16_16u test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD16_16u test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD16_16u test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD16_16u test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD16_16u test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD16_16u test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD16_16u test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD16_16u test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD16_16u test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD16_16u test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD16_16u test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD16_16u test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD16_16u test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD16_16u test Id: 24 - INSERT
OK   UME::SIMD::SIMD16_16u test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD16_16u test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD16_16u test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD16_16u test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD16_16u test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD16_16u test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD16_16u test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD16_16u test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD16_16u test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD16_16u test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD16_16u test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD16_16u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD16_16u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD16_16u test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD16_16u test Id: 39 - MLOAD
OK   UME::SIMD::SIMD16_16u test Id: 40 - MSTORE
OK   UME::SIMD::SIMD16_16u test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD16_16u test Id: 42 - MLOADA
OK   UME::SIMD::SIMD16_16u test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD16_16u test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD16_16u test Id: 45 - SORTA
OK   UME::SIMD::SIMD16_16u test Id: 46 - SORTD
OK   UME::SIMD::SIMD16_16u test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD16_16u test Id: 48 - ADDV
OK   UME::SIMD::SIMD16_16u test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD16_16u test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD16_16u test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD16_16u test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD16_16u test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD16_16u test Id: 54 - MADDV
OK   UME::SIMD::SIMD16_16u test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD16_16u test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD16_16u test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD16_16u test Id: 58 - ADDS
OK   UME::SIMD::SIMD16_16u test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD16_16u test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD16_16u test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD16_16u test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD16_16u test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD16_16u test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD16_16u test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD16_16u test Id: 68 - MADDS
OK   UME::SIMD::SIMD16_16u test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD16_16u test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD16_16u test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD16_16u test Id: 73 - ADDVA
OK   UME::SIMD::SIMD16_16u test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD16_16u test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD16_16u test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD16_16u test Id: 77 - MADDVA
OK   UME::SIMD::SIMD16_16u test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD16_16u test Id: 79 - ADDSA
OK   UME::SIMD::SIMD16_16u test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD16_16u test Id: 81 - MADDSA
OK   UME::SIMD::SIMD16_16u test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD16_16u test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD16_16u test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD16_16u test Id: 85 - POSTINC
OK   UME::SIMD::SIMD16_16u test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD16_16u test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD16_16u test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD16_16u test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD16_16u test Id: 90 - PREFINC
OK   UME::SIMD::SIMD16_16u test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD16_16u test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD16_16u test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD16_16u test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD16_16u test Id: 95 - SUBV
OK   UME::SIMD::SIMD16_16u test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD16_16u test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD16_16u test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD16_16u test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD16_16u test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD16_16u test Id: 101 - MSUBV
OK   UME::SIMD::SIMD16_16u test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD16_16u test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD16_16u test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD16_16u test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD16_16u test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD16_16u test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD16_16u test Id: 108 - MSUBS
OK   UME::SIMD::SIMD16_16u test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 110 - SUBVA
OK   UME::SIMD::SIMD16_16u test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD16_16u test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD16_16u test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD16_16u test Id: 114 - SUBSA
OK   UME::SIMD::SIMD16_16u test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD16_16u test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD16_16u test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD16_16u test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD16_16u test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD16_16u test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD16_16u test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD16_16u test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD16_16u test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD16_16u test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD16_16u test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD16_16u test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD16_16u test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD16_16u test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD16_16u test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD16_16u test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD16_16u test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD16_16u test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD16_16u test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD16_16u test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD16_16u test Id: 137 - MULV
OK   UME::SIMD::SIMD16_16u test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD16_16u test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD16_16u test Id: 140 - MMULV
OK   UME::SIMD::SIMD16_16u test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD16_16u test Id: 142 - MULS
OK   UME::SIMD::SIMD16_16u test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 146 - MMULS
OK   UME::SIMD::SIMD16_16u test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 148 - MULVA
OK   UME::SIMD::SIMD16_16u test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD16_16u test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD16_16u test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD16_16u test Id: 152 - MMULVA
OK   UME::SIMD::SIMD16_16u test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_16u test Id: 154 - MULSA
OK   UME::SIMD::SIMD16_16u test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD16_16u test Id: 156 - MMULSA
OK   UME::SIMD::SIMD16_16u test Id: 157 - DIVV
OK   UME::SIMD::SIMD16_16u test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD16_16u test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD16_16u test Id: 160 - MDIVV
OK   UME::SIMD::SIMD16_16u test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD16_16u test Id: 162 - DIVS
OK   UME::SIMD::SIMD16_16u test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 165 - MDIVS
OK   UME::SIMD::SIMD16_16u test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 167 - DIVVA
OK   UME::SIMD::SIMD16_16u test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD16_16u test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD16_16u test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD16_16u test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD16_16u test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_16u test Id: 173 - DIVSA
OK   UME::SIMD::SIMD16_16u test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD16_16u test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD16_16u test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD16_16u test Id: 177 - RCP
OK   UME::SIMD::SIMD16_16u test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD16_16u test Id: 179 - MRCP
OK   UME::SIMD::SIMD16_16u test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD16_16u test Id: 181 - RCPS
OK   UME::SIMD::SIMD16_16u test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD16_16u test Id: 184 - MRCPS
OK   UME::SIMD::SIMD16_16u test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD16_16u test Id: 186 - RCPA
OK   UME::SIMD::SIMD16_16u test Id: 187 - MRCPA
OK   UME::SIMD::SIMD16_16u test Id: 188 - RCPSA
OK   UME::SIMD::SIMD16_16u test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD16_16u test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD16_16u test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD16_16u test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD16_16u test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD16_16u test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD16_16u test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD16_16u test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD16_16u test Id: 201 - CMPNES
OK   UME::SIMD::SIMD16_16u test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD16_16u test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD16_16u test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD16_16u test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD16_16u test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD16_16u test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD16_16u test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD16_16u test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD16_16u test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD16_16u test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD16_16u test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD16_16u test Id: 225 - CMPGES
OK   UME::SIMD::SIMD16_16u test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD16_16u test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD16_16u test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD16_16u test Id: 233 - CMPLES
OK   UME::SIMD::SIMD16_16u test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 238 - CMPEV
OK   UME::SIMD::SIMD16_16u test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD16_16u test Id: 240 - CMPES
OK   UME::SIMD::SIMD16_16u test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 243 - HADD
OK   UME::SIMD::SIMD16_16u test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD16_16u test Id: 245 - HADD gen
OK   UME::SIMD::SIMD16_16u test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD16_16u test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD16_16u test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD16_16u test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD16_16u test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD16_16u test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD16_16u test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD16_16u test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD16_16u test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD16_16u test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD16_16u test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD16_16u test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD16_16u test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD16_16u test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD16_16u test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD16_16u test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD16_16u test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD16_16u test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD16_16u test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD16_16u test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD16_16u test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD16_16u test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD16_16u test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD16_16u test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD16_16u test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD16_16u test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD16_16u test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD16_16u test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD16_16u test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD16_16u test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD16_16u test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD16_16u test Id: 277 - MAXV
OK   UME::SIMD::SIMD16_16u test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD16_16u test Id: 279 - MMAXV
OK   UME::SIMD::SIMD16_16u test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD16_16u test Id: 281 - MAXS
OK   UME::SIMD::SIMD16_16u test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 284 - MMAXS
OK   UME::SIMD::SIMD16_16u test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 286 - MAXVA
OK   UME::SIMD::SIMD16_16u test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD16_16u test Id: 288 - MAXSA
OK   UME::SIMD::SIMD16_16u test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD16_16u test Id: 290 - MINV
OK   UME::SIMD::SIMD16_16u test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD16_16u test Id: 292 - MMINV
OK   UME::SIMD::SIMD16_16u test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD16_16u test Id: 294 - MINS
OK   UME::SIMD::SIMD16_16u test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD16_16u test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD16_16u test Id: 297 - MMINS
OK   UME::SIMD::SIMD16_16u test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 299 - MINVA
OK   UME::SIMD::SIMD16_16u test Id: 300 - MMINVA
OK   UME::SIMD::SIMD16_16u test Id: 301 - MINSA
OK   UME::SIMD::SIMD16_16u test Id: 302 - MMINSA
OK   UME::SIMD::SIMD16_16u test Id: 303 - HMAX
OK   UME::SIMD::SIMD16_16u test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD16_16u test Id: 305 - HMAX
OK   UME::SIMD::SIMD16_16u test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD16_16u test Id: 307 - MHMAX
OK   UME::SIMD::SIMD16_16u test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD16_16u test Id: 309 - IMAX
OK   UME::SIMD::SIMD16_16u test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD16_16u test Id: 311 - MIMAX
OK   UME::SIMD::SIMD16_16u test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD16_16u test Id: 313 - HMIN
OK   UME::SIMD::SIMD16_16u test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD16_16u test Id: 315 - HMIN
OK   UME::SIMD::SIMD16_16u test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD16_16u test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD16_16u test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD16_16u test Id: 319 - IMIN
OK   UME::SIMD::SIMD16_16u test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD16_16u test Id: 321 - MIMIN
OK   UME::SIMD::SIMD16_16u test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD16_16u test Id: 323 - REMV gen
OK   UME::SIMD::SIMD16_16u test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD16_16u test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD16_16u test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD16_16u test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD16_16u test Id: 328 - REMS gen
OK   UME::SIMD::SIMD16_16u test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD16_16u test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD16_16u test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD16_16u test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD16_16u test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD16_16u test Id: 334 - LORV gen
OK   UME::SIMD::SIMD16_16u test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD16_16u test Id: 336 - BANDV
OK   UME::SIMD::SIMD16_16u test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD16_16u test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD16_16u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD16_16u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD16_16u test Id: 341 - BANDS
OK   UME::SIMD::SIMD16_16u test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 346 - MBANDS
OK   UME::SIMD::SIMD16_16u test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 348 - BANDVA
OK   UME::SIMD::SIMD16_16u test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD16_16u test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD16_16u test Id: 351 - BANDSA
OK   UME::SIMD::SIMD16_16u test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD16_16u test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD16_16u test Id: 354 - BORV
OK   UME::SIMD::SIMD16_16u test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD16_16u test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD16_16u test Id: 357 - MBORV
OK   UME::SIMD::SIMD16_16u test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD16_16u test Id: 359 - BORS
OK   UME::SIMD::SIMD16_16u test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 364 - MBORS
OK   UME::SIMD::SIMD16_16u test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 366 - BORVA
OK   UME::SIMD::SIMD16_16u test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD16_16u test Id: 368 - MBORVA
OK   UME::SIMD::SIMD16_16u test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD16_16u test Id: 370 - BORSA
OK   UME::SIMD::SIMD16_16u test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD16_16u test Id: 372 - MBORSA
OK   UME::SIMD::SIMD16_16u test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD16_16u test Id: 374 - BXORV
OK   UME::SIMD::SIMD16_16u test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD16_16u test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD16_16u test Id: 377 - MBXORV
OK   UME::SIMD::SIMD16_16u test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD16_16u test Id: 379 - BXORS
OK   UME::SIMD::SIMD16_16u test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 384 - MBXORS
OK   UME::SIMD::SIMD16_16u test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 386 - BXORVA
OK   UME::SIMD::SIMD16_16u test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD16_16u test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD16_16u test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD16_16u test Id: 390 - BXORSA
OK   UME::SIMD::SIMD16_16u test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD16_16u test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD16_16u test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD16_16u test Id: 394 - BNOT
OK   UME::SIMD::SIMD16_16u test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD16_16u test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD16_16u test Id: 397 - MBNOT
OK   UME::SIMD::SIMD16_16u test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD16_16u test Id: 399 - BNOTA
OK   UME::SIMD::SIMD16_16u test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD16_16u test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD16_16u test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD16_16u test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD16_16u test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD16_16u test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD16_16u test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD16_16u test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD16_16u test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD16_16u test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD16_16u test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD16_16u test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD16_16u test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD16_16u test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD16_16u test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD16_16u test Id: 415 - HBAND
OK   UME::SIMD::SIMD16_16u test Id: 416 - HBAND
OK   UME::SIMD::SIMD16_16u test Id: 417 - MHBAND
OK   UME::SIMD::SIMD16_16u test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD16_16u test Id: 419 - HBANDS
OK   UME::SIMD::SIMD16_16u test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD16_16u test Id: 421 - HBOR
OK   UME::SIMD::SIMD16_16u test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD16_16u test Id: 423 - MHBOR
OK   UME::SIMD::SIMD16_16u test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD16_16u test Id: 425 - HBORS
OK   UME::SIMD::SIMD16_16u test Id: 426 - MHBORS
OK   UME::SIMD::SIMD16_16u test Id: 427 - HBXOR
OK   UME::SIMD::SIMD16_16u test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD16_16u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD16_16u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD16_16u test Id: 431 - HBXORS
OK   UME::SIMD::SIMD16_16u test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD16_16u test Id: 433 - GATHERU
OK   UME::SIMD::SIMD16_16u test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD16_16u test Id: 435 - GATHERS
OK   UME::SIMD::SIMD16_16u test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD16_16u test Id: 437 - GATHERV
OK   UME::SIMD::SIMD16_16u test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD16_16u test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD16_16u test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD16_16u test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD16_16u test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD16_16u test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD16_16u test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD16_16u test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD16_16u test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD16_16u test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD16_16u test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD16_16u test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD16_16u test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD16_16u test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD16_16u test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD16_16u test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD16_16u test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD16_16u test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD16_16u test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD16_16u test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD16_16u test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD16_16u test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD16_16u test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD16_16u test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD16_16u test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD16_16u test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD16_16u test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD16_16u test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD16_16u test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD16_16u test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD16_16u test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD16_16u test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD16_16u test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD16_16u test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD16_16u test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD16_16u test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD16_16u test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD16_16u test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD16_16u test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD16_16u test Id: 477 - ROLV
OK   UME::SIMD::SIMD16_16u test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD16_16u test Id: 479 - MROLV
OK   UME::SIMD::SIMD16_16u test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD16_16u test Id: 481 - ROLS
OK   UME::SIMD::SIMD16_16u test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 483 - MROLS
OK   UME::SIMD::SIMD16_16u test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 485 - ROLVA
OK   UME::SIMD::SIMD16_16u test Id: 486 - MROLVA
OK   UME::SIMD::SIMD16_16u test Id: 487 - ROLSA
OK   UME::SIMD::SIMD16_16u test Id: 488 - MROLSA
OK   UME::SIMD::SIMD16_16u test Id: 489 - RORV
OK   UME::SIMD::SIMD16_16u test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD16_16u test Id: 491 - MRORV
OK   UME::SIMD::SIMD16_16u test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD16_16u test Id: 493 - RORS
OK   UME::SIMD::SIMD16_16u test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 495 - MRORS
OK   UME::SIMD::SIMD16_16u test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16u test Id: 497 - RORVA
OK   UME::SIMD::SIMD16_16u test Id: 498 - MRORVA
OK   UME::SIMD::SIMD16_16u test Id: 499 - RORSA
OK   UME::SIMD::SIMD16_16u test Id: 500 - MRORSA
OK   UME::SIMD::SIMD16_16u test Id: 501 - UTOI
OK   UME::SIMD::SIMD16_16u test Id: 502 - PACK
OK   UME::SIMD::SIMD16_16u test Id: 503 - PACKLO
OK   UME::SIMD::SIMD16_16u test Id: 504 - PACKHI
OK   UME::SIMD::SIMD16_16u test Id: 505 - UNPACK
OK   UME::SIMD::SIMD16_16u test Id: 506 - UNPACKLO
OK   UME::SIMD::SIMD16_16u test Id: 507 - UNPACKHi
OK   UME::SIMD::SIMD16_16u test Id: 508 - PROMOTE
OK   UME::SIMD::SIMD16_16u test Id: 509 - DEGRADE
OK   UME::SIMD::SIMD16_16i test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD16_16i test Id: 2 - SET-CONSTR
OK   UME::SIMD::SIMD16_16i test Id: 3 - LOAD
OK   UME::SIMD::SIMD16_16i test Id: 4 - LOADA
OK   UME::SIMD::SIMD16_16i test Id: 5 - SET-CONSTR gen
OK   UME::SIMD::SIMD16_16i test Id: 6 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD16_16i test Id: 7 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD16_16i test Id: 8 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD16_16i test Id: 9 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD16_16i test Id: 10 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD16_16i test Id: 11 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD16_16i test Id: 12 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD16_16i test Id: 13 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD16_16i test Id: 14 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD16_16i test Id: 15 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD16_16i test Id: 16 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD16_16i test Id: 17 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD16_16i test Id: 18 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD16_16i test Id: 19 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD16_16i test Id: 20 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD16_16i test Id: 21 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD16_16i test Id: 22 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD16_16i test Id: 23 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD16_16i test Id: 24 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD16_16i test Id: 25 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD16_16i test Id: 26 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD16_16i test Id: 27 - INSERT
OK   UME::SIMD::SIMD16_16i test Id: 28 - INSERT(operator[] =)
OK   UME::SIMD::SIMD16_16i test Id: 29 - EXTRACT
OK   UME::SIMD::SIMD16_16i test Id: 30 - EXTRACT(operator[])
OK   UME::SIMD::SIMD16_16i test Id: 31 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD16_16i test Id: 32 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD16_16i test Id: 33 - ASSIGNV
OK   UME::SIMD::SIMD16_16i test Id: 34 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD16_16i test Id: 35 - MASSIGNV
OK   UME::SIMD::SIMD16_16i test Id: 36 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD16_16i test Id: 37 - ASSIGNS
OK   UME::SIMD::SIMD16_16i test Id: 38 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD16_16i test Id: 39 - MASSIGNS
OK   UME::SIMD::SIMD16_16i test Id: 40 - MASSIGNS
OK   UME::SIMD::SIMD16_16i test Id: 41 - LOAD/STORE
OK   UME::SIMD::SIMD16_16i test Id: 42 - MLOAD
OK   UME::SIMD::SIMD16_16i test Id: 43 - MSTORE
OK   UME::SIMD::SIMD16_16i test Id: 44 - LOADA/STOREA
OK   UME::SIMD::SIMD16_16i test Id: 45 - MLOADA
OK   UME::SIMD::SIMD16_16i test Id: 46 - MSTOREA
OK   UME::SIMD::SIMD16_16i test Id: 47 - SWIZZLE
OK   UME::SIMD::SIMD16_16i test Id: 48 - SORTA
OK   UME::SIMD::SIMD16_16i test Id: 49 - SORTD
OK   UME::SIMD::SIMD16_16i test Id: 50 - BLENDV gen
OK   UME::SIMD::SIMD16_16i test Id: 51 - ADDV
OK   UME::SIMD::SIMD16_16i test Id: 52 - ADDV(operator+)
OK   UME::SIMD::SIMD16_16i test Id: 53 - ADDV(function)
OK   UME::SIMD::SIMD16_16i test Id: 54 - ADDV gen
OK   UME::SIMD::SIMD16_16i test Id: 55 - ADDV(operator+) gen
OK   UME::SIMD::SIMD16_16i test Id: 56 - ADDV(function) gen
OK   UME::SIMD::SIMD16_16i test Id: 57 - MADDV
OK   UME::SIMD::SIMD16_16i test Id: 58 - MADDV(function)
OK   UME::SIMD::SIMD16_16i test Id: 59 - MADDV gen
OK   UME::SIMD::SIMD16_16i test Id: 60 - MADDV(function) gen
OK   UME::SIMD::SIMD16_16i test Id: 61 - ADDS
OK   UME::SIMD::SIMD16_16i test Id: 62 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 63 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 64 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD16_16i test Id: 65 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD16_16i test Id: 66 - ADDS gen
OK   UME::SIMD::SIMD16_16i test Id: 67 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD16_16i test Id: 68 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD16_16i test Id: 69 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD16_16i test Id: 70 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD16_16i test Id: 71 - MADDS
OK   UME::SIMD::SIMD16_16i test Id: 72 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 73 - MADDS gen
OK   UME::SIMD::SIMD16_16i test Id: 74 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD16_16i test Id: 75 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD16_16i test Id: 76 - ADDVA
OK   UME::SIMD::SIMD16_16i test Id: 77 - ADDVA(operator+=)
OK   UME::SIMD::SIMD16_16i test Id: 78 - ADDVA gen
OK   UME::SIMD::SIMD16_16i test Id: 79 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD16_16i test Id: 80 - MADDVA
OK   UME::SIMD::SIMD16_16i test Id: 81 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD16_16i test Id: 82 - ADDSA
OK   UME::SIMD::SIMD16_16i test Id: 83 - ADDSA(operator+=)
OK   UME::SIMD::SIMD16_16i test Id: 84 - MADDSA
OK   UME::SIMD::SIMD16_16i test Id: 85 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD16_16i test Id: 86 - SADDV gen
OK   UME::SIMD::SIMD16_16i test Id: 87 - SADDV(function) gen
OK   UME::SIMD::SIMD16_16i test Id: 88 - POSTINC
OK   UME::SIMD::SIMD16_16i test Id: 89 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD16_16i test Id: 90 - POSTINC(function)
OK   UME::SIMD::SIMD16_16i test Id: 91 - MPOSTINC
OK   UME::SIMD::SIMD16_16i test Id: 92 - MPOSTINC(function)
OK   UME::SIMD::SIMD16_16i test Id: 93 - PREFINC
OK   UME::SIMD::SIMD16_16i test Id: 94 - PREFINC(operator++())
OK   UME::SIMD::SIMD16_16i test Id: 95 - PREFINC(function)
OK   UME::SIMD::SIMD16_16i test Id: 96 - MPREFINC
OK   UME::SIMD::SIMD16_16i test Id: 97 - MPREFINC(function)
OK   UME::SIMD::SIMD16_16i test Id: 98 - SUBV
OK   UME::SIMD::SIMD16_16i test Id: 99 - SUBV(operator-)
OK   UME::SIMD::SIMD16_16i test Id: 100 - SUBV(function)
OK   UME::SIMD::SIMD16_16i test Id: 101 - SUBV gen
OK   UME::SIMD::SIMD16_16i test Id: 102 - SUBV(operator-) gen
OK   UME::SIMD::SIMD16_16i test Id: 103 - SUBV(function) gen
OK   UME::SIMD::SIMD16_16i test Id: 104 - MSUBV
OK   UME::SIMD::SIMD16_16i test Id: 105 - MSUBV(function)
OK   UME::SIMD::SIMD16_16i test Id: 106 - MSUBV gen
OK   UME::SIMD::SIMD16_16i test Id: 107 - MSUBV(function) gen
OK   UME::SIMD::SIMD16_16i test Id: 108 - SUBS gen
OK   UME::SIMD::SIMD16_16i test Id: 109 - SUBS(operator-) gen
OK   UME::SIMD::SIMD16_16i test Id: 110 - SUBS(function) gen
OK   UME::SIMD::SIMD16_16i test Id: 111 - MSUBS
OK   UME::SIMD::SIMD16_16i test Id: 112 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 113 - SUBVA
OK   UME::SIMD::SIMD16_16i test Id: 114 - SUBVA(operator-=)
OK   UME::SIMD::SIMD16_16i test Id: 115 - MSUBVA
OK   UME::SIMD::SIMD16_16i test Id: 116 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD16_16i test Id: 117 - SUBSA
OK   UME::SIMD::SIMD16_16i test Id: 118 - MSUBSA
OK   UME::SIMD::SIMD16_16i test Id: 119 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD16_16i test Id: 120 - SUBFROMV
OK   UME::SIMD::SIMD16_16i test Id: 121 - MSUBFROMV
OK   UME::SIMD::SIMD16_16i test Id: 122 - SUBFROMS
OK   UME::SIMD::SIMD16_16i test Id: 123 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 124 - MSUBFROMS
OK   UME::SIMD::SIMD16_16i test Id: 125 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 126 - SUBFROMVA
OK   UME::SIMD::SIMD16_16i test Id: 127 - MSUBFROMVA
OK   UME::SIMD::SIMD16_16i test Id: 128 - SUBFROMSA
OK   UME::SIMD::SIMD16_16i test Id: 129 - MSUBFROMSA
OK   UME::SIMD::SIMD16_16i test Id: 130 - POSTDEC
OK   UME::SIMD::SIMD16_16i test Id: 131 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD16_16i test Id: 132 - POSTDEC(function)
OK   UME::SIMD::SIMD16_16i test Id: 133 - MPOSTDEC
OK   UME::SIMD::SIMD16_16i test Id: 134 - MPOSTDEC(function)
OK   UME::SIMD::SIMD16_16i test Id: 135 - PREFDEC
OK   UME::SIMD::SIMD16_16i test Id: 136 - PREFDEC(operator--())
OK   UME::SIMD::SIMD16_16i test Id: 137 - PREFDEC(function)
OK   UME::SIMD::SIMD16_16i test Id: 138 - MPREFDEC
OK   UME::SIMD::SIMD16_16i test Id: 139 - MPREFDEC(function)
OK   UME::SIMD::SIMD16_16i test Id: 140 - MULV
OK   UME::SIMD::SIMD16_16i test Id: 141 - MULV(operator*)
OK   UME::SIMD::SIMD16_16i test Id: 142 - MULV(function)
OK   UME::SIMD::SIMD16_16i test Id: 143 - MMULV
OK   UME::SIMD::SIMD16_16i test Id: 144 - MMULV(function)
OK   UME::SIMD::SIMD16_16i test Id: 145 - MULS
OK   UME::SIMD::SIMD16_16i test Id: 146 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 147 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 148 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 149 - MMULS
OK   UME::SIMD::SIMD16_16i test Id: 150 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 151 - MULVA
OK   UME::SIMD::SIMD16_16i test Id: 152 - MULVA(operator*)
OK   UME::SIMD::SIMD16_16i test Id: 153 - MULVA gen
OK   UME::SIMD::SIMD16_16i test Id: 154 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD16_16i test Id: 155 - MMULVA
OK   UME::SIMD::SIMD16_16i test Id: 156 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_16i test Id: 157 - MULSA
OK   UME::SIMD::SIMD16_16i test Id: 158 - MULSA(operator*=)
OK   UME::SIMD::SIMD16_16i test Id: 159 - MMULSA
OK   UME::SIMD::SIMD16_16i test Id: 160 - DIVV
OK   UME::SIMD::SIMD16_16i test Id: 161 - DIVV(operator/)
OK   UME::SIMD::SIMD16_16i test Id: 162 - DIVV(function)
OK   UME::SIMD::SIMD16_16i test Id: 163 - MDIVV
OK   UME::SIMD::SIMD16_16i test Id: 164 - MDIVV(function)
OK   UME::SIMD::SIMD16_16i test Id: 165 - DIVS
OK   UME::SIMD::SIMD16_16i test Id: 166 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 167 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 168 - MDIVS
OK   UME::SIMD::SIMD16_16i test Id: 169 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 170 - DIVVA
OK   UME::SIMD::SIMD16_16i test Id: 171 - DIVVA(operator/=)
OK   UME::SIMD::SIMD16_16i test Id: 172 - DIVVA gen
OK   UME::SIMD::SIMD16_16i test Id: 173 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD16_16i test Id: 174 - MDIVVA
OK   UME::SIMD::SIMD16_16i test Id: 175 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_16i test Id: 176 - DIVSA
OK   UME::SIMD::SIMD16_16i test Id: 177 - DIVSA(operator/=)
OK   UME::SIMD::SIMD16_16i test Id: 178 - MDIVSA
OK   UME::SIMD::SIMD16_16i test Id: 179 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD16_16i test Id: 180 - RCP
OK   UME::SIMD::SIMD16_16i test Id: 181 - RCP(function)
OK   UME::SIMD::SIMD16_16i test Id: 182 - MRCP
OK   UME::SIMD::SIMD16_16i test Id: 183 - MRCP(function)
OK   UME::SIMD::SIMD16_16i test Id: 184 - RCPS
OK   UME::SIMD::SIMD16_16i test Id: 185 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 186 - RCPS(function)
OK   UME::SIMD::SIMD16_16i test Id: 187 - MRCPS
OK   UME::SIMD::SIMD16_16i test Id: 188 - MRCPS (function)
OK   UME::SIMD::SIMD16_16i test Id: 189 - RCPA
OK   UME::SIMD::SIMD16_16i test Id: 190 - MRCPA
OK   UME::SIMD::SIMD16_16i test Id: 191 - RCPSA
OK   UME::SIMD::SIMD16_16i test Id: 192 - MRCPSA
OK   UME::SIMD::SIMD16_16i test Id: 193 - CMPEQV
OK   UME::SIMD::SIMD16_16i test Id: 194 - CMPEQV(operator==)
OK   UME::SIMD::SIMD16_16i test Id: 195 - CMPEQV(function)
OK   UME::SIMD::SIMD16_16i test Id: 196 - CMPEQS
OK   UME::SIMD::SIMD16_16i test Id: 197 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 198 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 199 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 200 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 201 - CMPNEV
OK   UME::SIMD::SIMD16_16i test Id: 202 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD16_16i test Id: 203 - CMPNEV(function)
OK   UME::SIMD::SIMD16_16i test Id: 204 - CMPNES
OK   UME::SIMD::SIMD16_16i test Id: 205 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 206 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 207 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 208 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 209 - CMPGTV
OK   UME::SIMD::SIMD16_16i test Id: 210 - CMPGTV(operator>)
OK   UME::SIMD::SIMD16_16i test Id: 211 - CMPGTV(function)
OK   UME::SIMD::SIMD16_16i test Id: 212 - CMPGTS
OK   UME::SIMD::SIMD16_16i test Id: 213 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 214 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 215 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 216 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 217 - CMPLTV
OK   UME::SIMD::SIMD16_16i test Id: 218 - CMPLTV(operator<)
OK   UME::SIMD::SIMD16_16i test Id: 219 - CMPLTV(function)
OK   UME::SIMD::SIMD16_16i test Id: 220 - CMPLTS
OK   UME::SIMD::SIMD16_16i test Id: 221 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 222 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 223 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 224 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 225 - CMPGEV
OK   UME::SIMD::SIMD16_16i test Id: 226 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD16_16i test Id: 227 - CMPGEV(function)
OK   UME::SIMD::SIMD16_16i test Id: 228 - CMPGES
OK   UME::SIMD::SIMD16_16i test Id: 229 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 230 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 231 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 232 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 233 - CMPLEV
OK   UME::SIMD::SIMD16_16i test Id: 234 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD16_16i test Id: 235 - CMPLEV(function)
OK   UME::SIMD::SIMD16_16i test Id: 236 - CMPLES
OK   UME::SIMD::SIMD16_16i test Id: 237 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 238 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 239 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 240 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 241 - CMPEV
OK   UME::SIMD::SIMD16_16i test Id: 242 - CMPEV(function)
OK   UME::SIMD::SIMD16_16i test Id: 243 - CMPES
OK   UME::SIMD::SIMD16_16i test Id: 244 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 245 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 246 - HADD
OK   UME::SIMD::SIMD16_16i test Id: 247 - HADD(function)
OK   UME::SIMD::SIMD16_16i test Id: 248 - HADD gen
OK   UME::SIMD::SIMD16_16i test Id: 249 - HADD(function) gen
OK   UME::SIMD::SIMD16_16i test Id: 250 - MHADD gen
OK   UME::SIMD::SIMD16_16i test Id: 251 - MHADD(function) gen
OK   UME::SIMD::SIMD16_16i test Id: 252 - HADDS gen
OK   UME::SIMD::SIMD16_16i test Id: 253 - HADDS(function) gen
OK   UME::SIMD::SIMD16_16i test Id: 254 - MHADD gen
OK   UME::SIMD::SIMD16_16i test Id: 255 - MHADDS(function) gen
OK   UME::SIMD::SIMD16_16i test Id: 256 - HMUL gen
OK   UME::SIMD::SIMD16_16i test Id: 257 - HMUL(function) gen
OK   UME::SIMD::SIMD16_16i test Id: 258 - MHMUL gen
OK   UME::SIMD::SIMD16_16i test Id: 259 - MHMUL(function) gen
OK   UME::SIMD::SIMD16_16i test Id: 260 - HMULS gen
OK   UME::SIMD::SIMD16_16i test Id: 261 - HMULS(function) gen
OK   UME::SIMD::SIMD16_16i test Id: 262 - MHMUL gen
OK   UME::SIMD::SIMD16_16i test Id: 263 - MHMULS(function) gen
OK   UME::SIMD::SIMD16_16i test Id: 264 - FMULADDV
OK   UME::SIMD::SIMD16_16i test Id: 265 - FMULADDV(function)
OK   UME::SIMD::SIMD16_16i test Id: 266 - MFMULADDV
OK   UME::SIMD::SIMD16_16i test Id: 267 - MFMULADDV(function)
OK   UME::SIMD::SIMD16_16i test Id: 268 - FMULSUBV
OK   UME::SIMD::SIMD16_16i test Id: 269 - FMULSUBV(function)
OK   UME::SIMD::SIMD16_16i test Id: 270 - MFMULSUBV
OK   UME::SIMD::SIMD16_16i test Id: 271 - MFMULSUBV(function)
OK   UME::SIMD::SIMD16_16i test Id: 272 - FADDMULV
OK   UME::SIMD::SIMD16_16i test Id: 273 - FADDMULV(function)
OK   UME::SIMD::SIMD16_16i test Id: 274 - MFADDMULV
OK   UME::SIMD::SIMD16_16i test Id: 275 - MFADDMULV(function)
OK   UME::SIMD::SIMD16_16i test Id: 276 - FSUBMULV
OK   UME::SIMD::SIMD16_16i test Id: 277 - FSUBMULV(function)
OK   UME::SIMD::SIMD16_16i test Id: 278 - MFSUBMULV
OK   UME::SIMD::SIMD16_16i test Id: 279 - MFSUBMULV(function)
OK   UME::SIMD::SIMD16_16i test Id: 280 - MAXV
OK   UME::SIMD::SIMD16_16i test Id: 281 - MAXV(function)
OK   UME::SIMD::SIMD16_16i test Id: 282 - MMAXV
OK   UME::SIMD::SIMD16_16i test Id: 283 - MMAXV(function)
OK   UME::SIMD::SIMD16_16i test Id: 284 - MAXS
OK   UME::SIMD::SIMD16_16i test Id: 285 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 286 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 287 - MMAXS
OK   UME::SIMD::SIMD16_16i test Id: 288 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 289 - MAXVA
OK   UME::SIMD::SIMD16_16i test Id: 290 - MMAXVA
OK   UME::SIMD::SIMD16_16i test Id: 291 - MAXSA
OK   UME::SIMD::SIMD16_16i test Id: 292 - MMAXSA
OK   UME::SIMD::SIMD16_16i test Id: 293 - MINV
OK   UME::SIMD::SIMD16_16i test Id: 294 - MINV(function)
OK   UME::SIMD::SIMD16_16i test Id: 295 - MMINV
OK   UME::SIMD::SIMD16_16i test Id: 296 - MMINV(function)
OK   UME::SIMD::SIMD16_16i test Id: 297 - MINS
OK   UME::SIMD::SIMD16_16i test Id: 298 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD16_16i test Id: 299 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD16_16i test Id: 300 - MMINS
OK   UME::SIMD::SIMD16_16i test Id: 301 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 302 - MINVA
OK   UME::SIMD::SIMD16_16i test Id: 303 - MMINVA
OK   UME::SIMD::SIMD16_16i test Id: 304 - MINSA
OK   UME::SIMD::SIMD16_16i test Id: 305 - MMINSA
OK   UME::SIMD::SIMD16_16i test Id: 306 - HMAX
OK   UME::SIMD::SIMD16_16i test Id: 307 - HMAX(function)
OK   UME::SIMD::SIMD16_16i test Id: 308 - HMAX
OK   UME::SIMD::SIMD16_16i test Id: 309 - HMAX(function)
OK   UME::SIMD::SIMD16_16i test Id: 310 - MHMAX
OK   UME::SIMD::SIMD16_16i test Id: 311 - MHMAX(function)
OK   UME::SIMD::SIMD16_16i test Id: 312 - IMAX
OK   UME::SIMD::SIMD16_16i test Id: 313 - IMAX(function)
OK   UME::SIMD::SIMD16_16i test Id: 314 - MIMAX
OK   UME::SIMD::SIMD16_16i test Id: 315 - MIMAX(function)
OK   UME::SIMD::SIMD16_16i test Id: 316 - HMIN
OK   UME::SIMD::SIMD16_16i test Id: 317 - HMIN(function)
OK   UME::SIMD::SIMD16_16i test Id: 318 - HMIN
OK   UME::SIMD::SIMD16_16i test Id: 319 - HMIN(function)
OK   UME::SIMD::SIMD16_16i test Id: 320 - MHMIN gen
OK   UME::SIMD::SIMD16_16i test Id: 321 - MHMIN(function) gen
OK   UME::SIMD::SIMD16_16i test Id: 322 - IMIN
OK   UME::SIMD::SIMD16_16i test Id: 323 - IMIN(function)
OK   UME::SIMD::SIMD16_16i test Id: 324 - MIMIN
OK   UME::SIMD::SIMD16_16i test Id: 325 - MIMIN(function)
OK   UME::SIMD::SIMD16_16i test Id: 326 - REMV gen
OK   UME::SIMD::SIMD16_16i test Id: 327 - REMV(operator%) gen
OK   UME::SIMD::SIMD16_16i test Id: 328 - REMV(function) gen
OK   UME::SIMD::SIMD16_16i test Id: 329 - MREMV gen
OK   UME::SIMD::SIMD16_16i test Id: 330 - MREMV(function) gen
OK   UME::SIMD::SIMD16_16i test Id: 331 - REMS gen
OK   UME::SIMD::SIMD16_16i test Id: 332 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD16_16i test Id: 333 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD16_16i test Id: 334 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD16_16i test Id: 335 - LANDV gen
OK   UME::SIMD::SIMD16_16i test Id: 336 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD16_16i test Id: 337 - LORV gen
OK   UME::SIMD::SIMD16_16i test Id: 338 - LORV gen (operator ||)
OK   UME::SIMD::SIMD16_16i test Id: 339 - BANDV
OK   UME::SIMD::SIMD16_16i test Id: 340 - BANDV(operator&)
OK   UME::SIMD::SIMD16_16i test Id: 341 - BANDV(function)
OK   UME::SIMD::SIMD16_16i test Id: 342 - MBANDV
OK   UME::SIMD::SIMD16_16i test Id: 343 - MBANDV
OK   UME::SIMD::SIMD16_16i test Id: 344 - BANDS
OK   UME::SIMD::SIMD16_16i test Id: 345 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 346 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 347 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 348 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 349 - MBANDS
OK   UME::SIMD::SIMD16_16i test Id: 350 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 351 - BANDVA
OK   UME::SIMD::SIMD16_16i test Id: 352 - MBANDVA
OK   UME::SIMD::SIMD16_16i test Id: 353 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD16_16i test Id: 354 - BANDSA
OK   UME::SIMD::SIMD16_16i test Id: 355 - MBANDSA
OK   UME::SIMD::SIMD16_16i test Id: 356 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD16_16i test Id: 357 - BORV
OK   UME::SIMD::SIMD16_16i test Id: 358 - BORV(operator |)
OK   UME::SIMD::SIMD16_16i test Id: 359 - BORV(function)
OK   UME::SIMD::SIMD16_16i test Id: 360 - MBORV
OK   UME::SIMD::SIMD16_16i test Id: 361 - MBORV(function)
OK   UME::SIMD::SIMD16_16i test Id: 362 - BORS
OK   UME::SIMD::SIMD16_16i test Id: 363 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 364 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 365 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 366 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 367 - MBORS
OK   UME::SIMD::SIMD16_16i test Id: 368 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 369 - BORVA
OK   UME::SIMD::SIMD16_16i test Id: 370 - BORVA(operator|=)
OK   UME::SIMD::SIMD16_16i test Id: 371 - MBORVA
OK   UME::SIMD::SIMD16_16i test Id: 372 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD16_16i test Id: 373 - BORSA
OK   UME::SIMD::SIMD16_16i test Id: 374 - BORSA(operator|=)
OK   UME::SIMD::SIMD16_16i test Id: 375 - MBORSA
OK   UME::SIMD::SIMD16_16i test Id: 376 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD16_16i test Id: 377 - BXORV
OK   UME::SIMD::SIMD16_16i test Id: 378 - BXORV(operator^
OK   UME::SIMD::SIMD16_16i test Id: 379 - BXORV(function
OK   UME::SIMD::SIMD16_16i test Id: 380 - MBXORV
OK   UME::SIMD::SIMD16_16i test Id: 381 - MBXORV(function)
OK   UME::SIMD::SIMD16_16i test Id: 382 - BXORS
OK   UME::SIMD::SIMD16_16i test Id: 383 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 384 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 385 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 386 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 387 - MBXORS
OK   UME::SIMD::SIMD16_16i test Id: 388 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 389 - BXORVA
OK   UME::SIMD::SIMD16_16i test Id: 390 - BXORVA(operator^=)
OK   UME::SIMD::SIMD16_16i test Id: 391 - MBXORVA
OK   UME::SIMD::SIMD16_16i test Id: 392 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD16_16i test Id: 393 - BXORSA
OK   UME::SIMD::SIMD16_16i test Id: 394 - BXORSA(operator^=)
OK   UME::SIMD::SIMD16_16i test Id: 395 - MBXORSA
OK   UME::SIMD::SIMD16_16i test Id: 396 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD16_16i test Id: 397 - BNOT
OK   UME::SIMD::SIMD16_16i test Id: 398 - BNOT(operator!)
OK   UME::SIMD::SIMD16_16i test Id: 399 - BNOT(function)
OK   UME::SIMD::SIMD16_16i test Id: 400 - MBNOT
OK   UME::SIMD::SIMD16_16i test Id: 401 - MBNOT(function)
OK   UME::SIMD::SIMD16_16i test Id: 402 - BNOTA
OK   UME::SIMD::SIMD16_16i test Id: 403 - MBNOTA
OK   UME::SIMD::SIMD16_16i test Id: 404 - BANDNOTV
OK   UME::SIMD::SIMD16_16i test Id: 405 - BANDNOTV (function)
OK   UME::SIMD::SIMD16_16i test Id: 406 - MBANDNOTV
OK   UME::SIMD::SIMD16_16i test Id: 407 - MBANDNOTV (function)
OK   UME::SIMD::SIMD16_16i test Id: 408 - BANDNOTS
OK   UME::SIMD::SIMD16_16i test Id: 409 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD16_16i test Id: 410 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD16_16i test Id: 411 - MBANDNOTS
OK   UME::SIMD::SIMD16_16i test Id: 412 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD16_16i test Id: 413 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD16_16i test Id: 414 - BANDNOTVA
OK   UME::SIMD::SIMD16_16i test Id: 415 - MBANDNOTVA
OK   UME::SIMD::SIMD16_16i test Id: 416 - BANDNOTSA
OK   UME::SIMD::SIMD16_16i test Id: 417 - MBANDNOTSA
OK   UME::SIMD::SIMD16_16i test Id: 418 - HBAND
OK   UME::SIMD::SIMD16_16i test Id: 419 - HBAND
OK   UME::SIMD::SIMD16_16i test Id: 420 - MHBAND
OK   UME::SIMD::SIMD16_16i test Id: 421 - MHBAND(function)
OK   UME::SIMD::SIMD16_16i test Id: 422 - HBANDS
OK   UME::SIMD::SIMD16_16i test Id: 423 - MHBANDS
OK   UME::SIMD::SIMD16_16i test Id: 424 - HBOR
OK   UME::SIMD::SIMD16_16i test Id: 425 - HBOR(function)
OK   UME::SIMD::SIMD16_16i test Id: 426 - MHBOR
OK   UME::SIMD::SIMD16_16i test Id: 427 - MHBOR(function)
OK   UME::SIMD::SIMD16_16i test Id: 428 - HBORS
OK   UME::SIMD::SIMD16_16i test Id: 429 - MHBORS
OK   UME::SIMD::SIMD16_16i test Id: 430 - HBXOR
OK   UME::SIMD::SIMD16_16i test Id: 431 - HBXOR(function)
OK   UME::SIMD::SIMD16_16i test Id: 432 - MHBXOR
OK   UME::SIMD::SIMD16_16i test Id: 433 - MHBXOR
OK   UME::SIMD::SIMD16_16i test Id: 434 - HBXORS
OK   UME::SIMD::SIMD16_16i test Id: 435 - MHBXORS
OK   UME::SIMD::SIMD16_16i test Id: 436 - GATHERU
OK   UME::SIMD::SIMD16_16i test Id: 437 - MGATHERU
OK   UME::SIMD::SIMD16_16i test Id: 438 - GATHERS
OK   UME::SIMD::SIMD16_16i test Id: 439 - MGATHERS
OK   UME::SIMD::SIMD16_16i test Id: 440 - GATHERV
OK   UME::SIMD::SIMD16_16i test Id: 441 - MGATHERV
OK   UME::SIMD::SIMD16_16i test Id: 442 - SCATTERU
OK   UME::SIMD::SIMD16_16i test Id: 443 - MSCATTERU
OK   UME::SIMD::SIMD16_16i test Id: 444 - SCATTERS
OK   UME::SIMD::SIMD16_16i test Id: 445 - MSCATTERS
OK   UME::SIMD::SIMD16_16i test Id: 446 - SCATTERV
OK   UME::SIMD::SIMD16_16i test Id: 447 - MSCATTERV
OK   UME::SIMD::SIMD16_16i test Id: 448 - LSHV gen
OK   UME::SIMD::SIMD16_16i test Id: 449 - LSHV (function) gen
OK   UME::SIMD::SIMD16_16i test Id: 450 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD16_16i test Id: 451 - MLSHV gen
OK   UME::SIMD::SIMD16_16i test Id: 452 - MLSHV (function) gen
OK   UME::SIMD::SIMD16_16i test Id: 453 - LSHS gen
OK   UME::SIMD::SIMD16_16i test Id: 454 - LSHS (function) gen
OK   UME::SIMD::SIMD16_16i test Id: 455 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD16_16i test Id: 456 - MLSHS gen
OK   UME::SIMD::SIMD16_16i test Id: 457 - MLSHS (function) gen
OK   UME::SIMD::SIMD16_16i test Id: 458 - LSHVA gen
OK   UME::SIMD::SIMD16_16i test Id: 459 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD16_16i test Id: 460 - MLSHVA gen
OK   UME::SIMD::SIMD16_16i test Id: 461 - LSHSA gen
OK   UME::SIMD::SIMD16_16i test Id: 462 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD16_16i test Id: 463 - MLSHSA gen
OK   UME::SIMD::SIMD16_16i test Id: 464 - RSHV gen
OK   UME::SIMD::SIMD16_16i test Id: 465 - RSHV (function) gen
OK   UME::SIMD::SIMD16_16i test Id: 466 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD16_16i test Id: 467 - MRSHV gen
OK   UME::SIMD::SIMD16_16i test Id: 468 - MRSHV (function) gen
OK   UME::SIMD::SIMD16_16i test Id: 469 - RSHS gen
OK   UME::SIMD::SIMD16_16i test Id: 470 - RSHS (function) gen
OK   UME::SIMD::SIMD16_16i test Id: 471 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD16_16i test Id: 472 - MRSHS gen
OK   UME::SIMD::SIMD16_16i test Id: 473 - MRSHS (function) gen
OK   UME::SIMD::SIMD16_16i test Id: 474 - RSHVA gen
OK   UME::SIMD::SIMD16_16i test Id: 475 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD16_16i test Id: 476 - MRSHVA gen
OK   UME::SIMD::SIMD16_16i test Id: 477 - RSHSA gen
OK   UME::SIMD::SIMD16_16i test Id: 478 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD16_16i test Id: 479 - MRSHSA gen
OK   UME::SIMD::SIMD16_16i test Id: 480 - ROLV
OK   UME::SIMD::SIMD16_16i test Id: 481 - ROLV(function)
OK   UME::SIMD::SIMD16_16i test Id: 482 - MROLV
OK   UME::SIMD::SIMD16_16i test Id: 483 - MROLV(function)
OK   UME::SIMD::SIMD16_16i test Id: 484 - ROLS
OK   UME::SIMD::SIMD16_16i test Id: 485 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 486 - MROLS
OK   UME::SIMD::SIMD16_16i test Id: 487 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 488 - ROLVA
OK   UME::SIMD::SIMD16_16i test Id: 489 - MROLVA
OK   UME::SIMD::SIMD16_16i test Id: 490 - ROLSA
OK   UME::SIMD::SIMD16_16i test Id: 491 - MROLSA
OK   UME::SIMD::SIMD16_16i test Id: 492 - RORV
OK   UME::SIMD::SIMD16_16i test Id: 493 - RORV(function)
OK   UME::SIMD::SIMD16_16i test Id: 494 - MRORV
OK   UME::SIMD::SIMD16_16i test Id: 495 - MRORV(function)
OK   UME::SIMD::SIMD16_16i test Id: 496 - RORS
OK   UME::SIMD::SIMD16_16i test Id: 497 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 498 - MRORS
OK   UME::SIMD::SIMD16_16i test Id: 499 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_16i test Id: 500 - RORVA
OK   UME::SIMD::SIMD16_16i test Id: 501 - MRORVA
OK   UME::SIMD::SIMD16_16i test Id: 502 - RORSA
OK   UME::SIMD::SIMD16_16i test Id: 503 - MRORSA
OK   UME::SIMD::SIMD16_16i test Id: 504 - NEG
OK   UME::SIMD::SIMD16_16i test Id: 505 - NEG(operator-)
OK   UME::SIMD::SIMD16_16i test Id: 506 - NEG(function)
OK   UME::SIMD::SIMD16_16i test Id: 507 - MNEG
OK   UME::SIMD::SIMD16_16i test Id: 508 - MNEG(function)
OK   UME::SIMD::SIMD16_16i test Id: 509 - NEGA
OK   UME::SIMD::SIMD16_16i test Id: 510 - MNEGA
OK   UME::SIMD::SIMD16_16i test Id: 511 - ABS
OK   UME::SIMD::SIMD16_16i test Id: 512 - ABS(function)
OK   UME::SIMD::SIMD16_16i test Id: 513 - MABS
OK   UME::SIMD::SIMD16_16i test Id: 514 - MABS(function)
OK   UME::SIMD::SIMD16_16i test Id: 515 - ABSA
OK   UME::SIMD::SIMD16_16i test Id: 516 - MABSA
OK   UME::SIMD::SIMD16_16i test Id: 517 - COPYSIGN gen
OK   UME::SIMD::SIMD16_16i test Id: 518 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD16_16i test Id: 519 - ITOU
OK   UME::SIMD::SIMD16_16i test Id: 520 - PACK
OK   UME::SIMD::SIMD16_16i test Id: 521 - PACKLO
OK   UME::SIMD::SIMD16_16i test Id: 522 - PACKHI
OK   UME::SIMD::SIMD16_16i test Id: 523 - UNPACK
OK   UME::SIMD::SIMD16_16i test Id: 524 - UNPACKLO
OK   UME::SIMD::SIMD16_16i test Id: 525 - UNPACKHi
OK   UME::SIMD::SIMD16_16i test Id: 526 - PROMOTE
OK   UME::SIMD::SIMD16_16i test Id: 527 - DEGRADE
OK   UME::SIMD::SIMD8_32u test Id: 1 - SET-CONSTR gen
OK   UME::SIMD::SIMD8_32u test Id: 2 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD8_32u test Id: 3 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD8_32u test Id: 4 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD8_32u test Id: 5 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD8_32u test Id: 6 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD8_32u test Id: 7 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD8_32u test Id: 8 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD8_32u test Id: 9 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD8_32u test Id: 10 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD8_32u test Id: 11 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD8_32u test Id: 12 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD8_32u test Id: 13 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD8_32u test Id: 14 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD8_32u test Id: 15 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD8_32u test Id: 16 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD8_32u test Id: 17 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD8_32u test Id: 18 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD8_32u test Id: 19 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD8_32u test Id: 20 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD8_32u test Id: 21 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD8_32u test Id: 22 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD8_32u test Id: 23 - INSERT
OK   UME::SIMD::SIMD8_32u test Id: 24 - INSERT(operator[] =)
OK   UME::SIMD::SIMD8_32u test Id: 25 - EXTRACT
OK   UME::SIMD::SIMD8_32u test Id: 26 - EXTRACT(operator[])
OK   UME::SIMD::SIMD8_32u test Id: 27 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD8_32u test Id: 28 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD8_32u test Id: 29 - ASSIGNV
OK   UME::SIMD::SIMD8_32u test Id: 30 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD8_32u test Id: 31 - MASSIGNV
OK   UME::SIMD::SIMD8_32u test Id: 32 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD8_32u test Id: 33 - ASSIGNS
OK   UME::SIMD::SIMD8_32u test Id: 34 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD8_32u test Id: 35 - MASSIGNS
OK   UME::SIMD::SIMD8_32u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD8_32u test Id: 37 - LOAD/STORE
OK   UME::SIMD::SIMD8_32u test Id: 38 - MLOAD
OK   UME::SIMD::SIMD8_32u test Id: 39 - MSTORE
OK   UME::SIMD::SIMD8_32u test Id: 40 - LOADA/STOREA
OK   UME::SIMD::SIMD8_32u test Id: 41 - MLOADA
OK   UME::SIMD::SIMD8_32u test Id: 42 - MSTOREA
OK   UME::SIMD::SIMD8_32u test Id: 43 - SWIZZLE
OK   UME::SIMD::SIMD8_32u test Id: 44 - SORTA
OK   UME::SIMD::SIMD8_32u test Id: 45 - SORTD
OK   UME::SIMD::SIMD8_32u test Id: 46 - BLENDV gen
OK   UME::SIMD::SIMD8_32u test Id: 47 - ADDV
OK   UME::SIMD::SIMD8_32u test Id: 48 - ADDV(operator+)
OK   UME::SIMD::SIMD8_32u test Id: 49 - ADDV(function)
OK   UME::SIMD::SIMD8_32u test Id: 50 - ADDV gen
OK   UME::SIMD::SIMD8_32u test Id: 51 - ADDV(operator+) gen
OK   UME::SIMD::SIMD8_32u test Id: 52 - ADDV(function) gen
OK   UME::SIMD::SIMD8_32u test Id: 53 - MADDV
OK   UME::SIMD::SIMD8_32u test Id: 54 - MADDV(function)
OK   UME::SIMD::SIMD8_32u test Id: 55 - MADDV gen
OK   UME::SIMD::SIMD8_32u test Id: 56 - MADDV(function) gen
OK   UME::SIMD::SIMD8_32u test Id: 57 - ADDS
OK   UME::SIMD::SIMD8_32u test Id: 58 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 59 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 60 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD8_32u test Id: 61 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD8_32u test Id: 62 - ADDS gen
OK   UME::SIMD::SIMD8_32u test Id: 63 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD8_32u test Id: 64 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD8_32u test Id: 65 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD8_32u test Id: 66 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD8_32u test Id: 67 - MADDS
OK   UME::SIMD::SIMD8_32u test Id: 68 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 69 - MADDS gen
OK   UME::SIMD::SIMD8_32u test Id: 70 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD8_32u test Id: 71 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD8_32u test Id: 72 - ADDVA
OK   UME::SIMD::SIMD8_32u test Id: 73 - ADDVA(operator+=)
OK   UME::SIMD::SIMD8_32u test Id: 74 - ADDVA gen
OK   UME::SIMD::SIMD8_32u test Id: 75 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD8_32u test Id: 76 - MADDVA
OK   UME::SIMD::SIMD8_32u test Id: 77 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD8_32u test Id: 78 - ADDSA
OK   UME::SIMD::SIMD8_32u test Id: 79 - ADDSA(operator+=)
OK   UME::SIMD::SIMD8_32u test Id: 80 - MADDSA
OK   UME::SIMD::SIMD8_32u test Id: 81 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD8_32u test Id: 82 - SADDV gen
OK   UME::SIMD::SIMD8_32u test Id: 83 - SADDV(function) gen
OK   UME::SIMD::SIMD8_32u test Id: 84 - POSTINC
OK   UME::SIMD::SIMD8_32u test Id: 85 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD8_32u test Id: 86 - POSTINC(function)
OK   UME::SIMD::SIMD8_32u test Id: 87 - MPOSTINC
OK   UME::SIMD::SIMD8_32u test Id: 88 - MPOSTINC(function)
OK   UME::SIMD::SIMD8_32u test Id: 89 - PREFINC
OK   UME::SIMD::SIMD8_32u test Id: 90 - PREFINC(operator++())
OK   UME::SIMD::SIMD8_32u test Id: 91 - PREFINC(function)
OK   UME::SIMD::SIMD8_32u test Id: 92 - MPREFINC
OK   UME::SIMD::SIMD8_32u test Id: 93 - MPREFINC(function)
OK   UME::SIMD::SIMD8_32u test Id: 94 - SUBV
OK   UME::SIMD::SIMD8_32u test Id: 95 - SUBV(operator-)
OK   UME::SIMD::SIMD8_32u test Id: 96 - SUBV(function)
OK   UME::SIMD::SIMD8_32u test Id: 97 - SUBV gen
OK   UME::SIMD::SIMD8_32u test Id: 98 - SUBV(operator-) gen
OK   UME::SIMD::SIMD8_32u test Id: 99 - SUBV(function) gen
OK   UME::SIMD::SIMD8_32u test Id: 100 - MSUBV
OK   UME::SIMD::SIMD8_32u test Id: 101 - MSUBV(function)
OK   UME::SIMD::SIMD8_32u test Id: 102 - MSUBV gen
OK   UME::SIMD::SIMD8_32u test Id: 103 - MSUBV(function) gen
OK   UME::SIMD::SIMD8_32u test Id: 104 - SUBS gen
OK   UME::SIMD::SIMD8_32u test Id: 105 - SUBS(operator-) gen
OK   UME::SIMD::SIMD8_32u test Id: 106 - SUBS(function) gen
OK   UME::SIMD::SIMD8_32u test Id: 107 - MSUBS
OK   UME::SIMD::SIMD8_32u test Id: 108 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 109 - SUBVA
OK   UME::SIMD::SIMD8_32u test Id: 110 - SUBVA(operator-=)
OK   UME::SIMD::SIMD8_32u test Id: 111 - MSUBVA
OK   UME::SIMD::SIMD8_32u test Id: 112 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD8_32u test Id: 113 - SUBSA
OK   UME::SIMD::SIMD8_32u test Id: 114 - MSUBSA
OK   UME::SIMD::SIMD8_32u test Id: 115 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD8_32u test Id: 116 - SUBFROMV
OK   UME::SIMD::SIMD8_32u test Id: 117 - MSUBFROMV
OK   UME::SIMD::SIMD8_32u test Id: 118 - SUBFROMS
OK   UME::SIMD::SIMD8_32u test Id: 119 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 120 - MSUBFROMS
OK   UME::SIMD::SIMD8_32u test Id: 121 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 122 - SUBFROMVA
OK   UME::SIMD::SIMD8_32u test Id: 123 - MSUBFROMVA
OK   UME::SIMD::SIMD8_32u test Id: 124 - SUBFROMSA
OK   UME::SIMD::SIMD8_32u test Id: 125 - MSUBFROMSA
OK   UME::SIMD::SIMD8_32u test Id: 126 - POSTDEC
OK   UME::SIMD::SIMD8_32u test Id: 127 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD8_32u test Id: 128 - POSTDEC(function)
OK   UME::SIMD::SIMD8_32u test Id: 129 - MPOSTDEC
OK   UME::SIMD::SIMD8_32u test Id: 130 - MPOSTDEC(function)
OK   UME::SIMD::SIMD8_32u test Id: 131 - PREFDEC
OK   UME::SIMD::SIMD8_32u test Id: 132 - PREFDEC(operator--())
OK   UME::SIMD::SIMD8_32u test Id: 133 - PREFDEC(function)
OK   UME::SIMD::SIMD8_32u test Id: 134 - MPREFDEC
OK   UME::SIMD::SIMD8_32u test Id: 135 - MPREFDEC(function)
OK   UME::SIMD::SIMD8_32u test Id: 136 - MULV
OK   UME::SIMD::SIMD8_32u test Id: 137 - MULV(operator*)
OK   UME::SIMD::SIMD8_32u test Id: 138 - MULV(function)
OK   UME::SIMD::SIMD8_32u test Id: 139 - MMULV
OK   UME::SIMD::SIMD8_32u test Id: 140 - MMULV(function)
OK   UME::SIMD::SIMD8_32u test Id: 141 - MULS
OK   UME::SIMD::SIMD8_32u test Id: 142 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 143 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 144 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 145 - MMULS
OK   UME::SIMD::SIMD8_32u test Id: 146 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 147 - MULVA
OK   UME::SIMD::SIMD8_32u test Id: 148 - MULVA(operator*)
OK   UME::SIMD::SIMD8_32u test Id: 149 - MULVA gen
OK   UME::SIMD::SIMD8_32u test Id: 150 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD8_32u test Id: 151 - MMULVA
OK   UME::SIMD::SIMD8_32u test Id: 152 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_32u test Id: 153 - MULSA
OK   UME::SIMD::SIMD8_32u test Id: 154 - MULSA(operator*=)
OK   UME::SIMD::SIMD8_32u test Id: 155 - MMULSA
OK   UME::SIMD::SIMD8_32u test Id: 156 - DIVV
OK   UME::SIMD::SIMD8_32u test Id: 157 - DIVV(operator/)
OK   UME::SIMD::SIMD8_32u test Id: 158 - DIVV(function)
OK   UME::SIMD::SIMD8_32u test Id: 159 - MDIVV
OK   UME::SIMD::SIMD8_32u test Id: 160 - MDIVV(function)
OK   UME::SIMD::SIMD8_32u test Id: 161 - DIVS
OK   UME::SIMD::SIMD8_32u test Id: 162 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 163 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 164 - MDIVS
OK   UME::SIMD::SIMD8_32u test Id: 165 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 166 - DIVVA
OK   UME::SIMD::SIMD8_32u test Id: 167 - DIVVA(operator/=)
OK   UME::SIMD::SIMD8_32u test Id: 168 - DIVVA gen
OK   UME::SIMD::SIMD8_32u test Id: 169 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD8_32u test Id: 170 - MDIVVA
OK   UME::SIMD::SIMD8_32u test Id: 171 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_32u test Id: 172 - DIVSA
OK   UME::SIMD::SIMD8_32u test Id: 173 - DIVSA(operator/=)
OK   UME::SIMD::SIMD8_32u test Id: 174 - MDIVSA
OK   UME::SIMD::SIMD8_32u test Id: 175 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD8_32u test Id: 176 - RCP
OK   UME::SIMD::SIMD8_32u test Id: 177 - RCP(function)
OK   UME::SIMD::SIMD8_32u test Id: 178 - MRCP
OK   UME::SIMD::SIMD8_32u test Id: 179 - MRCP(function)
OK   UME::SIMD::SIMD8_32u test Id: 180 - RCPS
OK   UME::SIMD::SIMD8_32u test Id: 181 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 182 - RCPS(function)
OK   UME::SIMD::SIMD8_32u test Id: 183 - MRCPS
OK   UME::SIMD::SIMD8_32u test Id: 184 - MRCPS (function)
OK   UME::SIMD::SIMD8_32u test Id: 185 - RCPA
OK   UME::SIMD::SIMD8_32u test Id: 186 - MRCPA
OK   UME::SIMD::SIMD8_32u test Id: 187 - RCPSA
OK   UME::SIMD::SIMD8_32u test Id: 188 - MRCPSA
OK   UME::SIMD::SIMD8_32u test Id: 189 - CMPEQV
OK   UME::SIMD::SIMD8_32u test Id: 190 - CMPEQV(operator==)
OK   UME::SIMD::SIMD8_32u test Id: 191 - CMPEQV(function)
OK   UME::SIMD::SIMD8_32u test Id: 192 - CMPEQS
OK   UME::SIMD::SIMD8_32u test Id: 193 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 194 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 195 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 196 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 197 - CMPNEV
OK   UME::SIMD::SIMD8_32u test Id: 198 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD8_32u test Id: 199 - CMPNEV(function)
OK   UME::SIMD::SIMD8_32u test Id: 200 - CMPNES
OK   UME::SIMD::SIMD8_32u test Id: 201 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 202 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 203 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 204 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 205 - CMPGTV
OK   UME::SIMD::SIMD8_32u test Id: 206 - CMPGTV(operator>)
OK   UME::SIMD::SIMD8_32u test Id: 207 - CMPGTV(function)
OK   UME::SIMD::SIMD8_32u test Id: 208 - CMPGTS
OK   UME::SIMD::SIMD8_32u test Id: 209 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 210 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 211 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 212 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 213 - CMPLTV
OK   UME::SIMD::SIMD8_32u test Id: 214 - CMPLTV(operator<)
OK   UME::SIMD::SIMD8_32u test Id: 215 - CMPLTV(function)
OK   UME::SIMD::SIMD8_32u test Id: 216 - CMPLTS
OK   UME::SIMD::SIMD8_32u test Id: 217 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 218 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 219 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 220 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 221 - CMPGEV
OK   UME::SIMD::SIMD8_32u test Id: 222 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD8_32u test Id: 223 - CMPGEV(function)
OK   UME::SIMD::SIMD8_32u test Id: 224 - CMPGES
OK   UME::SIMD::SIMD8_32u test Id: 225 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 226 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 227 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 228 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 229 - CMPLEV
OK   UME::SIMD::SIMD8_32u test Id: 230 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD8_32u test Id: 231 - CMPLEV(function)
OK   UME::SIMD::SIMD8_32u test Id: 232 - CMPLES
OK   UME::SIMD::SIMD8_32u test Id: 233 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 234 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 235 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 236 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 237 - CMPEV
OK   UME::SIMD::SIMD8_32u test Id: 238 - CMPEV(function)
OK   UME::SIMD::SIMD8_32u test Id: 239 - CMPES
OK   UME::SIMD::SIMD8_32u test Id: 240 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 241 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 242 - HADD
OK   UME::SIMD::SIMD8_32u test Id: 243 - HADD(function)
OK   UME::SIMD::SIMD8_32u test Id: 244 - HADD gen
OK   UME::SIMD::SIMD8_32u test Id: 245 - HADD(function) gen
OK   UME::SIMD::SIMD8_32u test Id: 246 - MHADD gen
OK   UME::SIMD::SIMD8_32u test Id: 247 - MHADD(function) gen
OK   UME::SIMD::SIMD8_32u test Id: 248 - HADDS gen
OK   UME::SIMD::SIMD8_32u test Id: 249 - HADDS(function) gen
OK   UME::SIMD::SIMD8_32u test Id: 250 - MHADD gen
OK   UME::SIMD::SIMD8_32u test Id: 251 - MHADDS(function) gen
OK   UME::SIMD::SIMD8_32u test Id: 252 - HMUL gen
OK   UME::SIMD::SIMD8_32u test Id: 253 - HMUL(function) gen
OK   UME::SIMD::SIMD8_32u test Id: 254 - MHMUL gen
OK   UME::SIMD::SIMD8_32u test Id: 255 - MHMUL(function) gen
OK   UME::SIMD::SIMD8_32u test Id: 256 - HMULS gen
OK   UME::SIMD::SIMD8_32u test Id: 257 - HMULS(function) gen
OK   UME::SIMD::SIMD8_32u test Id: 258 - MHMUL gen
OK   UME::SIMD::SIMD8_32u test Id: 259 - MHMULS(function) gen
OK   UME::SIMD::SIMD8_32u test Id: 260 - FMULADDV
OK   UME::SIMD::SIMD8_32u test Id: 261 - FMULADDV(function)
OK   UME::SIMD::SIMD8_32u test Id: 262 - MFMULADDV
OK   UME::SIMD::SIMD8_32u test Id: 263 - MFMULADDV(function)
OK   UME::SIMD::SIMD8_32u test Id: 264 - FMULSUBV
OK   UME::SIMD::SIMD8_32u test Id: 265 - FMULSUBV(function)
OK   UME::SIMD::SIMD8_32u test Id: 266 - MFMULSUBV
OK   UME::SIMD::SIMD8_32u test Id: 267 - MFMULSUBV(function)
OK   UME::SIMD::SIMD8_32u test Id: 268 - FADDMULV
OK   UME::SIMD::SIMD8_32u test Id: 269 - FADDMULV(function)
OK   UME::SIMD::SIMD8_32u test Id: 270 - MFADDMULV
OK   UME::SIMD::SIMD8_32u test Id: 271 - MFADDMULV(function)
OK   UME::SIMD::SIMD8_32u test Id: 272 - FSUBMULV
OK   UME::SIMD::SIMD8_32u test Id: 273 - FSUBMULV(function)
OK   UME::SIMD::SIMD8_32u test Id: 274 - MFSUBMULV
OK   UME::SIMD::SIMD8_32u test Id: 275 - MFSUBMULV(function)
OK   UME::SIMD::SIMD8_32u test Id: 276 - MAXV
OK   UME::SIMD::SIMD8_32u test Id: 277 - MAXV(function)
OK   UME::SIMD::SIMD8_32u test Id: 278 - MMAXV
OK   UME::SIMD::SIMD8_32u test Id: 279 - MMAXV(function)
OK   UME::SIMD::SIMD8_32u test Id: 280 - MAXS
OK   UME::SIMD::SIMD8_32u test Id: 281 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 282 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 283 - MMAXS
OK   UME::SIMD::SIMD8_32u test Id: 284 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 285 - MAXVA
OK   UME::SIMD::SIMD8_32u test Id: 286 - MMAXVA
OK   UME::SIMD::SIMD8_32u test Id: 287 - MAXSA
OK   UME::SIMD::SIMD8_32u test Id: 288 - MMAXSA
OK   UME::SIMD::SIMD8_32u test Id: 289 - MINV
OK   UME::SIMD::SIMD8_32u test Id: 290 - MINV(function)
OK   UME::SIMD::SIMD8_32u test Id: 291 - MMINV
OK   UME::SIMD::SIMD8_32u test Id: 292 - MMINV(function)
OK   UME::SIMD::SIMD8_32u test Id: 293 - MINS
OK   UME::SIMD::SIMD8_32u test Id: 294 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD8_32u test Id: 295 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD8_32u test Id: 296 - MMINS
OK   UME::SIMD::SIMD8_32u test Id: 297 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 298 - MINVA
OK   UME::SIMD::SIMD8_32u test Id: 299 - MMINVA
OK   UME::SIMD::SIMD8_32u test Id: 300 - MINSA
OK   UME::SIMD::SIMD8_32u test Id: 301 - MMINSA
OK   UME::SIMD::SIMD8_32u test Id: 302 - HMAX
OK   UME::SIMD::SIMD8_32u test Id: 303 - HMAX(function)
OK   UME::SIMD::SIMD8_32u test Id: 304 - HMAX
OK   UME::SIMD::SIMD8_32u test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD8_32u test Id: 306 - MHMAX
OK   UME::SIMD::SIMD8_32u test Id: 307 - MHMAX(function)
OK   UME::SIMD::SIMD8_32u test Id: 308 - IMAX
OK   UME::SIMD::SIMD8_32u test Id: 309 - IMAX(function)
OK   UME::SIMD::SIMD8_32u test Id: 310 - MIMAX
OK   UME::SIMD::SIMD8_32u test Id: 311 - MIMAX(function)
OK   UME::SIMD::SIMD8_32u test Id: 312 - HMIN
OK   UME::SIMD::SIMD8_32u test Id: 313 - HMIN(function)
OK   UME::SIMD::SIMD8_32u test Id: 314 - HMIN
OK   UME::SIMD::SIMD8_32u test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD8_32u test Id: 316 - MHMIN gen
OK   UME::SIMD::SIMD8_32u test Id: 317 - MHMIN(function) gen
OK   UME::SIMD::SIMD8_32u test Id: 318 - IMIN
OK   UME::SIMD::SIMD8_32u test Id: 319 - IMIN(function)
OK   UME::SIMD::SIMD8_32u test Id: 320 - MIMIN
OK   UME::SIMD::SIMD8_32u test Id: 321 - MIMIN(function)
OK   UME::SIMD::SIMD8_32u test Id: 322 - REMV gen
OK   UME::SIMD::SIMD8_32u test Id: 323 - REMV(operator%) gen
OK   UME::SIMD::SIMD8_32u test Id: 324 - REMV(function) gen
OK   UME::SIMD::SIMD8_32u test Id: 325 - MREMV gen
OK   UME::SIMD::SIMD8_32u test Id: 326 - MREMV(function) gen
OK   UME::SIMD::SIMD8_32u test Id: 327 - REMS gen
OK   UME::SIMD::SIMD8_32u test Id: 328 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD8_32u test Id: 329 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD8_32u test Id: 330 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD8_32u test Id: 331 - LANDV gen
OK   UME::SIMD::SIMD8_32u test Id: 332 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD8_32u test Id: 333 - LORV gen
OK   UME::SIMD::SIMD8_32u test Id: 334 - LORV gen (operator ||)
OK   UME::SIMD::SIMD8_32u test Id: 335 - BANDV
OK   UME::SIMD::SIMD8_32u test Id: 336 - BANDV(operator&)
OK   UME::SIMD::SIMD8_32u test Id: 337 - BANDV(function)
OK   UME::SIMD::SIMD8_32u test Id: 338 - MBANDV
OK   UME::SIMD::SIMD8_32u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD8_32u test Id: 340 - BANDS
OK   UME::SIMD::SIMD8_32u test Id: 341 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 342 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 343 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 344 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 345 - MBANDS
OK   UME::SIMD::SIMD8_32u test Id: 346 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 347 - BANDVA
OK   UME::SIMD::SIMD8_32u test Id: 348 - MBANDVA
OK   UME::SIMD::SIMD8_32u test Id: 349 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD8_32u test Id: 350 - BANDSA
OK   UME::SIMD::SIMD8_32u test Id: 351 - MBANDSA
OK   UME::SIMD::SIMD8_32u test Id: 352 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD8_32u test Id: 353 - BORV
OK   UME::SIMD::SIMD8_32u test Id: 354 - BORV(operator |)
OK   UME::SIMD::SIMD8_32u test Id: 355 - BORV(function)
OK   UME::SIMD::SIMD8_32u test Id: 356 - MBORV
OK   UME::SIMD::SIMD8_32u test Id: 357 - MBORV(function)
OK   UME::SIMD::SIMD8_32u test Id: 358 - BORS
OK   UME::SIMD::SIMD8_32u test Id: 359 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 360 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 361 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 362 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 363 - MBORS
OK   UME::SIMD::SIMD8_32u test Id: 364 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 365 - BORVA
OK   UME::SIMD::SIMD8_32u test Id: 366 - BORVA(operator|=)
OK   UME::SIMD::SIMD8_32u test Id: 367 - MBORVA
OK   UME::SIMD::SIMD8_32u test Id: 368 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD8_32u test Id: 369 - BORSA
OK   UME::SIMD::SIMD8_32u test Id: 370 - BORSA(operator|=)
OK   UME::SIMD::SIMD8_32u test Id: 371 - MBORSA
OK   UME::SIMD::SIMD8_32u test Id: 372 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD8_32u test Id: 373 - BXORV
OK   UME::SIMD::SIMD8_32u test Id: 374 - BXORV(operator^
OK   UME::SIMD::SIMD8_32u test Id: 375 - BXORV(function
OK   UME::SIMD::SIMD8_32u test Id: 376 - MBXORV
OK   UME::SIMD::SIMD8_32u test Id: 377 - MBXORV(function)
OK   UME::SIMD::SIMD8_32u test Id: 378 - BXORS
OK   UME::SIMD::SIMD8_32u test Id: 379 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 380 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 381 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 382 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 383 - MBXORS
OK   UME::SIMD::SIMD8_32u test Id: 384 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 385 - BXORVA
OK   UME::SIMD::SIMD8_32u test Id: 386 - BXORVA(operator^=)
OK   UME::SIMD::SIMD8_32u test Id: 387 - MBXORVA
OK   UME::SIMD::SIMD8_32u test Id: 388 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD8_32u test Id: 389 - BXORSA
OK   UME::SIMD::SIMD8_32u test Id: 390 - BXORSA(operator^=)
OK   UME::SIMD::SIMD8_32u test Id: 391 - MBXORSA
OK   UME::SIMD::SIMD8_32u test Id: 392 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD8_32u test Id: 393 - BNOT
OK   UME::SIMD::SIMD8_32u test Id: 394 - BNOT(operator!)
OK   UME::SIMD::SIMD8_32u test Id: 395 - BNOT(function)
OK   UME::SIMD::SIMD8_32u test Id: 396 - MBNOT
OK   UME::SIMD::SIMD8_32u test Id: 397 - MBNOT(function)
OK   UME::SIMD::SIMD8_32u test Id: 398 - BNOTA
OK   UME::SIMD::SIMD8_32u test Id: 399 - MBNOTA
OK   UME::SIMD::SIMD8_32u test Id: 400 - BANDNOTV
OK   UME::SIMD::SIMD8_32u test Id: 401 - BANDNOTV (function)
OK   UME::SIMD::SIMD8_32u test Id: 402 - MBANDNOTV
OK   UME::SIMD::SIMD8_32u test Id: 403 - MBANDNOTV (function)
OK   UME::SIMD::SIMD8_32u test Id: 404 - BANDNOTS
OK   UME::SIMD::SIMD8_32u test Id: 405 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD8_32u test Id: 406 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD8_32u test Id: 407 - MBANDNOTS
OK   UME::SIMD::SIMD8_32u test Id: 408 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD8_32u test Id: 409 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD8_32u test Id: 410 - BANDNOTVA
OK   UME::SIMD::SIMD8_32u test Id: 411 - MBANDNOTVA
OK   UME::SIMD::SIMD8_32u test Id: 412 - BANDNOTSA
OK   UME::SIMD::SIMD8_32u test Id: 413 - MBANDNOTSA
OK   UME::SIMD::SIMD8_32u test Id: 414 - HBAND
OK   UME::SIMD::SIMD8_32u test Id: 415 - HBAND
OK   UME::SIMD::SIMD8_32u test Id: 416 - MHBAND
OK   UME::SIMD::SIMD8_32u test Id: 417 - MHBAND(function)
OK   UME::SIMD::SIMD8_32u test Id: 418 - HBANDS
OK   UME::SIMD::SIMD8_32u test Id: 419 - MHBANDS
OK   UME::SIMD::SIMD8_32u test Id: 420 - HBOR
OK   UME::SIMD::SIMD8_32u test Id: 421 - HBOR(function)
OK   UME::SIMD::SIMD8_32u test Id: 422 - MHBOR
OK   UME::SIMD::SIMD8_32u test Id: 423 - MHBOR(function)
OK   UME::SIMD::SIMD8_32u test Id: 424 - HBORS
OK   UME::SIMD::SIMD8_32u test Id: 425 - MHBORS
OK   UME::SIMD::SIMD8_32u test Id: 426 - HBXOR
OK   UME::SIMD::SIMD8_32u test Id: 427 - HBXOR(function)
OK   UME::SIMD::SIMD8_32u test Id: 428 - MHBXOR
OK   UME::SIMD::SIMD8_32u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD8_32u test Id: 430 - HBXORS
OK   UME::SIMD::SIMD8_32u test Id: 431 - MHBXORS
OK   UME::SIMD::SIMD8_32u test Id: 432 - GATHERU
OK   UME::SIMD::SIMD8_32u test Id: 433 - MGATHERU
OK   UME::SIMD::SIMD8_32u test Id: 434 - GATHERS
OK   UME::SIMD::SIMD8_32u test Id: 435 - MGATHERS
OK   UME::SIMD::SIMD8_32u test Id: 436 - GATHERV
OK   UME::SIMD::SIMD8_32u test Id: 437 - MGATHERV
OK   UME::SIMD::SIMD8_32u test Id: 438 - SCATTERU
OK   UME::SIMD::SIMD8_32u test Id: 439 - MSCATTERU
OK   UME::SIMD::SIMD8_32u test Id: 440 - SCATTERS
OK   UME::SIMD::SIMD8_32u test Id: 441 - MSCATTERS
OK   UME::SIMD::SIMD8_32u test Id: 442 - SCATTERV
OK   UME::SIMD::SIMD8_32u test Id: 443 - MSCATTERV
OK   UME::SIMD::SIMD8_32u test Id: 444 - LSHV gen
OK   UME::SIMD::SIMD8_32u test Id: 445 - LSHV (function) gen
OK   UME::SIMD::SIMD8_32u test Id: 446 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD8_32u test Id: 447 - MLSHV gen
OK   UME::SIMD::SIMD8_32u test Id: 448 - MLSHV (function) gen
OK   UME::SIMD::SIMD8_32u test Id: 449 - LSHS gen
OK   UME::SIMD::SIMD8_32u test Id: 450 - LSHS (function) gen
OK   UME::SIMD::SIMD8_32u test Id: 451 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD8_32u test Id: 452 - MLSHS gen
OK   UME::SIMD::SIMD8_32u test Id: 453 - MLSHS (function) gen
OK   UME::SIMD::SIMD8_32u test Id: 454 - LSHVA gen
OK   UME::SIMD::SIMD8_32u test Id: 455 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD8_32u test Id: 456 - MLSHVA gen
OK   UME::SIMD::SIMD8_32u test Id: 457 - LSHSA gen
OK   UME::SIMD::SIMD8_32u test Id: 458 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD8_32u test Id: 459 - MLSHSA gen
OK   UME::SIMD::SIMD8_32u test Id: 460 - RSHV gen
OK   UME::SIMD::SIMD8_32u test Id: 461 - RSHV (function) gen
OK   UME::SIMD::SIMD8_32u test Id: 462 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD8_32u test Id: 463 - MRSHV gen
OK   UME::SIMD::SIMD8_32u test Id: 464 - MRSHV (function) gen
OK   UME::SIMD::SIMD8_32u test Id: 465 - RSHS gen
OK   UME::SIMD::SIMD8_32u test Id: 466 - RSHS (function) gen
OK   UME::SIMD::SIMD8_32u test Id: 467 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD8_32u test Id: 468 - MRSHS gen
OK   UME::SIMD::SIMD8_32u test Id: 469 - MRSHS (function) gen
OK   UME::SIMD::SIMD8_32u test Id: 470 - RSHVA gen
OK   UME::SIMD::SIMD8_32u test Id: 471 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD8_32u test Id: 472 - MRSHVA gen
OK   UME::SIMD::SIMD8_32u test Id: 473 - RSHSA gen
OK   UME::SIMD::SIMD8_32u test Id: 474 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD8_32u test Id: 475 - MRSHSA gen
OK   UME::SIMD::SIMD8_32u test Id: 476 - ROLV
OK   UME::SIMD::SIMD8_32u test Id: 477 - ROLV(function)
OK   UME::SIMD::SIMD8_32u test Id: 478 - MROLV
OK   UME::SIMD::SIMD8_32u test Id: 479 - MROLV(function)
OK   UME::SIMD::SIMD8_32u test Id: 480 - ROLS
OK   UME::SIMD::SIMD8_32u test Id: 481 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 482 - MROLS
OK   UME::SIMD::SIMD8_32u test Id: 483 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 484 - ROLVA
OK   UME::SIMD::SIMD8_32u test Id: 485 - MROLVA
OK   UME::SIMD::SIMD8_32u test Id: 486 - ROLSA
OK   UME::SIMD::SIMD8_32u test Id: 487 - MROLSA
OK   UME::SIMD::SIMD8_32u test Id: 488 - RORV
OK   UME::SIMD::SIMD8_32u test Id: 489 - RORV(function)
OK   UME::SIMD::SIMD8_32u test Id: 490 - MRORV
OK   UME::SIMD::SIMD8_32u test Id: 491 - MRORV(function)
OK   UME::SIMD::SIMD8_32u test Id: 492 - RORS
OK   UME::SIMD::SIMD8_32u test Id: 493 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 494 - MRORS
OK   UME::SIMD::SIMD8_32u test Id: 495 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32u test Id: 496 - RORVA
OK   UME::SIMD::SIMD8_32u test Id: 497 - MRORVA
OK   UME::SIMD::SIMD8_32u test Id: 498 - RORSA
OK   UME::SIMD::SIMD8_32u test Id: 499 - MRORSA
OK   UME::SIMD::SIMD8_32u test Id: 500 - UTOI
OK   UME::SIMD::SIMD8_32u test Id: 501 - UTOF
OK   UME::SIMD::SIMD8_32u test Id: 502 - PACK
OK   UME::SIMD::SIMD8_32u test Id: 503 - PACKLO
OK   UME::SIMD::SIMD8_32u test Id: 504 - PACKHI
OK   UME::SIMD::SIMD8_32u test Id: 505 - UNPACK
OK   UME::SIMD::SIMD8_32u test Id: 506 - UNPACKLO
OK   UME::SIMD::SIMD8_32u test Id: 507 - UNPACKHi
OK   UME::SIMD::SIMD8_32u test Id: 508 - PROMOTE
OK   UME::SIMD::SIMD8_32u test Id: 509 - DEGRADE
OK   UME::SIMD::SIMD8_32u test Id: 510 - ZERO-CONSTR
OK   UME::SIMD::SIMD8_32u test Id: 511 - FULL-CONSTR
OK   UME::SIMD::SIMD8_32u test Id: 512 - ADDVA
OK   UME::SIMD::SIMD8_32u test Id: 513 - ADDVA(operator+=)
OK   UME::SIMD::SIMD8_32u test Id: 514 - MADDVA
OK   UME::SIMD::SIMD8_32u test Id: 515 - ADDSA
OK   UME::SIMD::SIMD8_32u test Id: 516 - MADDSA
OK   UME::SIMD::SIMD8_32u test Id: 517 - MULV
OK   UME::SIMD::SIMD8_32u test Id: 518 - MULV(operator*)
OK   UME::SIMD::SIMD8_32u test Id: 519 - MMULV
OK   UME::SIMD::SIMD8_32u test Id: 520 - MULS
OK   UME::SIMD::SIMD8_32u test Id: 521 - MMULS
OK   UME::SIMD::SIMD8_32u test Id: 522 - CMPEQV
OK   UME::SIMD::SIMD8_32u test Id: 523 - CMPEQV(operator==)
OK   UME::SIMD::SIMD8_32u test Id: 524 - CMPEQS
OK   UME::SIMD::SIMD8_32u test Id: 525 - GATHER
OK   UME::SIMD::SIMD8_32u test Id: 526 - MGATHER
OK   UME::SIMD::SIMD8_32u test Id: 527 - GATHERV
OK   UME::SIMD::SIMD8_32u test Id: 528 - MGATHERV
OK   UME::SIMD::SIMD8_32u test Id: 529 - SCATTER
OK   UME::SIMD::SIMD8_32u test Id: 530 - MSCATTER
OK   UME::SIMD::SIMD8_32u test Id: 531 - SCATTERV
OK   UME::SIMD::SIMD8_32u test Id: 532 - MSCATTERV
OK   UME::SIMD::SIMD8_32i test Id: 1 - SET-CONSTR gen
OK   UME::SIMD::SIMD8_32i test Id: 2 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD8_32i test Id: 3 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD8_32i test Id: 4 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD8_32i test Id: 5 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD8_32i test Id: 6 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD8_32i test Id: 7 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD8_32i test Id: 8 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD8_32i test Id: 9 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD8_32i test Id: 10 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD8_32i test Id: 11 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD8_32i test Id: 12 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD8_32i test Id: 13 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD8_32i test Id: 14 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD8_32i test Id: 15 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD8_32i test Id: 16 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD8_32i test Id: 17 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD8_32i test Id: 18 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD8_32i test Id: 19 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD8_32i test Id: 20 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD8_32i test Id: 21 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD8_32i test Id: 22 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD8_32i test Id: 23 - INSERT
OK   UME::SIMD::SIMD8_32i test Id: 24 - INSERT(operator[] =)
OK   UME::SIMD::SIMD8_32i test Id: 25 - EXTRACT
OK   UME::SIMD::SIMD8_32i test Id: 26 - EXTRACT(operator[])
OK   UME::SIMD::SIMD8_32i test Id: 27 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD8_32i test Id: 28 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD8_32i test Id: 29 - ASSIGNV
OK   UME::SIMD::SIMD8_32i test Id: 30 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD8_32i test Id: 31 - MASSIGNV
OK   UME::SIMD::SIMD8_32i test Id: 32 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD8_32i test Id: 33 - ASSIGNS
OK   UME::SIMD::SIMD8_32i test Id: 34 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD8_32i test Id: 35 - MASSIGNS
OK   UME::SIMD::SIMD8_32i test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD8_32i test Id: 37 - LOAD/STORE
OK   UME::SIMD::SIMD8_32i test Id: 38 - MLOAD
OK   UME::SIMD::SIMD8_32i test Id: 39 - MSTORE
OK   UME::SIMD::SIMD8_32i test Id: 40 - LOADA/STOREA
OK   UME::SIMD::SIMD8_32i test Id: 41 - MLOADA
OK   UME::SIMD::SIMD8_32i test Id: 42 - MSTOREA
OK   UME::SIMD::SIMD8_32i test Id: 43 - SWIZZLE
OK   UME::SIMD::SIMD8_32i test Id: 44 - SORTA
OK   UME::SIMD::SIMD8_32i test Id: 45 - SORTD
OK   UME::SIMD::SIMD8_32i test Id: 46 - BLENDV gen
OK   UME::SIMD::SIMD8_32i test Id: 47 - ADDV
OK   UME::SIMD::SIMD8_32i test Id: 48 - ADDV(operator+)
OK   UME::SIMD::SIMD8_32i test Id: 49 - ADDV(function)
OK   UME::SIMD::SIMD8_32i test Id: 50 - ADDV gen
OK   UME::SIMD::SIMD8_32i test Id: 51 - ADDV(operator+) gen
OK   UME::SIMD::SIMD8_32i test Id: 52 - ADDV(function) gen
OK   UME::SIMD::SIMD8_32i test Id: 53 - MADDV
OK   UME::SIMD::SIMD8_32i test Id: 54 - MADDV(function)
OK   UME::SIMD::SIMD8_32i test Id: 55 - MADDV gen
OK   UME::SIMD::SIMD8_32i test Id: 56 - MADDV(function) gen
OK   UME::SIMD::SIMD8_32i test Id: 57 - ADDS
OK   UME::SIMD::SIMD8_32i test Id: 58 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 59 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 60 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD8_32i test Id: 61 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD8_32i test Id: 62 - ADDS gen
OK   UME::SIMD::SIMD8_32i test Id: 63 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD8_32i test Id: 64 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD8_32i test Id: 65 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD8_32i test Id: 66 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD8_32i test Id: 67 - MADDS
OK   UME::SIMD::SIMD8_32i test Id: 68 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 69 - MADDS gen
OK   UME::SIMD::SIMD8_32i test Id: 70 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD8_32i test Id: 71 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD8_32i test Id: 72 - ADDVA
OK   UME::SIMD::SIMD8_32i test Id: 73 - ADDVA(operator+=)
OK   UME::SIMD::SIMD8_32i test Id: 74 - ADDVA gen
OK   UME::SIMD::SIMD8_32i test Id: 75 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD8_32i test Id: 76 - MADDVA
OK   UME::SIMD::SIMD8_32i test Id: 77 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD8_32i test Id: 78 - ADDSA
OK   UME::SIMD::SIMD8_32i test Id: 79 - ADDSA(operator+=)
OK   UME::SIMD::SIMD8_32i test Id: 80 - MADDSA
OK   UME::SIMD::SIMD8_32i test Id: 81 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD8_32i test Id: 82 - SADDV gen
OK   UME::SIMD::SIMD8_32i test Id: 83 - SADDV(function) gen
OK   UME::SIMD::SIMD8_32i test Id: 84 - POSTINC
OK   UME::SIMD::SIMD8_32i test Id: 85 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD8_32i test Id: 86 - POSTINC(function)
OK   UME::SIMD::SIMD8_32i test Id: 87 - MPOSTINC
OK   UME::SIMD::SIMD8_32i test Id: 88 - MPOSTINC(function)
OK   UME::SIMD::SIMD8_32i test Id: 89 - PREFINC
OK   UME::SIMD::SIMD8_32i test Id: 90 - PREFINC(operator++())
OK   UME::SIMD::SIMD8_32i test Id: 91 - PREFINC(function)
OK   UME::SIMD::SIMD8_32i test Id: 92 - MPREFINC
OK   UME::SIMD::SIMD8_32i test Id: 93 - MPREFINC(function)
OK   UME::SIMD::SIMD8_32i test Id: 94 - SUBV
OK   UME::SIMD::SIMD8_32i test Id: 95 - SUBV(operator-)
OK   UME::SIMD::SIMD8_32i test Id: 96 - SUBV(function)
OK   UME::SIMD::SIMD8_32i test Id: 97 - SUBV gen
OK   UME::SIMD::SIMD8_32i test Id: 98 - SUBV(operator-) gen
OK   UME::SIMD::SIMD8_32i test Id: 99 - SUBV(function) gen
OK   UME::SIMD::SIMD8_32i test Id: 100 - MSUBV
OK   UME::SIMD::SIMD8_32i test Id: 101 - MSUBV(function)
OK   UME::SIMD::SIMD8_32i test Id: 102 - MSUBV gen
OK   UME::SIMD::SIMD8_32i test Id: 103 - MSUBV(function) gen
OK   UME::SIMD::SIMD8_32i test Id: 104 - SUBS gen
OK   UME::SIMD::SIMD8_32i test Id: 105 - SUBS(operator-) gen
OK   UME::SIMD::SIMD8_32i test Id: 106 - SUBS(function) gen
OK   UME::SIMD::SIMD8_32i test Id: 107 - MSUBS
OK   UME::SIMD::SIMD8_32i test Id: 108 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 109 - SUBVA
OK   UME::SIMD::SIMD8_32i test Id: 110 - SUBVA(operator-=)
OK   UME::SIMD::SIMD8_32i test Id: 111 - MSUBVA
OK   UME::SIMD::SIMD8_32i test Id: 112 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD8_32i test Id: 113 - SUBSA
OK   UME::SIMD::SIMD8_32i test Id: 114 - MSUBSA
OK   UME::SIMD::SIMD8_32i test Id: 115 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD8_32i test Id: 116 - SUBFROMV
OK   UME::SIMD::SIMD8_32i test Id: 117 - MSUBFROMV
OK   UME::SIMD::SIMD8_32i test Id: 118 - SUBFROMS
OK   UME::SIMD::SIMD8_32i test Id: 119 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 120 - MSUBFROMS
OK   UME::SIMD::SIMD8_32i test Id: 121 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 122 - SUBFROMVA
OK   UME::SIMD::SIMD8_32i test Id: 123 - MSUBFROMVA
OK   UME::SIMD::SIMD8_32i test Id: 124 - SUBFROMSA
OK   UME::SIMD::SIMD8_32i test Id: 125 - MSUBFROMSA
OK   UME::SIMD::SIMD8_32i test Id: 126 - POSTDEC
OK   UME::SIMD::SIMD8_32i test Id: 127 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD8_32i test Id: 128 - POSTDEC(function)
OK   UME::SIMD::SIMD8_32i test Id: 129 - MPOSTDEC
OK   UME::SIMD::SIMD8_32i test Id: 130 - MPOSTDEC(function)
OK   UME::SIMD::SIMD8_32i test Id: 131 - PREFDEC
OK   UME::SIMD::SIMD8_32i test Id: 132 - PREFDEC(operator--())
OK   UME::SIMD::SIMD8_32i test Id: 133 - PREFDEC(function)
OK   UME::SIMD::SIMD8_32i test Id: 134 - MPREFDEC
OK   UME::SIMD::SIMD8_32i test Id: 135 - MPREFDEC(function)
OK   UME::SIMD::SIMD8_32i test Id: 136 - MULV
OK   UME::SIMD::SIMD8_32i test Id: 137 - MULV(operator*)
OK   UME::SIMD::SIMD8_32i test Id: 138 - MULV(function)
OK   UME::SIMD::SIMD8_32i test Id: 139 - MMULV
OK   UME::SIMD::SIMD8_32i test Id: 140 - MMULV(function)
OK   UME::SIMD::SIMD8_32i test Id: 141 - MULS
OK   UME::SIMD::SIMD8_32i test Id: 142 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 143 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 144 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 145 - MMULS
OK   UME::SIMD::SIMD8_32i test Id: 146 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 147 - MULVA
OK   UME::SIMD::SIMD8_32i test Id: 148 - MULVA(operator*)
OK   UME::SIMD::SIMD8_32i test Id: 149 - MULVA gen
OK   UME::SIMD::SIMD8_32i test Id: 150 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD8_32i test Id: 151 - MMULVA
OK   UME::SIMD::SIMD8_32i test Id: 152 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_32i test Id: 153 - MULSA
OK   UME::SIMD::SIMD8_32i test Id: 154 - MULSA(operator*=)
OK   UME::SIMD::SIMD8_32i test Id: 155 - MMULSA
OK   UME::SIMD::SIMD8_32i test Id: 156 - DIVV
OK   UME::SIMD::SIMD8_32i test Id: 157 - DIVV(operator/)
OK   UME::SIMD::SIMD8_32i test Id: 158 - DIVV(function)
OK   UME::SIMD::SIMD8_32i test Id: 159 - MDIVV
OK   UME::SIMD::SIMD8_32i test Id: 160 - MDIVV(function)
OK   UME::SIMD::SIMD8_32i test Id: 161 - DIVS
OK   UME::SIMD::SIMD8_32i test Id: 162 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 163 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 164 - MDIVS
OK   UME::SIMD::SIMD8_32i test Id: 165 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 166 - DIVVA
OK   UME::SIMD::SIMD8_32i test Id: 167 - DIVVA(operator/=)
OK   UME::SIMD::SIMD8_32i test Id: 168 - DIVVA gen
OK   UME::SIMD::SIMD8_32i test Id: 169 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD8_32i test Id: 170 - MDIVVA
OK   UME::SIMD::SIMD8_32i test Id: 171 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_32i test Id: 172 - DIVSA
OK   UME::SIMD::SIMD8_32i test Id: 173 - DIVSA(operator/=)
OK   UME::SIMD::SIMD8_32i test Id: 174 - MDIVSA
OK   UME::SIMD::SIMD8_32i test Id: 175 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD8_32i test Id: 176 - RCP
OK   UME::SIMD::SIMD8_32i test Id: 177 - RCP(function)
OK   UME::SIMD::SIMD8_32i test Id: 178 - MRCP
OK   UME::SIMD::SIMD8_32i test Id: 179 - MRCP(function)
OK   UME::SIMD::SIMD8_32i test Id: 180 - RCPS
OK   UME::SIMD::SIMD8_32i test Id: 181 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 182 - RCPS(function)
OK   UME::SIMD::SIMD8_32i test Id: 183 - MRCPS
OK   UME::SIMD::SIMD8_32i test Id: 184 - MRCPS (function)
OK   UME::SIMD::SIMD8_32i test Id: 185 - RCPA
OK   UME::SIMD::SIMD8_32i test Id: 186 - MRCPA
OK   UME::SIMD::SIMD8_32i test Id: 187 - RCPSA
OK   UME::SIMD::SIMD8_32i test Id: 188 - MRCPSA
OK   UME::SIMD::SIMD8_32i test Id: 189 - CMPEQV
OK   UME::SIMD::SIMD8_32i test Id: 190 - CMPEQV(operator==)
OK   UME::SIMD::SIMD8_32i test Id: 191 - CMPEQV(function)
OK   UME::SIMD::SIMD8_32i test Id: 192 - CMPEQS
OK   UME::SIMD::SIMD8_32i test Id: 193 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 194 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 195 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 196 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 197 - CMPNEV
OK   UME::SIMD::SIMD8_32i test Id: 198 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD8_32i test Id: 199 - CMPNEV(function)
OK   UME::SIMD::SIMD8_32i test Id: 200 - CMPNES
OK   UME::SIMD::SIMD8_32i test Id: 201 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 202 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 203 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 204 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 205 - CMPGTV
OK   UME::SIMD::SIMD8_32i test Id: 206 - CMPGTV(operator>)
OK   UME::SIMD::SIMD8_32i test Id: 207 - CMPGTV(function)
OK   UME::SIMD::SIMD8_32i test Id: 208 - CMPGTS
OK   UME::SIMD::SIMD8_32i test Id: 209 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 210 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 211 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 212 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 213 - CMPLTV
OK   UME::SIMD::SIMD8_32i test Id: 214 - CMPLTV(operator<)
OK   UME::SIMD::SIMD8_32i test Id: 215 - CMPLTV(function)
OK   UME::SIMD::SIMD8_32i test Id: 216 - CMPLTS
OK   UME::SIMD::SIMD8_32i test Id: 217 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 218 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 219 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 220 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 221 - CMPGEV
OK   UME::SIMD::SIMD8_32i test Id: 222 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD8_32i test Id: 223 - CMPGEV(function)
OK   UME::SIMD::SIMD8_32i test Id: 224 - CMPGES
OK   UME::SIMD::SIMD8_32i test Id: 225 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 226 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 227 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 228 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 229 - CMPLEV
OK   UME::SIMD::SIMD8_32i test Id: 230 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD8_32i test Id: 231 - CMPLEV(function)
OK   UME::SIMD::SIMD8_32i test Id: 232 - CMPLES
OK   UME::SIMD::SIMD8_32i test Id: 233 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 234 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 235 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 236 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 237 - CMPEV
OK   UME::SIMD::SIMD8_32i test Id: 238 - CMPEV(function)
OK   UME::SIMD::SIMD8_32i test Id: 239 - CMPES
OK   UME::SIMD::SIMD8_32i test Id: 240 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 241 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 242 - HADD
OK   UME::SIMD::SIMD8_32i test Id: 243 - HADD(function)
OK   UME::SIMD::SIMD8_32i test Id: 244 - HADD gen
OK   UME::SIMD::SIMD8_32i test Id: 245 - HADD(function) gen
OK   UME::SIMD::SIMD8_32i test Id: 246 - MHADD gen
OK   UME::SIMD::SIMD8_32i test Id: 247 - MHADD(function) gen
OK   UME::SIMD::SIMD8_32i test Id: 248 - HADDS gen
OK   UME::SIMD::SIMD8_32i test Id: 249 - HADDS(function) gen
OK   UME::SIMD::SIMD8_32i test Id: 250 - MHADD gen
OK   UME::SIMD::SIMD8_32i test Id: 251 - MHADDS(function) gen
OK   UME::SIMD::SIMD8_32i test Id: 252 - HMUL gen
OK   UME::SIMD::SIMD8_32i test Id: 253 - HMUL(function) gen
OK   UME::SIMD::SIMD8_32i test Id: 254 - MHMUL gen
OK   UME::SIMD::SIMD8_32i test Id: 255 - MHMUL(function) gen
OK   UME::SIMD::SIMD8_32i test Id: 256 - HMULS gen
OK   UME::SIMD::SIMD8_32i test Id: 257 - HMULS(function) gen
OK   UME::SIMD::SIMD8_32i test Id: 258 - MHMUL gen
OK   UME::SIMD::SIMD8_32i test Id: 259 - MHMULS(function) gen
OK   UME::SIMD::SIMD8_32i test Id: 260 - FMULADDV
OK   UME::SIMD::SIMD8_32i test Id: 261 - FMULADDV(function)
OK   UME::SIMD::SIMD8_32i test Id: 262 - MFMULADDV
OK   UME::SIMD::SIMD8_32i test Id: 263 - MFMULADDV(function)
OK   UME::SIMD::SIMD8_32i test Id: 264 - FMULSUBV
OK   UME::SIMD::SIMD8_32i test Id: 265 - FMULSUBV(function)
OK   UME::SIMD::SIMD8_32i test Id: 266 - MFMULSUBV
OK   UME::SIMD::SIMD8_32i test Id: 267 - MFMULSUBV(function)
OK   UME::SIMD::SIMD8_32i test Id: 268 - FADDMULV
OK   UME::SIMD::SIMD8_32i test Id: 269 - FADDMULV(function)
OK   UME::SIMD::SIMD8_32i test Id: 270 - MFADDMULV
OK   UME::SIMD::SIMD8_32i test Id: 271 - MFADDMULV(function)
OK   UME::SIMD::SIMD8_32i test Id: 272 - FSUBMULV
OK   UME::SIMD::SIMD8_32i test Id: 273 - FSUBMULV(function)
OK   UME::SIMD::SIMD8_32i test Id: 274 - MFSUBMULV
OK   UME::SIMD::SIMD8_32i test Id: 275 - MFSUBMULV(function)
OK   UME::SIMD::SIMD8_32i test Id: 276 - MAXV
OK   UME::SIMD::SIMD8_32i test Id: 277 - MAXV(function)
OK   UME::SIMD::SIMD8_32i test Id: 278 - MMAXV
OK   UME::SIMD::SIMD8_32i test Id: 279 - MMAXV(function)
OK   UME::SIMD::SIMD8_32i test Id: 280 - MAXS
OK   UME::SIMD::SIMD8_32i test Id: 281 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 282 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 283 - MMAXS
OK   UME::SIMD::SIMD8_32i test Id: 284 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 285 - MAXVA
OK   UME::SIMD::SIMD8_32i test Id: 286 - MMAXVA
OK   UME::SIMD::SIMD8_32i test Id: 287 - MAXSA
OK   UME::SIMD::SIMD8_32i test Id: 288 - MMAXSA
OK   UME::SIMD::SIMD8_32i test Id: 289 - MINV
OK   UME::SIMD::SIMD8_32i test Id: 290 - MINV(function)
OK   UME::SIMD::SIMD8_32i test Id: 291 - MMINV
OK   UME::SIMD::SIMD8_32i test Id: 292 - MMINV(function)
OK   UME::SIMD::SIMD8_32i test Id: 293 - MINS
OK   UME::SIMD::SIMD8_32i test Id: 294 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD8_32i test Id: 295 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD8_32i test Id: 296 - MMINS
OK   UME::SIMD::SIMD8_32i test Id: 297 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 298 - MINVA
OK   UME::SIMD::SIMD8_32i test Id: 299 - MMINVA
OK   UME::SIMD::SIMD8_32i test Id: 300 - MINSA
OK   UME::SIMD::SIMD8_32i test Id: 301 - MMINSA
OK   UME::SIMD::SIMD8_32i test Id: 302 - HMAX
OK   UME::SIMD::SIMD8_32i test Id: 303 - HMAX(function)
OK   UME::SIMD::SIMD8_32i test Id: 304 - HMAX
OK   UME::SIMD::SIMD8_32i test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD8_32i test Id: 306 - MHMAX
OK   UME::SIMD::SIMD8_32i test Id: 307 - MHMAX(function)
OK   UME::SIMD::SIMD8_32i test Id: 308 - IMAX
OK   UME::SIMD::SIMD8_32i test Id: 309 - IMAX(function)
OK   UME::SIMD::SIMD8_32i test Id: 310 - MIMAX
OK   UME::SIMD::SIMD8_32i test Id: 311 - MIMAX(function)
OK   UME::SIMD::SIMD8_32i test Id: 312 - HMIN
OK   UME::SIMD::SIMD8_32i test Id: 313 - HMIN(function)
OK   UME::SIMD::SIMD8_32i test Id: 314 - HMIN
OK   UME::SIMD::SIMD8_32i test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD8_32i test Id: 316 - MHMIN gen
OK   UME::SIMD::SIMD8_32i test Id: 317 - MHMIN(function) gen
OK   UME::SIMD::SIMD8_32i test Id: 318 - IMIN
OK   UME::SIMD::SIMD8_32i test Id: 319 - IMIN(function)
OK   UME::SIMD::SIMD8_32i test Id: 320 - MIMIN
OK   UME::SIMD::SIMD8_32i test Id: 321 - MIMIN(function)
OK   UME::SIMD::SIMD8_32i test Id: 322 - REMV gen
OK   UME::SIMD::SIMD8_32i test Id: 323 - REMV(operator%) gen
OK   UME::SIMD::SIMD8_32i test Id: 324 - REMV(function) gen
OK   UME::SIMD::SIMD8_32i test Id: 325 - MREMV gen
OK   UME::SIMD::SIMD8_32i test Id: 326 - MREMV(function) gen
OK   UME::SIMD::SIMD8_32i test Id: 327 - REMS gen
OK   UME::SIMD::SIMD8_32i test Id: 328 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD8_32i test Id: 329 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD8_32i test Id: 330 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD8_32i test Id: 331 - LANDV gen
OK   UME::SIMD::SIMD8_32i test Id: 332 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD8_32i test Id: 333 - LORV gen
OK   UME::SIMD::SIMD8_32i test Id: 334 - LORV gen (operator ||)
OK   UME::SIMD::SIMD8_32i test Id: 335 - BANDV
OK   UME::SIMD::SIMD8_32i test Id: 336 - BANDV(operator&)
OK   UME::SIMD::SIMD8_32i test Id: 337 - BANDV(function)
OK   UME::SIMD::SIMD8_32i test Id: 338 - MBANDV
OK   UME::SIMD::SIMD8_32i test Id: 339 - MBANDV
OK   UME::SIMD::SIMD8_32i test Id: 340 - BANDS
OK   UME::SIMD::SIMD8_32i test Id: 341 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 342 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 343 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 344 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 345 - MBANDS
OK   UME::SIMD::SIMD8_32i test Id: 346 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 347 - BANDVA
OK   UME::SIMD::SIMD8_32i test Id: 348 - MBANDVA
OK   UME::SIMD::SIMD8_32i test Id: 349 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD8_32i test Id: 350 - BANDSA
OK   UME::SIMD::SIMD8_32i test Id: 351 - MBANDSA
OK   UME::SIMD::SIMD8_32i test Id: 352 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD8_32i test Id: 353 - BORV
OK   UME::SIMD::SIMD8_32i test Id: 354 - BORV(operator |)
OK   UME::SIMD::SIMD8_32i test Id: 355 - BORV(function)
OK   UME::SIMD::SIMD8_32i test Id: 356 - MBORV
OK   UME::SIMD::SIMD8_32i test Id: 357 - MBORV(function)
OK   UME::SIMD::SIMD8_32i test Id: 358 - BORS
OK   UME::SIMD::SIMD8_32i test Id: 359 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 360 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 361 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 362 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 363 - MBORS
OK   UME::SIMD::SIMD8_32i test Id: 364 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 365 - BORVA
OK   UME::SIMD::SIMD8_32i test Id: 366 - BORVA(operator|=)
OK   UME::SIMD::SIMD8_32i test Id: 367 - MBORVA
OK   UME::SIMD::SIMD8_32i test Id: 368 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD8_32i test Id: 369 - BORSA
OK   UME::SIMD::SIMD8_32i test Id: 370 - BORSA(operator|=)
OK   UME::SIMD::SIMD8_32i test Id: 371 - MBORSA
OK   UME::SIMD::SIMD8_32i test Id: 372 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD8_32i test Id: 373 - BXORV
OK   UME::SIMD::SIMD8_32i test Id: 374 - BXORV(operator^
OK   UME::SIMD::SIMD8_32i test Id: 375 - BXORV(function
OK   UME::SIMD::SIMD8_32i test Id: 376 - MBXORV
OK   UME::SIMD::SIMD8_32i test Id: 377 - MBXORV(function)
OK   UME::SIMD::SIMD8_32i test Id: 378 - BXORS
OK   UME::SIMD::SIMD8_32i test Id: 379 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 380 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 381 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 382 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 383 - MBXORS
OK   UME::SIMD::SIMD8_32i test Id: 384 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 385 - BXORVA
OK   UME::SIMD::SIMD8_32i test Id: 386 - BXORVA(operator^=)
OK   UME::SIMD::SIMD8_32i test Id: 387 - MBXORVA
OK   UME::SIMD::SIMD8_32i test Id: 388 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD8_32i test Id: 389 - BXORSA
OK   UME::SIMD::SIMD8_32i test Id: 390 - BXORSA(operator^=)
OK   UME::SIMD::SIMD8_32i test Id: 391 - MBXORSA
OK   UME::SIMD::SIMD8_32i test Id: 392 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD8_32i test Id: 393 - BNOT
OK   UME::SIMD::SIMD8_32i test Id: 394 - BNOT(operator!)
OK   UME::SIMD::SIMD8_32i test Id: 395 - BNOT(function)
OK   UME::SIMD::SIMD8_32i test Id: 396 - MBNOT
OK   UME::SIMD::SIMD8_32i test Id: 397 - MBNOT(function)
OK   UME::SIMD::SIMD8_32i test Id: 398 - BNOTA
OK   UME::SIMD::SIMD8_32i test Id: 399 - MBNOTA
OK   UME::SIMD::SIMD8_32i test Id: 400 - BANDNOTV
OK   UME::SIMD::SIMD8_32i test Id: 401 - BANDNOTV (function)
OK   UME::SIMD::SIMD8_32i test Id: 402 - MBANDNOTV
OK   UME::SIMD::SIMD8_32i test Id: 403 - MBANDNOTV (function)
OK   UME::SIMD::SIMD8_32i test Id: 404 - BANDNOTS
OK   UME::SIMD::SIMD8_32i test Id: 405 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD8_32i test Id: 406 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD8_32i test Id: 407 - MBANDNOTS
OK   UME::SIMD::SIMD8_32i test Id: 408 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD8_32i test Id: 409 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD8_32i test Id: 410 - BANDNOTVA
OK   UME::SIMD::SIMD8_32i test Id: 411 - MBANDNOTVA
OK   UME::SIMD::SIMD8_32i test Id: 412 - BANDNOTSA
OK   UME::SIMD::SIMD8_32i test Id: 413 - MBANDNOTSA
OK   UME::SIMD::SIMD8_32i test Id: 414 - HBAND
OK   UME::SIMD::SIMD8_32i test Id: 415 - HBAND
OK   UME::SIMD::SIMD8_32i test Id: 416 - MHBAND
OK   UME::SIMD::SIMD8_32i test Id: 417 - MHBAND(function)
OK   UME::SIMD::SIMD8_32i test Id: 418 - HBANDS
OK   UME::SIMD::SIMD8_32i test Id: 419 - MHBANDS
OK   UME::SIMD::SIMD8_32i test Id: 420 - HBOR
OK   UME::SIMD::SIMD8_32i test Id: 421 - HBOR(function)
OK   UME::SIMD::SIMD8_32i test Id: 422 - MHBOR
OK   UME::SIMD::SIMD8_32i test Id: 423 - MHBOR(function)
OK   UME::SIMD::SIMD8_32i test Id: 424 - HBORS
OK   UME::SIMD::SIMD8_32i test Id: 425 - MHBORS
OK   UME::SIMD::SIMD8_32i test Id: 426 - HBXOR
OK   UME::SIMD::SIMD8_32i test Id: 427 - HBXOR(function)
OK   UME::SIMD::SIMD8_32i test Id: 428 - MHBXOR
OK   UME::SIMD::SIMD8_32i test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD8_32i test Id: 430 - HBXORS
OK   UME::SIMD::SIMD8_32i test Id: 431 - MHBXORS
OK   UME::SIMD::SIMD8_32i test Id: 432 - GATHERU
OK   UME::SIMD::SIMD8_32i test Id: 433 - MGATHERU
OK   UME::SIMD::SIMD8_32i test Id: 434 - GATHERS
OK   UME::SIMD::SIMD8_32i test Id: 435 - MGATHERS
OK   UME::SIMD::SIMD8_32i test Id: 436 - GATHERV
OK   UME::SIMD::SIMD8_32i test Id: 437 - MGATHERV
OK   UME::SIMD::SIMD8_32i test Id: 438 - SCATTERU
OK   UME::SIMD::SIMD8_32i test Id: 439 - MSCATTERU
OK   UME::SIMD::SIMD8_32i test Id: 440 - SCATTERS
OK   UME::SIMD::SIMD8_32i test Id: 441 - MSCATTERS
OK   UME::SIMD::SIMD8_32i test Id: 442 - SCATTERV
OK   UME::SIMD::SIMD8_32i test Id: 443 - MSCATTERV
OK   UME::SIMD::SIMD8_32i test Id: 444 - LSHV gen
OK   UME::SIMD::SIMD8_32i test Id: 445 - LSHV (function) gen
OK   UME::SIMD::SIMD8_32i test Id: 446 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD8_32i test Id: 447 - MLSHV gen
OK   UME::SIMD::SIMD8_32i test Id: 448 - MLSHV (function) gen
OK   UME::SIMD::SIMD8_32i test Id: 449 - LSHS gen
OK   UME::SIMD::SIMD8_32i test Id: 450 - LSHS (function) gen
OK   UME::SIMD::SIMD8_32i test Id: 451 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD8_32i test Id: 452 - MLSHS gen
OK   UME::SIMD::SIMD8_32i test Id: 453 - MLSHS (function) gen
OK   UME::SIMD::SIMD8_32i test Id: 454 - LSHVA gen
OK   UME::SIMD::SIMD8_32i test Id: 455 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD8_32i test Id: 456 - MLSHVA gen
OK   UME::SIMD::SIMD8_32i test Id: 457 - LSHSA gen
OK   UME::SIMD::SIMD8_32i test Id: 458 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD8_32i test Id: 459 - MLSHSA gen
OK   UME::SIMD::SIMD8_32i test Id: 460 - RSHV gen
OK   UME::SIMD::SIMD8_32i test Id: 461 - RSHV (function) gen
OK   UME::SIMD::SIMD8_32i test Id: 462 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD8_32i test Id: 463 - MRSHV gen
OK   UME::SIMD::SIMD8_32i test Id: 464 - MRSHV (function) gen
OK   UME::SIMD::SIMD8_32i test Id: 465 - RSHS gen
OK   UME::SIMD::SIMD8_32i test Id: 466 - RSHS (function) gen
OK   UME::SIMD::SIMD8_32i test Id: 467 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD8_32i test Id: 468 - MRSHS gen
OK   UME::SIMD::SIMD8_32i test Id: 469 - MRSHS (function) gen
OK   UME::SIMD::SIMD8_32i test Id: 470 - RSHVA gen
OK   UME::SIMD::SIMD8_32i test Id: 471 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD8_32i test Id: 472 - MRSHVA gen
OK   UME::SIMD::SIMD8_32i test Id: 473 - RSHSA gen
OK   UME::SIMD::SIMD8_32i test Id: 474 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD8_32i test Id: 475 - MRSHSA gen
OK   UME::SIMD::SIMD8_32i test Id: 476 - ROLV
OK   UME::SIMD::SIMD8_32i test Id: 477 - ROLV(function)
OK   UME::SIMD::SIMD8_32i test Id: 478 - MROLV
OK   UME::SIMD::SIMD8_32i test Id: 479 - MROLV(function)
OK   UME::SIMD::SIMD8_32i test Id: 480 - ROLS
OK   UME::SIMD::SIMD8_32i test Id: 481 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 482 - MROLS
OK   UME::SIMD::SIMD8_32i test Id: 483 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 484 - ROLVA
OK   UME::SIMD::SIMD8_32i test Id: 485 - MROLVA
OK   UME::SIMD::SIMD8_32i test Id: 486 - ROLSA
OK   UME::SIMD::SIMD8_32i test Id: 487 - MROLSA
OK   UME::SIMD::SIMD8_32i test Id: 488 - RORV
OK   UME::SIMD::SIMD8_32i test Id: 489 - RORV(function)
OK   UME::SIMD::SIMD8_32i test Id: 490 - MRORV
OK   UME::SIMD::SIMD8_32i test Id: 491 - MRORV(function)
OK   UME::SIMD::SIMD8_32i test Id: 492 - RORS
OK   UME::SIMD::SIMD8_32i test Id: 493 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 494 - MRORS
OK   UME::SIMD::SIMD8_32i test Id: 495 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32i test Id: 496 - RORVA
OK   UME::SIMD::SIMD8_32i test Id: 497 - MRORVA
OK   UME::SIMD::SIMD8_32i test Id: 498 - RORSA
OK   UME::SIMD::SIMD8_32i test Id: 499 - MRORSA
OK   UME::SIMD::SIMD8_32i test Id: 500 - NEG
OK   UME::SIMD::SIMD8_32i test Id: 501 - NEG(operator-)
OK   UME::SIMD::SIMD8_32i test Id: 502 - NEG(function)
OK   UME::SIMD::SIMD8_32i test Id: 503 - MNEG
OK   UME::SIMD::SIMD8_32i test Id: 504 - MNEG(function)
OK   UME::SIMD::SIMD8_32i test Id: 505 - NEGA
OK   UME::SIMD::SIMD8_32i test Id: 506 - MNEGA
OK   UME::SIMD::SIMD8_32i test Id: 507 - ABS
OK   UME::SIMD::SIMD8_32i test Id: 508 - ABS(function)
OK   UME::SIMD::SIMD8_32i test Id: 509 - MABS
OK   UME::SIMD::SIMD8_32i test Id: 510 - MABS(function)
OK   UME::SIMD::SIMD8_32i test Id: 511 - ABSA
OK   UME::SIMD::SIMD8_32i test Id: 512 - MABSA
OK   UME::SIMD::SIMD8_32i test Id: 513 - COPYSIGN gen
OK   UME::SIMD::SIMD8_32i test Id: 514 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD8_32i test Id: 515 - ITOU
OK   UME::SIMD::SIMD8_32i test Id: 516 - ITOF
OK   UME::SIMD::SIMD8_32i test Id: 517 - PACK
OK   UME::SIMD::SIMD8_32i test Id: 518 - PACKLO
OK   UME::SIMD::SIMD8_32i test Id: 519 - PACKHI
OK   UME::SIMD::SIMD8_32i test Id: 520 - UNPACK
OK   UME::SIMD::SIMD8_32i test Id: 521 - UNPACKLO
OK   UME::SIMD::SIMD8_32i test Id: 522 - UNPACKHi
OK   UME::SIMD::SIMD8_32i test Id: 523 - PROMOTE
OK   UME::SIMD::SIMD8_32i test Id: 524 - DEGRADE
OK   UME::SIMD::SIMD8_32i test Id: 525 - ZERO-CONSTR()
OK   UME::SIMD::SIMD8_32i test Id: 526 - FULL-CONSTR
OK   UME::SIMD::SIMD8_32i test Id: 527 - ASSIGNV
OK   UME::SIMD::SIMD8_32i test Id: 528 - MASSIGNV
OK   UME::SIMD::SIMD8_32i test Id: 529 - ASSIGNS
OK   UME::SIMD::SIMD8_32i test Id: 530 - MASSIGNS
OK   UME::SIMD::SIMD8_32i test Id: 531 - ABS
OK   UME::SIMD::SIMD8_32i test Id: 532 - MABS
OK   UME::SIMD::SIMD8_32f test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD8_32f test Id: 2 - SET-CONSTR
OK   UME::SIMD::SIMD8_32f test Id: 3 - LENGTH
OK   UME::SIMD::SIMD8_32f test Id: 4 - ALIGNMENT
OK   UME::SIMD::SIMD8_32f test Id: 5 - operator=
OK   UME::SIMD::SIMD8_32f test Id: 6 - SET-CONSTR gen
OK   UME::SIMD::SIMD8_32f test Id: 7 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD8_32f test Id: 8 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD8_32f test Id: 9 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD8_32f test Id: 10 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD8_32f test Id: 11 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD8_32f test Id: 12 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD8_32f test Id: 13 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD8_32f test Id: 14 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD8_32f test Id: 15 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD8_32f test Id: 16 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD8_32f test Id: 17 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD8_32f test Id: 18 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD8_32f test Id: 19 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD8_32f test Id: 20 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD8_32f test Id: 21 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD8_32f test Id: 22 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD8_32f test Id: 23 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD8_32f test Id: 24 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD8_32f test Id: 25 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD8_32f test Id: 26 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD8_32f test Id: 27 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD8_32f test Id: 28 - INSERT
OK   UME::SIMD::SIMD8_32f test Id: 29 - INSERT(operator[] =)
OK   UME::SIMD::SIMD8_32f test Id: 30 - EXTRACT
OK   UME::SIMD::SIMD8_32f test Id: 31 - EXTRACT(operator[])
OK   UME::SIMD::SIMD8_32f test Id: 32 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD8_32f test Id: 33 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD8_32f test Id: 34 - ASSIGNV
OK   UME::SIMD::SIMD8_32f test Id: 35 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD8_32f test Id: 36 - MASSIGNV
OK   UME::SIMD::SIMD8_32f test Id: 37 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD8_32f test Id: 38 - ASSIGNS
OK   UME::SIMD::SIMD8_32f test Id: 39 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD8_32f test Id: 40 - MASSIGNS
OK   UME::SIMD::SIMD8_32f test Id: 41 - MASSIGNS
OK   UME::SIMD::SIMD8_32f test Id: 42 - LOAD/STORE
OK   UME::SIMD::SIMD8_32f test Id: 43 - MLOAD
OK   UME::SIMD::SIMD8_32f test Id: 44 - MSTORE
OK   UME::SIMD::SIMD8_32f test Id: 45 - LOADA/STOREA
OK   UME::SIMD::SIMD8_32f test Id: 46 - MLOADA
OK   UME::SIMD::SIMD8_32f test Id: 47 - MSTOREA
OK   UME::SIMD::SIMD8_32f test Id: 48 - SWIZZLE
OK   UME::SIMD::SIMD8_32f test Id: 49 - SORTA
OK   UME::SIMD::SIMD8_32f test Id: 50 - SORTD
OK   UME::SIMD::SIMD8_32f test Id: 51 - BLENDV gen
OK   UME::SIMD::SIMD8_32f test Id: 52 - ADDV
OK   UME::SIMD::SIMD8_32f test Id: 53 - ADDV(operator+)
OK   UME::SIMD::SIMD8_32f test Id: 54 - ADDV(function)
OK   UME::SIMD::SIMD8_32f test Id: 55 - ADDV gen
OK   UME::SIMD::SIMD8_32f test Id: 56 - ADDV(operator+) gen
OK   UME::SIMD::SIMD8_32f test Id: 57 - ADDV(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 58 - MADDV
OK   UME::SIMD::SIMD8_32f test Id: 59 - MADDV(function)
OK   UME::SIMD::SIMD8_32f test Id: 60 - MADDV gen
OK   UME::SIMD::SIMD8_32f test Id: 61 - MADDV(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 62 - ADDS
OK   UME::SIMD::SIMD8_32f test Id: 63 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 64 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 65 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD8_32f test Id: 66 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD8_32f test Id: 67 - ADDS gen
OK   UME::SIMD::SIMD8_32f test Id: 68 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD8_32f test Id: 69 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD8_32f test Id: 70 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD8_32f test Id: 71 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD8_32f test Id: 72 - MADDS
OK   UME::SIMD::SIMD8_32f test Id: 73 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 74 - MADDS gen
OK   UME::SIMD::SIMD8_32f test Id: 75 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD8_32f test Id: 76 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD8_32f test Id: 77 - ADDVA
OK   UME::SIMD::SIMD8_32f test Id: 78 - ADDVA(operator+=)
OK   UME::SIMD::SIMD8_32f test Id: 79 - ADDVA gen
OK   UME::SIMD::SIMD8_32f test Id: 80 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD8_32f test Id: 81 - MADDVA
OK   UME::SIMD::SIMD8_32f test Id: 82 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD8_32f test Id: 83 - ADDSA
OK   UME::SIMD::SIMD8_32f test Id: 84 - ADDSA(operator+=)
OK   UME::SIMD::SIMD8_32f test Id: 85 - MADDSA
OK   UME::SIMD::SIMD8_32f test Id: 86 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD8_32f test Id: 87 - SADDV gen
OK   UME::SIMD::SIMD8_32f test Id: 88 - SADDV(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 89 - POSTINC
OK   UME::SIMD::SIMD8_32f test Id: 90 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD8_32f test Id: 91 - POSTINC(function)
OK   UME::SIMD::SIMD8_32f test Id: 92 - MPOSTINC
OK   UME::SIMD::SIMD8_32f test Id: 93 - MPOSTINC(function)
OK   UME::SIMD::SIMD8_32f test Id: 94 - PREFINC
OK   UME::SIMD::SIMD8_32f test Id: 95 - PREFINC(operator++())
OK   UME::SIMD::SIMD8_32f test Id: 96 - PREFINC(function)
OK   UME::SIMD::SIMD8_32f test Id: 97 - MPREFINC
OK   UME::SIMD::SIMD8_32f test Id: 98 - MPREFINC(function)
OK   UME::SIMD::SIMD8_32f test Id: 99 - SUBV
OK   UME::SIMD::SIMD8_32f test Id: 100 - SUBV(operator-)
OK   UME::SIMD::SIMD8_32f test Id: 101 - SUBV(function)
OK   UME::SIMD::SIMD8_32f test Id: 102 - SUBV gen
OK   UME::SIMD::SIMD8_32f test Id: 103 - SUBV(operator-) gen
OK   UME::SIMD::SIMD8_32f test Id: 104 - SUBV(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 105 - MSUBV
OK   UME::SIMD::SIMD8_32f test Id: 106 - MSUBV(function)
OK   UME::SIMD::SIMD8_32f test Id: 107 - MSUBV gen
OK   UME::SIMD::SIMD8_32f test Id: 108 - MSUBV(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 109 - SUBS gen
OK   UME::SIMD::SIMD8_32f test Id: 110 - SUBS(operator-) gen
OK   UME::SIMD::SIMD8_32f test Id: 111 - SUBS(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 112 - MSUBS
OK   UME::SIMD::SIMD8_32f test Id: 113 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 114 - SUBVA
OK   UME::SIMD::SIMD8_32f test Id: 115 - SUBVA(operator-=)
OK   UME::SIMD::SIMD8_32f test Id: 116 - MSUBVA
OK   UME::SIMD::SIMD8_32f test Id: 117 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD8_32f test Id: 118 - SUBSA
OK   UME::SIMD::SIMD8_32f test Id: 119 - MSUBSA
OK   UME::SIMD::SIMD8_32f test Id: 120 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD8_32f test Id: 121 - SUBFROMV
OK   UME::SIMD::SIMD8_32f test Id: 122 - MSUBFROMV
OK   UME::SIMD::SIMD8_32f test Id: 123 - SUBFROMS
OK   UME::SIMD::SIMD8_32f test Id: 124 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 125 - MSUBFROMS
OK   UME::SIMD::SIMD8_32f test Id: 126 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 127 - SUBFROMVA
OK   UME::SIMD::SIMD8_32f test Id: 128 - MSUBFROMVA
OK   UME::SIMD::SIMD8_32f test Id: 129 - SUBFROMSA
OK   UME::SIMD::SIMD8_32f test Id: 130 - MSUBFROMSA
OK   UME::SIMD::SIMD8_32f test Id: 131 - POSTDEC
OK   UME::SIMD::SIMD8_32f test Id: 132 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD8_32f test Id: 133 - POSTDEC(function)
OK   UME::SIMD::SIMD8_32f test Id: 134 - MPOSTDEC
OK   UME::SIMD::SIMD8_32f test Id: 135 - MPOSTDEC(function)
OK   UME::SIMD::SIMD8_32f test Id: 136 - PREFDEC
OK   UME::SIMD::SIMD8_32f test Id: 137 - PREFDEC(operator--())
OK   UME::SIMD::SIMD8_32f test Id: 138 - PREFDEC(function)
OK   UME::SIMD::SIMD8_32f test Id: 139 - MPREFDEC
OK   UME::SIMD::SIMD8_32f test Id: 140 - MPREFDEC(function)
OK   UME::SIMD::SIMD8_32f test Id: 141 - MULV
OK   UME::SIMD::SIMD8_32f test Id: 142 - MULV(operator*)
OK   UME::SIMD::SIMD8_32f test Id: 143 - MULV(function)
OK   UME::SIMD::SIMD8_32f test Id: 144 - MMULV
OK   UME::SIMD::SIMD8_32f test Id: 145 - MMULV(function)
OK   UME::SIMD::SIMD8_32f test Id: 146 - MULS
OK   UME::SIMD::SIMD8_32f test Id: 147 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 148 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 149 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 150 - MMULS
OK   UME::SIMD::SIMD8_32f test Id: 151 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 152 - MULVA
OK   UME::SIMD::SIMD8_32f test Id: 153 - MULVA(operator*)
OK   UME::SIMD::SIMD8_32f test Id: 154 - MULVA gen
OK   UME::SIMD::SIMD8_32f test Id: 155 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD8_32f test Id: 156 - MMULVA
OK   UME::SIMD::SIMD8_32f test Id: 157 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_32f test Id: 158 - MULSA
OK   UME::SIMD::SIMD8_32f test Id: 159 - MULSA(operator*=)
OK   UME::SIMD::SIMD8_32f test Id: 160 - MMULSA
OK   UME::SIMD::SIMD8_32f test Id: 161 - DIVV
OK   UME::SIMD::SIMD8_32f test Id: 162 - DIVV(operator/)
OK   UME::SIMD::SIMD8_32f test Id: 163 - DIVV(function)
OK   UME::SIMD::SIMD8_32f test Id: 164 - MDIVV
OK   UME::SIMD::SIMD8_32f test Id: 165 - MDIVV(function)
OK   UME::SIMD::SIMD8_32f test Id: 166 - DIVS
OK   UME::SIMD::SIMD8_32f test Id: 167 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 168 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 169 - MDIVS
OK   UME::SIMD::SIMD8_32f test Id: 170 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 171 - DIVVA
OK   UME::SIMD::SIMD8_32f test Id: 172 - DIVVA(operator/=)
OK   UME::SIMD::SIMD8_32f test Id: 173 - DIVVA gen
OK   UME::SIMD::SIMD8_32f test Id: 174 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD8_32f test Id: 175 - MDIVVA
OK   UME::SIMD::SIMD8_32f test Id: 176 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_32f test Id: 177 - DIVSA
OK   UME::SIMD::SIMD8_32f test Id: 178 - DIVSA(operator/=)
OK   UME::SIMD::SIMD8_32f test Id: 179 - MDIVSA
OK   UME::SIMD::SIMD8_32f test Id: 180 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD8_32f test Id: 181 - RCP
OK   UME::SIMD::SIMD8_32f test Id: 182 - RCP(function)
OK   UME::SIMD::SIMD8_32f test Id: 183 - MRCP
OK   UME::SIMD::SIMD8_32f test Id: 184 - MRCP(function)
OK   UME::SIMD::SIMD8_32f test Id: 185 - RCPS
OK   UME::SIMD::SIMD8_32f test Id: 186 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 187 - RCPS(function)
OK   UME::SIMD::SIMD8_32f test Id: 188 - MRCPS
OK   UME::SIMD::SIMD8_32f test Id: 189 - MRCPS (function)
OK   UME::SIMD::SIMD8_32f test Id: 190 - RCPA
OK   UME::SIMD::SIMD8_32f test Id: 191 - MRCPA
OK   UME::SIMD::SIMD8_32f test Id: 192 - RCPSA
OK   UME::SIMD::SIMD8_32f test Id: 193 - MRCPSA
OK   UME::SIMD::SIMD8_32f test Id: 194 - CMPEQV
OK   UME::SIMD::SIMD8_32f test Id: 195 - CMPEQV(operator==)
OK   UME::SIMD::SIMD8_32f test Id: 196 - CMPEQV(function)
OK   UME::SIMD::SIMD8_32f test Id: 197 - CMPEQS
OK   UME::SIMD::SIMD8_32f test Id: 198 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 199 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 200 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 201 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 202 - CMPNEV
OK   UME::SIMD::SIMD8_32f test Id: 203 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD8_32f test Id: 204 - CMPNEV(function)
OK   UME::SIMD::SIMD8_32f test Id: 205 - CMPNES
OK   UME::SIMD::SIMD8_32f test Id: 206 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 207 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 208 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 209 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 210 - CMPGTV
OK   UME::SIMD::SIMD8_32f test Id: 211 - CMPGTV(operator>)
OK   UME::SIMD::SIMD8_32f test Id: 212 - CMPGTV(function)
OK   UME::SIMD::SIMD8_32f test Id: 213 - CMPGTS
OK   UME::SIMD::SIMD8_32f test Id: 214 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 215 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 216 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 217 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 218 - CMPLTV
OK   UME::SIMD::SIMD8_32f test Id: 219 - CMPLTV(operator<)
OK   UME::SIMD::SIMD8_32f test Id: 220 - CMPLTV(function)
OK   UME::SIMD::SIMD8_32f test Id: 221 - CMPLTS
OK   UME::SIMD::SIMD8_32f test Id: 222 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 223 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 224 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 225 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 226 - CMPGEV
OK   UME::SIMD::SIMD8_32f test Id: 227 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD8_32f test Id: 228 - CMPGEV(function)
OK   UME::SIMD::SIMD8_32f test Id: 229 - CMPGES
OK   UME::SIMD::SIMD8_32f test Id: 230 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 231 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 232 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 233 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 234 - CMPLEV
OK   UME::SIMD::SIMD8_32f test Id: 235 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD8_32f test Id: 236 - CMPLEV(function)
OK   UME::SIMD::SIMD8_32f test Id: 237 - CMPLES
OK   UME::SIMD::SIMD8_32f test Id: 238 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 239 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 240 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 241 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 242 - CMPEV
OK   UME::SIMD::SIMD8_32f test Id: 243 - CMPEV(function)
OK   UME::SIMD::SIMD8_32f test Id: 244 - CMPES
OK   UME::SIMD::SIMD8_32f test Id: 245 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 246 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 247 - HADD
OK   UME::SIMD::SIMD8_32f test Id: 248 - HADD(function)
OK   UME::SIMD::SIMD8_32f test Id: 249 - HADD gen
OK   UME::SIMD::SIMD8_32f test Id: 250 - HADD(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD8_32f test Id: 252 - MHADD(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 253 - HADDS gen
OK   UME::SIMD::SIMD8_32f test Id: 254 - HADDS(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 255 - MHADD gen
OK   UME::SIMD::SIMD8_32f test Id: 256 - MHADDS(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 257 - HMUL gen
OK   UME::SIMD::SIMD8_32f test Id: 258 - HMUL(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD8_32f test Id: 260 - MHMUL(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 261 - HMULS gen
OK   UME::SIMD::SIMD8_32f test Id: 262 - HMULS(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 263 - MHMUL gen
OK   UME::SIMD::SIMD8_32f test Id: 264 - MHMULS(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 265 - FMULADDV
OK   UME::SIMD::SIMD8_32f test Id: 266 - FMULADDV(function)
OK   UME::SIMD::SIMD8_32f test Id: 267 - MFMULADDV
OK   UME::SIMD::SIMD8_32f test Id: 268 - MFMULADDV(function)
OK   UME::SIMD::SIMD8_32f test Id: 269 - FMULSUBV
OK   UME::SIMD::SIMD8_32f test Id: 270 - FMULSUBV(function)
OK   UME::SIMD::SIMD8_32f test Id: 271 - MFMULSUBV
OK   UME::SIMD::SIMD8_32f test Id: 272 - MFMULSUBV(function)
OK   UME::SIMD::SIMD8_32f test Id: 273 - FADDMULV
OK   UME::SIMD::SIMD8_32f test Id: 274 - FADDMULV(function)
OK   UME::SIMD::SIMD8_32f test Id: 275 - MFADDMULV
OK   UME::SIMD::SIMD8_32f test Id: 276 - MFADDMULV(function)
OK   UME::SIMD::SIMD8_32f test Id: 277 - FSUBMULV
OK   UME::SIMD::SIMD8_32f test Id: 278 - FSUBMULV(function)
OK   UME::SIMD::SIMD8_32f test Id: 279 - MFSUBMULV
OK   UME::SIMD::SIMD8_32f test Id: 280 - MFSUBMULV(function)
OK   UME::SIMD::SIMD8_32f test Id: 281 - MAXV
OK   UME::SIMD::SIMD8_32f test Id: 282 - MAXV(function)
OK   UME::SIMD::SIMD8_32f test Id: 283 - MMAXV
OK   UME::SIMD::SIMD8_32f test Id: 284 - MMAXV(function)
OK   UME::SIMD::SIMD8_32f test Id: 285 - MAXS
OK   UME::SIMD::SIMD8_32f test Id: 286 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 287 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 288 - MMAXS
OK   UME::SIMD::SIMD8_32f test Id: 289 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 290 - MAXVA
OK   UME::SIMD::SIMD8_32f test Id: 291 - MMAXVA
OK   UME::SIMD::SIMD8_32f test Id: 292 - MAXSA
OK   UME::SIMD::SIMD8_32f test Id: 293 - MMAXSA
OK   UME::SIMD::SIMD8_32f test Id: 294 - MINV
OK   UME::SIMD::SIMD8_32f test Id: 295 - MINV(function)
OK   UME::SIMD::SIMD8_32f test Id: 296 - MMINV
OK   UME::SIMD::SIMD8_32f test Id: 297 - MMINV(function)
OK   UME::SIMD::SIMD8_32f test Id: 298 - MINS
OK   UME::SIMD::SIMD8_32f test Id: 299 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD8_32f test Id: 300 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD8_32f test Id: 301 - MMINS
OK   UME::SIMD::SIMD8_32f test Id: 302 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD8_32f test Id: 303 - MINVA
OK   UME::SIMD::SIMD8_32f test Id: 304 - MMINVA
OK   UME::SIMD::SIMD8_32f test Id: 305 - MINSA
OK   UME::SIMD::SIMD8_32f test Id: 306 - MMINSA
OK   UME::SIMD::SIMD8_32f test Id: 307 - HMAX
OK   UME::SIMD::SIMD8_32f test Id: 308 - HMAX(function)
OK   UME::SIMD::SIMD8_32f test Id: 309 - HMAX
OK   UME::SIMD::SIMD8_32f test Id: 310 - HMAX(function)
OK   UME::SIMD::SIMD8_32f test Id: 311 - MHMAX
OK   UME::SIMD::SIMD8_32f test Id: 312 - MHMAX(function)
OK   UME::SIMD::SIMD8_32f test Id: 313 - IMAX
OK   UME::SIMD::SIMD8_32f test Id: 314 - IMAX(function)
OK   UME::SIMD::SIMD8_32f test Id: 315 - MIMAX
OK   UME::SIMD::SIMD8_32f test Id: 316 - MIMAX(function)
OK   UME::SIMD::SIMD8_32f test Id: 317 - HMIN
OK   UME::SIMD::SIMD8_32f test Id: 318 - HMIN(function)
OK   UME::SIMD::SIMD8_32f test Id: 319 - HMIN
OK   UME::SIMD::SIMD8_32f test Id: 320 - HMIN(function)
OK   UME::SIMD::SIMD8_32f test Id: 321 - MHMIN gen
OK   UME::SIMD::SIMD8_32f test Id: 322 - MHMIN(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 323 - IMIN
OK   UME::SIMD::SIMD8_32f test Id: 324 - IMIN(function)
OK   UME::SIMD::SIMD8_32f test Id: 325 - MIMIN
OK   UME::SIMD::SIMD8_32f test Id: 326 - MIMIN(function)
OK   UME::SIMD::SIMD8_32f test Id: 327 - GATHERU
OK   UME::SIMD::SIMD8_32f test Id: 328 - MGATHERU
OK   UME::SIMD::SIMD8_32f test Id: 329 - GATHERS
OK   UME::SIMD::SIMD8_32f test Id: 330 - MGATHERS
OK   UME::SIMD::SIMD8_32f test Id: 331 - GATHERV
OK   UME::SIMD::SIMD8_32f test Id: 332 - MGATHERV
OK   UME::SIMD::SIMD8_32f test Id: 333 - SCATTERU
OK   UME::SIMD::SIMD8_32f test Id: 334 - MSCATTERU
OK   UME::SIMD::SIMD8_32f test Id: 335 - SCATTERS
OK   UME::SIMD::SIMD8_32f test Id: 336 - MSCATTERS
OK   UME::SIMD::SIMD8_32f test Id: 337 - SCATTERV
OK   UME::SIMD::SIMD8_32f test Id: 338 - MSCATTERV
OK   UME::SIMD::SIMD8_32f test Id: 339 - NEG
OK   UME::SIMD::SIMD8_32f test Id: 340 - NEG(operator-)
OK   UME::SIMD::SIMD8_32f test Id: 341 - NEG(function)
OK   UME::SIMD::SIMD8_32f test Id: 342 - MNEG
OK   UME::SIMD::SIMD8_32f test Id: 343 - MNEG(function)
OK   UME::SIMD::SIMD8_32f test Id: 344 - NEGA
OK   UME::SIMD::SIMD8_32f test Id: 345 - MNEGA
OK   UME::SIMD::SIMD8_32f test Id: 346 - ABS
OK   UME::SIMD::SIMD8_32f test Id: 347 - ABS(function)
OK   UME::SIMD::SIMD8_32f test Id: 348 - MABS
OK   UME::SIMD::SIMD8_32f test Id: 349 - MABS(function)
OK   UME::SIMD::SIMD8_32f test Id: 350 - ABSA
OK   UME::SIMD::SIMD8_32f test Id: 351 - MABSA
OK   UME::SIMD::SIMD8_32f test Id: 352 - COPYSIGN gen
OK   UME::SIMD::SIMD8_32f test Id: 353 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 354 - ROUND
OK   UME::SIMD::SIMD8_32f test Id: 355 - ROUND(function)
OK   UME::SIMD::SIMD8_32f test Id: 356 - MROUND
OK   UME::SIMD::SIMD8_32f test Id: 357 - MROUND(function)
OK   UME::SIMD::SIMD8_32f test Id: 358 - TRUNC gen
OK   UME::SIMD::SIMD8_32f test Id: 359 - TRUNC(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 360 - MTRUNC gen
OK   UME::SIMD::SIMD8_32f test Id: 361 - MTRUNC(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 362 - FLOOR
OK   UME::SIMD::SIMD8_32f test Id: 363 - FLOOR(function)
OK   UME::SIMD::SIMD8_32f test Id: 364 - MFLOOR
OK   UME::SIMD::SIMD8_32f test Id: 365 - MFLOOR(function)
OK   UME::SIMD::SIMD8_32f test Id: 366 - CEIL
OK   UME::SIMD::SIMD8_32f test Id: 367 - CEIL(function)
OK   UME::SIMD::SIMD8_32f test Id: 368 - MCEIL
OK   UME::SIMD::SIMD8_32f test Id: 369 - MCEIL(function)
OK   UME::SIMD::SIMD8_32f test Id: 370 - ISFIN
OK   UME::SIMD::SIMD8_32f test Id: 371 - ISFIN(function)
OK   UME::SIMD::SIMD8_32f test Id: 372 - ISINF
OK   UME::SIMD::SIMD8_32f test Id: 373 - ISINF(function)
OK   UME::SIMD::SIMD8_32f test Id: 374 - ISAN
OK   UME::SIMD::SIMD8_32f test Id: 375 - ISAN(function)
OK   UME::SIMD::SIMD8_32f test Id: 376 - ISNAN
OK   UME::SIMD::SIMD8_32f test Id: 377 - ISNAN(function)
OK   UME::SIMD::SIMD8_32f test Id: 378 - ISNORM
OK   UME::SIMD::SIMD8_32f test Id: 379 - ISNORM(function)
OK   UME::SIMD::SIMD8_32f test Id: 380 - ISSUB
OK   UME::SIMD::SIMD8_32f test Id: 381 - ISSUB(function)
OK   UME::SIMD::SIMD8_32f test Id: 382 - ISZERO
OK   UME::SIMD::SIMD8_32f test Id: 383 - ISZERO(function)
OK   UME::SIMD::SIMD8_32f test Id: 384 - ISZEROSUB
OK   UME::SIMD::SIMD8_32f test Id: 385 - ISZEROSUB(function)
OK   UME::SIMD::SIMD8_32f test Id: 386 - SQR
OK   UME::SIMD::SIMD8_32f test Id: 387 - SQR(function)
OK   UME::SIMD::SIMD8_32f test Id: 388 - MSQR
OK   UME::SIMD::SIMD8_32f test Id: 389 - MSQR(function)
OK   UME::SIMD::SIMD8_32f test Id: 390 - SQRA
OK   UME::SIMD::SIMD8_32f test Id: 391 - MSQRA
OK   UME::SIMD::SIMD8_32f test Id: 392 - SQRT
OK   UME::SIMD::SIMD8_32f test Id: 393 - SQRT(function)
OK   UME::SIMD::SIMD8_32f test Id: 394 - MSQRT
OK   UME::SIMD::SIMD8_32f test Id: 395 - MSQRT
OK   UME::SIMD::SIMD8_32f test Id: 396 - SQRTA
OK   UME::SIMD::SIMD8_32f test Id: 397 - MSQRTA
OK   UME::SIMD::SIMD8_32f test Id: 398 - EXP gen
OK   UME::SIMD::SIMD8_32f test Id: 399 - EXP(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 400 - MEXP gen
OK   UME::SIMD::SIMD8_32f test Id: 401 - MEXP(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 402 - LOG gen
OK   UME::SIMD::SIMD8_32f test Id: 403 - LOG(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 404 - LOG2 gen
OK   UME::SIMD::SIMD8_32f test Id: 405 - LOG2(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 406 - LOG10 gen
OK   UME::SIMD::SIMD8_32f test Id: 407 - LOG10(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 408 - SIN gen
OK   UME::SIMD::SIMD8_32f test Id: 409 - SIN(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 410 - COS gen
OK   UME::SIMD::SIMD8_32f test Id: 411 - COS(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 412 - TAN gen
OK   UME::SIMD::SIMD8_32f test Id: 413 - TAN(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 414 - CTAN gen
OK   UME::SIMD::SIMD8_32f test Id: 415 - CTAN(function) gen
OK   UME::SIMD::SIMD8_32f test Id: 416 - FTOU gen
OK   UME::SIMD::SIMD8_32f test Id: 417 - FTOI gen
OK   UME::SIMD::SIMD8_32f test Id: 418 - PACK
OK   UME::SIMD::SIMD8_32f test Id: 419 - PACKLO
OK   UME::SIMD::SIMD8_32f test Id: 420 - PACKHI
OK   UME::SIMD::SIMD8_32f test Id: 421 - UNPACK
OK   UME::SIMD::SIMD8_32f test Id: 422 - UNPACKLO
OK   UME::SIMD::SIMD8_32f test Id: 423 - UNPACKHi
OK   UME::SIMD::SIMD8_32f test Id: 424 - PROMOTE
OK   UME::SIMD::SIMD8_32f test Id: 425 - ASSIGNV
OK   UME::SIMD::SIMD8_32f test Id: 426 - MASSIGNV
OK   UME::SIMD::SIMD8_32f test Id: 427 - ASSIGNS
OK   UME::SIMD::SIMD8_32f test Id: 428 - MASSIGNS
OK   UME::SIMD::SIMD8_32f test Id: 429 - LOAD
OK   UME::SIMD::SIMD8_32f test Id: 430 - ADDV
OK   UME::SIMD::SIMD8_32f test Id: 431 - ADDV(operator+)
OK   UME::SIMD::SIMD8_32f test Id: 432 - MADDV
OK   UME::SIMD::SIMD8_32f test Id: 433 - ADDS
OK   UME::SIMD::SIMD8_32f test Id: 434 - MADDS
OK   UME::SIMD::SIMD8_32f test Id: 435 - FMULADDV
OK   UME::SIMD::SIMD8_32f test Id: 436 - MFMULADDV
OK   UME::SIMD::SIMD8_32f test Id: 437 - TRUNC
OK   UME::SIMD::SIMD8_32f test Id: 438 - SQRT
OK   UME::SIMD::SIMD8_32f test Id: 439 - MSQRT
OK   UME::SIMD::SIMD8_32f test Id: 440 - SQRTA
OK   UME::SIMD::SIMD8_32f test Id: 441 - MSQRTA
OK   UME::SIMD::SIMD4_64u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD4_64u test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD4_64u test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD4_64u test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD4_64u test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD4_64u test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD4_64u test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD4_64u test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD4_64u test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD4_64u test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD4_64u test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD4_64u test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD4_64u test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD4_64u test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD4_64u test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD4_64u test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD4_64u test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD4_64u test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD4_64u test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD4_64u test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD4_64u test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD4_64u test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD4_64u test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD4_64u test Id: 24 - INSERT
OK   UME::SIMD::SIMD4_64u test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD4_64u test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD4_64u test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD4_64u test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD4_64u test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD4_64u test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD4_64u test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD4_64u test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD4_64u test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD4_64u test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD4_64u test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD4_64u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD4_64u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD4_64u test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD4_64u test Id: 39 - MLOAD
OK   UME::SIMD::SIMD4_64u test Id: 40 - MSTORE
OK   UME::SIMD::SIMD4_64u test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD4_64u test Id: 42 - MLOADA
OK   UME::SIMD::SIMD4_64u test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD4_64u test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD4_64u test Id: 45 - SORTA
OK   UME::SIMD::SIMD4_64u test Id: 46 - SORTD
OK   UME::SIMD::SIMD4_64u test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD4_64u test Id: 48 - ADDV
OK   UME::SIMD::SIMD4_64u test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD4_64u test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD4_64u test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD4_64u test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD4_64u test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD4_64u test Id: 54 - MADDV
OK   UME::SIMD::SIMD4_64u test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD4_64u test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD4_64u test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD4_64u test Id: 58 - ADDS
OK   UME::SIMD::SIMD4_64u test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD4_64u test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD4_64u test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD4_64u test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD4_64u test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD4_64u test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD4_64u test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD4_64u test Id: 68 - MADDS
OK   UME::SIMD::SIMD4_64u test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD4_64u test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD4_64u test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD4_64u test Id: 73 - ADDVA
OK   UME::SIMD::SIMD4_64u test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD4_64u test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD4_64u test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD4_64u test Id: 77 - MADDVA
OK   UME::SIMD::SIMD4_64u test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD4_64u test Id: 79 - ADDSA
OK   UME::SIMD::SIMD4_64u test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD4_64u test Id: 81 - MADDSA
OK   UME::SIMD::SIMD4_64u test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD4_64u test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD4_64u test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD4_64u test Id: 85 - POSTINC
OK   UME::SIMD::SIMD4_64u test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD4_64u test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD4_64u test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD4_64u test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD4_64u test Id: 90 - PREFINC
OK   UME::SIMD::SIMD4_64u test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD4_64u test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD4_64u test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD4_64u test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD4_64u test Id: 95 - SUBV
OK   UME::SIMD::SIMD4_64u test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD4_64u test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD4_64u test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD4_64u test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD4_64u test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD4_64u test Id: 101 - MSUBV
OK   UME::SIMD::SIMD4_64u test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD4_64u test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD4_64u test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD4_64u test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD4_64u test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD4_64u test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD4_64u test Id: 108 - MSUBS
OK   UME::SIMD::SIMD4_64u test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 110 - SUBVA
OK   UME::SIMD::SIMD4_64u test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD4_64u test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD4_64u test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD4_64u test Id: 114 - SUBSA
OK   UME::SIMD::SIMD4_64u test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD4_64u test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD4_64u test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD4_64u test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD4_64u test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD4_64u test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD4_64u test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD4_64u test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD4_64u test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD4_64u test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD4_64u test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD4_64u test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD4_64u test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD4_64u test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD4_64u test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD4_64u test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD4_64u test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD4_64u test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD4_64u test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD4_64u test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD4_64u test Id: 137 - MULV
OK   UME::SIMD::SIMD4_64u test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD4_64u test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD4_64u test Id: 140 - MMULV
OK   UME::SIMD::SIMD4_64u test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD4_64u test Id: 142 - MULS
OK   UME::SIMD::SIMD4_64u test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 146 - MMULS
OK   UME::SIMD::SIMD4_64u test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 148 - MULVA
OK   UME::SIMD::SIMD4_64u test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD4_64u test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD4_64u test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD4_64u test Id: 152 - MMULVA
OK   UME::SIMD::SIMD4_64u test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_64u test Id: 154 - MULSA
OK   UME::SIMD::SIMD4_64u test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD4_64u test Id: 156 - MMULSA
OK   UME::SIMD::SIMD4_64u test Id: 157 - DIVV
OK   UME::SIMD::SIMD4_64u test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD4_64u test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD4_64u test Id: 160 - MDIVV
OK   UME::SIMD::SIMD4_64u test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD4_64u test Id: 162 - DIVS
OK   UME::SIMD::SIMD4_64u test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 165 - MDIVS
OK   UME::SIMD::SIMD4_64u test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 167 - DIVVA
OK   UME::SIMD::SIMD4_64u test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD4_64u test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD4_64u test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD4_64u test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD4_64u test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_64u test Id: 173 - DIVSA
OK   UME::SIMD::SIMD4_64u test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD4_64u test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD4_64u test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD4_64u test Id: 177 - RCP
OK   UME::SIMD::SIMD4_64u test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD4_64u test Id: 179 - MRCP
OK   UME::SIMD::SIMD4_64u test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD4_64u test Id: 181 - RCPS
OK   UME::SIMD::SIMD4_64u test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD4_64u test Id: 184 - MRCPS
OK   UME::SIMD::SIMD4_64u test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD4_64u test Id: 186 - RCPA
OK   UME::SIMD::SIMD4_64u test Id: 187 - MRCPA
OK   UME::SIMD::SIMD4_64u test Id: 188 - RCPSA
OK   UME::SIMD::SIMD4_64u test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD4_64u test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD4_64u test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD4_64u test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD4_64u test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD4_64u test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD4_64u test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD4_64u test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD4_64u test Id: 201 - CMPNES
OK   UME::SIMD::SIMD4_64u test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD4_64u test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD4_64u test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD4_64u test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD4_64u test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD4_64u test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD4_64u test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD4_64u test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD4_64u test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD4_64u test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD4_64u test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD4_64u test Id: 225 - CMPGES
OK   UME::SIMD::SIMD4_64u test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD4_64u test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD4_64u test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD4_64u test Id: 233 - CMPLES
OK   UME::SIMD::SIMD4_64u test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 238 - CMPEV
OK   UME::SIMD::SIMD4_64u test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD4_64u test Id: 240 - CMPES
OK   UME::SIMD::SIMD4_64u test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 243 - HADD
OK   UME::SIMD::SIMD4_64u test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD4_64u test Id: 245 - HADD gen
OK   UME::SIMD::SIMD4_64u test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD4_64u test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD4_64u test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD4_64u test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD4_64u test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD4_64u test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD4_64u test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD4_64u test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD4_64u test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD4_64u test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD4_64u test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD4_64u test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD4_64u test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD4_64u test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD4_64u test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD4_64u test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD4_64u test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD4_64u test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD4_64u test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD4_64u test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD4_64u test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD4_64u test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD4_64u test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD4_64u test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD4_64u test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD4_64u test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD4_64u test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD4_64u test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD4_64u test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD4_64u test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD4_64u test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD4_64u test Id: 277 - MAXV
OK   UME::SIMD::SIMD4_64u test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD4_64u test Id: 279 - MMAXV
OK   UME::SIMD::SIMD4_64u test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD4_64u test Id: 281 - MAXS
OK   UME::SIMD::SIMD4_64u test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 284 - MMAXS
OK   UME::SIMD::SIMD4_64u test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 286 - MAXVA
OK   UME::SIMD::SIMD4_64u test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD4_64u test Id: 288 - MAXSA
OK   UME::SIMD::SIMD4_64u test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD4_64u test Id: 290 - MINV
OK   UME::SIMD::SIMD4_64u test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD4_64u test Id: 292 - MMINV
OK   UME::SIMD::SIMD4_64u test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD4_64u test Id: 294 - MINS
OK   UME::SIMD::SIMD4_64u test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD4_64u test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD4_64u test Id: 297 - MMINS
OK   UME::SIMD::SIMD4_64u test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 299 - MINVA
OK   UME::SIMD::SIMD4_64u test Id: 300 - MMINVA
OK   UME::SIMD::SIMD4_64u test Id: 301 - MINSA
OK   UME::SIMD::SIMD4_64u test Id: 302 - MMINSA
OK   UME::SIMD::SIMD4_64u test Id: 303 - HMAX
OK   UME::SIMD::SIMD4_64u test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD4_64u test Id: 305 - HMAX
OK   UME::SIMD::SIMD4_64u test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD4_64u test Id: 307 - MHMAX
OK   UME::SIMD::SIMD4_64u test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD4_64u test Id: 309 - IMAX
OK   UME::SIMD::SIMD4_64u test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD4_64u test Id: 311 - MIMAX
OK   UME::SIMD::SIMD4_64u test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD4_64u test Id: 313 - HMIN
OK   UME::SIMD::SIMD4_64u test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD4_64u test Id: 315 - HMIN
OK   UME::SIMD::SIMD4_64u test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD4_64u test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD4_64u test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD4_64u test Id: 319 - IMIN
OK   UME::SIMD::SIMD4_64u test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD4_64u test Id: 321 - MIMIN
OK   UME::SIMD::SIMD4_64u test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD4_64u test Id: 323 - REMV gen
OK   UME::SIMD::SIMD4_64u test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD4_64u test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD4_64u test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD4_64u test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD4_64u test Id: 328 - REMS gen
OK   UME::SIMD::SIMD4_64u test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD4_64u test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD4_64u test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD4_64u test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD4_64u test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD4_64u test Id: 334 - LORV gen
OK   UME::SIMD::SIMD4_64u test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD4_64u test Id: 336 - BANDV
OK   UME::SIMD::SIMD4_64u test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD4_64u test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD4_64u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD4_64u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD4_64u test Id: 341 - BANDS
OK   UME::SIMD::SIMD4_64u test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 346 - MBANDS
OK   UME::SIMD::SIMD4_64u test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 348 - BANDVA
OK   UME::SIMD::SIMD4_64u test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD4_64u test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD4_64u test Id: 351 - BANDSA
OK   UME::SIMD::SIMD4_64u test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD4_64u test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD4_64u test Id: 354 - BORV
OK   UME::SIMD::SIMD4_64u test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD4_64u test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD4_64u test Id: 357 - MBORV
OK   UME::SIMD::SIMD4_64u test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD4_64u test Id: 359 - BORS
OK   UME::SIMD::SIMD4_64u test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 364 - MBORS
OK   UME::SIMD::SIMD4_64u test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 366 - BORVA
OK   UME::SIMD::SIMD4_64u test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD4_64u test Id: 368 - MBORVA
OK   UME::SIMD::SIMD4_64u test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD4_64u test Id: 370 - BORSA
OK   UME::SIMD::SIMD4_64u test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD4_64u test Id: 372 - MBORSA
OK   UME::SIMD::SIMD4_64u test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD4_64u test Id: 374 - BXORV
OK   UME::SIMD::SIMD4_64u test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD4_64u test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD4_64u test Id: 377 - MBXORV
OK   UME::SIMD::SIMD4_64u test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD4_64u test Id: 379 - BXORS
OK   UME::SIMD::SIMD4_64u test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 384 - MBXORS
OK   UME::SIMD::SIMD4_64u test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 386 - BXORVA
OK   UME::SIMD::SIMD4_64u test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD4_64u test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD4_64u test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD4_64u test Id: 390 - BXORSA
OK   UME::SIMD::SIMD4_64u test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD4_64u test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD4_64u test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD4_64u test Id: 394 - BNOT
OK   UME::SIMD::SIMD4_64u test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD4_64u test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD4_64u test Id: 397 - MBNOT
OK   UME::SIMD::SIMD4_64u test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD4_64u test Id: 399 - BNOTA
OK   UME::SIMD::SIMD4_64u test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD4_64u test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD4_64u test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD4_64u test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD4_64u test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD4_64u test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD4_64u test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD4_64u test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD4_64u test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD4_64u test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD4_64u test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD4_64u test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD4_64u test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD4_64u test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD4_64u test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD4_64u test Id: 415 - HBAND
OK   UME::SIMD::SIMD4_64u test Id: 416 - HBAND
OK   UME::SIMD::SIMD4_64u test Id: 417 - MHBAND
OK   UME::SIMD::SIMD4_64u test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD4_64u test Id: 419 - HBANDS
OK   UME::SIMD::SIMD4_64u test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD4_64u test Id: 421 - HBOR
OK   UME::SIMD::SIMD4_64u test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD4_64u test Id: 423 - MHBOR
OK   UME::SIMD::SIMD4_64u test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD4_64u test Id: 425 - HBORS
OK   UME::SIMD::SIMD4_64u test Id: 426 - MHBORS
OK   UME::SIMD::SIMD4_64u test Id: 427 - HBXOR
OK   UME::SIMD::SIMD4_64u test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD4_64u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD4_64u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD4_64u test Id: 431 - HBXORS
OK   UME::SIMD::SIMD4_64u test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD4_64u test Id: 433 - GATHERU
OK   UME::SIMD::SIMD4_64u test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD4_64u test Id: 435 - GATHERS
OK   UME::SIMD::SIMD4_64u test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD4_64u test Id: 437 - GATHERV
OK   UME::SIMD::SIMD4_64u test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD4_64u test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD4_64u test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD4_64u test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD4_64u test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD4_64u test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD4_64u test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD4_64u test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD4_64u test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD4_64u test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD4_64u test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD4_64u test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD4_64u test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD4_64u test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD4_64u test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD4_64u test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD4_64u test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD4_64u test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD4_64u test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD4_64u test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD4_64u test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD4_64u test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD4_64u test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD4_64u test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD4_64u test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD4_64u test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD4_64u test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD4_64u test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD4_64u test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD4_64u test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD4_64u test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD4_64u test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD4_64u test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD4_64u test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD4_64u test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD4_64u test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD4_64u test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD4_64u test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD4_64u test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD4_64u test Id: 477 - ROLV
OK   UME::SIMD::SIMD4_64u test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD4_64u test Id: 479 - MROLV
OK   UME::SIMD::SIMD4_64u test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD4_64u test Id: 481 - ROLS
OK   UME::SIMD::SIMD4_64u test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 483 - MROLS
OK   UME::SIMD::SIMD4_64u test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 485 - ROLVA
OK   UME::SIMD::SIMD4_64u test Id: 486 - MROLVA
OK   UME::SIMD::SIMD4_64u test Id: 487 - ROLSA
OK   UME::SIMD::SIMD4_64u test Id: 488 - MROLSA
OK   UME::SIMD::SIMD4_64u test Id: 489 - RORV
OK   UME::SIMD::SIMD4_64u test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD4_64u test Id: 491 - MRORV
OK   UME::SIMD::SIMD4_64u test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD4_64u test Id: 493 - RORS
OK   UME::SIMD::SIMD4_64u test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 495 - MRORS
OK   UME::SIMD::SIMD4_64u test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64u test Id: 497 - RORVA
OK   UME::SIMD::SIMD4_64u test Id: 498 - MRORVA
OK   UME::SIMD::SIMD4_64u test Id: 499 - RORSA
OK   UME::SIMD::SIMD4_64u test Id: 500 - MRORSA
OK   UME::SIMD::SIMD4_64u test Id: 501 - UTOI
OK   UME::SIMD::SIMD4_64u test Id: 502 - UTOF
OK   UME::SIMD::SIMD4_64u test Id: 503 - PACK
OK   UME::SIMD::SIMD4_64u test Id: 504 - PACKLO
OK   UME::SIMD::SIMD4_64u test Id: 505 - PACKHI
OK   UME::SIMD::SIMD4_64u test Id: 506 - UNPACK
OK   UME::SIMD::SIMD4_64u test Id: 507 - UNPACKLO
OK   UME::SIMD::SIMD4_64u test Id: 508 - UNPACKHi
OK   UME::SIMD::SIMD4_64u test Id: 509 - DEGRADE
OK   UME::SIMD::SIMD4_64i test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD4_64i test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD4_64i test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD4_64i test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD4_64i test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD4_64i test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD4_64i test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD4_64i test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD4_64i test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD4_64i test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD4_64i test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD4_64i test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD4_64i test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD4_64i test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD4_64i test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD4_64i test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD4_64i test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD4_64i test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD4_64i test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD4_64i test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD4_64i test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD4_64i test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD4_64i test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD4_64i test Id: 24 - INSERT
OK   UME::SIMD::SIMD4_64i test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD4_64i test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD4_64i test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD4_64i test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD4_64i test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD4_64i test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD4_64i test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD4_64i test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD4_64i test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD4_64i test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD4_64i test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD4_64i test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD4_64i test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD4_64i test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD4_64i test Id: 39 - MLOAD
OK   UME::SIMD::SIMD4_64i test Id: 40 - MSTORE
OK   UME::SIMD::SIMD4_64i test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD4_64i test Id: 42 - MLOADA
OK   UME::SIMD::SIMD4_64i test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD4_64i test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD4_64i test Id: 45 - SORTA
OK   UME::SIMD::SIMD4_64i test Id: 46 - SORTD
OK   UME::SIMD::SIMD4_64i test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD4_64i test Id: 48 - ADDV
OK   UME::SIMD::SIMD4_64i test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD4_64i test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD4_64i test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD4_64i test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD4_64i test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD4_64i test Id: 54 - MADDV
OK   UME::SIMD::SIMD4_64i test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD4_64i test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD4_64i test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD4_64i test Id: 58 - ADDS
OK   UME::SIMD::SIMD4_64i test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD4_64i test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD4_64i test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD4_64i test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD4_64i test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD4_64i test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD4_64i test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD4_64i test Id: 68 - MADDS
OK   UME::SIMD::SIMD4_64i test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD4_64i test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD4_64i test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD4_64i test Id: 73 - ADDVA
OK   UME::SIMD::SIMD4_64i test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD4_64i test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD4_64i test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD4_64i test Id: 77 - MADDVA
OK   UME::SIMD::SIMD4_64i test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD4_64i test Id: 79 - ADDSA
OK   UME::SIMD::SIMD4_64i test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD4_64i test Id: 81 - MADDSA
OK   UME::SIMD::SIMD4_64i test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD4_64i test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD4_64i test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD4_64i test Id: 85 - POSTINC
OK   UME::SIMD::SIMD4_64i test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD4_64i test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD4_64i test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD4_64i test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD4_64i test Id: 90 - PREFINC
OK   UME::SIMD::SIMD4_64i test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD4_64i test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD4_64i test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD4_64i test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD4_64i test Id: 95 - SUBV
OK   UME::SIMD::SIMD4_64i test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD4_64i test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD4_64i test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD4_64i test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD4_64i test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD4_64i test Id: 101 - MSUBV
OK   UME::SIMD::SIMD4_64i test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD4_64i test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD4_64i test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD4_64i test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD4_64i test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD4_64i test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD4_64i test Id: 108 - MSUBS
OK   UME::SIMD::SIMD4_64i test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 110 - SUBVA
OK   UME::SIMD::SIMD4_64i test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD4_64i test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD4_64i test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD4_64i test Id: 114 - SUBSA
OK   UME::SIMD::SIMD4_64i test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD4_64i test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD4_64i test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD4_64i test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD4_64i test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD4_64i test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD4_64i test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD4_64i test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD4_64i test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD4_64i test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD4_64i test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD4_64i test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD4_64i test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD4_64i test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD4_64i test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD4_64i test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD4_64i test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD4_64i test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD4_64i test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD4_64i test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD4_64i test Id: 137 - MULV
OK   UME::SIMD::SIMD4_64i test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD4_64i test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD4_64i test Id: 140 - MMULV
OK   UME::SIMD::SIMD4_64i test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD4_64i test Id: 142 - MULS
OK   UME::SIMD::SIMD4_64i test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 146 - MMULS
OK   UME::SIMD::SIMD4_64i test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 148 - MULVA
OK   UME::SIMD::SIMD4_64i test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD4_64i test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD4_64i test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD4_64i test Id: 152 - MMULVA
OK   UME::SIMD::SIMD4_64i test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_64i test Id: 154 - MULSA
OK   UME::SIMD::SIMD4_64i test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD4_64i test Id: 156 - MMULSA
OK   UME::SIMD::SIMD4_64i test Id: 157 - DIVV
OK   UME::SIMD::SIMD4_64i test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD4_64i test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD4_64i test Id: 160 - MDIVV
OK   UME::SIMD::SIMD4_64i test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD4_64i test Id: 162 - DIVS
OK   UME::SIMD::SIMD4_64i test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 165 - MDIVS
OK   UME::SIMD::SIMD4_64i test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 167 - DIVVA
OK   UME::SIMD::SIMD4_64i test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD4_64i test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD4_64i test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD4_64i test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD4_64i test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_64i test Id: 173 - DIVSA
OK   UME::SIMD::SIMD4_64i test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD4_64i test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD4_64i test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD4_64i test Id: 177 - RCP
OK   UME::SIMD::SIMD4_64i test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD4_64i test Id: 179 - MRCP
OK   UME::SIMD::SIMD4_64i test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD4_64i test Id: 181 - RCPS
OK   UME::SIMD::SIMD4_64i test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD4_64i test Id: 184 - MRCPS
OK   UME::SIMD::SIMD4_64i test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD4_64i test Id: 186 - RCPA
OK   UME::SIMD::SIMD4_64i test Id: 187 - MRCPA
OK   UME::SIMD::SIMD4_64i test Id: 188 - RCPSA
OK   UME::SIMD::SIMD4_64i test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD4_64i test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD4_64i test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD4_64i test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD4_64i test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD4_64i test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD4_64i test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD4_64i test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD4_64i test Id: 201 - CMPNES
OK   UME::SIMD::SIMD4_64i test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD4_64i test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD4_64i test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD4_64i test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD4_64i test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD4_64i test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD4_64i test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD4_64i test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD4_64i test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD4_64i test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD4_64i test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD4_64i test Id: 225 - CMPGES
OK   UME::SIMD::SIMD4_64i test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD4_64i test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD4_64i test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD4_64i test Id: 233 - CMPLES
OK   UME::SIMD::SIMD4_64i test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 238 - CMPEV
OK   UME::SIMD::SIMD4_64i test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD4_64i test Id: 240 - CMPES
OK   UME::SIMD::SIMD4_64i test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 243 - HADD
OK   UME::SIMD::SIMD4_64i test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD4_64i test Id: 245 - HADD gen
OK   UME::SIMD::SIMD4_64i test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD4_64i test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD4_64i test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD4_64i test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD4_64i test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD4_64i test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD4_64i test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD4_64i test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD4_64i test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD4_64i test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD4_64i test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD4_64i test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD4_64i test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD4_64i test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD4_64i test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD4_64i test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD4_64i test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD4_64i test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD4_64i test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD4_64i test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD4_64i test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD4_64i test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD4_64i test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD4_64i test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD4_64i test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD4_64i test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD4_64i test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD4_64i test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD4_64i test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD4_64i test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD4_64i test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD4_64i test Id: 277 - MAXV
OK   UME::SIMD::SIMD4_64i test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD4_64i test Id: 279 - MMAXV
OK   UME::SIMD::SIMD4_64i test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD4_64i test Id: 281 - MAXS
OK   UME::SIMD::SIMD4_64i test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 284 - MMAXS
OK   UME::SIMD::SIMD4_64i test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 286 - MAXVA
OK   UME::SIMD::SIMD4_64i test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD4_64i test Id: 288 - MAXSA
OK   UME::SIMD::SIMD4_64i test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD4_64i test Id: 290 - MINV
OK   UME::SIMD::SIMD4_64i test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD4_64i test Id: 292 - MMINV
OK   UME::SIMD::SIMD4_64i test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD4_64i test Id: 294 - MINS
OK   UME::SIMD::SIMD4_64i test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD4_64i test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD4_64i test Id: 297 - MMINS
OK   UME::SIMD::SIMD4_64i test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 299 - MINVA
OK   UME::SIMD::SIMD4_64i test Id: 300 - MMINVA
OK   UME::SIMD::SIMD4_64i test Id: 301 - MINSA
OK   UME::SIMD::SIMD4_64i test Id: 302 - MMINSA
OK   UME::SIMD::SIMD4_64i test Id: 303 - HMAX
OK   UME::SIMD::SIMD4_64i test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD4_64i test Id: 305 - HMAX
OK   UME::SIMD::SIMD4_64i test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD4_64i test Id: 307 - MHMAX
OK   UME::SIMD::SIMD4_64i test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD4_64i test Id: 309 - IMAX
OK   UME::SIMD::SIMD4_64i test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD4_64i test Id: 311 - MIMAX
OK   UME::SIMD::SIMD4_64i test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD4_64i test Id: 313 - HMIN
OK   UME::SIMD::SIMD4_64i test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD4_64i test Id: 315 - HMIN
OK   UME::SIMD::SIMD4_64i test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD4_64i test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD4_64i test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD4_64i test Id: 319 - IMIN
OK   UME::SIMD::SIMD4_64i test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD4_64i test Id: 321 - MIMIN
OK   UME::SIMD::SIMD4_64i test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD4_64i test Id: 323 - REMV gen
OK   UME::SIMD::SIMD4_64i test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD4_64i test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD4_64i test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD4_64i test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD4_64i test Id: 328 - REMS gen
OK   UME::SIMD::SIMD4_64i test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD4_64i test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD4_64i test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD4_64i test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD4_64i test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD4_64i test Id: 334 - LORV gen
OK   UME::SIMD::SIMD4_64i test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD4_64i test Id: 336 - BANDV
OK   UME::SIMD::SIMD4_64i test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD4_64i test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD4_64i test Id: 339 - MBANDV
OK   UME::SIMD::SIMD4_64i test Id: 340 - MBANDV
OK   UME::SIMD::SIMD4_64i test Id: 341 - BANDS
OK   UME::SIMD::SIMD4_64i test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 346 - MBANDS
OK   UME::SIMD::SIMD4_64i test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 348 - BANDVA
OK   UME::SIMD::SIMD4_64i test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD4_64i test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD4_64i test Id: 351 - BANDSA
OK   UME::SIMD::SIMD4_64i test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD4_64i test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD4_64i test Id: 354 - BORV
OK   UME::SIMD::SIMD4_64i test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD4_64i test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD4_64i test Id: 357 - MBORV
OK   UME::SIMD::SIMD4_64i test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD4_64i test Id: 359 - BORS
OK   UME::SIMD::SIMD4_64i test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 364 - MBORS
OK   UME::SIMD::SIMD4_64i test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 366 - BORVA
OK   UME::SIMD::SIMD4_64i test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD4_64i test Id: 368 - MBORVA
OK   UME::SIMD::SIMD4_64i test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD4_64i test Id: 370 - BORSA
OK   UME::SIMD::SIMD4_64i test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD4_64i test Id: 372 - MBORSA
OK   UME::SIMD::SIMD4_64i test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD4_64i test Id: 374 - BXORV
OK   UME::SIMD::SIMD4_64i test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD4_64i test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD4_64i test Id: 377 - MBXORV
OK   UME::SIMD::SIMD4_64i test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD4_64i test Id: 379 - BXORS
OK   UME::SIMD::SIMD4_64i test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 384 - MBXORS
OK   UME::SIMD::SIMD4_64i test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 386 - BXORVA
OK   UME::SIMD::SIMD4_64i test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD4_64i test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD4_64i test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD4_64i test Id: 390 - BXORSA
OK   UME::SIMD::SIMD4_64i test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD4_64i test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD4_64i test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD4_64i test Id: 394 - BNOT
OK   UME::SIMD::SIMD4_64i test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD4_64i test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD4_64i test Id: 397 - MBNOT
OK   UME::SIMD::SIMD4_64i test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD4_64i test Id: 399 - BNOTA
OK   UME::SIMD::SIMD4_64i test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD4_64i test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD4_64i test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD4_64i test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD4_64i test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD4_64i test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD4_64i test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD4_64i test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD4_64i test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD4_64i test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD4_64i test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD4_64i test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD4_64i test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD4_64i test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD4_64i test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD4_64i test Id: 415 - HBAND
OK   UME::SIMD::SIMD4_64i test Id: 416 - HBAND
OK   UME::SIMD::SIMD4_64i test Id: 417 - MHBAND
OK   UME::SIMD::SIMD4_64i test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD4_64i test Id: 419 - HBANDS
OK   UME::SIMD::SIMD4_64i test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD4_64i test Id: 421 - HBOR
OK   UME::SIMD::SIMD4_64i test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD4_64i test Id: 423 - MHBOR
OK   UME::SIMD::SIMD4_64i test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD4_64i test Id: 425 - HBORS
OK   UME::SIMD::SIMD4_64i test Id: 426 - MHBORS
OK   UME::SIMD::SIMD4_64i test Id: 427 - HBXOR
OK   UME::SIMD::SIMD4_64i test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD4_64i test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD4_64i test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD4_64i test Id: 431 - HBXORS
OK   UME::SIMD::SIMD4_64i test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD4_64i test Id: 433 - GATHERU
OK   UME::SIMD::SIMD4_64i test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD4_64i test Id: 435 - GATHERS
OK   UME::SIMD::SIMD4_64i test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD4_64i test Id: 437 - GATHERV
OK   UME::SIMD::SIMD4_64i test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD4_64i test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD4_64i test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD4_64i test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD4_64i test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD4_64i test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD4_64i test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD4_64i test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD4_64i test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD4_64i test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD4_64i test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD4_64i test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD4_64i test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD4_64i test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD4_64i test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD4_64i test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD4_64i test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD4_64i test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD4_64i test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD4_64i test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD4_64i test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD4_64i test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD4_64i test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD4_64i test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD4_64i test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD4_64i test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD4_64i test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD4_64i test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD4_64i test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD4_64i test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD4_64i test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD4_64i test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD4_64i test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD4_64i test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD4_64i test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD4_64i test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD4_64i test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD4_64i test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD4_64i test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD4_64i test Id: 477 - ROLV
OK   UME::SIMD::SIMD4_64i test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD4_64i test Id: 479 - MROLV
OK   UME::SIMD::SIMD4_64i test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD4_64i test Id: 481 - ROLS
OK   UME::SIMD::SIMD4_64i test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 483 - MROLS
OK   UME::SIMD::SIMD4_64i test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 485 - ROLVA
OK   UME::SIMD::SIMD4_64i test Id: 486 - MROLVA
OK   UME::SIMD::SIMD4_64i test Id: 487 - ROLSA
OK   UME::SIMD::SIMD4_64i test Id: 488 - MROLSA
OK   UME::SIMD::SIMD4_64i test Id: 489 - RORV
OK   UME::SIMD::SIMD4_64i test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD4_64i test Id: 491 - MRORV
OK   UME::SIMD::SIMD4_64i test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD4_64i test Id: 493 - RORS
OK   UME::SIMD::SIMD4_64i test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 495 - MRORS
OK   UME::SIMD::SIMD4_64i test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64i test Id: 497 - RORVA
OK   UME::SIMD::SIMD4_64i test Id: 498 - MRORVA
OK   UME::SIMD::SIMD4_64i test Id: 499 - RORSA
OK   UME::SIMD::SIMD4_64i test Id: 500 - MRORSA
OK   UME::SIMD::SIMD4_64i test Id: 501 - NEG
OK   UME::SIMD::SIMD4_64i test Id: 502 - NEG(operator-)
OK   UME::SIMD::SIMD4_64i test Id: 503 - NEG(function)
OK   UME::SIMD::SIMD4_64i test Id: 504 - MNEG
OK   UME::SIMD::SIMD4_64i test Id: 505 - MNEG(function)
OK   UME::SIMD::SIMD4_64i test Id: 506 - NEGA
OK   UME::SIMD::SIMD4_64i test Id: 507 - MNEGA
OK   UME::SIMD::SIMD4_64i test Id: 508 - ABS
OK   UME::SIMD::SIMD4_64i test Id: 509 - ABS(function)
OK   UME::SIMD::SIMD4_64i test Id: 510 - MABS
OK   UME::SIMD::SIMD4_64i test Id: 511 - MABS(function)
OK   UME::SIMD::SIMD4_64i test Id: 512 - ABSA
OK   UME::SIMD::SIMD4_64i test Id: 513 - MABSA
OK   UME::SIMD::SIMD4_64i test Id: 514 - COPYSIGN gen
OK   UME::SIMD::SIMD4_64i test Id: 515 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD4_64i test Id: 516 - ITOU
OK   UME::SIMD::SIMD4_64i test Id: 517 - PACK
OK   UME::SIMD::SIMD4_64i test Id: 518 - PACKLO
OK   UME::SIMD::SIMD4_64i test Id: 519 - PACKHI
OK   UME::SIMD::SIMD4_64i test Id: 520 - UNPACK
OK   UME::SIMD::SIMD4_64i test Id: 521 - UNPACKLO
OK   UME::SIMD::SIMD4_64i test Id: 522 - UNPACKHi
OK   UME::SIMD::SIMD4_64i test Id: 523 - DEGRADE
OK   UME::SIMD::SIMD4_64f test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD4_64f test Id: 2 - MSTOREA
OK   UME::SIMD::SIMD4_64f test Id: 3 - SET-CONSTR gen
OK   UME::SIMD::SIMD4_64f test Id: 4 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD4_64f test Id: 5 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD4_64f test Id: 6 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD4_64f test Id: 7 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD4_64f test Id: 8 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD4_64f test Id: 9 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD4_64f test Id: 10 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD4_64f test Id: 11 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD4_64f test Id: 12 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD4_64f test Id: 13 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD4_64f test Id: 14 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD4_64f test Id: 15 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD4_64f test Id: 16 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD4_64f test Id: 17 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD4_64f test Id: 18 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD4_64f test Id: 19 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD4_64f test Id: 20 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD4_64f test Id: 21 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD4_64f test Id: 22 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD4_64f test Id: 23 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD4_64f test Id: 24 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD4_64f test Id: 25 - INSERT
OK   UME::SIMD::SIMD4_64f test Id: 26 - INSERT(operator[] =)
OK   UME::SIMD::SIMD4_64f test Id: 27 - EXTRACT
OK   UME::SIMD::SIMD4_64f test Id: 28 - EXTRACT(operator[])
OK   UME::SIMD::SIMD4_64f test Id: 29 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD4_64f test Id: 30 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD4_64f test Id: 31 - ASSIGNV
OK   UME::SIMD::SIMD4_64f test Id: 32 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD4_64f test Id: 33 - MASSIGNV
OK   UME::SIMD::SIMD4_64f test Id: 34 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD4_64f test Id: 35 - ASSIGNS
OK   UME::SIMD::SIMD4_64f test Id: 36 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD4_64f test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD4_64f test Id: 38 - MASSIGNS
OK   UME::SIMD::SIMD4_64f test Id: 39 - LOAD/STORE
OK   UME::SIMD::SIMD4_64f test Id: 40 - MLOAD
OK   UME::SIMD::SIMD4_64f test Id: 41 - MSTORE
OK   UME::SIMD::SIMD4_64f test Id: 42 - LOADA/STOREA
OK   UME::SIMD::SIMD4_64f test Id: 43 - MLOADA
OK   UME::SIMD::SIMD4_64f test Id: 44 - MSTOREA
OK   UME::SIMD::SIMD4_64f test Id: 45 - SWIZZLE
OK   UME::SIMD::SIMD4_64f test Id: 46 - SORTA
OK   UME::SIMD::SIMD4_64f test Id: 47 - SORTD
OK   UME::SIMD::SIMD4_64f test Id: 48 - BLENDV gen
OK   UME::SIMD::SIMD4_64f test Id: 49 - ADDV
OK   UME::SIMD::SIMD4_64f test Id: 50 - ADDV(operator+)
OK   UME::SIMD::SIMD4_64f test Id: 51 - ADDV(function)
OK   UME::SIMD::SIMD4_64f test Id: 52 - ADDV gen
OK   UME::SIMD::SIMD4_64f test Id: 53 - ADDV(operator+) gen
OK   UME::SIMD::SIMD4_64f test Id: 54 - ADDV(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 55 - MADDV
OK   UME::SIMD::SIMD4_64f test Id: 56 - MADDV(function)
OK   UME::SIMD::SIMD4_64f test Id: 57 - MADDV gen
OK   UME::SIMD::SIMD4_64f test Id: 58 - MADDV(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 59 - ADDS
OK   UME::SIMD::SIMD4_64f test Id: 60 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 61 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 62 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD4_64f test Id: 63 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD4_64f test Id: 64 - ADDS gen
OK   UME::SIMD::SIMD4_64f test Id: 65 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD4_64f test Id: 66 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD4_64f test Id: 67 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD4_64f test Id: 68 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD4_64f test Id: 69 - MADDS
OK   UME::SIMD::SIMD4_64f test Id: 70 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 71 - MADDS gen
OK   UME::SIMD::SIMD4_64f test Id: 72 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD4_64f test Id: 73 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD4_64f test Id: 74 - ADDVA
OK   UME::SIMD::SIMD4_64f test Id: 75 - ADDVA(operator+=)
OK   UME::SIMD::SIMD4_64f test Id: 76 - ADDVA gen
OK   UME::SIMD::SIMD4_64f test Id: 77 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD4_64f test Id: 78 - MADDVA
OK   UME::SIMD::SIMD4_64f test Id: 79 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD4_64f test Id: 80 - ADDSA
OK   UME::SIMD::SIMD4_64f test Id: 81 - ADDSA(operator+=)
OK   UME::SIMD::SIMD4_64f test Id: 82 - MADDSA
OK   UME::SIMD::SIMD4_64f test Id: 83 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD4_64f test Id: 84 - SADDV gen
OK   UME::SIMD::SIMD4_64f test Id: 85 - SADDV(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 86 - POSTINC
OK   UME::SIMD::SIMD4_64f test Id: 87 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD4_64f test Id: 88 - POSTINC(function)
OK   UME::SIMD::SIMD4_64f test Id: 89 - MPOSTINC
OK   UME::SIMD::SIMD4_64f test Id: 90 - MPOSTINC(function)
OK   UME::SIMD::SIMD4_64f test Id: 91 - PREFINC
OK   UME::SIMD::SIMD4_64f test Id: 92 - PREFINC(operator++())
OK   UME::SIMD::SIMD4_64f test Id: 93 - PREFINC(function)
OK   UME::SIMD::SIMD4_64f test Id: 94 - MPREFINC
OK   UME::SIMD::SIMD4_64f test Id: 95 - MPREFINC(function)
OK   UME::SIMD::SIMD4_64f test Id: 96 - SUBV
OK   UME::SIMD::SIMD4_64f test Id: 97 - SUBV(operator-)
OK   UME::SIMD::SIMD4_64f test Id: 98 - SUBV(function)
OK   UME::SIMD::SIMD4_64f test Id: 99 - SUBV gen
OK   UME::SIMD::SIMD4_64f test Id: 100 - SUBV(operator-) gen
OK   UME::SIMD::SIMD4_64f test Id: 101 - SUBV(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 102 - MSUBV
OK   UME::SIMD::SIMD4_64f test Id: 103 - MSUBV(function)
OK   UME::SIMD::SIMD4_64f test Id: 104 - MSUBV gen
OK   UME::SIMD::SIMD4_64f test Id: 105 - MSUBV(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 106 - SUBS gen
OK   UME::SIMD::SIMD4_64f test Id: 107 - SUBS(operator-) gen
OK   UME::SIMD::SIMD4_64f test Id: 108 - SUBS(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 109 - MSUBS
OK   UME::SIMD::SIMD4_64f test Id: 110 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 111 - SUBVA
OK   UME::SIMD::SIMD4_64f test Id: 112 - SUBVA(operator-=)
OK   UME::SIMD::SIMD4_64f test Id: 113 - MSUBVA
OK   UME::SIMD::SIMD4_64f test Id: 114 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD4_64f test Id: 115 - SUBSA
OK   UME::SIMD::SIMD4_64f test Id: 116 - MSUBSA
OK   UME::SIMD::SIMD4_64f test Id: 117 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD4_64f test Id: 118 - SUBFROMV
OK   UME::SIMD::SIMD4_64f test Id: 119 - MSUBFROMV
OK   UME::SIMD::SIMD4_64f test Id: 120 - SUBFROMS
OK   UME::SIMD::SIMD4_64f test Id: 121 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 122 - MSUBFROMS
OK   UME::SIMD::SIMD4_64f test Id: 123 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 124 - SUBFROMVA
OK   UME::SIMD::SIMD4_64f test Id: 125 - MSUBFROMVA
OK   UME::SIMD::SIMD4_64f test Id: 126 - SUBFROMSA
OK   UME::SIMD::SIMD4_64f test Id: 127 - MSUBFROMSA
OK   UME::SIMD::SIMD4_64f test Id: 128 - POSTDEC
OK   UME::SIMD::SIMD4_64f test Id: 129 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD4_64f test Id: 130 - POSTDEC(function)
OK   UME::SIMD::SIMD4_64f test Id: 131 - MPOSTDEC
OK   UME::SIMD::SIMD4_64f test Id: 132 - MPOSTDEC(function)
OK   UME::SIMD::SIMD4_64f test Id: 133 - PREFDEC
OK   UME::SIMD::SIMD4_64f test Id: 134 - PREFDEC(operator--())
OK   UME::SIMD::SIMD4_64f test Id: 135 - PREFDEC(function)
OK   UME::SIMD::SIMD4_64f test Id: 136 - MPREFDEC
OK   UME::SIMD::SIMD4_64f test Id: 137 - MPREFDEC(function)
OK   UME::SIMD::SIMD4_64f test Id: 138 - MULV
OK   UME::SIMD::SIMD4_64f test Id: 139 - MULV(operator*)
OK   UME::SIMD::SIMD4_64f test Id: 140 - MULV(function)
OK   UME::SIMD::SIMD4_64f test Id: 141 - MMULV
OK   UME::SIMD::SIMD4_64f test Id: 142 - MMULV(function)
OK   UME::SIMD::SIMD4_64f test Id: 143 - MULS
OK   UME::SIMD::SIMD4_64f test Id: 144 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 145 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 146 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 147 - MMULS
OK   UME::SIMD::SIMD4_64f test Id: 148 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 149 - MULVA
OK   UME::SIMD::SIMD4_64f test Id: 150 - MULVA(operator*)
OK   UME::SIMD::SIMD4_64f test Id: 151 - MULVA gen
OK   UME::SIMD::SIMD4_64f test Id: 152 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD4_64f test Id: 153 - MMULVA
OK   UME::SIMD::SIMD4_64f test Id: 154 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_64f test Id: 155 - MULSA
OK   UME::SIMD::SIMD4_64f test Id: 156 - MULSA(operator*=)
OK   UME::SIMD::SIMD4_64f test Id: 157 - MMULSA
OK   UME::SIMD::SIMD4_64f test Id: 158 - DIVV
OK   UME::SIMD::SIMD4_64f test Id: 159 - DIVV(operator/)
OK   UME::SIMD::SIMD4_64f test Id: 160 - DIVV(function)
OK   UME::SIMD::SIMD4_64f test Id: 161 - MDIVV
OK   UME::SIMD::SIMD4_64f test Id: 162 - MDIVV(function)
OK   UME::SIMD::SIMD4_64f test Id: 163 - DIVS
OK   UME::SIMD::SIMD4_64f test Id: 164 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 165 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 166 - MDIVS
OK   UME::SIMD::SIMD4_64f test Id: 167 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 168 - DIVVA
OK   UME::SIMD::SIMD4_64f test Id: 169 - DIVVA(operator/=)
OK   UME::SIMD::SIMD4_64f test Id: 170 - DIVVA gen
OK   UME::SIMD::SIMD4_64f test Id: 171 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD4_64f test Id: 172 - MDIVVA
OK   UME::SIMD::SIMD4_64f test Id: 173 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD4_64f test Id: 174 - DIVSA
OK   UME::SIMD::SIMD4_64f test Id: 175 - DIVSA(operator/=)
OK   UME::SIMD::SIMD4_64f test Id: 176 - MDIVSA
OK   UME::SIMD::SIMD4_64f test Id: 177 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD4_64f test Id: 178 - RCP
OK   UME::SIMD::SIMD4_64f test Id: 179 - RCP(function)
OK   UME::SIMD::SIMD4_64f test Id: 180 - MRCP
OK   UME::SIMD::SIMD4_64f test Id: 181 - MRCP(function)
OK   UME::SIMD::SIMD4_64f test Id: 182 - RCPS
OK   UME::SIMD::SIMD4_64f test Id: 183 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 184 - RCPS(function)
OK   UME::SIMD::SIMD4_64f test Id: 185 - MRCPS
OK   UME::SIMD::SIMD4_64f test Id: 186 - MRCPS (function)
OK   UME::SIMD::SIMD4_64f test Id: 187 - RCPA
OK   UME::SIMD::SIMD4_64f test Id: 188 - MRCPA
OK   UME::SIMD::SIMD4_64f test Id: 189 - RCPSA
OK   UME::SIMD::SIMD4_64f test Id: 190 - MRCPSA
OK   UME::SIMD::SIMD4_64f test Id: 191 - CMPEQV
OK   UME::SIMD::SIMD4_64f test Id: 192 - CMPEQV(operator==)
OK   UME::SIMD::SIMD4_64f test Id: 193 - CMPEQV(function)
OK   UME::SIMD::SIMD4_64f test Id: 194 - CMPEQS
OK   UME::SIMD::SIMD4_64f test Id: 195 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 196 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 197 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 198 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 199 - CMPNEV
OK   UME::SIMD::SIMD4_64f test Id: 200 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD4_64f test Id: 201 - CMPNEV(function)
OK   UME::SIMD::SIMD4_64f test Id: 202 - CMPNES
OK   UME::SIMD::SIMD4_64f test Id: 203 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 204 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 205 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 206 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 207 - CMPGTV
OK   UME::SIMD::SIMD4_64f test Id: 208 - CMPGTV(operator>)
OK   UME::SIMD::SIMD4_64f test Id: 209 - CMPGTV(function)
OK   UME::SIMD::SIMD4_64f test Id: 210 - CMPGTS
OK   UME::SIMD::SIMD4_64f test Id: 211 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 212 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 213 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 214 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 215 - CMPLTV
OK   UME::SIMD::SIMD4_64f test Id: 216 - CMPLTV(operator<)
OK   UME::SIMD::SIMD4_64f test Id: 217 - CMPLTV(function)
OK   UME::SIMD::SIMD4_64f test Id: 218 - CMPLTS
OK   UME::SIMD::SIMD4_64f test Id: 219 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 220 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 221 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 222 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 223 - CMPGEV
OK   UME::SIMD::SIMD4_64f test Id: 224 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD4_64f test Id: 225 - CMPGEV(function)
OK   UME::SIMD::SIMD4_64f test Id: 226 - CMPGES
OK   UME::SIMD::SIMD4_64f test Id: 227 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 228 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 229 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 230 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 231 - CMPLEV
OK   UME::SIMD::SIMD4_64f test Id: 232 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD4_64f test Id: 233 - CMPLEV(function)
OK   UME::SIMD::SIMD4_64f test Id: 234 - CMPLES
OK   UME::SIMD::SIMD4_64f test Id: 235 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 236 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 237 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 238 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 239 - CMPEV
OK   UME::SIMD::SIMD4_64f test Id: 240 - CMPEV(function)
OK   UME::SIMD::SIMD4_64f test Id: 241 - CMPES
OK   UME::SIMD::SIMD4_64f test Id: 242 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 243 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 244 - HADD
OK   UME::SIMD::SIMD4_64f test Id: 245 - HADD(function)
OK   UME::SIMD::SIMD4_64f test Id: 246 - HADD gen
OK   UME::SIMD::SIMD4_64f test Id: 247 - HADD(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 248 - MHADD gen
OK   UME::SIMD::SIMD4_64f test Id: 249 - MHADD(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 250 - HADDS gen
OK   UME::SIMD::SIMD4_64f test Id: 251 - HADDS(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 252 - MHADD gen
OK   UME::SIMD::SIMD4_64f test Id: 253 - MHADDS(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 254 - HMUL gen
OK   UME::SIMD::SIMD4_64f test Id: 255 - HMUL(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 256 - MHMUL gen
OK   UME::SIMD::SIMD4_64f test Id: 257 - MHMUL(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 258 - HMULS gen
OK   UME::SIMD::SIMD4_64f test Id: 259 - HMULS(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 260 - MHMUL gen
OK   UME::SIMD::SIMD4_64f test Id: 261 - MHMULS(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 262 - FMULADDV
OK   UME::SIMD::SIMD4_64f test Id: 263 - FMULADDV(function)
OK   UME::SIMD::SIMD4_64f test Id: 264 - MFMULADDV
OK   UME::SIMD::SIMD4_64f test Id: 265 - MFMULADDV(function)
OK   UME::SIMD::SIMD4_64f test Id: 266 - FMULSUBV
OK   UME::SIMD::SIMD4_64f test Id: 267 - FMULSUBV(function)
OK   UME::SIMD::SIMD4_64f test Id: 268 - MFMULSUBV
OK   UME::SIMD::SIMD4_64f test Id: 269 - MFMULSUBV(function)
OK   UME::SIMD::SIMD4_64f test Id: 270 - FADDMULV
OK   UME::SIMD::SIMD4_64f test Id: 271 - FADDMULV(function)
OK   UME::SIMD::SIMD4_64f test Id: 272 - MFADDMULV
OK   UME::SIMD::SIMD4_64f test Id: 273 - MFADDMULV(function)
OK   UME::SIMD::SIMD4_64f test Id: 274 - FSUBMULV
OK   UME::SIMD::SIMD4_64f test Id: 275 - FSUBMULV(function)
OK   UME::SIMD::SIMD4_64f test Id: 276 - MFSUBMULV
OK   UME::SIMD::SIMD4_64f test Id: 277 - MFSUBMULV(function)
OK   UME::SIMD::SIMD4_64f test Id: 278 - MAXV
OK   UME::SIMD::SIMD4_64f test Id: 279 - MAXV(function)
OK   UME::SIMD::SIMD4_64f test Id: 280 - MMAXV
OK   UME::SIMD::SIMD4_64f test Id: 281 - MMAXV(function)
OK   UME::SIMD::SIMD4_64f test Id: 282 - MAXS
OK   UME::SIMD::SIMD4_64f test Id: 283 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 284 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 285 - MMAXS
OK   UME::SIMD::SIMD4_64f test Id: 286 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 287 - MAXVA
OK   UME::SIMD::SIMD4_64f test Id: 288 - MMAXVA
OK   UME::SIMD::SIMD4_64f test Id: 289 - MAXSA
OK   UME::SIMD::SIMD4_64f test Id: 290 - MMAXSA
OK   UME::SIMD::SIMD4_64f test Id: 291 - MINV
OK   UME::SIMD::SIMD4_64f test Id: 292 - MINV(function)
OK   UME::SIMD::SIMD4_64f test Id: 293 - MMINV
OK   UME::SIMD::SIMD4_64f test Id: 294 - MMINV(function)
OK   UME::SIMD::SIMD4_64f test Id: 295 - MINS
OK   UME::SIMD::SIMD4_64f test Id: 296 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD4_64f test Id: 297 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD4_64f test Id: 298 - MMINS
OK   UME::SIMD::SIMD4_64f test Id: 299 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD4_64f test Id: 300 - MINVA
OK   UME::SIMD::SIMD4_64f test Id: 301 - MMINVA
OK   UME::SIMD::SIMD4_64f test Id: 302 - MINSA
OK   UME::SIMD::SIMD4_64f test Id: 303 - MMINSA
OK   UME::SIMD::SIMD4_64f test Id: 304 - HMAX
OK   UME::SIMD::SIMD4_64f test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD4_64f test Id: 306 - HMAX
OK   UME::SIMD::SIMD4_64f test Id: 307 - HMAX(function)
OK   UME::SIMD::SIMD4_64f test Id: 308 - MHMAX
OK   UME::SIMD::SIMD4_64f test Id: 309 - MHMAX(function)
OK   UME::SIMD::SIMD4_64f test Id: 310 - IMAX
OK   UME::SIMD::SIMD4_64f test Id: 311 - IMAX(function)
OK   UME::SIMD::SIMD4_64f test Id: 312 - MIMAX
OK   UME::SIMD::SIMD4_64f test Id: 313 - MIMAX(function)
OK   UME::SIMD::SIMD4_64f test Id: 314 - HMIN
OK   UME::SIMD::SIMD4_64f test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD4_64f test Id: 316 - HMIN
OK   UME::SIMD::SIMD4_64f test Id: 317 - HMIN(function)
OK   UME::SIMD::SIMD4_64f test Id: 318 - MHMIN gen
OK   UME::SIMD::SIMD4_64f test Id: 319 - MHMIN(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 320 - IMIN
OK   UME::SIMD::SIMD4_64f test Id: 321 - IMIN(function)
OK   UME::SIMD::SIMD4_64f test Id: 322 - MIMIN
OK   UME::SIMD::SIMD4_64f test Id: 323 - MIMIN(function)
OK   UME::SIMD::SIMD4_64f test Id: 324 - GATHERU
OK   UME::SIMD::SIMD4_64f test Id: 325 - MGATHERU
OK   UME::SIMD::SIMD4_64f test Id: 326 - GATHERS
OK   UME::SIMD::SIMD4_64f test Id: 327 - MGATHERS
OK   UME::SIMD::SIMD4_64f test Id: 328 - GATHERV
OK   UME::SIMD::SIMD4_64f test Id: 329 - MGATHERV
OK   UME::SIMD::SIMD4_64f test Id: 330 - SCATTERU
OK   UME::SIMD::SIMD4_64f test Id: 331 - MSCATTERU
OK   UME::SIMD::SIMD4_64f test Id: 332 - SCATTERS
OK   UME::SIMD::SIMD4_64f test Id: 333 - MSCATTERS
OK   UME::SIMD::SIMD4_64f test Id: 334 - SCATTERV
OK   UME::SIMD::SIMD4_64f test Id: 335 - MSCATTERV
OK   UME::SIMD::SIMD4_64f test Id: 336 - NEG
OK   UME::SIMD::SIMD4_64f test Id: 337 - NEG(operator-)
OK   UME::SIMD::SIMD4_64f test Id: 338 - NEG(function)
OK   UME::SIMD::SIMD4_64f test Id: 339 - MNEG
OK   UME::SIMD::SIMD4_64f test Id: 340 - MNEG(function)
OK   UME::SIMD::SIMD4_64f test Id: 341 - NEGA
OK   UME::SIMD::SIMD4_64f test Id: 342 - MNEGA
OK   UME::SIMD::SIMD4_64f test Id: 343 - ABS
OK   UME::SIMD::SIMD4_64f test Id: 344 - ABS(function)
OK   UME::SIMD::SIMD4_64f test Id: 345 - MABS
OK   UME::SIMD::SIMD4_64f test Id: 346 - MABS(function)
OK   UME::SIMD::SIMD4_64f test Id: 347 - ABSA
OK   UME::SIMD::SIMD4_64f test Id: 348 - MABSA
OK   UME::SIMD::SIMD4_64f test Id: 349 - COPYSIGN gen
OK   UME::SIMD::SIMD4_64f test Id: 350 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 351 - ROUND
OK   UME::SIMD::SIMD4_64f test Id: 352 - ROUND(function)
OK   UME::SIMD::SIMD4_64f test Id: 353 - MROUND
OK   UME::SIMD::SIMD4_64f test Id: 354 - MROUND(function)
OK   UME::SIMD::SIMD4_64f test Id: 355 - TRUNC gen
OK   UME::SIMD::SIMD4_64f test Id: 356 - TRUNC(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 357 - MTRUNC gen
OK   UME::SIMD::SIMD4_64f test Id: 358 - MTRUNC(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 359 - FLOOR
OK   UME::SIMD::SIMD4_64f test Id: 360 - FLOOR(function)
OK   UME::SIMD::SIMD4_64f test Id: 361 - MFLOOR
OK   UME::SIMD::SIMD4_64f test Id: 362 - MFLOOR(function)
OK   UME::SIMD::SIMD4_64f test Id: 363 - CEIL
OK   UME::SIMD::SIMD4_64f test Id: 364 - CEIL(function)
OK   UME::SIMD::SIMD4_64f test Id: 365 - MCEIL
OK   UME::SIMD::SIMD4_64f test Id: 366 - MCEIL(function)
OK   UME::SIMD::SIMD4_64f test Id: 367 - ISFIN
OK   UME::SIMD::SIMD4_64f test Id: 368 - ISFIN(function)
OK   UME::SIMD::SIMD4_64f test Id: 369 - ISINF
OK   UME::SIMD::SIMD4_64f test Id: 370 - ISINF(function)
OK   UME::SIMD::SIMD4_64f test Id: 371 - ISAN
OK   UME::SIMD::SIMD4_64f test Id: 372 - ISAN(function)
OK   UME::SIMD::SIMD4_64f test Id: 373 - ISNAN
OK   UME::SIMD::SIMD4_64f test Id: 374 - ISNAN(function)
OK   UME::SIMD::SIMD4_64f test Id: 375 - ISNORM
OK   UME::SIMD::SIMD4_64f test Id: 376 - ISNORM(function)
OK   UME::SIMD::SIMD4_64f test Id: 377 - ISSUB
OK   UME::SIMD::SIMD4_64f test Id: 378 - ISSUB(function)
OK   UME::SIMD::SIMD4_64f test Id: 379 - ISZERO
OK   UME::SIMD::SIMD4_64f test Id: 380 - ISZERO(function)
OK   UME::SIMD::SIMD4_64f test Id: 381 - ISZEROSUB
OK   UME::SIMD::SIMD4_64f test Id: 382 - ISZEROSUB(function)
OK   UME::SIMD::SIMD4_64f test Id: 383 - SQR
OK   UME::SIMD::SIMD4_64f test Id: 384 - SQR(function)
OK   UME::SIMD::SIMD4_64f test Id: 385 - MSQR
OK   UME::SIMD::SIMD4_64f test Id: 386 - MSQR(function)
OK   UME::SIMD::SIMD4_64f test Id: 387 - SQRA
OK   UME::SIMD::SIMD4_64f test Id: 388 - MSQRA
OK   UME::SIMD::SIMD4_64f test Id: 389 - SQRT
OK   UME::SIMD::SIMD4_64f test Id: 390 - SQRT(function)
OK   UME::SIMD::SIMD4_64f test Id: 391 - MSQRT
OK   UME::SIMD::SIMD4_64f test Id: 392 - MSQRT
OK   UME::SIMD::SIMD4_64f test Id: 393 - SQRTA
OK   UME::SIMD::SIMD4_64f test Id: 394 - MSQRTA
OK   UME::SIMD::SIMD4_64f test Id: 395 - EXP gen
OK   UME::SIMD::SIMD4_64f test Id: 396 - EXP(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 397 - MEXP gen
OK   UME::SIMD::SIMD4_64f test Id: 398 - MEXP(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 399 - LOG gen
OK   UME::SIMD::SIMD4_64f test Id: 400 - LOG(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 401 - LOG2 gen
OK   UME::SIMD::SIMD4_64f test Id: 402 - LOG2(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 403 - LOG10 gen
OK   UME::SIMD::SIMD4_64f test Id: 404 - LOG10(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 405 - SIN gen
OK   UME::SIMD::SIMD4_64f test Id: 406 - SIN(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 407 - COS gen
OK   UME::SIMD::SIMD4_64f test Id: 408 - COS(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 409 - TAN gen
OK   UME::SIMD::SIMD4_64f test Id: 410 - TAN(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 411 - CTAN gen
OK   UME::SIMD::SIMD4_64f test Id: 412 - CTAN(function) gen
OK   UME::SIMD::SIMD4_64f test Id: 413 - FTOU gen
OK   UME::SIMD::SIMD4_64f test Id: 414 - FTOI gen
OK   UME::SIMD::SIMD4_64f test Id: 415 - PACK
OK   UME::SIMD::SIMD4_64f test Id: 416 - PACKLO
OK   UME::SIMD::SIMD4_64f test Id: 417 - PACKHI
OK   UME::SIMD::SIMD4_64f test Id: 418 - UNPACK
OK   UME::SIMD::SIMD4_64f test Id: 419 - UNPACKLO
OK   UME::SIMD::SIMD4_64f test Id: 420 - UNPACKHi
OK   UME::SIMD::SIMD4_64f test Id: 421 - DEGRADE
OK   UME::SIMD::SIMD64_8u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD64_8u test Id: 2 - FULL-CONSTR
OK   UME::SIMD::SIMD64_8u test Id: 3 - SET-CONSTR gen
OK   UME::SIMD::SIMD64_8u test Id: 4 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD64_8u test Id: 5 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD64_8u test Id: 6 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD64_8u test Id: 7 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD64_8u test Id: 8 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD64_8u test Id: 9 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD64_8u test Id: 10 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD64_8u test Id: 11 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD64_8u test Id: 12 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD64_8u test Id: 13 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD64_8u test Id: 14 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD64_8u test Id: 15 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD64_8u test Id: 16 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD64_8u test Id: 17 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD64_8u test Id: 18 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD64_8u test Id: 19 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD64_8u test Id: 20 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD64_8u test Id: 21 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD64_8u test Id: 22 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD64_8u test Id: 23 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD64_8u test Id: 24 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD64_8u test Id: 25 - INSERT
OK   UME::SIMD::SIMD64_8u test Id: 26 - INSERT(operator[] =)
OK   UME::SIMD::SIMD64_8u test Id: 27 - EXTRACT
OK   UME::SIMD::SIMD64_8u test Id: 28 - EXTRACT(operator[])
OK   UME::SIMD::SIMD64_8u test Id: 29 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD64_8u test Id: 30 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD64_8u test Id: 31 - ASSIGNV
OK   UME::SIMD::SIMD64_8u test Id: 32 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD64_8u test Id: 33 - MASSIGNV
OK   UME::SIMD::SIMD64_8u test Id: 34 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD64_8u test Id: 35 - ASSIGNS
OK   UME::SIMD::SIMD64_8u test Id: 36 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD64_8u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD64_8u test Id: 38 - MASSIGNS
OK   UME::SIMD::SIMD64_8u test Id: 39 - LOAD/STORE
OK   UME::SIMD::SIMD64_8u test Id: 40 - MLOAD
OK   UME::SIMD::SIMD64_8u test Id: 41 - MSTORE
OK   UME::SIMD::SIMD64_8u test Id: 42 - LOADA/STOREA
OK   UME::SIMD::SIMD64_8u test Id: 43 - MLOADA
OK   UME::SIMD::SIMD64_8u test Id: 44 - MSTOREA
OK   UME::SIMD::SIMD64_8u test Id: 45 - SWIZZLE
OK   UME::SIMD::SIMD64_8u test Id: 46 - SORTA
OK   UME::SIMD::SIMD64_8u test Id: 47 - SORTD
OK   UME::SIMD::SIMD64_8u test Id: 48 - BLENDV gen
OK   UME::SIMD::SIMD64_8u test Id: 49 - ADDV
OK   UME::SIMD::SIMD64_8u test Id: 50 - ADDV(operator+)
OK   UME::SIMD::SIMD64_8u test Id: 51 - ADDV(function)
OK   UME::SIMD::SIMD64_8u test Id: 52 - ADDV gen
OK   UME::SIMD::SIMD64_8u test Id: 53 - ADDV(operator+) gen
OK   UME::SIMD::SIMD64_8u test Id: 54 - ADDV(function) gen
OK   UME::SIMD::SIMD64_8u test Id: 55 - MADDV
OK   UME::SIMD::SIMD64_8u test Id: 56 - MADDV(function)
OK   UME::SIMD::SIMD64_8u test Id: 57 - MADDV gen
OK   UME::SIMD::SIMD64_8u test Id: 58 - MADDV(function) gen
OK   UME::SIMD::SIMD64_8u test Id: 59 - ADDS
OK   UME::SIMD::SIMD64_8u test Id: 60 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 61 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 62 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD64_8u test Id: 63 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD64_8u test Id: 64 - ADDS gen
OK   UME::SIMD::SIMD64_8u test Id: 65 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD64_8u test Id: 66 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD64_8u test Id: 67 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD64_8u test Id: 68 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD64_8u test Id: 69 - MADDS
OK   UME::SIMD::SIMD64_8u test Id: 70 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 71 - MADDS gen
OK   UME::SIMD::SIMD64_8u test Id: 72 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD64_8u test Id: 73 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD64_8u test Id: 74 - ADDVA
OK   UME::SIMD::SIMD64_8u test Id: 75 - ADDVA(operator+=)
OK   UME::SIMD::SIMD64_8u test Id: 76 - ADDVA gen
OK   UME::SIMD::SIMD64_8u test Id: 77 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD64_8u test Id: 78 - MADDVA
OK   UME::SIMD::SIMD64_8u test Id: 79 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD64_8u test Id: 80 - ADDSA
OK   UME::SIMD::SIMD64_8u test Id: 81 - ADDSA(operator+=)
OK   UME::SIMD::SIMD64_8u test Id: 82 - MADDSA
OK   UME::SIMD::SIMD64_8u test Id: 83 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD64_8u test Id: 84 - SADDV gen
OK   UME::SIMD::SIMD64_8u test Id: 85 - SADDV(function) gen
OK   UME::SIMD::SIMD64_8u test Id: 86 - POSTINC
OK   UME::SIMD::SIMD64_8u test Id: 87 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD64_8u test Id: 88 - POSTINC(function)
OK   UME::SIMD::SIMD64_8u test Id: 89 - MPOSTINC
OK   UME::SIMD::SIMD64_8u test Id: 90 - MPOSTINC(function)
OK   UME::SIMD::SIMD64_8u test Id: 91 - PREFINC
OK   UME::SIMD::SIMD64_8u test Id: 92 - PREFINC(operator++())
OK   UME::SIMD::SIMD64_8u test Id: 93 - PREFINC(function)
OK   UME::SIMD::SIMD64_8u test Id: 94 - MPREFINC
OK   UME::SIMD::SIMD64_8u test Id: 95 - MPREFINC(function)
OK   UME::SIMD::SIMD64_8u test Id: 96 - SUBV
OK   UME::SIMD::SIMD64_8u test Id: 97 - SUBV(operator-)
OK   UME::SIMD::SIMD64_8u test Id: 98 - SUBV(function)
OK   UME::SIMD::SIMD64_8u test Id: 99 - SUBV gen
OK   UME::SIMD::SIMD64_8u test Id: 100 - SUBV(operator-) gen
OK   UME::SIMD::SIMD64_8u test Id: 101 - SUBV(function) gen
OK   UME::SIMD::SIMD64_8u test Id: 102 - MSUBV
OK   UME::SIMD::SIMD64_8u test Id: 103 - MSUBV(function)
OK   UME::SIMD::SIMD64_8u test Id: 104 - MSUBV gen
OK   UME::SIMD::SIMD64_8u test Id: 105 - MSUBV(function) gen
OK   UME::SIMD::SIMD64_8u test Id: 106 - SUBS gen
OK   UME::SIMD::SIMD64_8u test Id: 107 - SUBS(operator-) gen
OK   UME::SIMD::SIMD64_8u test Id: 108 - SUBS(function) gen
OK   UME::SIMD::SIMD64_8u test Id: 109 - MSUBS
OK   UME::SIMD::SIMD64_8u test Id: 110 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 111 - SUBVA
OK   UME::SIMD::SIMD64_8u test Id: 112 - SUBVA(operator-=)
OK   UME::SIMD::SIMD64_8u test Id: 113 - MSUBVA
OK   UME::SIMD::SIMD64_8u test Id: 114 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD64_8u test Id: 115 - SUBSA
OK   UME::SIMD::SIMD64_8u test Id: 116 - MSUBSA
OK   UME::SIMD::SIMD64_8u test Id: 117 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD64_8u test Id: 118 - SUBFROMV
OK   UME::SIMD::SIMD64_8u test Id: 119 - MSUBFROMV
OK   UME::SIMD::SIMD64_8u test Id: 120 - SUBFROMS
OK   UME::SIMD::SIMD64_8u test Id: 121 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 122 - MSUBFROMS
OK   UME::SIMD::SIMD64_8u test Id: 123 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 124 - SUBFROMVA
OK   UME::SIMD::SIMD64_8u test Id: 125 - MSUBFROMVA
OK   UME::SIMD::SIMD64_8u test Id: 126 - SUBFROMSA
OK   UME::SIMD::SIMD64_8u test Id: 127 - MSUBFROMSA
OK   UME::SIMD::SIMD64_8u test Id: 128 - POSTDEC
OK   UME::SIMD::SIMD64_8u test Id: 129 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD64_8u test Id: 130 - POSTDEC(function)
OK   UME::SIMD::SIMD64_8u test Id: 131 - MPOSTDEC
OK   UME::SIMD::SIMD64_8u test Id: 132 - MPOSTDEC(function)
OK   UME::SIMD::SIMD64_8u test Id: 133 - PREFDEC
OK   UME::SIMD::SIMD64_8u test Id: 134 - PREFDEC(operator--())
OK   UME::SIMD::SIMD64_8u test Id: 135 - PREFDEC(function)
OK   UME::SIMD::SIMD64_8u test Id: 136 - MPREFDEC
OK   UME::SIMD::SIMD64_8u test Id: 137 - MPREFDEC(function)
OK   UME::SIMD::SIMD64_8u test Id: 138 - MULV
OK   UME::SIMD::SIMD64_8u test Id: 139 - MULV(operator*)
OK   UME::SIMD::SIMD64_8u test Id: 140 - MULV(function)
OK   UME::SIMD::SIMD64_8u test Id: 141 - MMULV
OK   UME::SIMD::SIMD64_8u test Id: 142 - MMULV(function)
OK   UME::SIMD::SIMD64_8u test Id: 143 - MULS
OK   UME::SIMD::SIMD64_8u test Id: 144 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 145 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 146 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 147 - MMULS
OK   UME::SIMD::SIMD64_8u test Id: 148 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 149 - MULVA
OK   UME::SIMD::SIMD64_8u test Id: 150 - MULVA(operator*)
OK   UME::SIMD::SIMD64_8u test Id: 151 - MULVA gen
OK   UME::SIMD::SIMD64_8u test Id: 152 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD64_8u test Id: 153 - MMULVA
OK   UME::SIMD::SIMD64_8u test Id: 154 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD64_8u test Id: 155 - MULSA
OK   UME::SIMD::SIMD64_8u test Id: 156 - MULSA(operator*=)
OK   UME::SIMD::SIMD64_8u test Id: 157 - MMULSA
OK   UME::SIMD::SIMD64_8u test Id: 158 - DIVV
OK   UME::SIMD::SIMD64_8u test Id: 159 - DIVV(operator/)
OK   UME::SIMD::SIMD64_8u test Id: 160 - DIVV(function)
OK   UME::SIMD::SIMD64_8u test Id: 161 - MDIVV
OK   UME::SIMD::SIMD64_8u test Id: 162 - MDIVV(function)
OK   UME::SIMD::SIMD64_8u test Id: 163 - DIVS
OK   UME::SIMD::SIMD64_8u test Id: 164 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 165 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 166 - MDIVS
OK   UME::SIMD::SIMD64_8u test Id: 167 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 168 - DIVVA
OK   UME::SIMD::SIMD64_8u test Id: 169 - DIVVA(operator/=)
OK   UME::SIMD::SIMD64_8u test Id: 170 - DIVVA gen
OK   UME::SIMD::SIMD64_8u test Id: 171 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD64_8u test Id: 172 - MDIVVA
OK   UME::SIMD::SIMD64_8u test Id: 173 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD64_8u test Id: 174 - DIVSA
OK   UME::SIMD::SIMD64_8u test Id: 175 - DIVSA(operator/=)
OK   UME::SIMD::SIMD64_8u test Id: 176 - MDIVSA
OK   UME::SIMD::SIMD64_8u test Id: 177 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD64_8u test Id: 178 - RCP
OK   UME::SIMD::SIMD64_8u test Id: 179 - RCP(function)
OK   UME::SIMD::SIMD64_8u test Id: 180 - MRCP
OK   UME::SIMD::SIMD64_8u test Id: 181 - MRCP(function)
OK   UME::SIMD::SIMD64_8u test Id: 182 - RCPS
OK   UME::SIMD::SIMD64_8u test Id: 183 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 184 - RCPS(function)
OK   UME::SIMD::SIMD64_8u test Id: 185 - MRCPS
OK   UME::SIMD::SIMD64_8u test Id: 186 - MRCPS (function)
OK   UME::SIMD::SIMD64_8u test Id: 187 - RCPA
OK   UME::SIMD::SIMD64_8u test Id: 188 - MRCPA
OK   UME::SIMD::SIMD64_8u test Id: 189 - RCPSA
OK   UME::SIMD::SIMD64_8u test Id: 190 - MRCPSA
OK   UME::SIMD::SIMD64_8u test Id: 191 - CMPEQV
OK   UME::SIMD::SIMD64_8u test Id: 192 - CMPEQV(operator==)
OK   UME::SIMD::SIMD64_8u test Id: 193 - CMPEQV(function)
OK   UME::SIMD::SIMD64_8u test Id: 194 - CMPEQS
OK   UME::SIMD::SIMD64_8u test Id: 195 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 196 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 197 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 198 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 199 - CMPNEV
OK   UME::SIMD::SIMD64_8u test Id: 200 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD64_8u test Id: 201 - CMPNEV(function)
OK   UME::SIMD::SIMD64_8u test Id: 202 - CMPNES
OK   UME::SIMD::SIMD64_8u test Id: 203 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 204 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 205 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 206 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 207 - CMPGTV
OK   UME::SIMD::SIMD64_8u test Id: 208 - CMPGTV(operator>)
OK   UME::SIMD::SIMD64_8u test Id: 209 - CMPGTV(function)
OK   UME::SIMD::SIMD64_8u test Id: 210 - CMPGTS
OK   UME::SIMD::SIMD64_8u test Id: 211 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 212 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 213 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 214 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 215 - CMPLTV
OK   UME::SIMD::SIMD64_8u test Id: 216 - CMPLTV(operator<)
OK   UME::SIMD::SIMD64_8u test Id: 217 - CMPLTV(function)
OK   UME::SIMD::SIMD64_8u test Id: 218 - CMPLTS
OK   UME::SIMD::SIMD64_8u test Id: 219 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 220 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 221 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 222 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 223 - CMPGEV
OK   UME::SIMD::SIMD64_8u test Id: 224 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD64_8u test Id: 225 - CMPGEV(function)
OK   UME::SIMD::SIMD64_8u test Id: 226 - CMPGES
OK   UME::SIMD::SIMD64_8u test Id: 227 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 228 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 229 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 230 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 231 - CMPLEV
OK   UME::SIMD::SIMD64_8u test Id: 232 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD64_8u test Id: 233 - CMPLEV(function)
OK   UME::SIMD::SIMD64_8u test Id: 234 - CMPLES
OK   UME::SIMD::SIMD64_8u test Id: 235 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 236 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 237 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 238 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 239 - CMPEV
OK   UME::SIMD::SIMD64_8u test Id: 240 - CMPEV(function)
OK   UME::SIMD::SIMD64_8u test Id: 241 - CMPES
OK   UME::SIMD::SIMD64_8u test Id: 242 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 243 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 244 - HADD
OK   UME::SIMD::SIMD64_8u test Id: 245 - HADD(function)
OK   UME::SIMD::SIMD64_8u test Id: 246 - HADD gen
OK   UME::SIMD::SIMD64_8u test Id: 247 - HADD(function) gen
OK   UME::SIMD::SIMD64_8u test Id: 248 - MHADD gen
OK   UME::SIMD::SIMD64_8u test Id: 249 - MHADD(function) gen
OK   UME::SIMD::SIMD64_8u test Id: 250 - HADDS gen
OK   UME::SIMD::SIMD64_8u test Id: 251 - HADDS(function) gen
OK   UME::SIMD::SIMD64_8u test Id: 252 - MHADD gen
OK   UME::SIMD::SIMD64_8u test Id: 253 - MHADDS(function) gen
OK   UME::SIMD::SIMD64_8u test Id: 254 - HMUL gen
OK   UME::SIMD::SIMD64_8u test Id: 255 - HMUL(function) gen
OK   UME::SIMD::SIMD64_8u test Id: 256 - MHMUL gen
OK   UME::SIMD::SIMD64_8u test Id: 257 - MHMUL(function) gen
OK   UME::SIMD::SIMD64_8u test Id: 258 - HMULS gen
OK   UME::SIMD::SIMD64_8u test Id: 259 - HMULS(function) gen
OK   UME::SIMD::SIMD64_8u test Id: 260 - MHMUL gen
OK   UME::SIMD::SIMD64_8u test Id: 261 - MHMULS(function) gen
OK   UME::SIMD::SIMD64_8u test Id: 262 - FMULADDV
OK   UME::SIMD::SIMD64_8u test Id: 263 - FMULADDV(function)
OK   UME::SIMD::SIMD64_8u test Id: 264 - MFMULADDV
OK   UME::SIMD::SIMD64_8u test Id: 265 - MFMULADDV(function)
OK   UME::SIMD::SIMD64_8u test Id: 266 - FMULSUBV
OK   UME::SIMD::SIMD64_8u test Id: 267 - FMULSUBV(function)
OK   UME::SIMD::SIMD64_8u test Id: 268 - MFMULSUBV
OK   UME::SIMD::SIMD64_8u test Id: 269 - MFMULSUBV(function)
OK   UME::SIMD::SIMD64_8u test Id: 270 - FADDMULV
OK   UME::SIMD::SIMD64_8u test Id: 271 - FADDMULV(function)
OK   UME::SIMD::SIMD64_8u test Id: 272 - MFADDMULV
OK   UME::SIMD::SIMD64_8u test Id: 273 - MFADDMULV(function)
OK   UME::SIMD::SIMD64_8u test Id: 274 - FSUBMULV
OK   UME::SIMD::SIMD64_8u test Id: 275 - FSUBMULV(function)
OK   UME::SIMD::SIMD64_8u test Id: 276 - MFSUBMULV
OK   UME::SIMD::SIMD64_8u test Id: 277 - MFSUBMULV(function)
OK   UME::SIMD::SIMD64_8u test Id: 278 - MAXV
OK   UME::SIMD::SIMD64_8u test Id: 279 - MAXV(function)
OK   UME::SIMD::SIMD64_8u test Id: 280 - MMAXV
OK   UME::SIMD::SIMD64_8u test Id: 281 - MMAXV(function)
OK   UME::SIMD::SIMD64_8u test Id: 282 - MAXS
OK   UME::SIMD::SIMD64_8u test Id: 283 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 284 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 285 - MMAXS
OK   UME::SIMD::SIMD64_8u test Id: 286 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 287 - MAXVA
OK   UME::SIMD::SIMD64_8u test Id: 288 - MMAXVA
OK   UME::SIMD::SIMD64_8u test Id: 289 - MAXSA
OK   UME::SIMD::SIMD64_8u test Id: 290 - MMAXSA
OK   UME::SIMD::SIMD64_8u test Id: 291 - MINV
OK   UME::SIMD::SIMD64_8u test Id: 292 - MINV(function)
OK   UME::SIMD::SIMD64_8u test Id: 293 - MMINV
OK   UME::SIMD::SIMD64_8u test Id: 294 - MMINV(function)
OK   UME::SIMD::SIMD64_8u test Id: 295 - MINS
OK   UME::SIMD::SIMD64_8u test Id: 296 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD64_8u test Id: 297 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD64_8u test Id: 298 - MMINS
OK   UME::SIMD::SIMD64_8u test Id: 299 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 300 - MINVA
OK   UME::SIMD::SIMD64_8u test Id: 301 - MMINVA
OK   UME::SIMD::SIMD64_8u test Id: 302 - MINSA
OK   UME::SIMD::SIMD64_8u test Id: 303 - MMINSA
OK   UME::SIMD::SIMD64_8u test Id: 304 - HMAX
OK   UME::SIMD::SIMD64_8u test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD64_8u test Id: 306 - HMAX
OK   UME::SIMD::SIMD64_8u test Id: 307 - HMAX(function)
OK   UME::SIMD::SIMD64_8u test Id: 308 - MHMAX
OK   UME::SIMD::SIMD64_8u test Id: 309 - MHMAX(function)
OK   UME::SIMD::SIMD64_8u test Id: 310 - IMAX
OK   UME::SIMD::SIMD64_8u test Id: 311 - IMAX(function)
OK   UME::SIMD::SIMD64_8u test Id: 312 - MIMAX
OK   UME::SIMD::SIMD64_8u test Id: 313 - MIMAX(function)
OK   UME::SIMD::SIMD64_8u test Id: 314 - HMIN
OK   UME::SIMD::SIMD64_8u test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD64_8u test Id: 316 - HMIN
OK   UME::SIMD::SIMD64_8u test Id: 317 - HMIN(function)
OK   UME::SIMD::SIMD64_8u test Id: 318 - MHMIN gen
OK   UME::SIMD::SIMD64_8u test Id: 319 - MHMIN(function) gen
OK   UME::SIMD::SIMD64_8u test Id: 320 - IMIN
OK   UME::SIMD::SIMD64_8u test Id: 321 - IMIN(function)
OK   UME::SIMD::SIMD64_8u test Id: 322 - MIMIN
OK   UME::SIMD::SIMD64_8u test Id: 323 - MIMIN(function)
OK   UME::SIMD::SIMD64_8u test Id: 324 - REMV gen
OK   UME::SIMD::SIMD64_8u test Id: 325 - REMV(operator%) gen
OK   UME::SIMD::SIMD64_8u test Id: 326 - REMV(function) gen
OK   UME::SIMD::SIMD64_8u test Id: 327 - MREMV gen
OK   UME::SIMD::SIMD64_8u test Id: 328 - MREMV(function) gen
OK   UME::SIMD::SIMD64_8u test Id: 329 - REMS gen
OK   UME::SIMD::SIMD64_8u test Id: 330 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD64_8u test Id: 331 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD64_8u test Id: 332 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD64_8u test Id: 333 - LANDV gen
OK   UME::SIMD::SIMD64_8u test Id: 334 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD64_8u test Id: 335 - LORV gen
OK   UME::SIMD::SIMD64_8u test Id: 336 - LORV gen (operator ||)
OK   UME::SIMD::SIMD64_8u test Id: 337 - BANDV
OK   UME::SIMD::SIMD64_8u test Id: 338 - BANDV(operator&)
OK   UME::SIMD::SIMD64_8u test Id: 339 - BANDV(function)
OK   UME::SIMD::SIMD64_8u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD64_8u test Id: 341 - MBANDV
OK   UME::SIMD::SIMD64_8u test Id: 342 - BANDS
OK   UME::SIMD::SIMD64_8u test Id: 343 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 344 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 345 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 346 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 347 - MBANDS
OK   UME::SIMD::SIMD64_8u test Id: 348 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 349 - BANDVA
OK   UME::SIMD::SIMD64_8u test Id: 350 - MBANDVA
OK   UME::SIMD::SIMD64_8u test Id: 351 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD64_8u test Id: 352 - BANDSA
OK   UME::SIMD::SIMD64_8u test Id: 353 - MBANDSA
OK   UME::SIMD::SIMD64_8u test Id: 354 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD64_8u test Id: 355 - BORV
OK   UME::SIMD::SIMD64_8u test Id: 356 - BORV(operator |)
OK   UME::SIMD::SIMD64_8u test Id: 357 - BORV(function)
OK   UME::SIMD::SIMD64_8u test Id: 358 - MBORV
OK   UME::SIMD::SIMD64_8u test Id: 359 - MBORV(function)
OK   UME::SIMD::SIMD64_8u test Id: 360 - BORS
OK   UME::SIMD::SIMD64_8u test Id: 361 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 362 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 363 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 364 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 365 - MBORS
OK   UME::SIMD::SIMD64_8u test Id: 366 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 367 - BORVA
OK   UME::SIMD::SIMD64_8u test Id: 368 - BORVA(operator|=)
OK   UME::SIMD::SIMD64_8u test Id: 369 - MBORVA
OK   UME::SIMD::SIMD64_8u test Id: 370 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD64_8u test Id: 371 - BORSA
OK   UME::SIMD::SIMD64_8u test Id: 372 - BORSA(operator|=)
OK   UME::SIMD::SIMD64_8u test Id: 373 - MBORSA
OK   UME::SIMD::SIMD64_8u test Id: 374 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD64_8u test Id: 375 - BXORV
OK   UME::SIMD::SIMD64_8u test Id: 376 - BXORV(operator^
OK   UME::SIMD::SIMD64_8u test Id: 377 - BXORV(function
OK   UME::SIMD::SIMD64_8u test Id: 378 - MBXORV
OK   UME::SIMD::SIMD64_8u test Id: 379 - MBXORV(function)
OK   UME::SIMD::SIMD64_8u test Id: 380 - BXORS
OK   UME::SIMD::SIMD64_8u test Id: 381 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 382 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 383 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 384 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 385 - MBXORS
OK   UME::SIMD::SIMD64_8u test Id: 386 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 387 - BXORVA
OK   UME::SIMD::SIMD64_8u test Id: 388 - BXORVA(operator^=)
OK   UME::SIMD::SIMD64_8u test Id: 389 - MBXORVA
OK   UME::SIMD::SIMD64_8u test Id: 390 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD64_8u test Id: 391 - BXORSA
OK   UME::SIMD::SIMD64_8u test Id: 392 - BXORSA(operator^=)
OK   UME::SIMD::SIMD64_8u test Id: 393 - MBXORSA
OK   UME::SIMD::SIMD64_8u test Id: 394 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD64_8u test Id: 395 - BNOT
OK   UME::SIMD::SIMD64_8u test Id: 396 - BNOT(operator!)
OK   UME::SIMD::SIMD64_8u test Id: 397 - BNOT(function)
OK   UME::SIMD::SIMD64_8u test Id: 398 - MBNOT
OK   UME::SIMD::SIMD64_8u test Id: 399 - MBNOT(function)
OK   UME::SIMD::SIMD64_8u test Id: 400 - BNOTA
OK   UME::SIMD::SIMD64_8u test Id: 401 - MBNOTA
OK   UME::SIMD::SIMD64_8u test Id: 402 - BANDNOTV
OK   UME::SIMD::SIMD64_8u test Id: 403 - BANDNOTV (function)
OK   UME::SIMD::SIMD64_8u test Id: 404 - MBANDNOTV
OK   UME::SIMD::SIMD64_8u test Id: 405 - MBANDNOTV (function)
OK   UME::SIMD::SIMD64_8u test Id: 406 - BANDNOTS
OK   UME::SIMD::SIMD64_8u test Id: 407 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD64_8u test Id: 408 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD64_8u test Id: 409 - MBANDNOTS
OK   UME::SIMD::SIMD64_8u test Id: 410 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD64_8u test Id: 411 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD64_8u test Id: 412 - BANDNOTVA
OK   UME::SIMD::SIMD64_8u test Id: 413 - MBANDNOTVA
OK   UME::SIMD::SIMD64_8u test Id: 414 - BANDNOTSA
OK   UME::SIMD::SIMD64_8u test Id: 415 - MBANDNOTSA
OK   UME::SIMD::SIMD64_8u test Id: 416 - HBAND
OK   UME::SIMD::SIMD64_8u test Id: 417 - HBAND
OK   UME::SIMD::SIMD64_8u test Id: 418 - MHBAND
OK   UME::SIMD::SIMD64_8u test Id: 419 - MHBAND(function)
OK   UME::SIMD::SIMD64_8u test Id: 420 - HBANDS
OK   UME::SIMD::SIMD64_8u test Id: 421 - MHBANDS
OK   UME::SIMD::SIMD64_8u test Id: 422 - HBOR
OK   UME::SIMD::SIMD64_8u test Id: 423 - HBOR(function)
OK   UME::SIMD::SIMD64_8u test Id: 424 - MHBOR
OK   UME::SIMD::SIMD64_8u test Id: 425 - MHBOR(function)
OK   UME::SIMD::SIMD64_8u test Id: 426 - HBORS
OK   UME::SIMD::SIMD64_8u test Id: 427 - MHBORS
OK   UME::SIMD::SIMD64_8u test Id: 428 - HBXOR
OK   UME::SIMD::SIMD64_8u test Id: 429 - HBXOR(function)
OK   UME::SIMD::SIMD64_8u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD64_8u test Id: 431 - MHBXOR
OK   UME::SIMD::SIMD64_8u test Id: 432 - HBXORS
OK   UME::SIMD::SIMD64_8u test Id: 433 - MHBXORS
OK   UME::SIMD::SIMD64_8u test Id: 434 - GATHERU
OK   UME::SIMD::SIMD64_8u test Id: 435 - MGATHERU
OK   UME::SIMD::SIMD64_8u test Id: 436 - GATHERS
OK   UME::SIMD::SIMD64_8u test Id: 437 - MGATHERS
OK   UME::SIMD::SIMD64_8u test Id: 438 - GATHERV
OK   UME::SIMD::SIMD64_8u test Id: 439 - MGATHERV
OK   UME::SIMD::SIMD64_8u test Id: 440 - SCATTERU
OK   UME::SIMD::SIMD64_8u test Id: 441 - MSCATTERU
OK   UME::SIMD::SIMD64_8u test Id: 442 - SCATTERS
OK   UME::SIMD::SIMD64_8u test Id: 443 - MSCATTERS
OK   UME::SIMD::SIMD64_8u test Id: 444 - SCATTERV
OK   UME::SIMD::SIMD64_8u test Id: 445 - MSCATTERV
OK   UME::SIMD::SIMD64_8u test Id: 446 - LSHV gen
OK   UME::SIMD::SIMD64_8u test Id: 447 - LSHV (function) gen
OK   UME::SIMD::SIMD64_8u test Id: 448 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD64_8u test Id: 449 - MLSHV gen
OK   UME::SIMD::SIMD64_8u test Id: 450 - MLSHV (function) gen
OK   UME::SIMD::SIMD64_8u test Id: 451 - LSHS gen
OK   UME::SIMD::SIMD64_8u test Id: 452 - LSHS (function) gen
OK   UME::SIMD::SIMD64_8u test Id: 453 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD64_8u test Id: 454 - MLSHS gen
OK   UME::SIMD::SIMD64_8u test Id: 455 - MLSHS (function) gen
OK   UME::SIMD::SIMD64_8u test Id: 456 - LSHVA gen
OK   UME::SIMD::SIMD64_8u test Id: 457 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD64_8u test Id: 458 - MLSHVA gen
OK   UME::SIMD::SIMD64_8u test Id: 459 - LSHSA gen
OK   UME::SIMD::SIMD64_8u test Id: 460 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD64_8u test Id: 461 - MLSHSA gen
OK   UME::SIMD::SIMD64_8u test Id: 462 - RSHV gen
OK   UME::SIMD::SIMD64_8u test Id: 463 - RSHV (function) gen
OK   UME::SIMD::SIMD64_8u test Id: 464 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD64_8u test Id: 465 - MRSHV gen
OK   UME::SIMD::SIMD64_8u test Id: 466 - MRSHV (function) gen
OK   UME::SIMD::SIMD64_8u test Id: 467 - RSHS gen
OK   UME::SIMD::SIMD64_8u test Id: 468 - RSHS (function) gen
OK   UME::SIMD::SIMD64_8u test Id: 469 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD64_8u test Id: 470 - MRSHS gen
OK   UME::SIMD::SIMD64_8u test Id: 471 - MRSHS (function) gen
OK   UME::SIMD::SIMD64_8u test Id: 472 - RSHVA gen
OK   UME::SIMD::SIMD64_8u test Id: 473 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD64_8u test Id: 474 - MRSHVA gen
OK   UME::SIMD::SIMD64_8u test Id: 475 - RSHSA gen
OK   UME::SIMD::SIMD64_8u test Id: 476 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD64_8u test Id: 477 - MRSHSA gen
OK   UME::SIMD::SIMD64_8u test Id: 478 - ROLV
OK   UME::SIMD::SIMD64_8u test Id: 479 - ROLV(function)
OK   UME::SIMD::SIMD64_8u test Id: 480 - MROLV
OK   UME::SIMD::SIMD64_8u test Id: 481 - MROLV(function)
OK   UME::SIMD::SIMD64_8u test Id: 482 - ROLS
OK   UME::SIMD::SIMD64_8u test Id: 483 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 484 - MROLS
OK   UME::SIMD::SIMD64_8u test Id: 485 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 486 - ROLVA
OK   UME::SIMD::SIMD64_8u test Id: 487 - MROLVA
OK   UME::SIMD::SIMD64_8u test Id: 488 - ROLSA
OK   UME::SIMD::SIMD64_8u test Id: 489 - MROLSA
OK   UME::SIMD::SIMD64_8u test Id: 490 - RORV
OK   UME::SIMD::SIMD64_8u test Id: 491 - RORV(function)
OK   UME::SIMD::SIMD64_8u test Id: 492 - MRORV
OK   UME::SIMD::SIMD64_8u test Id: 493 - MRORV(function)
OK   UME::SIMD::SIMD64_8u test Id: 494 - RORS
OK   UME::SIMD::SIMD64_8u test Id: 495 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 496 - MRORS
OK   UME::SIMD::SIMD64_8u test Id: 497 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8u test Id: 498 - RORVA
OK   UME::SIMD::SIMD64_8u test Id: 499 - MRORVA
OK   UME::SIMD::SIMD64_8u test Id: 500 - RORSA
OK   UME::SIMD::SIMD64_8u test Id: 501 - MRORSA
OK   UME::SIMD::SIMD64_8u test Id: 502 - UTOI
OK   UME::SIMD::SIMD64_8u test Id: 503 - PACK
OK   UME::SIMD::SIMD64_8u test Id: 504 - PACKLO
OK   UME::SIMD::SIMD64_8u test Id: 505 - PACKHI
OK   UME::SIMD::SIMD64_8u test Id: 506 - UNPACK
OK   UME::SIMD::SIMD64_8u test Id: 507 - UNPACKLO
OK   UME::SIMD::SIMD64_8u test Id: 508 - UNPACKHi
OK   UME::SIMD::SIMD64_8u test Id: 509 - PROMOTE
OK   UME::SIMD::SIMD64_8i test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD64_8i test Id: 2 - FULL-CONSTR
OK   UME::SIMD::SIMD64_8i test Id: 3 - SET-CONSTR gen
OK   UME::SIMD::SIMD64_8i test Id: 4 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD64_8i test Id: 5 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD64_8i test Id: 6 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD64_8i test Id: 7 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD64_8i test Id: 8 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD64_8i test Id: 9 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD64_8i test Id: 10 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD64_8i test Id: 11 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD64_8i test Id: 12 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD64_8i test Id: 13 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD64_8i test Id: 14 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD64_8i test Id: 15 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD64_8i test Id: 16 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD64_8i test Id: 17 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD64_8i test Id: 18 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD64_8i test Id: 19 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD64_8i test Id: 20 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD64_8i test Id: 21 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD64_8i test Id: 22 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD64_8i test Id: 23 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD64_8i test Id: 24 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD64_8i test Id: 25 - INSERT
OK   UME::SIMD::SIMD64_8i test Id: 26 - INSERT(operator[] =)
OK   UME::SIMD::SIMD64_8i test Id: 27 - EXTRACT
OK   UME::SIMD::SIMD64_8i test Id: 28 - EXTRACT(operator[])
OK   UME::SIMD::SIMD64_8i test Id: 29 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD64_8i test Id: 30 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD64_8i test Id: 31 - ASSIGNV
OK   UME::SIMD::SIMD64_8i test Id: 32 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD64_8i test Id: 33 - MASSIGNV
OK   UME::SIMD::SIMD64_8i test Id: 34 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD64_8i test Id: 35 - ASSIGNS
OK   UME::SIMD::SIMD64_8i test Id: 36 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD64_8i test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD64_8i test Id: 38 - MASSIGNS
OK   UME::SIMD::SIMD64_8i test Id: 39 - LOAD/STORE
OK   UME::SIMD::SIMD64_8i test Id: 40 - MLOAD
OK   UME::SIMD::SIMD64_8i test Id: 41 - MSTORE
OK   UME::SIMD::SIMD64_8i test Id: 42 - LOADA/STOREA
OK   UME::SIMD::SIMD64_8i test Id: 43 - MLOADA
OK   UME::SIMD::SIMD64_8i test Id: 44 - MSTOREA
OK   UME::SIMD::SIMD64_8i test Id: 45 - SWIZZLE
OK   UME::SIMD::SIMD64_8i test Id: 46 - SORTA
OK   UME::SIMD::SIMD64_8i test Id: 47 - SORTD
OK   UME::SIMD::SIMD64_8i test Id: 48 - BLENDV gen
OK   UME::SIMD::SIMD64_8i test Id: 49 - ADDV
OK   UME::SIMD::SIMD64_8i test Id: 50 - ADDV(operator+)
OK   UME::SIMD::SIMD64_8i test Id: 51 - ADDV(function)
OK   UME::SIMD::SIMD64_8i test Id: 52 - ADDV gen
OK   UME::SIMD::SIMD64_8i test Id: 53 - ADDV(operator+) gen
OK   UME::SIMD::SIMD64_8i test Id: 54 - ADDV(function) gen
OK   UME::SIMD::SIMD64_8i test Id: 55 - MADDV
OK   UME::SIMD::SIMD64_8i test Id: 56 - MADDV(function)
OK   UME::SIMD::SIMD64_8i test Id: 57 - MADDV gen
OK   UME::SIMD::SIMD64_8i test Id: 58 - MADDV(function) gen
OK   UME::SIMD::SIMD64_8i test Id: 59 - ADDS
OK   UME::SIMD::SIMD64_8i test Id: 60 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 61 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 62 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD64_8i test Id: 63 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD64_8i test Id: 64 - ADDS gen
OK   UME::SIMD::SIMD64_8i test Id: 65 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD64_8i test Id: 66 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD64_8i test Id: 67 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD64_8i test Id: 68 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD64_8i test Id: 69 - MADDS
OK   UME::SIMD::SIMD64_8i test Id: 70 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 71 - MADDS gen
OK   UME::SIMD::SIMD64_8i test Id: 72 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD64_8i test Id: 73 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD64_8i test Id: 74 - ADDVA
OK   UME::SIMD::SIMD64_8i test Id: 75 - ADDVA(operator+=)
OK   UME::SIMD::SIMD64_8i test Id: 76 - ADDVA gen
OK   UME::SIMD::SIMD64_8i test Id: 77 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD64_8i test Id: 78 - MADDVA
OK   UME::SIMD::SIMD64_8i test Id: 79 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD64_8i test Id: 80 - ADDSA
OK   UME::SIMD::SIMD64_8i test Id: 81 - ADDSA(operator+=)
OK   UME::SIMD::SIMD64_8i test Id: 82 - MADDSA
OK   UME::SIMD::SIMD64_8i test Id: 83 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD64_8i test Id: 84 - SADDV gen
OK   UME::SIMD::SIMD64_8i test Id: 85 - SADDV(function) gen
OK   UME::SIMD::SIMD64_8i test Id: 86 - POSTINC
OK   UME::SIMD::SIMD64_8i test Id: 87 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD64_8i test Id: 88 - POSTINC(function)
OK   UME::SIMD::SIMD64_8i test Id: 89 - MPOSTINC
OK   UME::SIMD::SIMD64_8i test Id: 90 - MPOSTINC(function)
OK   UME::SIMD::SIMD64_8i test Id: 91 - PREFINC
OK   UME::SIMD::SIMD64_8i test Id: 92 - PREFINC(operator++())
OK   UME::SIMD::SIMD64_8i test Id: 93 - PREFINC(function)
OK   UME::SIMD::SIMD64_8i test Id: 94 - MPREFINC
OK   UME::SIMD::SIMD64_8i test Id: 95 - MPREFINC(function)
OK   UME::SIMD::SIMD64_8i test Id: 96 - SUBV
OK   UME::SIMD::SIMD64_8i test Id: 97 - SUBV(operator-)
OK   UME::SIMD::SIMD64_8i test Id: 98 - SUBV(function)
OK   UME::SIMD::SIMD64_8i test Id: 99 - SUBV gen
OK   UME::SIMD::SIMD64_8i test Id: 100 - SUBV(operator-) gen
OK   UME::SIMD::SIMD64_8i test Id: 101 - SUBV(function) gen
OK   UME::SIMD::SIMD64_8i test Id: 102 - MSUBV
OK   UME::SIMD::SIMD64_8i test Id: 103 - MSUBV(function)
OK   UME::SIMD::SIMD64_8i test Id: 104 - MSUBV gen
OK   UME::SIMD::SIMD64_8i test Id: 105 - MSUBV(function) gen
OK   UME::SIMD::SIMD64_8i test Id: 106 - SUBS gen
OK   UME::SIMD::SIMD64_8i test Id: 107 - SUBS(operator-) gen
OK   UME::SIMD::SIMD64_8i test Id: 108 - SUBS(function) gen
OK   UME::SIMD::SIMD64_8i test Id: 109 - MSUBS
OK   UME::SIMD::SIMD64_8i test Id: 110 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 111 - SUBVA
OK   UME::SIMD::SIMD64_8i test Id: 112 - SUBVA(operator-=)
OK   UME::SIMD::SIMD64_8i test Id: 113 - MSUBVA
OK   UME::SIMD::SIMD64_8i test Id: 114 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD64_8i test Id: 115 - SUBSA
OK   UME::SIMD::SIMD64_8i test Id: 116 - MSUBSA
OK   UME::SIMD::SIMD64_8i test Id: 117 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD64_8i test Id: 118 - SUBFROMV
OK   UME::SIMD::SIMD64_8i test Id: 119 - MSUBFROMV
OK   UME::SIMD::SIMD64_8i test Id: 120 - SUBFROMS
OK   UME::SIMD::SIMD64_8i test Id: 121 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 122 - MSUBFROMS
OK   UME::SIMD::SIMD64_8i test Id: 123 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 124 - SUBFROMVA
OK   UME::SIMD::SIMD64_8i test Id: 125 - MSUBFROMVA
OK   UME::SIMD::SIMD64_8i test Id: 126 - SUBFROMSA
OK   UME::SIMD::SIMD64_8i test Id: 127 - MSUBFROMSA
OK   UME::SIMD::SIMD64_8i test Id: 128 - POSTDEC
OK   UME::SIMD::SIMD64_8i test Id: 129 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD64_8i test Id: 130 - POSTDEC(function)
OK   UME::SIMD::SIMD64_8i test Id: 131 - MPOSTDEC
OK   UME::SIMD::SIMD64_8i test Id: 132 - MPOSTDEC(function)
OK   UME::SIMD::SIMD64_8i test Id: 133 - PREFDEC
OK   UME::SIMD::SIMD64_8i test Id: 134 - PREFDEC(operator--())
OK   UME::SIMD::SIMD64_8i test Id: 135 - PREFDEC(function)
OK   UME::SIMD::SIMD64_8i test Id: 136 - MPREFDEC
OK   UME::SIMD::SIMD64_8i test Id: 137 - MPREFDEC(function)
OK   UME::SIMD::SIMD64_8i test Id: 138 - MULV
OK   UME::SIMD::SIMD64_8i test Id: 139 - MULV(operator*)
OK   UME::SIMD::SIMD64_8i test Id: 140 - MULV(function)
OK   UME::SIMD::SIMD64_8i test Id: 141 - MMULV
OK   UME::SIMD::SIMD64_8i test Id: 142 - MMULV(function)
OK   UME::SIMD::SIMD64_8i test Id: 143 - MULS
OK   UME::SIMD::SIMD64_8i test Id: 144 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 145 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 146 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 147 - MMULS
OK   UME::SIMD::SIMD64_8i test Id: 148 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 149 - MULVA
OK   UME::SIMD::SIMD64_8i test Id: 150 - MULVA(operator*)
OK   UME::SIMD::SIMD64_8i test Id: 151 - MULVA gen
OK   UME::SIMD::SIMD64_8i test Id: 152 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD64_8i test Id: 153 - MMULVA
OK   UME::SIMD::SIMD64_8i test Id: 154 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD64_8i test Id: 155 - MULSA
OK   UME::SIMD::SIMD64_8i test Id: 156 - MULSA(operator*=)
OK   UME::SIMD::SIMD64_8i test Id: 157 - MMULSA
OK   UME::SIMD::SIMD64_8i test Id: 158 - DIVV
OK   UME::SIMD::SIMD64_8i test Id: 159 - DIVV(operator/)
OK   UME::SIMD::SIMD64_8i test Id: 160 - DIVV(function)
OK   UME::SIMD::SIMD64_8i test Id: 161 - MDIVV
OK   UME::SIMD::SIMD64_8i test Id: 162 - MDIVV(function)
OK   UME::SIMD::SIMD64_8i test Id: 163 - DIVS
OK   UME::SIMD::SIMD64_8i test Id: 164 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 165 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 166 - MDIVS
OK   UME::SIMD::SIMD64_8i test Id: 167 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 168 - DIVVA
OK   UME::SIMD::SIMD64_8i test Id: 169 - DIVVA(operator/=)
OK   UME::SIMD::SIMD64_8i test Id: 170 - DIVVA gen
OK   UME::SIMD::SIMD64_8i test Id: 171 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD64_8i test Id: 172 - MDIVVA
OK   UME::SIMD::SIMD64_8i test Id: 173 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD64_8i test Id: 174 - DIVSA
OK   UME::SIMD::SIMD64_8i test Id: 175 - DIVSA(operator/=)
OK   UME::SIMD::SIMD64_8i test Id: 176 - MDIVSA
OK   UME::SIMD::SIMD64_8i test Id: 177 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD64_8i test Id: 178 - RCP
OK   UME::SIMD::SIMD64_8i test Id: 179 - RCP(function)
OK   UME::SIMD::SIMD64_8i test Id: 180 - MRCP
OK   UME::SIMD::SIMD64_8i test Id: 181 - MRCP(function)
OK   UME::SIMD::SIMD64_8i test Id: 182 - RCPS
OK   UME::SIMD::SIMD64_8i test Id: 183 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 184 - RCPS(function)
OK   UME::SIMD::SIMD64_8i test Id: 185 - MRCPS
OK   UME::SIMD::SIMD64_8i test Id: 186 - MRCPS (function)
OK   UME::SIMD::SIMD64_8i test Id: 187 - RCPA
OK   UME::SIMD::SIMD64_8i test Id: 188 - MRCPA
OK   UME::SIMD::SIMD64_8i test Id: 189 - RCPSA
OK   UME::SIMD::SIMD64_8i test Id: 190 - MRCPSA
OK   UME::SIMD::SIMD64_8i test Id: 191 - CMPEQV
OK   UME::SIMD::SIMD64_8i test Id: 192 - CMPEQV(operator==)
OK   UME::SIMD::SIMD64_8i test Id: 193 - CMPEQV(function)
OK   UME::SIMD::SIMD64_8i test Id: 194 - CMPEQS
OK   UME::SIMD::SIMD64_8i test Id: 195 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 196 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 197 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 198 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 199 - CMPNEV
OK   UME::SIMD::SIMD64_8i test Id: 200 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD64_8i test Id: 201 - CMPNEV(function)
OK   UME::SIMD::SIMD64_8i test Id: 202 - CMPNES
OK   UME::SIMD::SIMD64_8i test Id: 203 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 204 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 205 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 206 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 207 - CMPGTV
OK   UME::SIMD::SIMD64_8i test Id: 208 - CMPGTV(operator>)
OK   UME::SIMD::SIMD64_8i test Id: 209 - CMPGTV(function)
OK   UME::SIMD::SIMD64_8i test Id: 210 - CMPGTS
OK   UME::SIMD::SIMD64_8i test Id: 211 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 212 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 213 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 214 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 215 - CMPLTV
OK   UME::SIMD::SIMD64_8i test Id: 216 - CMPLTV(operator<)
OK   UME::SIMD::SIMD64_8i test Id: 217 - CMPLTV(function)
OK   UME::SIMD::SIMD64_8i test Id: 218 - CMPLTS
OK   UME::SIMD::SIMD64_8i test Id: 219 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 220 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 221 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 222 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 223 - CMPGEV
OK   UME::SIMD::SIMD64_8i test Id: 224 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD64_8i test Id: 225 - CMPGEV(function)
OK   UME::SIMD::SIMD64_8i test Id: 226 - CMPGES
OK   UME::SIMD::SIMD64_8i test Id: 227 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 228 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 229 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 230 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 231 - CMPLEV
OK   UME::SIMD::SIMD64_8i test Id: 232 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD64_8i test Id: 233 - CMPLEV(function)
OK   UME::SIMD::SIMD64_8i test Id: 234 - CMPLES
OK   UME::SIMD::SIMD64_8i test Id: 235 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 236 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 237 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 238 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 239 - CMPEV
OK   UME::SIMD::SIMD64_8i test Id: 240 - CMPEV(function)
OK   UME::SIMD::SIMD64_8i test Id: 241 - CMPES
OK   UME::SIMD::SIMD64_8i test Id: 242 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 243 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 244 - HADD
OK   UME::SIMD::SIMD64_8i test Id: 245 - HADD(function)
OK   UME::SIMD::SIMD64_8i test Id: 246 - HADD gen
OK   UME::SIMD::SIMD64_8i test Id: 247 - HADD(function) gen
OK   UME::SIMD::SIMD64_8i test Id: 248 - MHADD gen
OK   UME::SIMD::SIMD64_8i test Id: 249 - MHADD(function) gen
OK   UME::SIMD::SIMD64_8i test Id: 250 - HADDS gen
OK   UME::SIMD::SIMD64_8i test Id: 251 - HADDS(function) gen
OK   UME::SIMD::SIMD64_8i test Id: 252 - MHADD gen
OK   UME::SIMD::SIMD64_8i test Id: 253 - MHADDS(function) gen
OK   UME::SIMD::SIMD64_8i test Id: 254 - HMUL gen
OK   UME::SIMD::SIMD64_8i test Id: 255 - HMUL(function) gen
OK   UME::SIMD::SIMD64_8i test Id: 256 - MHMUL gen
OK   UME::SIMD::SIMD64_8i test Id: 257 - MHMUL(function) gen
OK   UME::SIMD::SIMD64_8i test Id: 258 - HMULS gen
OK   UME::SIMD::SIMD64_8i test Id: 259 - HMULS(function) gen
OK   UME::SIMD::SIMD64_8i test Id: 260 - MHMUL gen
OK   UME::SIMD::SIMD64_8i test Id: 261 - MHMULS(function) gen
OK   UME::SIMD::SIMD64_8i test Id: 262 - FMULADDV
OK   UME::SIMD::SIMD64_8i test Id: 263 - FMULADDV(function)
OK   UME::SIMD::SIMD64_8i test Id: 264 - MFMULADDV
OK   UME::SIMD::SIMD64_8i test Id: 265 - MFMULADDV(function)
OK   UME::SIMD::SIMD64_8i test Id: 266 - FMULSUBV
OK   UME::SIMD::SIMD64_8i test Id: 267 - FMULSUBV(function)
OK   UME::SIMD::SIMD64_8i test Id: 268 - MFMULSUBV
OK   UME::SIMD::SIMD64_8i test Id: 269 - MFMULSUBV(function)
OK   UME::SIMD::SIMD64_8i test Id: 270 - FADDMULV
OK   UME::SIMD::SIMD64_8i test Id: 271 - FADDMULV(function)
OK   UME::SIMD::SIMD64_8i test Id: 272 - MFADDMULV
OK   UME::SIMD::SIMD64_8i test Id: 273 - MFADDMULV(function)
OK   UME::SIMD::SIMD64_8i test Id: 274 - FSUBMULV
OK   UME::SIMD::SIMD64_8i test Id: 275 - FSUBMULV(function)
OK   UME::SIMD::SIMD64_8i test Id: 276 - MFSUBMULV
OK   UME::SIMD::SIMD64_8i test Id: 277 - MFSUBMULV(function)
OK   UME::SIMD::SIMD64_8i test Id: 278 - MAXV
OK   UME::SIMD::SIMD64_8i test Id: 279 - MAXV(function)
OK   UME::SIMD::SIMD64_8i test Id: 280 - MMAXV
OK   UME::SIMD::SIMD64_8i test Id: 281 - MMAXV(function)
OK   UME::SIMD::SIMD64_8i test Id: 282 - MAXS
OK   UME::SIMD::SIMD64_8i test Id: 283 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 284 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 285 - MMAXS
OK   UME::SIMD::SIMD64_8i test Id: 286 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 287 - MAXVA
OK   UME::SIMD::SIMD64_8i test Id: 288 - MMAXVA
OK   UME::SIMD::SIMD64_8i test Id: 289 - MAXSA
OK   UME::SIMD::SIMD64_8i test Id: 290 - MMAXSA
OK   UME::SIMD::SIMD64_8i test Id: 291 - MINV
OK   UME::SIMD::SIMD64_8i test Id: 292 - MINV(function)
OK   UME::SIMD::SIMD64_8i test Id: 293 - MMINV
OK   UME::SIMD::SIMD64_8i test Id: 294 - MMINV(function)
OK   UME::SIMD::SIMD64_8i test Id: 295 - MINS
OK   UME::SIMD::SIMD64_8i test Id: 296 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD64_8i test Id: 297 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD64_8i test Id: 298 - MMINS
OK   UME::SIMD::SIMD64_8i test Id: 299 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 300 - MINVA
OK   UME::SIMD::SIMD64_8i test Id: 301 - MMINVA
OK   UME::SIMD::SIMD64_8i test Id: 302 - MINSA
OK   UME::SIMD::SIMD64_8i test Id: 303 - MMINSA
OK   UME::SIMD::SIMD64_8i test Id: 304 - HMAX
OK   UME::SIMD::SIMD64_8i test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD64_8i test Id: 306 - HMAX
OK   UME::SIMD::SIMD64_8i test Id: 307 - HMAX(function)
OK   UME::SIMD::SIMD64_8i test Id: 308 - MHMAX
OK   UME::SIMD::SIMD64_8i test Id: 309 - MHMAX(function)
OK   UME::SIMD::SIMD64_8i test Id: 310 - IMAX
OK   UME::SIMD::SIMD64_8i test Id: 311 - IMAX(function)
OK   UME::SIMD::SIMD64_8i test Id: 312 - MIMAX
OK   UME::SIMD::SIMD64_8i test Id: 313 - MIMAX(function)
OK   UME::SIMD::SIMD64_8i test Id: 314 - HMIN
OK   UME::SIMD::SIMD64_8i test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD64_8i test Id: 316 - HMIN
OK   UME::SIMD::SIMD64_8i test Id: 317 - HMIN(function)
OK   UME::SIMD::SIMD64_8i test Id: 318 - MHMIN gen
OK   UME::SIMD::SIMD64_8i test Id: 319 - MHMIN(function) gen
OK   UME::SIMD::SIMD64_8i test Id: 320 - IMIN
OK   UME::SIMD::SIMD64_8i test Id: 321 - IMIN(function)
OK   UME::SIMD::SIMD64_8i test Id: 322 - MIMIN
OK   UME::SIMD::SIMD64_8i test Id: 323 - MIMIN(function)
OK   UME::SIMD::SIMD64_8i test Id: 324 - REMV gen
OK   UME::SIMD::SIMD64_8i test Id: 325 - REMV(operator%) gen
OK   UME::SIMD::SIMD64_8i test Id: 326 - REMV(function) gen
OK   UME::SIMD::SIMD64_8i test Id: 327 - MREMV gen
OK   UME::SIMD::SIMD64_8i test Id: 328 - MREMV(function) gen
OK   UME::SIMD::SIMD64_8i test Id: 329 - REMS gen
OK   UME::SIMD::SIMD64_8i test Id: 330 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD64_8i test Id: 331 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD64_8i test Id: 332 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD64_8i test Id: 333 - LANDV gen
OK   UME::SIMD::SIMD64_8i test Id: 334 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD64_8i test Id: 335 - LORV gen
OK   UME::SIMD::SIMD64_8i test Id: 336 - LORV gen (operator ||)
OK   UME::SIMD::SIMD64_8i test Id: 337 - BANDV
OK   UME::SIMD::SIMD64_8i test Id: 338 - BANDV(operator&)
OK   UME::SIMD::SIMD64_8i test Id: 339 - BANDV(function)
OK   UME::SIMD::SIMD64_8i test Id: 340 - MBANDV
OK   UME::SIMD::SIMD64_8i test Id: 341 - MBANDV
OK   UME::SIMD::SIMD64_8i test Id: 342 - BANDS
OK   UME::SIMD::SIMD64_8i test Id: 343 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 344 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 345 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 346 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 347 - MBANDS
OK   UME::SIMD::SIMD64_8i test Id: 348 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 349 - BANDVA
OK   UME::SIMD::SIMD64_8i test Id: 350 - MBANDVA
OK   UME::SIMD::SIMD64_8i test Id: 351 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD64_8i test Id: 352 - BANDSA
OK   UME::SIMD::SIMD64_8i test Id: 353 - MBANDSA
OK   UME::SIMD::SIMD64_8i test Id: 354 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD64_8i test Id: 355 - BORV
OK   UME::SIMD::SIMD64_8i test Id: 356 - BORV(operator |)
OK   UME::SIMD::SIMD64_8i test Id: 357 - BORV(function)
OK   UME::SIMD::SIMD64_8i test Id: 358 - MBORV
OK   UME::SIMD::SIMD64_8i test Id: 359 - MBORV(function)
OK   UME::SIMD::SIMD64_8i test Id: 360 - BORS
OK   UME::SIMD::SIMD64_8i test Id: 361 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 362 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 363 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 364 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 365 - MBORS
OK   UME::SIMD::SIMD64_8i test Id: 366 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 367 - BORVA
OK   UME::SIMD::SIMD64_8i test Id: 368 - BORVA(operator|=)
OK   UME::SIMD::SIMD64_8i test Id: 369 - MBORVA
OK   UME::SIMD::SIMD64_8i test Id: 370 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD64_8i test Id: 371 - BORSA
OK   UME::SIMD::SIMD64_8i test Id: 372 - BORSA(operator|=)
OK   UME::SIMD::SIMD64_8i test Id: 373 - MBORSA
OK   UME::SIMD::SIMD64_8i test Id: 374 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD64_8i test Id: 375 - BXORV
OK   UME::SIMD::SIMD64_8i test Id: 376 - BXORV(operator^
OK   UME::SIMD::SIMD64_8i test Id: 377 - BXORV(function
OK   UME::SIMD::SIMD64_8i test Id: 378 - MBXORV
OK   UME::SIMD::SIMD64_8i test Id: 379 - MBXORV(function)
OK   UME::SIMD::SIMD64_8i test Id: 380 - BXORS
OK   UME::SIMD::SIMD64_8i test Id: 381 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 382 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 383 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 384 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 385 - MBXORS
OK   UME::SIMD::SIMD64_8i test Id: 386 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 387 - BXORVA
OK   UME::SIMD::SIMD64_8i test Id: 388 - BXORVA(operator^=)
OK   UME::SIMD::SIMD64_8i test Id: 389 - MBXORVA
OK   UME::SIMD::SIMD64_8i test Id: 390 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD64_8i test Id: 391 - BXORSA
OK   UME::SIMD::SIMD64_8i test Id: 392 - BXORSA(operator^=)
OK   UME::SIMD::SIMD64_8i test Id: 393 - MBXORSA
OK   UME::SIMD::SIMD64_8i test Id: 394 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD64_8i test Id: 395 - BNOT
OK   UME::SIMD::SIMD64_8i test Id: 396 - BNOT(operator!)
OK   UME::SIMD::SIMD64_8i test Id: 397 - BNOT(function)
OK   UME::SIMD::SIMD64_8i test Id: 398 - MBNOT
OK   UME::SIMD::SIMD64_8i test Id: 399 - MBNOT(function)
OK   UME::SIMD::SIMD64_8i test Id: 400 - BNOTA
OK   UME::SIMD::SIMD64_8i test Id: 401 - MBNOTA
OK   UME::SIMD::SIMD64_8i test Id: 402 - BANDNOTV
OK   UME::SIMD::SIMD64_8i test Id: 403 - BANDNOTV (function)
OK   UME::SIMD::SIMD64_8i test Id: 404 - MBANDNOTV
OK   UME::SIMD::SIMD64_8i test Id: 405 - MBANDNOTV (function)
OK   UME::SIMD::SIMD64_8i test Id: 406 - BANDNOTS
OK   UME::SIMD::SIMD64_8i test Id: 407 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD64_8i test Id: 408 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD64_8i test Id: 409 - MBANDNOTS
OK   UME::SIMD::SIMD64_8i test Id: 410 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD64_8i test Id: 411 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD64_8i test Id: 412 - BANDNOTVA
OK   UME::SIMD::SIMD64_8i test Id: 413 - MBANDNOTVA
OK   UME::SIMD::SIMD64_8i test Id: 414 - BANDNOTSA
OK   UME::SIMD::SIMD64_8i test Id: 415 - MBANDNOTSA
OK   UME::SIMD::SIMD64_8i test Id: 416 - HBAND
OK   UME::SIMD::SIMD64_8i test Id: 417 - HBAND
OK   UME::SIMD::SIMD64_8i test Id: 418 - MHBAND
OK   UME::SIMD::SIMD64_8i test Id: 419 - MHBAND(function)
OK   UME::SIMD::SIMD64_8i test Id: 420 - HBANDS
OK   UME::SIMD::SIMD64_8i test Id: 421 - MHBANDS
OK   UME::SIMD::SIMD64_8i test Id: 422 - HBOR
OK   UME::SIMD::SIMD64_8i test Id: 423 - HBOR(function)
OK   UME::SIMD::SIMD64_8i test Id: 424 - MHBOR
OK   UME::SIMD::SIMD64_8i test Id: 425 - MHBOR(function)
OK   UME::SIMD::SIMD64_8i test Id: 426 - HBORS
OK   UME::SIMD::SIMD64_8i test Id: 427 - MHBORS
OK   UME::SIMD::SIMD64_8i test Id: 428 - HBXOR
OK   UME::SIMD::SIMD64_8i test Id: 429 - HBXOR(function)
OK   UME::SIMD::SIMD64_8i test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD64_8i test Id: 431 - MHBXOR
OK   UME::SIMD::SIMD64_8i test Id: 432 - HBXORS
OK   UME::SIMD::SIMD64_8i test Id: 433 - MHBXORS
OK   UME::SIMD::SIMD64_8i test Id: 434 - GATHERU
OK   UME::SIMD::SIMD64_8i test Id: 435 - MGATHERU
OK   UME::SIMD::SIMD64_8i test Id: 436 - GATHERS
OK   UME::SIMD::SIMD64_8i test Id: 437 - MGATHERS
OK   UME::SIMD::SIMD64_8i test Id: 438 - GATHERV
OK   UME::SIMD::SIMD64_8i test Id: 439 - MGATHERV
OK   UME::SIMD::SIMD64_8i test Id: 440 - SCATTERU
OK   UME::SIMD::SIMD64_8i test Id: 441 - MSCATTERU
OK   UME::SIMD::SIMD64_8i test Id: 442 - SCATTERS
OK   UME::SIMD::SIMD64_8i test Id: 443 - MSCATTERS
OK   UME::SIMD::SIMD64_8i test Id: 444 - SCATTERV
OK   UME::SIMD::SIMD64_8i test Id: 445 - MSCATTERV
OK   UME::SIMD::SIMD64_8i test Id: 446 - LSHV gen
OK   UME::SIMD::SIMD64_8i test Id: 447 - LSHV (function) gen
OK   UME::SIMD::SIMD64_8i test Id: 448 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD64_8i test Id: 449 - MLSHV gen
OK   UME::SIMD::SIMD64_8i test Id: 450 - MLSHV (function) gen
OK   UME::SIMD::SIMD64_8i test Id: 451 - LSHS gen
OK   UME::SIMD::SIMD64_8i test Id: 452 - LSHS (function) gen
OK   UME::SIMD::SIMD64_8i test Id: 453 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD64_8i test Id: 454 - MLSHS gen
OK   UME::SIMD::SIMD64_8i test Id: 455 - MLSHS (function) gen
OK   UME::SIMD::SIMD64_8i test Id: 456 - LSHVA gen
OK   UME::SIMD::SIMD64_8i test Id: 457 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD64_8i test Id: 458 - MLSHVA gen
OK   UME::SIMD::SIMD64_8i test Id: 459 - LSHSA gen
OK   UME::SIMD::SIMD64_8i test Id: 460 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD64_8i test Id: 461 - MLSHSA gen
OK   UME::SIMD::SIMD64_8i test Id: 462 - RSHV gen
OK   UME::SIMD::SIMD64_8i test Id: 463 - RSHV (function) gen
OK   UME::SIMD::SIMD64_8i test Id: 464 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD64_8i test Id: 465 - MRSHV gen
OK   UME::SIMD::SIMD64_8i test Id: 466 - MRSHV (function) gen
OK   UME::SIMD::SIMD64_8i test Id: 467 - RSHS gen
OK   UME::SIMD::SIMD64_8i test Id: 468 - RSHS (function) gen
OK   UME::SIMD::SIMD64_8i test Id: 469 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD64_8i test Id: 470 - MRSHS gen
OK   UME::SIMD::SIMD64_8i test Id: 471 - MRSHS (function) gen
OK   UME::SIMD::SIMD64_8i test Id: 472 - RSHVA gen
OK   UME::SIMD::SIMD64_8i test Id: 473 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD64_8i test Id: 474 - MRSHVA gen
OK   UME::SIMD::SIMD64_8i test Id: 475 - RSHSA gen
OK   UME::SIMD::SIMD64_8i test Id: 476 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD64_8i test Id: 477 - MRSHSA gen
OK   UME::SIMD::SIMD64_8i test Id: 478 - ROLV
OK   UME::SIMD::SIMD64_8i test Id: 479 - ROLV(function)
OK   UME::SIMD::SIMD64_8i test Id: 480 - MROLV
OK   UME::SIMD::SIMD64_8i test Id: 481 - MROLV(function)
OK   UME::SIMD::SIMD64_8i test Id: 482 - ROLS
OK   UME::SIMD::SIMD64_8i test Id: 483 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 484 - MROLS
OK   UME::SIMD::SIMD64_8i test Id: 485 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 486 - ROLVA
OK   UME::SIMD::SIMD64_8i test Id: 487 - MROLVA
OK   UME::SIMD::SIMD64_8i test Id: 488 - ROLSA
OK   UME::SIMD::SIMD64_8i test Id: 489 - MROLSA
OK   UME::SIMD::SIMD64_8i test Id: 490 - RORV
OK   UME::SIMD::SIMD64_8i test Id: 491 - RORV(function)
OK   UME::SIMD::SIMD64_8i test Id: 492 - MRORV
OK   UME::SIMD::SIMD64_8i test Id: 493 - MRORV(function)
OK   UME::SIMD::SIMD64_8i test Id: 494 - RORS
OK   UME::SIMD::SIMD64_8i test Id: 495 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 496 - MRORS
OK   UME::SIMD::SIMD64_8i test Id: 497 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_8i test Id: 498 - RORVA
OK   UME::SIMD::SIMD64_8i test Id: 499 - MRORVA
OK   UME::SIMD::SIMD64_8i test Id: 500 - RORSA
OK   UME::SIMD::SIMD64_8i test Id: 501 - MRORSA
OK   UME::SIMD::SIMD64_8i test Id: 502 - NEG
OK   UME::SIMD::SIMD64_8i test Id: 503 - NEG(operator-)
OK   UME::SIMD::SIMD64_8i test Id: 504 - NEG(function)
OK   UME::SIMD::SIMD64_8i test Id: 505 - MNEG
OK   UME::SIMD::SIMD64_8i test Id: 506 - MNEG(function)
OK   UME::SIMD::SIMD64_8i test Id: 507 - NEGA
OK   UME::SIMD::SIMD64_8i test Id: 508 - MNEGA
OK   UME::SIMD::SIMD64_8i test Id: 509 - ABS
OK   UME::SIMD::SIMD64_8i test Id: 510 - ABS(function)
OK   UME::SIMD::SIMD64_8i test Id: 511 - MABS
OK   UME::SIMD::SIMD64_8i test Id: 512 - MABS(function)
OK   UME::SIMD::SIMD64_8i test Id: 513 - ABSA
OK   UME::SIMD::SIMD64_8i test Id: 514 - MABSA
OK   UME::SIMD::SIMD64_8i test Id: 515 - COPYSIGN gen
OK   UME::SIMD::SIMD64_8i test Id: 516 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD64_8i test Id: 517 - ITOU
OK   UME::SIMD::SIMD64_8i test Id: 518 - PACK
OK   UME::SIMD::SIMD64_8i test Id: 519 - PACKLO
OK   UME::SIMD::SIMD64_8i test Id: 520 - PACKHI
OK   UME::SIMD::SIMD64_8i test Id: 521 - UNPACK
OK   UME::SIMD::SIMD64_8i test Id: 522 - UNPACKLO
OK   UME::SIMD::SIMD64_8i test Id: 523 - UNPACKHi
OK   UME::SIMD::SIMD64_8i test Id: 524 - PROMOTE
OK   UME::SIMD::SIMD32_16u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD32_16u test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD32_16u test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD32_16u test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD32_16u test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD32_16u test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD32_16u test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD32_16u test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD32_16u test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD32_16u test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD32_16u test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD32_16u test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD32_16u test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD32_16u test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD32_16u test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD32_16u test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD32_16u test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD32_16u test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD32_16u test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD32_16u test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD32_16u test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD32_16u test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD32_16u test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD32_16u test Id: 24 - INSERT
OK   UME::SIMD::SIMD32_16u test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD32_16u test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD32_16u test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD32_16u test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD32_16u test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD32_16u test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD32_16u test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD32_16u test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD32_16u test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD32_16u test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD32_16u test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD32_16u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD32_16u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD32_16u test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD32_16u test Id: 39 - MLOAD
OK   UME::SIMD::SIMD32_16u test Id: 40 - MSTORE
OK   UME::SIMD::SIMD32_16u test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD32_16u test Id: 42 - MLOADA
OK   UME::SIMD::SIMD32_16u test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD32_16u test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD32_16u test Id: 45 - SORTA
OK   UME::SIMD::SIMD32_16u test Id: 46 - SORTD
OK   UME::SIMD::SIMD32_16u test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD32_16u test Id: 48 - ADDV
OK   UME::SIMD::SIMD32_16u test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD32_16u test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD32_16u test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD32_16u test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD32_16u test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD32_16u test Id: 54 - MADDV
OK   UME::SIMD::SIMD32_16u test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD32_16u test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD32_16u test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD32_16u test Id: 58 - ADDS
OK   UME::SIMD::SIMD32_16u test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD32_16u test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD32_16u test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD32_16u test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD32_16u test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD32_16u test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD32_16u test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD32_16u test Id: 68 - MADDS
OK   UME::SIMD::SIMD32_16u test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD32_16u test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD32_16u test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD32_16u test Id: 73 - ADDVA
OK   UME::SIMD::SIMD32_16u test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD32_16u test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD32_16u test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD32_16u test Id: 77 - MADDVA
OK   UME::SIMD::SIMD32_16u test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD32_16u test Id: 79 - ADDSA
OK   UME::SIMD::SIMD32_16u test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD32_16u test Id: 81 - MADDSA
OK   UME::SIMD::SIMD32_16u test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD32_16u test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD32_16u test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD32_16u test Id: 85 - POSTINC
OK   UME::SIMD::SIMD32_16u test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD32_16u test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD32_16u test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD32_16u test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD32_16u test Id: 90 - PREFINC
OK   UME::SIMD::SIMD32_16u test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD32_16u test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD32_16u test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD32_16u test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD32_16u test Id: 95 - SUBV
OK   UME::SIMD::SIMD32_16u test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD32_16u test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD32_16u test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD32_16u test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD32_16u test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD32_16u test Id: 101 - MSUBV
OK   UME::SIMD::SIMD32_16u test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD32_16u test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD32_16u test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD32_16u test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD32_16u test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD32_16u test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD32_16u test Id: 108 - MSUBS
OK   UME::SIMD::SIMD32_16u test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 110 - SUBVA
OK   UME::SIMD::SIMD32_16u test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD32_16u test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD32_16u test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD32_16u test Id: 114 - SUBSA
OK   UME::SIMD::SIMD32_16u test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD32_16u test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD32_16u test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD32_16u test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD32_16u test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD32_16u test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD32_16u test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD32_16u test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD32_16u test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD32_16u test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD32_16u test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD32_16u test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD32_16u test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD32_16u test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD32_16u test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD32_16u test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD32_16u test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD32_16u test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD32_16u test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD32_16u test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD32_16u test Id: 137 - MULV
OK   UME::SIMD::SIMD32_16u test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD32_16u test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD32_16u test Id: 140 - MMULV
OK   UME::SIMD::SIMD32_16u test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD32_16u test Id: 142 - MULS
OK   UME::SIMD::SIMD32_16u test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 146 - MMULS
OK   UME::SIMD::SIMD32_16u test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 148 - MULVA
OK   UME::SIMD::SIMD32_16u test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD32_16u test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD32_16u test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD32_16u test Id: 152 - MMULVA
OK   UME::SIMD::SIMD32_16u test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD32_16u test Id: 154 - MULSA
OK   UME::SIMD::SIMD32_16u test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD32_16u test Id: 156 - MMULSA
OK   UME::SIMD::SIMD32_16u test Id: 157 - DIVV
OK   UME::SIMD::SIMD32_16u test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD32_16u test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD32_16u test Id: 160 - MDIVV
OK   UME::SIMD::SIMD32_16u test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD32_16u test Id: 162 - DIVS
OK   UME::SIMD::SIMD32_16u test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 165 - MDIVS
OK   UME::SIMD::SIMD32_16u test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 167 - DIVVA
OK   UME::SIMD::SIMD32_16u test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD32_16u test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD32_16u test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD32_16u test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD32_16u test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD32_16u test Id: 173 - DIVSA
OK   UME::SIMD::SIMD32_16u test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD32_16u test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD32_16u test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD32_16u test Id: 177 - RCP
OK   UME::SIMD::SIMD32_16u test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD32_16u test Id: 179 - MRCP
OK   UME::SIMD::SIMD32_16u test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD32_16u test Id: 181 - RCPS
OK   UME::SIMD::SIMD32_16u test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD32_16u test Id: 184 - MRCPS
OK   UME::SIMD::SIMD32_16u test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD32_16u test Id: 186 - RCPA
OK   UME::SIMD::SIMD32_16u test Id: 187 - MRCPA
OK   UME::SIMD::SIMD32_16u test Id: 188 - RCPSA
OK   UME::SIMD::SIMD32_16u test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD32_16u test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD32_16u test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD32_16u test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD32_16u test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD32_16u test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD32_16u test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD32_16u test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD32_16u test Id: 201 - CMPNES
OK   UME::SIMD::SIMD32_16u test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD32_16u test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD32_16u test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD32_16u test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD32_16u test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD32_16u test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD32_16u test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD32_16u test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD32_16u test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD32_16u test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD32_16u test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD32_16u test Id: 225 - CMPGES
OK   UME::SIMD::SIMD32_16u test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD32_16u test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD32_16u test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD32_16u test Id: 233 - CMPLES
OK   UME::SIMD::SIMD32_16u test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 238 - CMPEV
OK   UME::SIMD::SIMD32_16u test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD32_16u test Id: 240 - CMPES
OK   UME::SIMD::SIMD32_16u test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 243 - HADD
OK   UME::SIMD::SIMD32_16u test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD32_16u test Id: 245 - HADD gen
OK   UME::SIMD::SIMD32_16u test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD32_16u test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD32_16u test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD32_16u test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD32_16u test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD32_16u test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD32_16u test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD32_16u test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD32_16u test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD32_16u test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD32_16u test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD32_16u test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD32_16u test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD32_16u test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD32_16u test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD32_16u test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD32_16u test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD32_16u test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD32_16u test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD32_16u test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD32_16u test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD32_16u test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD32_16u test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD32_16u test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD32_16u test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD32_16u test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD32_16u test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD32_16u test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD32_16u test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD32_16u test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD32_16u test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD32_16u test Id: 277 - MAXV
OK   UME::SIMD::SIMD32_16u test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD32_16u test Id: 279 - MMAXV
OK   UME::SIMD::SIMD32_16u test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD32_16u test Id: 281 - MAXS
OK   UME::SIMD::SIMD32_16u test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 284 - MMAXS
OK   UME::SIMD::SIMD32_16u test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 286 - MAXVA
OK   UME::SIMD::SIMD32_16u test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD32_16u test Id: 288 - MAXSA
OK   UME::SIMD::SIMD32_16u test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD32_16u test Id: 290 - MINV
OK   UME::SIMD::SIMD32_16u test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD32_16u test Id: 292 - MMINV
OK   UME::SIMD::SIMD32_16u test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD32_16u test Id: 294 - MINS
OK   UME::SIMD::SIMD32_16u test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD32_16u test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD32_16u test Id: 297 - MMINS
OK   UME::SIMD::SIMD32_16u test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 299 - MINVA
OK   UME::SIMD::SIMD32_16u test Id: 300 - MMINVA
OK   UME::SIMD::SIMD32_16u test Id: 301 - MINSA
OK   UME::SIMD::SIMD32_16u test Id: 302 - MMINSA
OK   UME::SIMD::SIMD32_16u test Id: 303 - HMAX
OK   UME::SIMD::SIMD32_16u test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD32_16u test Id: 305 - HMAX
OK   UME::SIMD::SIMD32_16u test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD32_16u test Id: 307 - MHMAX
OK   UME::SIMD::SIMD32_16u test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD32_16u test Id: 309 - IMAX
OK   UME::SIMD::SIMD32_16u test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD32_16u test Id: 311 - MIMAX
OK   UME::SIMD::SIMD32_16u test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD32_16u test Id: 313 - HMIN
OK   UME::SIMD::SIMD32_16u test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD32_16u test Id: 315 - HMIN
OK   UME::SIMD::SIMD32_16u test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD32_16u test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD32_16u test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD32_16u test Id: 319 - IMIN
OK   UME::SIMD::SIMD32_16u test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD32_16u test Id: 321 - MIMIN
OK   UME::SIMD::SIMD32_16u test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD32_16u test Id: 323 - REMV gen
OK   UME::SIMD::SIMD32_16u test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD32_16u test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD32_16u test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD32_16u test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD32_16u test Id: 328 - REMS gen
OK   UME::SIMD::SIMD32_16u test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD32_16u test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD32_16u test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD32_16u test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD32_16u test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD32_16u test Id: 334 - LORV gen
OK   UME::SIMD::SIMD32_16u test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD32_16u test Id: 336 - BANDV
OK   UME::SIMD::SIMD32_16u test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD32_16u test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD32_16u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD32_16u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD32_16u test Id: 341 - BANDS
OK   UME::SIMD::SIMD32_16u test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 346 - MBANDS
OK   UME::SIMD::SIMD32_16u test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 348 - BANDVA
OK   UME::SIMD::SIMD32_16u test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD32_16u test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD32_16u test Id: 351 - BANDSA
OK   UME::SIMD::SIMD32_16u test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD32_16u test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD32_16u test Id: 354 - BORV
OK   UME::SIMD::SIMD32_16u test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD32_16u test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD32_16u test Id: 357 - MBORV
OK   UME::SIMD::SIMD32_16u test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD32_16u test Id: 359 - BORS
OK   UME::SIMD::SIMD32_16u test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 364 - MBORS
OK   UME::SIMD::SIMD32_16u test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 366 - BORVA
OK   UME::SIMD::SIMD32_16u test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD32_16u test Id: 368 - MBORVA
OK   UME::SIMD::SIMD32_16u test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD32_16u test Id: 370 - BORSA
OK   UME::SIMD::SIMD32_16u test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD32_16u test Id: 372 - MBORSA
OK   UME::SIMD::SIMD32_16u test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD32_16u test Id: 374 - BXORV
OK   UME::SIMD::SIMD32_16u test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD32_16u test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD32_16u test Id: 377 - MBXORV
OK   UME::SIMD::SIMD32_16u test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD32_16u test Id: 379 - BXORS
OK   UME::SIMD::SIMD32_16u test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 384 - MBXORS
OK   UME::SIMD::SIMD32_16u test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 386 - BXORVA
OK   UME::SIMD::SIMD32_16u test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD32_16u test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD32_16u test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD32_16u test Id: 390 - BXORSA
OK   UME::SIMD::SIMD32_16u test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD32_16u test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD32_16u test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD32_16u test Id: 394 - BNOT
OK   UME::SIMD::SIMD32_16u test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD32_16u test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD32_16u test Id: 397 - MBNOT
OK   UME::SIMD::SIMD32_16u test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD32_16u test Id: 399 - BNOTA
OK   UME::SIMD::SIMD32_16u test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD32_16u test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD32_16u test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD32_16u test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD32_16u test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD32_16u test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD32_16u test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD32_16u test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD32_16u test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD32_16u test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD32_16u test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD32_16u test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD32_16u test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD32_16u test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD32_16u test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD32_16u test Id: 415 - HBAND
OK   UME::SIMD::SIMD32_16u test Id: 416 - HBAND
OK   UME::SIMD::SIMD32_16u test Id: 417 - MHBAND
OK   UME::SIMD::SIMD32_16u test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD32_16u test Id: 419 - HBANDS
OK   UME::SIMD::SIMD32_16u test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD32_16u test Id: 421 - HBOR
OK   UME::SIMD::SIMD32_16u test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD32_16u test Id: 423 - MHBOR
OK   UME::SIMD::SIMD32_16u test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD32_16u test Id: 425 - HBORS
OK   UME::SIMD::SIMD32_16u test Id: 426 - MHBORS
OK   UME::SIMD::SIMD32_16u test Id: 427 - HBXOR
OK   UME::SIMD::SIMD32_16u test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD32_16u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD32_16u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD32_16u test Id: 431 - HBXORS
OK   UME::SIMD::SIMD32_16u test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD32_16u test Id: 433 - GATHERU
OK   UME::SIMD::SIMD32_16u test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD32_16u test Id: 435 - GATHERS
OK   UME::SIMD::SIMD32_16u test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD32_16u test Id: 437 - GATHERV
OK   UME::SIMD::SIMD32_16u test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD32_16u test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD32_16u test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD32_16u test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD32_16u test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD32_16u test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD32_16u test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD32_16u test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD32_16u test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD32_16u test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD32_16u test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD32_16u test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD32_16u test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD32_16u test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD32_16u test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD32_16u test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD32_16u test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD32_16u test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD32_16u test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD32_16u test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD32_16u test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD32_16u test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD32_16u test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD32_16u test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD32_16u test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD32_16u test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD32_16u test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD32_16u test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD32_16u test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD32_16u test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD32_16u test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD32_16u test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD32_16u test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD32_16u test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD32_16u test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD32_16u test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD32_16u test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD32_16u test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD32_16u test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD32_16u test Id: 477 - ROLV
OK   UME::SIMD::SIMD32_16u test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD32_16u test Id: 479 - MROLV
OK   UME::SIMD::SIMD32_16u test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD32_16u test Id: 481 - ROLS
OK   UME::SIMD::SIMD32_16u test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 483 - MROLS
OK   UME::SIMD::SIMD32_16u test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 485 - ROLVA
OK   UME::SIMD::SIMD32_16u test Id: 486 - MROLVA
OK   UME::SIMD::SIMD32_16u test Id: 487 - ROLSA
OK   UME::SIMD::SIMD32_16u test Id: 488 - MROLSA
OK   UME::SIMD::SIMD32_16u test Id: 489 - RORV
OK   UME::SIMD::SIMD32_16u test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD32_16u test Id: 491 - MRORV
OK   UME::SIMD::SIMD32_16u test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD32_16u test Id: 493 - RORS
OK   UME::SIMD::SIMD32_16u test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 495 - MRORS
OK   UME::SIMD::SIMD32_16u test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16u test Id: 497 - RORVA
OK   UME::SIMD::SIMD32_16u test Id: 498 - MRORVA
OK   UME::SIMD::SIMD32_16u test Id: 499 - RORSA
OK   UME::SIMD::SIMD32_16u test Id: 500 - MRORSA
OK   UME::SIMD::SIMD32_16u test Id: 501 - UTOI
OK   UME::SIMD::SIMD32_16u test Id: 502 - PACK
OK   UME::SIMD::SIMD32_16u test Id: 503 - PACKLO
OK   UME::SIMD::SIMD32_16u test Id: 504 - PACKHI
OK   UME::SIMD::SIMD32_16u test Id: 505 - UNPACK
OK   UME::SIMD::SIMD32_16u test Id: 506 - UNPACKLO
OK   UME::SIMD::SIMD32_16u test Id: 507 - UNPACKHi
OK   UME::SIMD::SIMD32_16i test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD32_16i test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD32_16i test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD32_16i test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD32_16i test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD32_16i test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD32_16i test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD32_16i test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD32_16i test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD32_16i test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD32_16i test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD32_16i test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD32_16i test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD32_16i test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD32_16i test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD32_16i test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD32_16i test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD32_16i test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD32_16i test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD32_16i test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD32_16i test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD32_16i test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD32_16i test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD32_16i test Id: 24 - INSERT
OK   UME::SIMD::SIMD32_16i test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD32_16i test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD32_16i test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD32_16i test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD32_16i test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD32_16i test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD32_16i test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD32_16i test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD32_16i test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD32_16i test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD32_16i test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD32_16i test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD32_16i test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD32_16i test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD32_16i test Id: 39 - MLOAD
OK   UME::SIMD::SIMD32_16i test Id: 40 - MSTORE
OK   UME::SIMD::SIMD32_16i test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD32_16i test Id: 42 - MLOADA
OK   UME::SIMD::SIMD32_16i test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD32_16i test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD32_16i test Id: 45 - SORTA
OK   UME::SIMD::SIMD32_16i test Id: 46 - SORTD
OK   UME::SIMD::SIMD32_16i test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD32_16i test Id: 48 - ADDV
OK   UME::SIMD::SIMD32_16i test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD32_16i test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD32_16i test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD32_16i test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD32_16i test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD32_16i test Id: 54 - MADDV
OK   UME::SIMD::SIMD32_16i test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD32_16i test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD32_16i test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD32_16i test Id: 58 - ADDS
OK   UME::SIMD::SIMD32_16i test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD32_16i test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD32_16i test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD32_16i test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD32_16i test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD32_16i test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD32_16i test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD32_16i test Id: 68 - MADDS
OK   UME::SIMD::SIMD32_16i test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD32_16i test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD32_16i test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD32_16i test Id: 73 - ADDVA
OK   UME::SIMD::SIMD32_16i test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD32_16i test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD32_16i test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD32_16i test Id: 77 - MADDVA
OK   UME::SIMD::SIMD32_16i test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD32_16i test Id: 79 - ADDSA
OK   UME::SIMD::SIMD32_16i test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD32_16i test Id: 81 - MADDSA
OK   UME::SIMD::SIMD32_16i test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD32_16i test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD32_16i test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD32_16i test Id: 85 - POSTINC
OK   UME::SIMD::SIMD32_16i test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD32_16i test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD32_16i test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD32_16i test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD32_16i test Id: 90 - PREFINC
OK   UME::SIMD::SIMD32_16i test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD32_16i test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD32_16i test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD32_16i test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD32_16i test Id: 95 - SUBV
OK   UME::SIMD::SIMD32_16i test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD32_16i test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD32_16i test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD32_16i test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD32_16i test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD32_16i test Id: 101 - MSUBV
OK   UME::SIMD::SIMD32_16i test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD32_16i test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD32_16i test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD32_16i test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD32_16i test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD32_16i test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD32_16i test Id: 108 - MSUBS
OK   UME::SIMD::SIMD32_16i test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 110 - SUBVA
OK   UME::SIMD::SIMD32_16i test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD32_16i test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD32_16i test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD32_16i test Id: 114 - SUBSA
OK   UME::SIMD::SIMD32_16i test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD32_16i test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD32_16i test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD32_16i test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD32_16i test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD32_16i test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD32_16i test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD32_16i test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD32_16i test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD32_16i test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD32_16i test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD32_16i test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD32_16i test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD32_16i test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD32_16i test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD32_16i test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD32_16i test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD32_16i test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD32_16i test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD32_16i test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD32_16i test Id: 137 - MULV
OK   UME::SIMD::SIMD32_16i test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD32_16i test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD32_16i test Id: 140 - MMULV
OK   UME::SIMD::SIMD32_16i test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD32_16i test Id: 142 - MULS
OK   UME::SIMD::SIMD32_16i test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 146 - MMULS
OK   UME::SIMD::SIMD32_16i test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 148 - MULVA
OK   UME::SIMD::SIMD32_16i test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD32_16i test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD32_16i test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD32_16i test Id: 152 - MMULVA
OK   UME::SIMD::SIMD32_16i test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD32_16i test Id: 154 - MULSA
OK   UME::SIMD::SIMD32_16i test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD32_16i test Id: 156 - MMULSA
OK   UME::SIMD::SIMD32_16i test Id: 157 - DIVV
OK   UME::SIMD::SIMD32_16i test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD32_16i test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD32_16i test Id: 160 - MDIVV
OK   UME::SIMD::SIMD32_16i test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD32_16i test Id: 162 - DIVS
OK   UME::SIMD::SIMD32_16i test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 165 - MDIVS
OK   UME::SIMD::SIMD32_16i test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 167 - DIVVA
OK   UME::SIMD::SIMD32_16i test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD32_16i test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD32_16i test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD32_16i test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD32_16i test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD32_16i test Id: 173 - DIVSA
OK   UME::SIMD::SIMD32_16i test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD32_16i test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD32_16i test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD32_16i test Id: 177 - RCP
OK   UME::SIMD::SIMD32_16i test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD32_16i test Id: 179 - MRCP
OK   UME::SIMD::SIMD32_16i test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD32_16i test Id: 181 - RCPS
OK   UME::SIMD::SIMD32_16i test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD32_16i test Id: 184 - MRCPS
OK   UME::SIMD::SIMD32_16i test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD32_16i test Id: 186 - RCPA
OK   UME::SIMD::SIMD32_16i test Id: 187 - MRCPA
OK   UME::SIMD::SIMD32_16i test Id: 188 - RCPSA
OK   UME::SIMD::SIMD32_16i test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD32_16i test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD32_16i test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD32_16i test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD32_16i test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD32_16i test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD32_16i test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD32_16i test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD32_16i test Id: 201 - CMPNES
OK   UME::SIMD::SIMD32_16i test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD32_16i test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD32_16i test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD32_16i test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD32_16i test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD32_16i test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD32_16i test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD32_16i test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD32_16i test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD32_16i test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD32_16i test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD32_16i test Id: 225 - CMPGES
OK   UME::SIMD::SIMD32_16i test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD32_16i test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD32_16i test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD32_16i test Id: 233 - CMPLES
OK   UME::SIMD::SIMD32_16i test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 238 - CMPEV
OK   UME::SIMD::SIMD32_16i test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD32_16i test Id: 240 - CMPES
OK   UME::SIMD::SIMD32_16i test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 243 - HADD
OK   UME::SIMD::SIMD32_16i test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD32_16i test Id: 245 - HADD gen
OK   UME::SIMD::SIMD32_16i test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD32_16i test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD32_16i test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD32_16i test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD32_16i test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD32_16i test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD32_16i test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD32_16i test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD32_16i test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD32_16i test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD32_16i test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD32_16i test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD32_16i test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD32_16i test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD32_16i test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD32_16i test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD32_16i test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD32_16i test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD32_16i test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD32_16i test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD32_16i test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD32_16i test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD32_16i test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD32_16i test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD32_16i test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD32_16i test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD32_16i test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD32_16i test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD32_16i test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD32_16i test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD32_16i test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD32_16i test Id: 277 - MAXV
OK   UME::SIMD::SIMD32_16i test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD32_16i test Id: 279 - MMAXV
OK   UME::SIMD::SIMD32_16i test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD32_16i test Id: 281 - MAXS
OK   UME::SIMD::SIMD32_16i test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 284 - MMAXS
OK   UME::SIMD::SIMD32_16i test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 286 - MAXVA
OK   UME::SIMD::SIMD32_16i test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD32_16i test Id: 288 - MAXSA
OK   UME::SIMD::SIMD32_16i test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD32_16i test Id: 290 - MINV
OK   UME::SIMD::SIMD32_16i test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD32_16i test Id: 292 - MMINV
OK   UME::SIMD::SIMD32_16i test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD32_16i test Id: 294 - MINS
OK   UME::SIMD::SIMD32_16i test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD32_16i test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD32_16i test Id: 297 - MMINS
OK   UME::SIMD::SIMD32_16i test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 299 - MINVA
OK   UME::SIMD::SIMD32_16i test Id: 300 - MMINVA
OK   UME::SIMD::SIMD32_16i test Id: 301 - MINSA
OK   UME::SIMD::SIMD32_16i test Id: 302 - MMINSA
OK   UME::SIMD::SIMD32_16i test Id: 303 - HMAX
OK   UME::SIMD::SIMD32_16i test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD32_16i test Id: 305 - HMAX
OK   UME::SIMD::SIMD32_16i test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD32_16i test Id: 307 - MHMAX
OK   UME::SIMD::SIMD32_16i test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD32_16i test Id: 309 - IMAX
OK   UME::SIMD::SIMD32_16i test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD32_16i test Id: 311 - MIMAX
OK   UME::SIMD::SIMD32_16i test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD32_16i test Id: 313 - HMIN
OK   UME::SIMD::SIMD32_16i test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD32_16i test Id: 315 - HMIN
OK   UME::SIMD::SIMD32_16i test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD32_16i test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD32_16i test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD32_16i test Id: 319 - IMIN
OK   UME::SIMD::SIMD32_16i test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD32_16i test Id: 321 - MIMIN
OK   UME::SIMD::SIMD32_16i test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD32_16i test Id: 323 - REMV gen
OK   UME::SIMD::SIMD32_16i test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD32_16i test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD32_16i test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD32_16i test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD32_16i test Id: 328 - REMS gen
OK   UME::SIMD::SIMD32_16i test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD32_16i test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD32_16i test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD32_16i test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD32_16i test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD32_16i test Id: 334 - LORV gen
OK   UME::SIMD::SIMD32_16i test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD32_16i test Id: 336 - BANDV
OK   UME::SIMD::SIMD32_16i test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD32_16i test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD32_16i test Id: 339 - MBANDV
OK   UME::SIMD::SIMD32_16i test Id: 340 - MBANDV
OK   UME::SIMD::SIMD32_16i test Id: 341 - BANDS
OK   UME::SIMD::SIMD32_16i test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 346 - MBANDS
OK   UME::SIMD::SIMD32_16i test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 348 - BANDVA
OK   UME::SIMD::SIMD32_16i test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD32_16i test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD32_16i test Id: 351 - BANDSA
OK   UME::SIMD::SIMD32_16i test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD32_16i test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD32_16i test Id: 354 - BORV
OK   UME::SIMD::SIMD32_16i test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD32_16i test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD32_16i test Id: 357 - MBORV
OK   UME::SIMD::SIMD32_16i test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD32_16i test Id: 359 - BORS
OK   UME::SIMD::SIMD32_16i test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 364 - MBORS
OK   UME::SIMD::SIMD32_16i test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 366 - BORVA
OK   UME::SIMD::SIMD32_16i test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD32_16i test Id: 368 - MBORVA
OK   UME::SIMD::SIMD32_16i test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD32_16i test Id: 370 - BORSA
OK   UME::SIMD::SIMD32_16i test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD32_16i test Id: 372 - MBORSA
OK   UME::SIMD::SIMD32_16i test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD32_16i test Id: 374 - BXORV
OK   UME::SIMD::SIMD32_16i test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD32_16i test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD32_16i test Id: 377 - MBXORV
OK   UME::SIMD::SIMD32_16i test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD32_16i test Id: 379 - BXORS
OK   UME::SIMD::SIMD32_16i test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 384 - MBXORS
OK   UME::SIMD::SIMD32_16i test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 386 - BXORVA
OK   UME::SIMD::SIMD32_16i test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD32_16i test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD32_16i test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD32_16i test Id: 390 - BXORSA
OK   UME::SIMD::SIMD32_16i test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD32_16i test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD32_16i test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD32_16i test Id: 394 - BNOT
OK   UME::SIMD::SIMD32_16i test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD32_16i test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD32_16i test Id: 397 - MBNOT
OK   UME::SIMD::SIMD32_16i test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD32_16i test Id: 399 - BNOTA
OK   UME::SIMD::SIMD32_16i test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD32_16i test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD32_16i test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD32_16i test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD32_16i test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD32_16i test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD32_16i test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD32_16i test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD32_16i test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD32_16i test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD32_16i test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD32_16i test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD32_16i test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD32_16i test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD32_16i test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD32_16i test Id: 415 - HBAND
OK   UME::SIMD::SIMD32_16i test Id: 416 - HBAND
OK   UME::SIMD::SIMD32_16i test Id: 417 - MHBAND
OK   UME::SIMD::SIMD32_16i test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD32_16i test Id: 419 - HBANDS
OK   UME::SIMD::SIMD32_16i test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD32_16i test Id: 421 - HBOR
OK   UME::SIMD::SIMD32_16i test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD32_16i test Id: 423 - MHBOR
OK   UME::SIMD::SIMD32_16i test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD32_16i test Id: 425 - HBORS
OK   UME::SIMD::SIMD32_16i test Id: 426 - MHBORS
OK   UME::SIMD::SIMD32_16i test Id: 427 - HBXOR
OK   UME::SIMD::SIMD32_16i test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD32_16i test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD32_16i test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD32_16i test Id: 431 - HBXORS
OK   UME::SIMD::SIMD32_16i test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD32_16i test Id: 433 - GATHERU
OK   UME::SIMD::SIMD32_16i test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD32_16i test Id: 435 - GATHERS
OK   UME::SIMD::SIMD32_16i test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD32_16i test Id: 437 - GATHERV
OK   UME::SIMD::SIMD32_16i test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD32_16i test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD32_16i test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD32_16i test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD32_16i test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD32_16i test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD32_16i test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD32_16i test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD32_16i test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD32_16i test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD32_16i test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD32_16i test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD32_16i test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD32_16i test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD32_16i test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD32_16i test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD32_16i test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD32_16i test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD32_16i test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD32_16i test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD32_16i test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD32_16i test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD32_16i test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD32_16i test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD32_16i test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD32_16i test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD32_16i test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD32_16i test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD32_16i test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD32_16i test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD32_16i test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD32_16i test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD32_16i test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD32_16i test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD32_16i test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD32_16i test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD32_16i test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD32_16i test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD32_16i test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD32_16i test Id: 477 - ROLV
OK   UME::SIMD::SIMD32_16i test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD32_16i test Id: 479 - MROLV
OK   UME::SIMD::SIMD32_16i test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD32_16i test Id: 481 - ROLS
OK   UME::SIMD::SIMD32_16i test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 483 - MROLS
OK   UME::SIMD::SIMD32_16i test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 485 - ROLVA
OK   UME::SIMD::SIMD32_16i test Id: 486 - MROLVA
OK   UME::SIMD::SIMD32_16i test Id: 487 - ROLSA
OK   UME::SIMD::SIMD32_16i test Id: 488 - MROLSA
OK   UME::SIMD::SIMD32_16i test Id: 489 - RORV
OK   UME::SIMD::SIMD32_16i test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD32_16i test Id: 491 - MRORV
OK   UME::SIMD::SIMD32_16i test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD32_16i test Id: 493 - RORS
OK   UME::SIMD::SIMD32_16i test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 495 - MRORS
OK   UME::SIMD::SIMD32_16i test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_16i test Id: 497 - RORVA
OK   UME::SIMD::SIMD32_16i test Id: 498 - MRORVA
OK   UME::SIMD::SIMD32_16i test Id: 499 - RORSA
OK   UME::SIMD::SIMD32_16i test Id: 500 - MRORSA
OK   UME::SIMD::SIMD32_16i test Id: 501 - NEG
OK   UME::SIMD::SIMD32_16i test Id: 502 - NEG(operator-)
OK   UME::SIMD::SIMD32_16i test Id: 503 - NEG(function)
OK   UME::SIMD::SIMD32_16i test Id: 504 - MNEG
OK   UME::SIMD::SIMD32_16i test Id: 505 - MNEG(function)
OK   UME::SIMD::SIMD32_16i test Id: 506 - NEGA
OK   UME::SIMD::SIMD32_16i test Id: 507 - MNEGA
OK   UME::SIMD::SIMD32_16i test Id: 508 - ABS
OK   UME::SIMD::SIMD32_16i test Id: 509 - ABS(function)
OK   UME::SIMD::SIMD32_16i test Id: 510 - MABS
OK   UME::SIMD::SIMD32_16i test Id: 511 - MABS(function)
OK   UME::SIMD::SIMD32_16i test Id: 512 - ABSA
OK   UME::SIMD::SIMD32_16i test Id: 513 - MABSA
OK   UME::SIMD::SIMD32_16i test Id: 514 - COPYSIGN gen
OK   UME::SIMD::SIMD32_16i test Id: 515 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD32_16i test Id: 516 - ITOU
OK   UME::SIMD::SIMD32_16i test Id: 517 - PACK
OK   UME::SIMD::SIMD32_16i test Id: 518 - PACKLO
OK   UME::SIMD::SIMD32_16i test Id: 519 - PACKHI
OK   UME::SIMD::SIMD32_16i test Id: 520 - UNPACK
OK   UME::SIMD::SIMD32_16i test Id: 521 - UNPACKLO
OK   UME::SIMD::SIMD32_16i test Id: 522 - UNPACKHi
OK   UME::SIMD::SIMD32_16i test Id: 523 - PROMOTE
OK   UME::SIMD::SIMD32_16i test Id: 524 - DEGRADE
OK   UME::SIMD::SIMD16_32u test Id: 1 - SET-CONSTR gen
OK   UME::SIMD::SIMD16_32u test Id: 2 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD16_32u test Id: 3 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD16_32u test Id: 4 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD16_32u test Id: 5 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD16_32u test Id: 6 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD16_32u test Id: 7 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD16_32u test Id: 8 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD16_32u test Id: 9 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD16_32u test Id: 10 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD16_32u test Id: 11 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD16_32u test Id: 12 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD16_32u test Id: 13 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD16_32u test Id: 14 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD16_32u test Id: 15 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD16_32u test Id: 16 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD16_32u test Id: 17 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD16_32u test Id: 18 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD16_32u test Id: 19 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD16_32u test Id: 20 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD16_32u test Id: 21 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD16_32u test Id: 22 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD16_32u test Id: 23 - INSERT
OK   UME::SIMD::SIMD16_32u test Id: 24 - INSERT(operator[] =)
OK   UME::SIMD::SIMD16_32u test Id: 25 - EXTRACT
OK   UME::SIMD::SIMD16_32u test Id: 26 - EXTRACT(operator[])
OK   UME::SIMD::SIMD16_32u test Id: 27 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD16_32u test Id: 28 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD16_32u test Id: 29 - ASSIGNV
OK   UME::SIMD::SIMD16_32u test Id: 30 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD16_32u test Id: 31 - MASSIGNV
OK   UME::SIMD::SIMD16_32u test Id: 32 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD16_32u test Id: 33 - ASSIGNS
OK   UME::SIMD::SIMD16_32u test Id: 34 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD16_32u test Id: 35 - MASSIGNS
OK   UME::SIMD::SIMD16_32u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD16_32u test Id: 37 - LOAD/STORE
OK   UME::SIMD::SIMD16_32u test Id: 38 - MLOAD
OK   UME::SIMD::SIMD16_32u test Id: 39 - MSTORE
OK   UME::SIMD::SIMD16_32u test Id: 40 - LOADA/STOREA
OK   UME::SIMD::SIMD16_32u test Id: 41 - MLOADA
OK   UME::SIMD::SIMD16_32u test Id: 42 - MSTOREA
OK   UME::SIMD::SIMD16_32u test Id: 43 - SWIZZLE
OK   UME::SIMD::SIMD16_32u test Id: 44 - SORTA
OK   UME::SIMD::SIMD16_32u test Id: 45 - SORTD
OK   UME::SIMD::SIMD16_32u test Id: 46 - BLENDV gen
OK   UME::SIMD::SIMD16_32u test Id: 47 - ADDV
OK   UME::SIMD::SIMD16_32u test Id: 48 - ADDV(operator+)
OK   UME::SIMD::SIMD16_32u test Id: 49 - ADDV(function)
OK   UME::SIMD::SIMD16_32u test Id: 50 - ADDV gen
OK   UME::SIMD::SIMD16_32u test Id: 51 - ADDV(operator+) gen
OK   UME::SIMD::SIMD16_32u test Id: 52 - ADDV(function) gen
OK   UME::SIMD::SIMD16_32u test Id: 53 - MADDV
OK   UME::SIMD::SIMD16_32u test Id: 54 - MADDV(function)
OK   UME::SIMD::SIMD16_32u test Id: 55 - MADDV gen
OK   UME::SIMD::SIMD16_32u test Id: 56 - MADDV(function) gen
OK   UME::SIMD::SIMD16_32u test Id: 57 - ADDS
OK   UME::SIMD::SIMD16_32u test Id: 58 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 59 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 60 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD16_32u test Id: 61 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD16_32u test Id: 62 - ADDS gen
OK   UME::SIMD::SIMD16_32u test Id: 63 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD16_32u test Id: 64 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD16_32u test Id: 65 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD16_32u test Id: 66 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD16_32u test Id: 67 - MADDS
OK   UME::SIMD::SIMD16_32u test Id: 68 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 69 - MADDS gen
OK   UME::SIMD::SIMD16_32u test Id: 70 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD16_32u test Id: 71 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD16_32u test Id: 72 - ADDVA
OK   UME::SIMD::SIMD16_32u test Id: 73 - ADDVA(operator+=)
OK   UME::SIMD::SIMD16_32u test Id: 74 - ADDVA gen
OK   UME::SIMD::SIMD16_32u test Id: 75 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD16_32u test Id: 76 - MADDVA
OK   UME::SIMD::SIMD16_32u test Id: 77 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD16_32u test Id: 78 - ADDSA
OK   UME::SIMD::SIMD16_32u test Id: 79 - ADDSA(operator+=)
OK   UME::SIMD::SIMD16_32u test Id: 80 - MADDSA
OK   UME::SIMD::SIMD16_32u test Id: 81 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD16_32u test Id: 82 - SADDV gen
OK   UME::SIMD::SIMD16_32u test Id: 83 - SADDV(function) gen
OK   UME::SIMD::SIMD16_32u test Id: 84 - POSTINC
OK   UME::SIMD::SIMD16_32u test Id: 85 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD16_32u test Id: 86 - POSTINC(function)
OK   UME::SIMD::SIMD16_32u test Id: 87 - MPOSTINC
OK   UME::SIMD::SIMD16_32u test Id: 88 - MPOSTINC(function)
OK   UME::SIMD::SIMD16_32u test Id: 89 - PREFINC
OK   UME::SIMD::SIMD16_32u test Id: 90 - PREFINC(operator++())
OK   UME::SIMD::SIMD16_32u test Id: 91 - PREFINC(function)
OK   UME::SIMD::SIMD16_32u test Id: 92 - MPREFINC
OK   UME::SIMD::SIMD16_32u test Id: 93 - MPREFINC(function)
OK   UME::SIMD::SIMD16_32u test Id: 94 - SUBV
OK   UME::SIMD::SIMD16_32u test Id: 95 - SUBV(operator-)
OK   UME::SIMD::SIMD16_32u test Id: 96 - SUBV(function)
OK   UME::SIMD::SIMD16_32u test Id: 97 - SUBV gen
OK   UME::SIMD::SIMD16_32u test Id: 98 - SUBV(operator-) gen
OK   UME::SIMD::SIMD16_32u test Id: 99 - SUBV(function) gen
OK   UME::SIMD::SIMD16_32u test Id: 100 - MSUBV
OK   UME::SIMD::SIMD16_32u test Id: 101 - MSUBV(function)
OK   UME::SIMD::SIMD16_32u test Id: 102 - MSUBV gen
OK   UME::SIMD::SIMD16_32u test Id: 103 - MSUBV(function) gen
OK   UME::SIMD::SIMD16_32u test Id: 104 - SUBS gen
OK   UME::SIMD::SIMD16_32u test Id: 105 - SUBS(operator-) gen
OK   UME::SIMD::SIMD16_32u test Id: 106 - SUBS(function) gen
OK   UME::SIMD::SIMD16_32u test Id: 107 - MSUBS
OK   UME::SIMD::SIMD16_32u test Id: 108 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 109 - SUBVA
OK   UME::SIMD::SIMD16_32u test Id: 110 - SUBVA(operator-=)
OK   UME::SIMD::SIMD16_32u test Id: 111 - MSUBVA
OK   UME::SIMD::SIMD16_32u test Id: 112 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD16_32u test Id: 113 - SUBSA
OK   UME::SIMD::SIMD16_32u test Id: 114 - MSUBSA
OK   UME::SIMD::SIMD16_32u test Id: 115 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD16_32u test Id: 116 - SUBFROMV
OK   UME::SIMD::SIMD16_32u test Id: 117 - MSUBFROMV
OK   UME::SIMD::SIMD16_32u test Id: 118 - SUBFROMS
OK   UME::SIMD::SIMD16_32u test Id: 119 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 120 - MSUBFROMS
OK   UME::SIMD::SIMD16_32u test Id: 121 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 122 - SUBFROMVA
OK   UME::SIMD::SIMD16_32u test Id: 123 - MSUBFROMVA
OK   UME::SIMD::SIMD16_32u test Id: 124 - SUBFROMSA
OK   UME::SIMD::SIMD16_32u test Id: 125 - MSUBFROMSA
OK   UME::SIMD::SIMD16_32u test Id: 126 - POSTDEC
OK   UME::SIMD::SIMD16_32u test Id: 127 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD16_32u test Id: 128 - POSTDEC(function)
OK   UME::SIMD::SIMD16_32u test Id: 129 - MPOSTDEC
OK   UME::SIMD::SIMD16_32u test Id: 130 - MPOSTDEC(function)
OK   UME::SIMD::SIMD16_32u test Id: 131 - PREFDEC
OK   UME::SIMD::SIMD16_32u test Id: 132 - PREFDEC(operator--())
OK   UME::SIMD::SIMD16_32u test Id: 133 - PREFDEC(function)
OK   UME::SIMD::SIMD16_32u test Id: 134 - MPREFDEC
OK   UME::SIMD::SIMD16_32u test Id: 135 - MPREFDEC(function)
OK   UME::SIMD::SIMD16_32u test Id: 136 - MULV
OK   UME::SIMD::SIMD16_32u test Id: 137 - MULV(operator*)
OK   UME::SIMD::SIMD16_32u test Id: 138 - MULV(function)
OK   UME::SIMD::SIMD16_32u test Id: 139 - MMULV
OK   UME::SIMD::SIMD16_32u test Id: 140 - MMULV(function)
OK   UME::SIMD::SIMD16_32u test Id: 141 - MULS
OK   UME::SIMD::SIMD16_32u test Id: 142 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 143 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 144 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 145 - MMULS
OK   UME::SIMD::SIMD16_32u test Id: 146 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 147 - MULVA
OK   UME::SIMD::SIMD16_32u test Id: 148 - MULVA(operator*)
OK   UME::SIMD::SIMD16_32u test Id: 149 - MULVA gen
OK   UME::SIMD::SIMD16_32u test Id: 150 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD16_32u test Id: 151 - MMULVA
OK   UME::SIMD::SIMD16_32u test Id: 152 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_32u test Id: 153 - MULSA
OK   UME::SIMD::SIMD16_32u test Id: 154 - MULSA(operator*=)
OK   UME::SIMD::SIMD16_32u test Id: 155 - MMULSA
OK   UME::SIMD::SIMD16_32u test Id: 156 - DIVV
OK   UME::SIMD::SIMD16_32u test Id: 157 - DIVV(operator/)
OK   UME::SIMD::SIMD16_32u test Id: 158 - DIVV(function)
OK   UME::SIMD::SIMD16_32u test Id: 159 - MDIVV
OK   UME::SIMD::SIMD16_32u test Id: 160 - MDIVV(function)
OK   UME::SIMD::SIMD16_32u test Id: 161 - DIVS
OK   UME::SIMD::SIMD16_32u test Id: 162 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 163 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 164 - MDIVS
OK   UME::SIMD::SIMD16_32u test Id: 165 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 166 - DIVVA
OK   UME::SIMD::SIMD16_32u test Id: 167 - DIVVA(operator/=)
OK   UME::SIMD::SIMD16_32u test Id: 168 - DIVVA gen
OK   UME::SIMD::SIMD16_32u test Id: 169 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD16_32u test Id: 170 - MDIVVA
OK   UME::SIMD::SIMD16_32u test Id: 171 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_32u test Id: 172 - DIVSA
OK   UME::SIMD::SIMD16_32u test Id: 173 - DIVSA(operator/=)
OK   UME::SIMD::SIMD16_32u test Id: 174 - MDIVSA
OK   UME::SIMD::SIMD16_32u test Id: 175 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD16_32u test Id: 176 - RCP
OK   UME::SIMD::SIMD16_32u test Id: 177 - RCP(function)
OK   UME::SIMD::SIMD16_32u test Id: 178 - MRCP
OK   UME::SIMD::SIMD16_32u test Id: 179 - MRCP(function)
OK   UME::SIMD::SIMD16_32u test Id: 180 - RCPS
OK   UME::SIMD::SIMD16_32u test Id: 181 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 182 - RCPS(function)
OK   UME::SIMD::SIMD16_32u test Id: 183 - MRCPS
OK   UME::SIMD::SIMD16_32u test Id: 184 - MRCPS (function)
OK   UME::SIMD::SIMD16_32u test Id: 185 - RCPA
OK   UME::SIMD::SIMD16_32u test Id: 186 - MRCPA
OK   UME::SIMD::SIMD16_32u test Id: 187 - RCPSA
OK   UME::SIMD::SIMD16_32u test Id: 188 - MRCPSA
OK   UME::SIMD::SIMD16_32u test Id: 189 - CMPEQV
OK   UME::SIMD::SIMD16_32u test Id: 190 - CMPEQV(operator==)
OK   UME::SIMD::SIMD16_32u test Id: 191 - CMPEQV(function)
OK   UME::SIMD::SIMD16_32u test Id: 192 - CMPEQS
OK   UME::SIMD::SIMD16_32u test Id: 193 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 194 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 195 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 196 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 197 - CMPNEV
OK   UME::SIMD::SIMD16_32u test Id: 198 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD16_32u test Id: 199 - CMPNEV(function)
OK   UME::SIMD::SIMD16_32u test Id: 200 - CMPNES
OK   UME::SIMD::SIMD16_32u test Id: 201 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 202 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 203 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 204 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 205 - CMPGTV
OK   UME::SIMD::SIMD16_32u test Id: 206 - CMPGTV(operator>)
OK   UME::SIMD::SIMD16_32u test Id: 207 - CMPGTV(function)
OK   UME::SIMD::SIMD16_32u test Id: 208 - CMPGTS
OK   UME::SIMD::SIMD16_32u test Id: 209 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 210 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 211 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 212 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 213 - CMPLTV
OK   UME::SIMD::SIMD16_32u test Id: 214 - CMPLTV(operator<)
OK   UME::SIMD::SIMD16_32u test Id: 215 - CMPLTV(function)
OK   UME::SIMD::SIMD16_32u test Id: 216 - CMPLTS
OK   UME::SIMD::SIMD16_32u test Id: 217 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 218 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 219 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 220 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 221 - CMPGEV
OK   UME::SIMD::SIMD16_32u test Id: 222 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD16_32u test Id: 223 - CMPGEV(function)
OK   UME::SIMD::SIMD16_32u test Id: 224 - CMPGES
OK   UME::SIMD::SIMD16_32u test Id: 225 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 226 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 227 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 228 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 229 - CMPLEV
OK   UME::SIMD::SIMD16_32u test Id: 230 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD16_32u test Id: 231 - CMPLEV(function)
OK   UME::SIMD::SIMD16_32u test Id: 232 - CMPLES
OK   UME::SIMD::SIMD16_32u test Id: 233 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 234 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 235 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 236 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 237 - CMPEV
OK   UME::SIMD::SIMD16_32u test Id: 238 - CMPEV(function)
OK   UME::SIMD::SIMD16_32u test Id: 239 - CMPES
OK   UME::SIMD::SIMD16_32u test Id: 240 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 241 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 242 - HADD
OK   UME::SIMD::SIMD16_32u test Id: 243 - HADD(function)
OK   UME::SIMD::SIMD16_32u test Id: 244 - HADD gen
OK   UME::SIMD::SIMD16_32u test Id: 245 - HADD(function) gen
OK   UME::SIMD::SIMD16_32u test Id: 246 - MHADD gen
OK   UME::SIMD::SIMD16_32u test Id: 247 - MHADD(function) gen
OK   UME::SIMD::SIMD16_32u test Id: 248 - HADDS gen
OK   UME::SIMD::SIMD16_32u test Id: 249 - HADDS(function) gen
OK   UME::SIMD::SIMD16_32u test Id: 250 - MHADD gen
OK   UME::SIMD::SIMD16_32u test Id: 251 - MHADDS(function) gen
OK   UME::SIMD::SIMD16_32u test Id: 252 - HMUL gen
OK   UME::SIMD::SIMD16_32u test Id: 253 - HMUL(function) gen
OK   UME::SIMD::SIMD16_32u test Id: 254 - MHMUL gen
OK   UME::SIMD::SIMD16_32u test Id: 255 - MHMUL(function) gen
OK   UME::SIMD::SIMD16_32u test Id: 256 - HMULS gen
OK   UME::SIMD::SIMD16_32u test Id: 257 - HMULS(function) gen
OK   UME::SIMD::SIMD16_32u test Id: 258 - MHMUL gen
OK   UME::SIMD::SIMD16_32u test Id: 259 - MHMULS(function) gen
OK   UME::SIMD::SIMD16_32u test Id: 260 - FMULADDV
OK   UME::SIMD::SIMD16_32u test Id: 261 - FMULADDV(function)
OK   UME::SIMD::SIMD16_32u test Id: 262 - MFMULADDV
OK   UME::SIMD::SIMD16_32u test Id: 263 - MFMULADDV(function)
OK   UME::SIMD::SIMD16_32u test Id: 264 - FMULSUBV
OK   UME::SIMD::SIMD16_32u test Id: 265 - FMULSUBV(function)
OK   UME::SIMD::SIMD16_32u test Id: 266 - MFMULSUBV
OK   UME::SIMD::SIMD16_32u test Id: 267 - MFMULSUBV(function)
OK   UME::SIMD::SIMD16_32u test Id: 268 - FADDMULV
OK   UME::SIMD::SIMD16_32u test Id: 269 - FADDMULV(function)
OK   UME::SIMD::SIMD16_32u test Id: 270 - MFADDMULV
OK   UME::SIMD::SIMD16_32u test Id: 271 - MFADDMULV(function)
OK   UME::SIMD::SIMD16_32u test Id: 272 - FSUBMULV
OK   UME::SIMD::SIMD16_32u test Id: 273 - FSUBMULV(function)
OK   UME::SIMD::SIMD16_32u test Id: 274 - MFSUBMULV
OK   UME::SIMD::SIMD16_32u test Id: 275 - MFSUBMULV(function)
OK   UME::SIMD::SIMD16_32u test Id: 276 - MAXV
OK   UME::SIMD::SIMD16_32u test Id: 277 - MAXV(function)
OK   UME::SIMD::SIMD16_32u test Id: 278 - MMAXV
OK   UME::SIMD::SIMD16_32u test Id: 279 - MMAXV(function)
OK   UME::SIMD::SIMD16_32u test Id: 280 - MAXS
OK   UME::SIMD::SIMD16_32u test Id: 281 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 282 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 283 - MMAXS
OK   UME::SIMD::SIMD16_32u test Id: 284 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 285 - MAXVA
OK   UME::SIMD::SIMD16_32u test Id: 286 - MMAXVA
OK   UME::SIMD::SIMD16_32u test Id: 287 - MAXSA
OK   UME::SIMD::SIMD16_32u test Id: 288 - MMAXSA
OK   UME::SIMD::SIMD16_32u test Id: 289 - MINV
OK   UME::SIMD::SIMD16_32u test Id: 290 - MINV(function)
OK   UME::SIMD::SIMD16_32u test Id: 291 - MMINV
OK   UME::SIMD::SIMD16_32u test Id: 292 - MMINV(function)
OK   UME::SIMD::SIMD16_32u test Id: 293 - MINS
OK   UME::SIMD::SIMD16_32u test Id: 294 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD16_32u test Id: 295 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD16_32u test Id: 296 - MMINS
OK   UME::SIMD::SIMD16_32u test Id: 297 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 298 - MINVA
OK   UME::SIMD::SIMD16_32u test Id: 299 - MMINVA
OK   UME::SIMD::SIMD16_32u test Id: 300 - MINSA
OK   UME::SIMD::SIMD16_32u test Id: 301 - MMINSA
OK   UME::SIMD::SIMD16_32u test Id: 302 - HMAX
OK   UME::SIMD::SIMD16_32u test Id: 303 - HMAX(function)
OK   UME::SIMD::SIMD16_32u test Id: 304 - HMAX
OK   UME::SIMD::SIMD16_32u test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD16_32u test Id: 306 - MHMAX
OK   UME::SIMD::SIMD16_32u test Id: 307 - MHMAX(function)
OK   UME::SIMD::SIMD16_32u test Id: 308 - IMAX
OK   UME::SIMD::SIMD16_32u test Id: 309 - IMAX(function)
OK   UME::SIMD::SIMD16_32u test Id: 310 - MIMAX
OK   UME::SIMD::SIMD16_32u test Id: 311 - MIMAX(function)
OK   UME::SIMD::SIMD16_32u test Id: 312 - HMIN
OK   UME::SIMD::SIMD16_32u test Id: 313 - HMIN(function)
OK   UME::SIMD::SIMD16_32u test Id: 314 - HMIN
OK   UME::SIMD::SIMD16_32u test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD16_32u test Id: 316 - MHMIN gen
OK   UME::SIMD::SIMD16_32u test Id: 317 - MHMIN(function) gen
OK   UME::SIMD::SIMD16_32u test Id: 318 - IMIN
OK   UME::SIMD::SIMD16_32u test Id: 319 - IMIN(function)
OK   UME::SIMD::SIMD16_32u test Id: 320 - MIMIN
OK   UME::SIMD::SIMD16_32u test Id: 321 - MIMIN(function)
OK   UME::SIMD::SIMD16_32u test Id: 322 - REMV gen
OK   UME::SIMD::SIMD16_32u test Id: 323 - REMV(operator%) gen
OK   UME::SIMD::SIMD16_32u test Id: 324 - REMV(function) gen
OK   UME::SIMD::SIMD16_32u test Id: 325 - MREMV gen
OK   UME::SIMD::SIMD16_32u test Id: 326 - MREMV(function) gen
OK   UME::SIMD::SIMD16_32u test Id: 327 - REMS gen
OK   UME::SIMD::SIMD16_32u test Id: 328 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD16_32u test Id: 329 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD16_32u test Id: 330 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD16_32u test Id: 331 - LANDV gen
OK   UME::SIMD::SIMD16_32u test Id: 332 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD16_32u test Id: 333 - LORV gen
OK   UME::SIMD::SIMD16_32u test Id: 334 - LORV gen (operator ||)
OK   UME::SIMD::SIMD16_32u test Id: 335 - BANDV
OK   UME::SIMD::SIMD16_32u test Id: 336 - BANDV(operator&)
OK   UME::SIMD::SIMD16_32u test Id: 337 - BANDV(function)
OK   UME::SIMD::SIMD16_32u test Id: 338 - MBANDV
OK   UME::SIMD::SIMD16_32u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD16_32u test Id: 340 - BANDS
OK   UME::SIMD::SIMD16_32u test Id: 341 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 342 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 343 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 344 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 345 - MBANDS
OK   UME::SIMD::SIMD16_32u test Id: 346 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 347 - BANDVA
OK   UME::SIMD::SIMD16_32u test Id: 348 - MBANDVA
OK   UME::SIMD::SIMD16_32u test Id: 349 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD16_32u test Id: 350 - BANDSA
OK   UME::SIMD::SIMD16_32u test Id: 351 - MBANDSA
OK   UME::SIMD::SIMD16_32u test Id: 352 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD16_32u test Id: 353 - BORV
OK   UME::SIMD::SIMD16_32u test Id: 354 - BORV(operator |)
OK   UME::SIMD::SIMD16_32u test Id: 355 - BORV(function)
OK   UME::SIMD::SIMD16_32u test Id: 356 - MBORV
OK   UME::SIMD::SIMD16_32u test Id: 357 - MBORV(function)
OK   UME::SIMD::SIMD16_32u test Id: 358 - BORS
OK   UME::SIMD::SIMD16_32u test Id: 359 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 360 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 361 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 362 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 363 - MBORS
OK   UME::SIMD::SIMD16_32u test Id: 364 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 365 - BORVA
OK   UME::SIMD::SIMD16_32u test Id: 366 - BORVA(operator|=)
OK   UME::SIMD::SIMD16_32u test Id: 367 - MBORVA
OK   UME::SIMD::SIMD16_32u test Id: 368 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD16_32u test Id: 369 - BORSA
OK   UME::SIMD::SIMD16_32u test Id: 370 - BORSA(operator|=)
OK   UME::SIMD::SIMD16_32u test Id: 371 - MBORSA
OK   UME::SIMD::SIMD16_32u test Id: 372 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD16_32u test Id: 373 - BXORV
OK   UME::SIMD::SIMD16_32u test Id: 374 - BXORV(operator^
OK   UME::SIMD::SIMD16_32u test Id: 375 - BXORV(function
OK   UME::SIMD::SIMD16_32u test Id: 376 - MBXORV
OK   UME::SIMD::SIMD16_32u test Id: 377 - MBXORV(function)
OK   UME::SIMD::SIMD16_32u test Id: 378 - BXORS
OK   UME::SIMD::SIMD16_32u test Id: 379 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 380 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 381 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 382 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 383 - MBXORS
OK   UME::SIMD::SIMD16_32u test Id: 384 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 385 - BXORVA
OK   UME::SIMD::SIMD16_32u test Id: 386 - BXORVA(operator^=)
OK   UME::SIMD::SIMD16_32u test Id: 387 - MBXORVA
OK   UME::SIMD::SIMD16_32u test Id: 388 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD16_32u test Id: 389 - BXORSA
OK   UME::SIMD::SIMD16_32u test Id: 390 - BXORSA(operator^=)
OK   UME::SIMD::SIMD16_32u test Id: 391 - MBXORSA
OK   UME::SIMD::SIMD16_32u test Id: 392 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD16_32u test Id: 393 - BNOT
OK   UME::SIMD::SIMD16_32u test Id: 394 - BNOT(operator!)
OK   UME::SIMD::SIMD16_32u test Id: 395 - BNOT(function)
OK   UME::SIMD::SIMD16_32u test Id: 396 - MBNOT
OK   UME::SIMD::SIMD16_32u test Id: 397 - MBNOT(function)
OK   UME::SIMD::SIMD16_32u test Id: 398 - BNOTA
OK   UME::SIMD::SIMD16_32u test Id: 399 - MBNOTA
OK   UME::SIMD::SIMD16_32u test Id: 400 - BANDNOTV
OK   UME::SIMD::SIMD16_32u test Id: 401 - BANDNOTV (function)
OK   UME::SIMD::SIMD16_32u test Id: 402 - MBANDNOTV
OK   UME::SIMD::SIMD16_32u test Id: 403 - MBANDNOTV (function)
OK   UME::SIMD::SIMD16_32u test Id: 404 - BANDNOTS
OK   UME::SIMD::SIMD16_32u test Id: 405 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD16_32u test Id: 406 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD16_32u test Id: 407 - MBANDNOTS
OK   UME::SIMD::SIMD16_32u test Id: 408 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD16_32u test Id: 409 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD16_32u test Id: 410 - BANDNOTVA
OK   UME::SIMD::SIMD16_32u test Id: 411 - MBANDNOTVA
OK   UME::SIMD::SIMD16_32u test Id: 412 - BANDNOTSA
OK   UME::SIMD::SIMD16_32u test Id: 413 - MBANDNOTSA
OK   UME::SIMD::SIMD16_32u test Id: 414 - HBAND
OK   UME::SIMD::SIMD16_32u test Id: 415 - HBAND
OK   UME::SIMD::SIMD16_32u test Id: 416 - MHBAND
OK   UME::SIMD::SIMD16_32u test Id: 417 - MHBAND(function)
OK   UME::SIMD::SIMD16_32u test Id: 418 - HBANDS
OK   UME::SIMD::SIMD16_32u test Id: 419 - MHBANDS
OK   UME::SIMD::SIMD16_32u test Id: 420 - HBOR
OK   UME::SIMD::SIMD16_32u test Id: 421 - HBOR(function)
OK   UME::SIMD::SIMD16_32u test Id: 422 - MHBOR
OK   UME::SIMD::SIMD16_32u test Id: 423 - MHBOR(function)
OK   UME::SIMD::SIMD16_32u test Id: 424 - HBORS
OK   UME::SIMD::SIMD16_32u test Id: 425 - MHBORS
OK   UME::SIMD::SIMD16_32u test Id: 426 - HBXOR
OK   UME::SIMD::SIMD16_32u test Id: 427 - HBXOR(function)
OK   UME::SIMD::SIMD16_32u test Id: 428 - MHBXOR
OK   UME::SIMD::SIMD16_32u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD16_32u test Id: 430 - HBXORS
OK   UME::SIMD::SIMD16_32u test Id: 431 - MHBXORS
OK   UME::SIMD::SIMD16_32u test Id: 432 - GATHERU
OK   UME::SIMD::SIMD16_32u test Id: 433 - MGATHERU
OK   UME::SIMD::SIMD16_32u test Id: 434 - GATHERS
OK   UME::SIMD::SIMD16_32u test Id: 435 - MGATHERS
OK   UME::SIMD::SIMD16_32u test Id: 436 - GATHERV
OK   UME::SIMD::SIMD16_32u test Id: 437 - MGATHERV
OK   UME::SIMD::SIMD16_32u test Id: 438 - SCATTERU
OK   UME::SIMD::SIMD16_32u test Id: 439 - MSCATTERU
OK   UME::SIMD::SIMD16_32u test Id: 440 - SCATTERS
OK   UME::SIMD::SIMD16_32u test Id: 441 - MSCATTERS
OK   UME::SIMD::SIMD16_32u test Id: 442 - SCATTERV
OK   UME::SIMD::SIMD16_32u test Id: 443 - MSCATTERV
OK   UME::SIMD::SIMD16_32u test Id: 444 - LSHV gen
OK   UME::SIMD::SIMD16_32u test Id: 445 - LSHV (function) gen
OK   UME::SIMD::SIMD16_32u test Id: 446 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD16_32u test Id: 447 - MLSHV gen
OK   UME::SIMD::SIMD16_32u test Id: 448 - MLSHV (function) gen
OK   UME::SIMD::SIMD16_32u test Id: 449 - LSHS gen
OK   UME::SIMD::SIMD16_32u test Id: 450 - LSHS (function) gen
OK   UME::SIMD::SIMD16_32u test Id: 451 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD16_32u test Id: 452 - MLSHS gen
OK   UME::SIMD::SIMD16_32u test Id: 453 - MLSHS (function) gen
OK   UME::SIMD::SIMD16_32u test Id: 454 - LSHVA gen
OK   UME::SIMD::SIMD16_32u test Id: 455 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD16_32u test Id: 456 - MLSHVA gen
OK   UME::SIMD::SIMD16_32u test Id: 457 - LSHSA gen
OK   UME::SIMD::SIMD16_32u test Id: 458 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD16_32u test Id: 459 - MLSHSA gen
OK   UME::SIMD::SIMD16_32u test Id: 460 - RSHV gen
OK   UME::SIMD::SIMD16_32u test Id: 461 - RSHV (function) gen
OK   UME::SIMD::SIMD16_32u test Id: 462 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD16_32u test Id: 463 - MRSHV gen
OK   UME::SIMD::SIMD16_32u test Id: 464 - MRSHV (function) gen
OK   UME::SIMD::SIMD16_32u test Id: 465 - RSHS gen
OK   UME::SIMD::SIMD16_32u test Id: 466 - RSHS (function) gen
OK   UME::SIMD::SIMD16_32u test Id: 467 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD16_32u test Id: 468 - MRSHS gen
OK   UME::SIMD::SIMD16_32u test Id: 469 - MRSHS (function) gen
OK   UME::SIMD::SIMD16_32u test Id: 470 - RSHVA gen
OK   UME::SIMD::SIMD16_32u test Id: 471 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD16_32u test Id: 472 - MRSHVA gen
OK   UME::SIMD::SIMD16_32u test Id: 473 - RSHSA gen
OK   UME::SIMD::SIMD16_32u test Id: 474 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD16_32u test Id: 475 - MRSHSA gen
OK   UME::SIMD::SIMD16_32u test Id: 476 - ROLV
OK   UME::SIMD::SIMD16_32u test Id: 477 - ROLV(function)
OK   UME::SIMD::SIMD16_32u test Id: 478 - MROLV
OK   UME::SIMD::SIMD16_32u test Id: 479 - MROLV(function)
OK   UME::SIMD::SIMD16_32u test Id: 480 - ROLS
OK   UME::SIMD::SIMD16_32u test Id: 481 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 482 - MROLS
OK   UME::SIMD::SIMD16_32u test Id: 483 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 484 - ROLVA
OK   UME::SIMD::SIMD16_32u test Id: 485 - MROLVA
OK   UME::SIMD::SIMD16_32u test Id: 486 - ROLSA
OK   UME::SIMD::SIMD16_32u test Id: 487 - MROLSA
OK   UME::SIMD::SIMD16_32u test Id: 488 - RORV
OK   UME::SIMD::SIMD16_32u test Id: 489 - RORV(function)
OK   UME::SIMD::SIMD16_32u test Id: 490 - MRORV
OK   UME::SIMD::SIMD16_32u test Id: 491 - MRORV(function)
OK   UME::SIMD::SIMD16_32u test Id: 492 - RORS
OK   UME::SIMD::SIMD16_32u test Id: 493 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 494 - MRORS
OK   UME::SIMD::SIMD16_32u test Id: 495 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32u test Id: 496 - RORVA
OK   UME::SIMD::SIMD16_32u test Id: 497 - MRORVA
OK   UME::SIMD::SIMD16_32u test Id: 498 - RORSA
OK   UME::SIMD::SIMD16_32u test Id: 499 - MRORSA
OK   UME::SIMD::SIMD16_32u test Id: 500 - UTOI
OK   UME::SIMD::SIMD16_32u test Id: 501 - UTOF
OK   UME::SIMD::SIMD16_32u test Id: 502 - PACK
OK   UME::SIMD::SIMD16_32u test Id: 503 - PACKLO
OK   UME::SIMD::SIMD16_32u test Id: 504 - PACKHI
OK   UME::SIMD::SIMD16_32u test Id: 505 - UNPACK
OK   UME::SIMD::SIMD16_32u test Id: 506 - UNPACKLO
OK   UME::SIMD::SIMD16_32u test Id: 507 - UNPACKHi
OK   UME::SIMD::SIMD16_32u test Id: 508 - PROMOTE
OK   UME::SIMD::SIMD16_32u test Id: 509 - DEGRADE
OK   UME::SIMD::SIMD16_32u test Id: 510 - ZERO-CONSTR
OK   UME::SIMD::SIMD16_32i test Id: 1 - SET-CONSTR gen
OK   UME::SIMD::SIMD16_32i test Id: 2 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD16_32i test Id: 3 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD16_32i test Id: 4 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD16_32i test Id: 5 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD16_32i test Id: 6 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD16_32i test Id: 7 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD16_32i test Id: 8 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD16_32i test Id: 9 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD16_32i test Id: 10 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD16_32i test Id: 11 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD16_32i test Id: 12 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD16_32i test Id: 13 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD16_32i test Id: 14 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD16_32i test Id: 15 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD16_32i test Id: 16 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD16_32i test Id: 17 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD16_32i test Id: 18 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD16_32i test Id: 19 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD16_32i test Id: 20 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD16_32i test Id: 21 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD16_32i test Id: 22 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD16_32i test Id: 23 - INSERT
OK   UME::SIMD::SIMD16_32i test Id: 24 - INSERT(operator[] =)
OK   UME::SIMD::SIMD16_32i test Id: 25 - EXTRACT
OK   UME::SIMD::SIMD16_32i test Id: 26 - EXTRACT(operator[])
OK   UME::SIMD::SIMD16_32i test Id: 27 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD16_32i test Id: 28 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD16_32i test Id: 29 - ASSIGNV
OK   UME::SIMD::SIMD16_32i test Id: 30 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD16_32i test Id: 31 - MASSIGNV
OK   UME::SIMD::SIMD16_32i test Id: 32 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD16_32i test Id: 33 - ASSIGNS
OK   UME::SIMD::SIMD16_32i test Id: 34 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD16_32i test Id: 35 - MASSIGNS
OK   UME::SIMD::SIMD16_32i test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD16_32i test Id: 37 - LOAD/STORE
OK   UME::SIMD::SIMD16_32i test Id: 38 - MLOAD
OK   UME::SIMD::SIMD16_32i test Id: 39 - MSTORE
OK   UME::SIMD::SIMD16_32i test Id: 40 - LOADA/STOREA
OK   UME::SIMD::SIMD16_32i test Id: 41 - MLOADA
OK   UME::SIMD::SIMD16_32i test Id: 42 - MSTOREA
OK   UME::SIMD::SIMD16_32i test Id: 43 - SWIZZLE
OK   UME::SIMD::SIMD16_32i test Id: 44 - SORTA
OK   UME::SIMD::SIMD16_32i test Id: 45 - SORTD
OK   UME::SIMD::SIMD16_32i test Id: 46 - BLENDV gen
OK   UME::SIMD::SIMD16_32i test Id: 47 - ADDV
OK   UME::SIMD::SIMD16_32i test Id: 48 - ADDV(operator+)
OK   UME::SIMD::SIMD16_32i test Id: 49 - ADDV(function)
OK   UME::SIMD::SIMD16_32i test Id: 50 - ADDV gen
OK   UME::SIMD::SIMD16_32i test Id: 51 - ADDV(operator+) gen
OK   UME::SIMD::SIMD16_32i test Id: 52 - ADDV(function) gen
OK   UME::SIMD::SIMD16_32i test Id: 53 - MADDV
OK   UME::SIMD::SIMD16_32i test Id: 54 - MADDV(function)
OK   UME::SIMD::SIMD16_32i test Id: 55 - MADDV gen
OK   UME::SIMD::SIMD16_32i test Id: 56 - MADDV(function) gen
OK   UME::SIMD::SIMD16_32i test Id: 57 - ADDS
OK   UME::SIMD::SIMD16_32i test Id: 58 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 59 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 60 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD16_32i test Id: 61 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD16_32i test Id: 62 - ADDS gen
OK   UME::SIMD::SIMD16_32i test Id: 63 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD16_32i test Id: 64 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD16_32i test Id: 65 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD16_32i test Id: 66 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD16_32i test Id: 67 - MADDS
OK   UME::SIMD::SIMD16_32i test Id: 68 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 69 - MADDS gen
OK   UME::SIMD::SIMD16_32i test Id: 70 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD16_32i test Id: 71 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD16_32i test Id: 72 - ADDVA
OK   UME::SIMD::SIMD16_32i test Id: 73 - ADDVA(operator+=)
OK   UME::SIMD::SIMD16_32i test Id: 74 - ADDVA gen
OK   UME::SIMD::SIMD16_32i test Id: 75 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD16_32i test Id: 76 - MADDVA
OK   UME::SIMD::SIMD16_32i test Id: 77 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD16_32i test Id: 78 - ADDSA
OK   UME::SIMD::SIMD16_32i test Id: 79 - ADDSA(operator+=)
OK   UME::SIMD::SIMD16_32i test Id: 80 - MADDSA
OK   UME::SIMD::SIMD16_32i test Id: 81 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD16_32i test Id: 82 - SADDV gen
OK   UME::SIMD::SIMD16_32i test Id: 83 - SADDV(function) gen
OK   UME::SIMD::SIMD16_32i test Id: 84 - POSTINC
OK   UME::SIMD::SIMD16_32i test Id: 85 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD16_32i test Id: 86 - POSTINC(function)
OK   UME::SIMD::SIMD16_32i test Id: 87 - MPOSTINC
OK   UME::SIMD::SIMD16_32i test Id: 88 - MPOSTINC(function)
OK   UME::SIMD::SIMD16_32i test Id: 89 - PREFINC
OK   UME::SIMD::SIMD16_32i test Id: 90 - PREFINC(operator++())
OK   UME::SIMD::SIMD16_32i test Id: 91 - PREFINC(function)
OK   UME::SIMD::SIMD16_32i test Id: 92 - MPREFINC
OK   UME::SIMD::SIMD16_32i test Id: 93 - MPREFINC(function)
OK   UME::SIMD::SIMD16_32i test Id: 94 - SUBV
OK   UME::SIMD::SIMD16_32i test Id: 95 - SUBV(operator-)
OK   UME::SIMD::SIMD16_32i test Id: 96 - SUBV(function)
OK   UME::SIMD::SIMD16_32i test Id: 97 - SUBV gen
OK   UME::SIMD::SIMD16_32i test Id: 98 - SUBV(operator-) gen
OK   UME::SIMD::SIMD16_32i test Id: 99 - SUBV(function) gen
OK   UME::SIMD::SIMD16_32i test Id: 100 - MSUBV
OK   UME::SIMD::SIMD16_32i test Id: 101 - MSUBV(function)
OK   UME::SIMD::SIMD16_32i test Id: 102 - MSUBV gen
OK   UME::SIMD::SIMD16_32i test Id: 103 - MSUBV(function) gen
OK   UME::SIMD::SIMD16_32i test Id: 104 - SUBS gen
OK   UME::SIMD::SIMD16_32i test Id: 105 - SUBS(operator-) gen
OK   UME::SIMD::SIMD16_32i test Id: 106 - SUBS(function) gen
OK   UME::SIMD::SIMD16_32i test Id: 107 - MSUBS
OK   UME::SIMD::SIMD16_32i test Id: 108 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 109 - SUBVA
OK   UME::SIMD::SIMD16_32i test Id: 110 - SUBVA(operator-=)
OK   UME::SIMD::SIMD16_32i test Id: 111 - MSUBVA
OK   UME::SIMD::SIMD16_32i test Id: 112 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD16_32i test Id: 113 - SUBSA
OK   UME::SIMD::SIMD16_32i test Id: 114 - MSUBSA
OK   UME::SIMD::SIMD16_32i test Id: 115 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD16_32i test Id: 116 - SUBFROMV
OK   UME::SIMD::SIMD16_32i test Id: 117 - MSUBFROMV
OK   UME::SIMD::SIMD16_32i test Id: 118 - SUBFROMS
OK   UME::SIMD::SIMD16_32i test Id: 119 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 120 - MSUBFROMS
OK   UME::SIMD::SIMD16_32i test Id: 121 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 122 - SUBFROMVA
OK   UME::SIMD::SIMD16_32i test Id: 123 - MSUBFROMVA
OK   UME::SIMD::SIMD16_32i test Id: 124 - SUBFROMSA
OK   UME::SIMD::SIMD16_32i test Id: 125 - MSUBFROMSA
OK   UME::SIMD::SIMD16_32i test Id: 126 - POSTDEC
OK   UME::SIMD::SIMD16_32i test Id: 127 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD16_32i test Id: 128 - POSTDEC(function)
OK   UME::SIMD::SIMD16_32i test Id: 129 - MPOSTDEC
OK   UME::SIMD::SIMD16_32i test Id: 130 - MPOSTDEC(function)
OK   UME::SIMD::SIMD16_32i test Id: 131 - PREFDEC
OK   UME::SIMD::SIMD16_32i test Id: 132 - PREFDEC(operator--())
OK   UME::SIMD::SIMD16_32i test Id: 133 - PREFDEC(function)
OK   UME::SIMD::SIMD16_32i test Id: 134 - MPREFDEC
OK   UME::SIMD::SIMD16_32i test Id: 135 - MPREFDEC(function)
OK   UME::SIMD::SIMD16_32i test Id: 136 - MULV
OK   UME::SIMD::SIMD16_32i test Id: 137 - MULV(operator*)
OK   UME::SIMD::SIMD16_32i test Id: 138 - MULV(function)
OK   UME::SIMD::SIMD16_32i test Id: 139 - MMULV
OK   UME::SIMD::SIMD16_32i test Id: 140 - MMULV(function)
OK   UME::SIMD::SIMD16_32i test Id: 141 - MULS
OK   UME::SIMD::SIMD16_32i test Id: 142 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 143 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 144 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 145 - MMULS
OK   UME::SIMD::SIMD16_32i test Id: 146 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 147 - MULVA
OK   UME::SIMD::SIMD16_32i test Id: 148 - MULVA(operator*)
OK   UME::SIMD::SIMD16_32i test Id: 149 - MULVA gen
OK   UME::SIMD::SIMD16_32i test Id: 150 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD16_32i test Id: 151 - MMULVA
OK   UME::SIMD::SIMD16_32i test Id: 152 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_32i test Id: 153 - MULSA
OK   UME::SIMD::SIMD16_32i test Id: 154 - MULSA(operator*=)
OK   UME::SIMD::SIMD16_32i test Id: 155 - MMULSA
OK   UME::SIMD::SIMD16_32i test Id: 156 - DIVV
OK   UME::SIMD::SIMD16_32i test Id: 157 - DIVV(operator/)
OK   UME::SIMD::SIMD16_32i test Id: 158 - DIVV(function)
OK   UME::SIMD::SIMD16_32i test Id: 159 - MDIVV
OK   UME::SIMD::SIMD16_32i test Id: 160 - MDIVV(function)
OK   UME::SIMD::SIMD16_32i test Id: 161 - DIVS
OK   UME::SIMD::SIMD16_32i test Id: 162 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 163 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 164 - MDIVS
OK   UME::SIMD::SIMD16_32i test Id: 165 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 166 - DIVVA
OK   UME::SIMD::SIMD16_32i test Id: 167 - DIVVA(operator/=)
OK   UME::SIMD::SIMD16_32i test Id: 168 - DIVVA gen
OK   UME::SIMD::SIMD16_32i test Id: 169 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD16_32i test Id: 170 - MDIVVA
OK   UME::SIMD::SIMD16_32i test Id: 171 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_32i test Id: 172 - DIVSA
OK   UME::SIMD::SIMD16_32i test Id: 173 - DIVSA(operator/=)
OK   UME::SIMD::SIMD16_32i test Id: 174 - MDIVSA
OK   UME::SIMD::SIMD16_32i test Id: 175 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD16_32i test Id: 176 - RCP
OK   UME::SIMD::SIMD16_32i test Id: 177 - RCP(function)
OK   UME::SIMD::SIMD16_32i test Id: 178 - MRCP
OK   UME::SIMD::SIMD16_32i test Id: 179 - MRCP(function)
OK   UME::SIMD::SIMD16_32i test Id: 180 - RCPS
OK   UME::SIMD::SIMD16_32i test Id: 181 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 182 - RCPS(function)
OK   UME::SIMD::SIMD16_32i test Id: 183 - MRCPS
OK   UME::SIMD::SIMD16_32i test Id: 184 - MRCPS (function)
OK   UME::SIMD::SIMD16_32i test Id: 185 - RCPA
OK   UME::SIMD::SIMD16_32i test Id: 186 - MRCPA
OK   UME::SIMD::SIMD16_32i test Id: 187 - RCPSA
OK   UME::SIMD::SIMD16_32i test Id: 188 - MRCPSA
OK   UME::SIMD::SIMD16_32i test Id: 189 - CMPEQV
OK   UME::SIMD::SIMD16_32i test Id: 190 - CMPEQV(operator==)
OK   UME::SIMD::SIMD16_32i test Id: 191 - CMPEQV(function)
OK   UME::SIMD::SIMD16_32i test Id: 192 - CMPEQS
OK   UME::SIMD::SIMD16_32i test Id: 193 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 194 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 195 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 196 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 197 - CMPNEV
OK   UME::SIMD::SIMD16_32i test Id: 198 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD16_32i test Id: 199 - CMPNEV(function)
OK   UME::SIMD::SIMD16_32i test Id: 200 - CMPNES
OK   UME::SIMD::SIMD16_32i test Id: 201 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 202 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 203 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 204 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 205 - CMPGTV
OK   UME::SIMD::SIMD16_32i test Id: 206 - CMPGTV(operator>)
OK   UME::SIMD::SIMD16_32i test Id: 207 - CMPGTV(function)
OK   UME::SIMD::SIMD16_32i test Id: 208 - CMPGTS
OK   UME::SIMD::SIMD16_32i test Id: 209 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 210 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 211 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 212 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 213 - CMPLTV
OK   UME::SIMD::SIMD16_32i test Id: 214 - CMPLTV(operator<)
OK   UME::SIMD::SIMD16_32i test Id: 215 - CMPLTV(function)
OK   UME::SIMD::SIMD16_32i test Id: 216 - CMPLTS
OK   UME::SIMD::SIMD16_32i test Id: 217 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 218 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 219 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 220 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 221 - CMPGEV
OK   UME::SIMD::SIMD16_32i test Id: 222 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD16_32i test Id: 223 - CMPGEV(function)
OK   UME::SIMD::SIMD16_32i test Id: 224 - CMPGES
OK   UME::SIMD::SIMD16_32i test Id: 225 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 226 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 227 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 228 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 229 - CMPLEV
OK   UME::SIMD::SIMD16_32i test Id: 230 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD16_32i test Id: 231 - CMPLEV(function)
OK   UME::SIMD::SIMD16_32i test Id: 232 - CMPLES
OK   UME::SIMD::SIMD16_32i test Id: 233 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 234 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 235 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 236 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 237 - CMPEV
OK   UME::SIMD::SIMD16_32i test Id: 238 - CMPEV(function)
OK   UME::SIMD::SIMD16_32i test Id: 239 - CMPES
OK   UME::SIMD::SIMD16_32i test Id: 240 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 241 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 242 - HADD
OK   UME::SIMD::SIMD16_32i test Id: 243 - HADD(function)
OK   UME::SIMD::SIMD16_32i test Id: 244 - HADD gen
OK   UME::SIMD::SIMD16_32i test Id: 245 - HADD(function) gen
OK   UME::SIMD::SIMD16_32i test Id: 246 - MHADD gen
OK   UME::SIMD::SIMD16_32i test Id: 247 - MHADD(function) gen
OK   UME::SIMD::SIMD16_32i test Id: 248 - HADDS gen
OK   UME::SIMD::SIMD16_32i test Id: 249 - HADDS(function) gen
OK   UME::SIMD::SIMD16_32i test Id: 250 - MHADD gen
OK   UME::SIMD::SIMD16_32i test Id: 251 - MHADDS(function) gen
OK   UME::SIMD::SIMD16_32i test Id: 252 - HMUL gen
OK   UME::SIMD::SIMD16_32i test Id: 253 - HMUL(function) gen
OK   UME::SIMD::SIMD16_32i test Id: 254 - MHMUL gen
OK   UME::SIMD::SIMD16_32i test Id: 255 - MHMUL(function) gen
OK   UME::SIMD::SIMD16_32i test Id: 256 - HMULS gen
OK   UME::SIMD::SIMD16_32i test Id: 257 - HMULS(function) gen
OK   UME::SIMD::SIMD16_32i test Id: 258 - MHMUL gen
OK   UME::SIMD::SIMD16_32i test Id: 259 - MHMULS(function) gen
OK   UME::SIMD::SIMD16_32i test Id: 260 - FMULADDV
OK   UME::SIMD::SIMD16_32i test Id: 261 - FMULADDV(function)
OK   UME::SIMD::SIMD16_32i test Id: 262 - MFMULADDV
OK   UME::SIMD::SIMD16_32i test Id: 263 - MFMULADDV(function)
OK   UME::SIMD::SIMD16_32i test Id: 264 - FMULSUBV
OK   UME::SIMD::SIMD16_32i test Id: 265 - FMULSUBV(function)
OK   UME::SIMD::SIMD16_32i test Id: 266 - MFMULSUBV
OK   UME::SIMD::SIMD16_32i test Id: 267 - MFMULSUBV(function)
OK   UME::SIMD::SIMD16_32i test Id: 268 - FADDMULV
OK   UME::SIMD::SIMD16_32i test Id: 269 - FADDMULV(function)
OK   UME::SIMD::SIMD16_32i test Id: 270 - MFADDMULV
OK   UME::SIMD::SIMD16_32i test Id: 271 - MFADDMULV(function)
OK   UME::SIMD::SIMD16_32i test Id: 272 - FSUBMULV
OK   UME::SIMD::SIMD16_32i test Id: 273 - FSUBMULV(function)
OK   UME::SIMD::SIMD16_32i test Id: 274 - MFSUBMULV
OK   UME::SIMD::SIMD16_32i test Id: 275 - MFSUBMULV(function)
OK   UME::SIMD::SIMD16_32i test Id: 276 - MAXV
OK   UME::SIMD::SIMD16_32i test Id: 277 - MAXV(function)
OK   UME::SIMD::SIMD16_32i test Id: 278 - MMAXV
OK   UME::SIMD::SIMD16_32i test Id: 279 - MMAXV(function)
OK   UME::SIMD::SIMD16_32i test Id: 280 - MAXS
OK   UME::SIMD::SIMD16_32i test Id: 281 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 282 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 283 - MMAXS
OK   UME::SIMD::SIMD16_32i test Id: 284 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 285 - MAXVA
OK   UME::SIMD::SIMD16_32i test Id: 286 - MMAXVA
OK   UME::SIMD::SIMD16_32i test Id: 287 - MAXSA
OK   UME::SIMD::SIMD16_32i test Id: 288 - MMAXSA
OK   UME::SIMD::SIMD16_32i test Id: 289 - MINV
OK   UME::SIMD::SIMD16_32i test Id: 290 - MINV(function)
OK   UME::SIMD::SIMD16_32i test Id: 291 - MMINV
OK   UME::SIMD::SIMD16_32i test Id: 292 - MMINV(function)
OK   UME::SIMD::SIMD16_32i test Id: 293 - MINS
OK   UME::SIMD::SIMD16_32i test Id: 294 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD16_32i test Id: 295 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD16_32i test Id: 296 - MMINS
OK   UME::SIMD::SIMD16_32i test Id: 297 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 298 - MINVA
OK   UME::SIMD::SIMD16_32i test Id: 299 - MMINVA
OK   UME::SIMD::SIMD16_32i test Id: 300 - MINSA
OK   UME::SIMD::SIMD16_32i test Id: 301 - MMINSA
OK   UME::SIMD::SIMD16_32i test Id: 302 - HMAX
OK   UME::SIMD::SIMD16_32i test Id: 303 - HMAX(function)
OK   UME::SIMD::SIMD16_32i test Id: 304 - HMAX
OK   UME::SIMD::SIMD16_32i test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD16_32i test Id: 306 - MHMAX
OK   UME::SIMD::SIMD16_32i test Id: 307 - MHMAX(function)
OK   UME::SIMD::SIMD16_32i test Id: 308 - IMAX
OK   UME::SIMD::SIMD16_32i test Id: 309 - IMAX(function)
OK   UME::SIMD::SIMD16_32i test Id: 310 - MIMAX
OK   UME::SIMD::SIMD16_32i test Id: 311 - MIMAX(function)
OK   UME::SIMD::SIMD16_32i test Id: 312 - HMIN
OK   UME::SIMD::SIMD16_32i test Id: 313 - HMIN(function)
OK   UME::SIMD::SIMD16_32i test Id: 314 - HMIN
OK   UME::SIMD::SIMD16_32i test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD16_32i test Id: 316 - MHMIN gen
OK   UME::SIMD::SIMD16_32i test Id: 317 - MHMIN(function) gen
OK   UME::SIMD::SIMD16_32i test Id: 318 - IMIN
OK   UME::SIMD::SIMD16_32i test Id: 319 - IMIN(function)
OK   UME::SIMD::SIMD16_32i test Id: 320 - MIMIN
OK   UME::SIMD::SIMD16_32i test Id: 321 - MIMIN(function)
OK   UME::SIMD::SIMD16_32i test Id: 322 - REMV gen
OK   UME::SIMD::SIMD16_32i test Id: 323 - REMV(operator%) gen
OK   UME::SIMD::SIMD16_32i test Id: 324 - REMV(function) gen
OK   UME::SIMD::SIMD16_32i test Id: 325 - MREMV gen
OK   UME::SIMD::SIMD16_32i test Id: 326 - MREMV(function) gen
OK   UME::SIMD::SIMD16_32i test Id: 327 - REMS gen
OK   UME::SIMD::SIMD16_32i test Id: 328 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD16_32i test Id: 329 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD16_32i test Id: 330 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD16_32i test Id: 331 - LANDV gen
OK   UME::SIMD::SIMD16_32i test Id: 332 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD16_32i test Id: 333 - LORV gen
OK   UME::SIMD::SIMD16_32i test Id: 334 - LORV gen (operator ||)
OK   UME::SIMD::SIMD16_32i test Id: 335 - BANDV
OK   UME::SIMD::SIMD16_32i test Id: 336 - BANDV(operator&)
OK   UME::SIMD::SIMD16_32i test Id: 337 - BANDV(function)
OK   UME::SIMD::SIMD16_32i test Id: 338 - MBANDV
OK   UME::SIMD::SIMD16_32i test Id: 339 - MBANDV
OK   UME::SIMD::SIMD16_32i test Id: 340 - BANDS
OK   UME::SIMD::SIMD16_32i test Id: 341 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 342 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 343 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 344 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 345 - MBANDS
OK   UME::SIMD::SIMD16_32i test Id: 346 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 347 - BANDVA
OK   UME::SIMD::SIMD16_32i test Id: 348 - MBANDVA
OK   UME::SIMD::SIMD16_32i test Id: 349 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD16_32i test Id: 350 - BANDSA
OK   UME::SIMD::SIMD16_32i test Id: 351 - MBANDSA
OK   UME::SIMD::SIMD16_32i test Id: 352 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD16_32i test Id: 353 - BORV
OK   UME::SIMD::SIMD16_32i test Id: 354 - BORV(operator |)
OK   UME::SIMD::SIMD16_32i test Id: 355 - BORV(function)
OK   UME::SIMD::SIMD16_32i test Id: 356 - MBORV
OK   UME::SIMD::SIMD16_32i test Id: 357 - MBORV(function)
OK   UME::SIMD::SIMD16_32i test Id: 358 - BORS
OK   UME::SIMD::SIMD16_32i test Id: 359 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 360 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 361 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 362 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 363 - MBORS
OK   UME::SIMD::SIMD16_32i test Id: 364 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 365 - BORVA
OK   UME::SIMD::SIMD16_32i test Id: 366 - BORVA(operator|=)
OK   UME::SIMD::SIMD16_32i test Id: 367 - MBORVA
OK   UME::SIMD::SIMD16_32i test Id: 368 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD16_32i test Id: 369 - BORSA
OK   UME::SIMD::SIMD16_32i test Id: 370 - BORSA(operator|=)
OK   UME::SIMD::SIMD16_32i test Id: 371 - MBORSA
OK   UME::SIMD::SIMD16_32i test Id: 372 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD16_32i test Id: 373 - BXORV
OK   UME::SIMD::SIMD16_32i test Id: 374 - BXORV(operator^
OK   UME::SIMD::SIMD16_32i test Id: 375 - BXORV(function
OK   UME::SIMD::SIMD16_32i test Id: 376 - MBXORV
OK   UME::SIMD::SIMD16_32i test Id: 377 - MBXORV(function)
OK   UME::SIMD::SIMD16_32i test Id: 378 - BXORS
OK   UME::SIMD::SIMD16_32i test Id: 379 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 380 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 381 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 382 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 383 - MBXORS
OK   UME::SIMD::SIMD16_32i test Id: 384 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 385 - BXORVA
OK   UME::SIMD::SIMD16_32i test Id: 386 - BXORVA(operator^=)
OK   UME::SIMD::SIMD16_32i test Id: 387 - MBXORVA
OK   UME::SIMD::SIMD16_32i test Id: 388 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD16_32i test Id: 389 - BXORSA
OK   UME::SIMD::SIMD16_32i test Id: 390 - BXORSA(operator^=)
OK   UME::SIMD::SIMD16_32i test Id: 391 - MBXORSA
OK   UME::SIMD::SIMD16_32i test Id: 392 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD16_32i test Id: 393 - BNOT
OK   UME::SIMD::SIMD16_32i test Id: 394 - BNOT(operator!)
OK   UME::SIMD::SIMD16_32i test Id: 395 - BNOT(function)
OK   UME::SIMD::SIMD16_32i test Id: 396 - MBNOT
OK   UME::SIMD::SIMD16_32i test Id: 397 - MBNOT(function)
OK   UME::SIMD::SIMD16_32i test Id: 398 - BNOTA
OK   UME::SIMD::SIMD16_32i test Id: 399 - MBNOTA
OK   UME::SIMD::SIMD16_32i test Id: 400 - BANDNOTV
OK   UME::SIMD::SIMD16_32i test Id: 401 - BANDNOTV (function)
OK   UME::SIMD::SIMD16_32i test Id: 402 - MBANDNOTV
OK   UME::SIMD::SIMD16_32i test Id: 403 - MBANDNOTV (function)
OK   UME::SIMD::SIMD16_32i test Id: 404 - BANDNOTS
OK   UME::SIMD::SIMD16_32i test Id: 405 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD16_32i test Id: 406 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD16_32i test Id: 407 - MBANDNOTS
OK   UME::SIMD::SIMD16_32i test Id: 408 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD16_32i test Id: 409 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD16_32i test Id: 410 - BANDNOTVA
OK   UME::SIMD::SIMD16_32i test Id: 411 - MBANDNOTVA
OK   UME::SIMD::SIMD16_32i test Id: 412 - BANDNOTSA
OK   UME::SIMD::SIMD16_32i test Id: 413 - MBANDNOTSA
OK   UME::SIMD::SIMD16_32i test Id: 414 - HBAND
OK   UME::SIMD::SIMD16_32i test Id: 415 - HBAND
OK   UME::SIMD::SIMD16_32i test Id: 416 - MHBAND
OK   UME::SIMD::SIMD16_32i test Id: 417 - MHBAND(function)
OK   UME::SIMD::SIMD16_32i test Id: 418 - HBANDS
OK   UME::SIMD::SIMD16_32i test Id: 419 - MHBANDS
OK   UME::SIMD::SIMD16_32i test Id: 420 - HBOR
OK   UME::SIMD::SIMD16_32i test Id: 421 - HBOR(function)
OK   UME::SIMD::SIMD16_32i test Id: 422 - MHBOR
OK   UME::SIMD::SIMD16_32i test Id: 423 - MHBOR(function)
OK   UME::SIMD::SIMD16_32i test Id: 424 - HBORS
OK   UME::SIMD::SIMD16_32i test Id: 425 - MHBORS
OK   UME::SIMD::SIMD16_32i test Id: 426 - HBXOR
OK   UME::SIMD::SIMD16_32i test Id: 427 - HBXOR(function)
OK   UME::SIMD::SIMD16_32i test Id: 428 - MHBXOR
OK   UME::SIMD::SIMD16_32i test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD16_32i test Id: 430 - HBXORS
OK   UME::SIMD::SIMD16_32i test Id: 431 - MHBXORS
OK   UME::SIMD::SIMD16_32i test Id: 432 - GATHERU
OK   UME::SIMD::SIMD16_32i test Id: 433 - MGATHERU
OK   UME::SIMD::SIMD16_32i test Id: 434 - GATHERS
OK   UME::SIMD::SIMD16_32i test Id: 435 - MGATHERS
OK   UME::SIMD::SIMD16_32i test Id: 436 - GATHERV
OK   UME::SIMD::SIMD16_32i test Id: 437 - MGATHERV
OK   UME::SIMD::SIMD16_32i test Id: 438 - SCATTERU
OK   UME::SIMD::SIMD16_32i test Id: 439 - MSCATTERU
OK   UME::SIMD::SIMD16_32i test Id: 440 - SCATTERS
OK   UME::SIMD::SIMD16_32i test Id: 441 - MSCATTERS
OK   UME::SIMD::SIMD16_32i test Id: 442 - SCATTERV
OK   UME::SIMD::SIMD16_32i test Id: 443 - MSCATTERV
OK   UME::SIMD::SIMD16_32i test Id: 444 - LSHV gen
OK   UME::SIMD::SIMD16_32i test Id: 445 - LSHV (function) gen
OK   UME::SIMD::SIMD16_32i test Id: 446 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD16_32i test Id: 447 - MLSHV gen
OK   UME::SIMD::SIMD16_32i test Id: 448 - MLSHV (function) gen
OK   UME::SIMD::SIMD16_32i test Id: 449 - LSHS gen
OK   UME::SIMD::SIMD16_32i test Id: 450 - LSHS (function) gen
OK   UME::SIMD::SIMD16_32i test Id: 451 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD16_32i test Id: 452 - MLSHS gen
OK   UME::SIMD::SIMD16_32i test Id: 453 - MLSHS (function) gen
OK   UME::SIMD::SIMD16_32i test Id: 454 - LSHVA gen
OK   UME::SIMD::SIMD16_32i test Id: 455 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD16_32i test Id: 456 - MLSHVA gen
OK   UME::SIMD::SIMD16_32i test Id: 457 - LSHSA gen
OK   UME::SIMD::SIMD16_32i test Id: 458 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD16_32i test Id: 459 - MLSHSA gen
OK   UME::SIMD::SIMD16_32i test Id: 460 - RSHV gen
OK   UME::SIMD::SIMD16_32i test Id: 461 - RSHV (function) gen
OK   UME::SIMD::SIMD16_32i test Id: 462 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD16_32i test Id: 463 - MRSHV gen
OK   UME::SIMD::SIMD16_32i test Id: 464 - MRSHV (function) gen
OK   UME::SIMD::SIMD16_32i test Id: 465 - RSHS gen
OK   UME::SIMD::SIMD16_32i test Id: 466 - RSHS (function) gen
OK   UME::SIMD::SIMD16_32i test Id: 467 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD16_32i test Id: 468 - MRSHS gen
OK   UME::SIMD::SIMD16_32i test Id: 469 - MRSHS (function) gen
OK   UME::SIMD::SIMD16_32i test Id: 470 - RSHVA gen
OK   UME::SIMD::SIMD16_32i test Id: 471 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD16_32i test Id: 472 - MRSHVA gen
OK   UME::SIMD::SIMD16_32i test Id: 473 - RSHSA gen
OK   UME::SIMD::SIMD16_32i test Id: 474 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD16_32i test Id: 475 - MRSHSA gen
OK   UME::SIMD::SIMD16_32i test Id: 476 - ROLV
OK   UME::SIMD::SIMD16_32i test Id: 477 - ROLV(function)
OK   UME::SIMD::SIMD16_32i test Id: 478 - MROLV
OK   UME::SIMD::SIMD16_32i test Id: 479 - MROLV(function)
OK   UME::SIMD::SIMD16_32i test Id: 480 - ROLS
OK   UME::SIMD::SIMD16_32i test Id: 481 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 482 - MROLS
OK   UME::SIMD::SIMD16_32i test Id: 483 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 484 - ROLVA
OK   UME::SIMD::SIMD16_32i test Id: 485 - MROLVA
OK   UME::SIMD::SIMD16_32i test Id: 486 - ROLSA
OK   UME::SIMD::SIMD16_32i test Id: 487 - MROLSA
OK   UME::SIMD::SIMD16_32i test Id: 488 - RORV
OK   UME::SIMD::SIMD16_32i test Id: 489 - RORV(function)
OK   UME::SIMD::SIMD16_32i test Id: 490 - MRORV
OK   UME::SIMD::SIMD16_32i test Id: 491 - MRORV(function)
OK   UME::SIMD::SIMD16_32i test Id: 492 - RORS
OK   UME::SIMD::SIMD16_32i test Id: 493 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 494 - MRORS
OK   UME::SIMD::SIMD16_32i test Id: 495 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32i test Id: 496 - RORVA
OK   UME::SIMD::SIMD16_32i test Id: 497 - MRORVA
OK   UME::SIMD::SIMD16_32i test Id: 498 - RORSA
OK   UME::SIMD::SIMD16_32i test Id: 499 - MRORSA
OK   UME::SIMD::SIMD16_32i test Id: 500 - NEG
OK   UME::SIMD::SIMD16_32i test Id: 501 - NEG(operator-)
OK   UME::SIMD::SIMD16_32i test Id: 502 - NEG(function)
OK   UME::SIMD::SIMD16_32i test Id: 503 - MNEG
OK   UME::SIMD::SIMD16_32i test Id: 504 - MNEG(function)
OK   UME::SIMD::SIMD16_32i test Id: 505 - NEGA
OK   UME::SIMD::SIMD16_32i test Id: 506 - MNEGA
OK   UME::SIMD::SIMD16_32i test Id: 507 - ABS
OK   UME::SIMD::SIMD16_32i test Id: 508 - ABS(function)
OK   UME::SIMD::SIMD16_32i test Id: 509 - MABS
OK   UME::SIMD::SIMD16_32i test Id: 510 - MABS(function)
OK   UME::SIMD::SIMD16_32i test Id: 511 - ABSA
OK   UME::SIMD::SIMD16_32i test Id: 512 - MABSA
OK   UME::SIMD::SIMD16_32i test Id: 513 - COPYSIGN gen
OK   UME::SIMD::SIMD16_32i test Id: 514 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD16_32i test Id: 515 - ITOU
OK   UME::SIMD::SIMD16_32i test Id: 516 - ITOF
OK   UME::SIMD::SIMD16_32i test Id: 517 - PACK
OK   UME::SIMD::SIMD16_32i test Id: 518 - PACKLO
OK   UME::SIMD::SIMD16_32i test Id: 519 - PACKHI
OK   UME::SIMD::SIMD16_32i test Id: 520 - UNPACK
OK   UME::SIMD::SIMD16_32i test Id: 521 - UNPACKLO
OK   UME::SIMD::SIMD16_32i test Id: 522 - UNPACKHi
OK   UME::SIMD::SIMD16_32i test Id: 523 - PROMOTE
OK   UME::SIMD::SIMD16_32i test Id: 524 - DEGRADE
OK   UME::SIMD::SIMD16_32i test Id: 525 - ZERO-CONSTR
OK   UME::SIMD::SIMD16_32i test Id: 526 - MAXV
OK   UME::SIMD::SIMD16_32i test Id: 527 - MMAXV
OK   UME::SIMD::SIMD16_32i test Id: 528 - MAXS
OK   UME::SIMD::SIMD16_32i test Id: 529 - MMAXS
OK   UME::SIMD::SIMD16_32i test Id: 530 - MAXVA
OK   UME::SIMD::SIMD16_32i test Id: 531 - MMAXVA
OK   UME::SIMD::SIMD16_32i test Id: 532 - MAXSA
OK   UME::SIMD::SIMD16_32i test Id: 533 - MMAXSA
OK   UME::SIMD::SIMD16_32i test Id: 534 - MINV
OK   UME::SIMD::SIMD16_32i test Id: 535 - MMINV
OK   UME::SIMD::SIMD16_32i test Id: 536 - MINS
OK   UME::SIMD::SIMD16_32i test Id: 537 - MMINS
OK   UME::SIMD::SIMD16_32i test Id: 538 - MINVA
OK   UME::SIMD::SIMD16_32i test Id: 539 - MMINVA
OK   UME::SIMD::SIMD16_32i test Id: 540 - MINSA
OK   UME::SIMD::SIMD16_32i test Id: 541 - MMINSA
OK   UME::SIMD::SIMD16_32f test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD16_32f test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD16_32f test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD16_32f test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD16_32f test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD16_32f test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD16_32f test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD16_32f test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD16_32f test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD16_32f test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD16_32f test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD16_32f test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD16_32f test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD16_32f test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD16_32f test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD16_32f test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD16_32f test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD16_32f test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD16_32f test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD16_32f test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD16_32f test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD16_32f test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD16_32f test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD16_32f test Id: 24 - INSERT
OK   UME::SIMD::SIMD16_32f test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD16_32f test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD16_32f test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD16_32f test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD16_32f test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD16_32f test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD16_32f test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD16_32f test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD16_32f test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD16_32f test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD16_32f test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD16_32f test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD16_32f test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD16_32f test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD16_32f test Id: 39 - MLOAD
OK   UME::SIMD::SIMD16_32f test Id: 40 - MSTORE
OK   UME::SIMD::SIMD16_32f test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD16_32f test Id: 42 - MLOADA
OK   UME::SIMD::SIMD16_32f test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD16_32f test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD16_32f test Id: 45 - SORTA
OK   UME::SIMD::SIMD16_32f test Id: 46 - SORTD
OK   UME::SIMD::SIMD16_32f test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD16_32f test Id: 48 - ADDV
OK   UME::SIMD::SIMD16_32f test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD16_32f test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD16_32f test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD16_32f test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD16_32f test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 54 - MADDV
OK   UME::SIMD::SIMD16_32f test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD16_32f test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD16_32f test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 58 - ADDS
OK   UME::SIMD::SIMD16_32f test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD16_32f test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD16_32f test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD16_32f test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD16_32f test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD16_32f test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD16_32f test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD16_32f test Id: 68 - MADDS
OK   UME::SIMD::SIMD16_32f test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD16_32f test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD16_32f test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD16_32f test Id: 73 - ADDVA
OK   UME::SIMD::SIMD16_32f test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD16_32f test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD16_32f test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD16_32f test Id: 77 - MADDVA
OK   UME::SIMD::SIMD16_32f test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD16_32f test Id: 79 - ADDSA
OK   UME::SIMD::SIMD16_32f test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD16_32f test Id: 81 - MADDSA
OK   UME::SIMD::SIMD16_32f test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD16_32f test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD16_32f test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 85 - POSTINC
OK   UME::SIMD::SIMD16_32f test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD16_32f test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD16_32f test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD16_32f test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD16_32f test Id: 90 - PREFINC
OK   UME::SIMD::SIMD16_32f test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD16_32f test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD16_32f test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD16_32f test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD16_32f test Id: 95 - SUBV
OK   UME::SIMD::SIMD16_32f test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD16_32f test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD16_32f test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD16_32f test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD16_32f test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 101 - MSUBV
OK   UME::SIMD::SIMD16_32f test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD16_32f test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD16_32f test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD16_32f test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD16_32f test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 108 - MSUBS
OK   UME::SIMD::SIMD16_32f test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 110 - SUBVA
OK   UME::SIMD::SIMD16_32f test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD16_32f test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD16_32f test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD16_32f test Id: 114 - SUBSA
OK   UME::SIMD::SIMD16_32f test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD16_32f test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD16_32f test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD16_32f test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD16_32f test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD16_32f test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD16_32f test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD16_32f test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD16_32f test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD16_32f test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD16_32f test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD16_32f test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD16_32f test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD16_32f test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD16_32f test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD16_32f test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD16_32f test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD16_32f test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD16_32f test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD16_32f test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD16_32f test Id: 137 - MULV
OK   UME::SIMD::SIMD16_32f test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD16_32f test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD16_32f test Id: 140 - MMULV
OK   UME::SIMD::SIMD16_32f test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD16_32f test Id: 142 - MULS
OK   UME::SIMD::SIMD16_32f test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 146 - MMULS
OK   UME::SIMD::SIMD16_32f test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 148 - MULVA
OK   UME::SIMD::SIMD16_32f test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD16_32f test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD16_32f test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD16_32f test Id: 152 - MMULVA
OK   UME::SIMD::SIMD16_32f test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_32f test Id: 154 - MULSA
OK   UME::SIMD::SIMD16_32f test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD16_32f test Id: 156 - MMULSA
OK   UME::SIMD::SIMD16_32f test Id: 157 - DIVV
OK   UME::SIMD::SIMD16_32f test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD16_32f test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD16_32f test Id: 160 - MDIVV
OK   UME::SIMD::SIMD16_32f test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD16_32f test Id: 162 - DIVS
OK   UME::SIMD::SIMD16_32f test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 165 - MDIVS
OK   UME::SIMD::SIMD16_32f test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 167 - DIVVA
OK   UME::SIMD::SIMD16_32f test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD16_32f test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD16_32f test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD16_32f test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD16_32f test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_32f test Id: 173 - DIVSA
OK   UME::SIMD::SIMD16_32f test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD16_32f test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD16_32f test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD16_32f test Id: 177 - RCP
OK   UME::SIMD::SIMD16_32f test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD16_32f test Id: 179 - MRCP
OK   UME::SIMD::SIMD16_32f test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD16_32f test Id: 181 - RCPS
OK   UME::SIMD::SIMD16_32f test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD16_32f test Id: 184 - MRCPS
OK   UME::SIMD::SIMD16_32f test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD16_32f test Id: 186 - RCPA
OK   UME::SIMD::SIMD16_32f test Id: 187 - MRCPA
OK   UME::SIMD::SIMD16_32f test Id: 188 - RCPSA
OK   UME::SIMD::SIMD16_32f test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD16_32f test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD16_32f test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD16_32f test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD16_32f test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD16_32f test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD16_32f test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD16_32f test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD16_32f test Id: 201 - CMPNES
OK   UME::SIMD::SIMD16_32f test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD16_32f test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD16_32f test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD16_32f test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD16_32f test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD16_32f test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD16_32f test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD16_32f test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD16_32f test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD16_32f test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD16_32f test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD16_32f test Id: 225 - CMPGES
OK   UME::SIMD::SIMD16_32f test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD16_32f test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD16_32f test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD16_32f test Id: 233 - CMPLES
OK   UME::SIMD::SIMD16_32f test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 238 - CMPEV
OK   UME::SIMD::SIMD16_32f test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD16_32f test Id: 240 - CMPES
OK   UME::SIMD::SIMD16_32f test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 243 - HADD
OK   UME::SIMD::SIMD16_32f test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD16_32f test Id: 245 - HADD gen
OK   UME::SIMD::SIMD16_32f test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD16_32f test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD16_32f test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD16_32f test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD16_32f test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD16_32f test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD16_32f test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD16_32f test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD16_32f test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD16_32f test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD16_32f test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD16_32f test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD16_32f test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD16_32f test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD16_32f test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD16_32f test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD16_32f test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD16_32f test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD16_32f test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD16_32f test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD16_32f test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD16_32f test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD16_32f test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD16_32f test Id: 277 - MAXV
OK   UME::SIMD::SIMD16_32f test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD16_32f test Id: 279 - MMAXV
OK   UME::SIMD::SIMD16_32f test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD16_32f test Id: 281 - MAXS
OK   UME::SIMD::SIMD16_32f test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 284 - MMAXS
OK   UME::SIMD::SIMD16_32f test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 286 - MAXVA
OK   UME::SIMD::SIMD16_32f test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD16_32f test Id: 288 - MAXSA
OK   UME::SIMD::SIMD16_32f test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD16_32f test Id: 290 - MINV
OK   UME::SIMD::SIMD16_32f test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD16_32f test Id: 292 - MMINV
OK   UME::SIMD::SIMD16_32f test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD16_32f test Id: 294 - MINS
OK   UME::SIMD::SIMD16_32f test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD16_32f test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD16_32f test Id: 297 - MMINS
OK   UME::SIMD::SIMD16_32f test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD16_32f test Id: 299 - MINVA
OK   UME::SIMD::SIMD16_32f test Id: 300 - MMINVA
OK   UME::SIMD::SIMD16_32f test Id: 301 - MINSA
OK   UME::SIMD::SIMD16_32f test Id: 302 - MMINSA
OK   UME::SIMD::SIMD16_32f test Id: 303 - HMAX
OK   UME::SIMD::SIMD16_32f test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD16_32f test Id: 305 - HMAX
OK   UME::SIMD::SIMD16_32f test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD16_32f test Id: 307 - MHMAX
OK   UME::SIMD::SIMD16_32f test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD16_32f test Id: 309 - IMAX
OK   UME::SIMD::SIMD16_32f test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD16_32f test Id: 311 - MIMAX
OK   UME::SIMD::SIMD16_32f test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD16_32f test Id: 313 - HMIN
OK   UME::SIMD::SIMD16_32f test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD16_32f test Id: 315 - HMIN
OK   UME::SIMD::SIMD16_32f test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD16_32f test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD16_32f test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 319 - IMIN
OK   UME::SIMD::SIMD16_32f test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD16_32f test Id: 321 - MIMIN
OK   UME::SIMD::SIMD16_32f test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD16_32f test Id: 323 - GATHERU
OK   UME::SIMD::SIMD16_32f test Id: 324 - MGATHERU
OK   UME::SIMD::SIMD16_32f test Id: 325 - GATHERS
OK   UME::SIMD::SIMD16_32f test Id: 326 - MGATHERS
OK   UME::SIMD::SIMD16_32f test Id: 327 - GATHERV
OK   UME::SIMD::SIMD16_32f test Id: 328 - MGATHERV
OK   UME::SIMD::SIMD16_32f test Id: 329 - SCATTERU
OK   UME::SIMD::SIMD16_32f test Id: 330 - MSCATTERU
OK   UME::SIMD::SIMD16_32f test Id: 331 - SCATTERS
OK   UME::SIMD::SIMD16_32f test Id: 332 - MSCATTERS
OK   UME::SIMD::SIMD16_32f test Id: 333 - SCATTERV
OK   UME::SIMD::SIMD16_32f test Id: 334 - MSCATTERV
OK   UME::SIMD::SIMD16_32f test Id: 335 - NEG
OK   UME::SIMD::SIMD16_32f test Id: 336 - NEG(operator-)
OK   UME::SIMD::SIMD16_32f test Id: 337 - NEG(function)
OK   UME::SIMD::SIMD16_32f test Id: 338 - MNEG
OK   UME::SIMD::SIMD16_32f test Id: 339 - MNEG(function)
OK   UME::SIMD::SIMD16_32f test Id: 340 - NEGA
OK   UME::SIMD::SIMD16_32f test Id: 341 - MNEGA
OK   UME::SIMD::SIMD16_32f test Id: 342 - ABS
OK   UME::SIMD::SIMD16_32f test Id: 343 - ABS(function)
OK   UME::SIMD::SIMD16_32f test Id: 344 - MABS
OK   UME::SIMD::SIMD16_32f test Id: 345 - MABS(function)
OK   UME::SIMD::SIMD16_32f test Id: 346 - ABSA
OK   UME::SIMD::SIMD16_32f test Id: 347 - MABSA
OK   UME::SIMD::SIMD16_32f test Id: 348 - COPYSIGN gen
OK   UME::SIMD::SIMD16_32f test Id: 349 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 350 - ROUND
OK   UME::SIMD::SIMD16_32f test Id: 351 - ROUND(function)
OK   UME::SIMD::SIMD16_32f test Id: 352 - MROUND
OK   UME::SIMD::SIMD16_32f test Id: 353 - MROUND(function)
OK   UME::SIMD::SIMD16_32f test Id: 354 - TRUNC gen
OK   UME::SIMD::SIMD16_32f test Id: 355 - TRUNC(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 356 - MTRUNC gen
OK   UME::SIMD::SIMD16_32f test Id: 357 - MTRUNC(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 358 - FLOOR
OK   UME::SIMD::SIMD16_32f test Id: 359 - FLOOR(function)
OK   UME::SIMD::SIMD16_32f test Id: 360 - MFLOOR
OK   UME::SIMD::SIMD16_32f test Id: 361 - MFLOOR(function)
OK   UME::SIMD::SIMD16_32f test Id: 362 - CEIL
OK   UME::SIMD::SIMD16_32f test Id: 363 - CEIL(function)
OK   UME::SIMD::SIMD16_32f test Id: 364 - MCEIL
OK   UME::SIMD::SIMD16_32f test Id: 365 - MCEIL(function)
OK   UME::SIMD::SIMD16_32f test Id: 366 - ISFIN
OK   UME::SIMD::SIMD16_32f test Id: 367 - ISFIN(function)
OK   UME::SIMD::SIMD16_32f test Id: 368 - ISINF
OK   UME::SIMD::SIMD16_32f test Id: 369 - ISINF(function)
OK   UME::SIMD::SIMD16_32f test Id: 370 - ISAN
OK   UME::SIMD::SIMD16_32f test Id: 371 - ISAN(function)
OK   UME::SIMD::SIMD16_32f test Id: 372 - ISNAN
OK   UME::SIMD::SIMD16_32f test Id: 373 - ISNAN(function)
OK   UME::SIMD::SIMD16_32f test Id: 374 - ISNORM
OK   UME::SIMD::SIMD16_32f test Id: 375 - ISNORM(function)
OK   UME::SIMD::SIMD16_32f test Id: 376 - ISSUB
OK   UME::SIMD::SIMD16_32f test Id: 377 - ISSUB(function)
OK   UME::SIMD::SIMD16_32f test Id: 378 - ISZERO
OK   UME::SIMD::SIMD16_32f test Id: 379 - ISZERO(function)
OK   UME::SIMD::SIMD16_32f test Id: 380 - ISZEROSUB
OK   UME::SIMD::SIMD16_32f test Id: 381 - ISZEROSUB(function)
OK   UME::SIMD::SIMD16_32f test Id: 382 - SQR
OK   UME::SIMD::SIMD16_32f test Id: 383 - SQR(function)
OK   UME::SIMD::SIMD16_32f test Id: 384 - MSQR
OK   UME::SIMD::SIMD16_32f test Id: 385 - MSQR(function)
OK   UME::SIMD::SIMD16_32f test Id: 386 - SQRA
OK   UME::SIMD::SIMD16_32f test Id: 387 - MSQRA
OK   UME::SIMD::SIMD16_32f test Id: 388 - SQRT
OK   UME::SIMD::SIMD16_32f test Id: 389 - SQRT(function)
OK   UME::SIMD::SIMD16_32f test Id: 390 - MSQRT
OK   UME::SIMD::SIMD16_32f test Id: 391 - MSQRT
OK   UME::SIMD::SIMD16_32f test Id: 392 - SQRTA
OK   UME::SIMD::SIMD16_32f test Id: 393 - MSQRTA
OK   UME::SIMD::SIMD16_32f test Id: 394 - EXP gen
OK   UME::SIMD::SIMD16_32f test Id: 395 - EXP(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 396 - MEXP gen
OK   UME::SIMD::SIMD16_32f test Id: 397 - MEXP(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 398 - LOG gen
OK   UME::SIMD::SIMD16_32f test Id: 399 - LOG(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 400 - LOG2 gen
OK   UME::SIMD::SIMD16_32f test Id: 401 - LOG2(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 402 - LOG10 gen
OK   UME::SIMD::SIMD16_32f test Id: 403 - LOG10(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 404 - SIN gen
OK   UME::SIMD::SIMD16_32f test Id: 405 - SIN(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 406 - COS gen
OK   UME::SIMD::SIMD16_32f test Id: 407 - COS(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 408 - TAN gen
OK   UME::SIMD::SIMD16_32f test Id: 409 - TAN(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 410 - CTAN gen
OK   UME::SIMD::SIMD16_32f test Id: 411 - CTAN(function) gen
OK   UME::SIMD::SIMD16_32f test Id: 412 - FTOU gen
OK   UME::SIMD::SIMD16_32f test Id: 413 - FTOI gen
OK   UME::SIMD::SIMD16_32f test Id: 414 - PACK
OK   UME::SIMD::SIMD16_32f test Id: 415 - PACKLO
OK   UME::SIMD::SIMD16_32f test Id: 416 - PACKHI
OK   UME::SIMD::SIMD16_32f test Id: 417 - UNPACK
OK   UME::SIMD::SIMD16_32f test Id: 418 - UNPACKLO
OK   UME::SIMD::SIMD16_32f test Id: 419 - UNPACKHi
OK   UME::SIMD::SIMD16_32f test Id: 420 - PROMOTE
OK   UME::SIMD::SIMD8_64u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD8_64u test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD8_64u test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD8_64u test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD8_64u test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD8_64u test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD8_64u test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD8_64u test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD8_64u test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD8_64u test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD8_64u test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD8_64u test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD8_64u test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD8_64u test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD8_64u test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD8_64u test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD8_64u test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD8_64u test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD8_64u test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD8_64u test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD8_64u test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD8_64u test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD8_64u test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD8_64u test Id: 24 - INSERT
OK   UME::SIMD::SIMD8_64u test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD8_64u test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD8_64u test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD8_64u test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD8_64u test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD8_64u test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD8_64u test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD8_64u test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD8_64u test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD8_64u test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD8_64u test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD8_64u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD8_64u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD8_64u test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD8_64u test Id: 39 - MLOAD
OK   UME::SIMD::SIMD8_64u test Id: 40 - MSTORE
OK   UME::SIMD::SIMD8_64u test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD8_64u test Id: 42 - MLOADA
OK   UME::SIMD::SIMD8_64u test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD8_64u test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD8_64u test Id: 45 - SORTA
OK   UME::SIMD::SIMD8_64u test Id: 46 - SORTD
OK   UME::SIMD::SIMD8_64u test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD8_64u test Id: 48 - ADDV
OK   UME::SIMD::SIMD8_64u test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD8_64u test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD8_64u test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD8_64u test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD8_64u test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD8_64u test Id: 54 - MADDV
OK   UME::SIMD::SIMD8_64u test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD8_64u test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD8_64u test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD8_64u test Id: 58 - ADDS
OK   UME::SIMD::SIMD8_64u test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD8_64u test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD8_64u test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD8_64u test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD8_64u test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD8_64u test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD8_64u test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD8_64u test Id: 68 - MADDS
OK   UME::SIMD::SIMD8_64u test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD8_64u test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD8_64u test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD8_64u test Id: 73 - ADDVA
OK   UME::SIMD::SIMD8_64u test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD8_64u test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD8_64u test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD8_64u test Id: 77 - MADDVA
OK   UME::SIMD::SIMD8_64u test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD8_64u test Id: 79 - ADDSA
OK   UME::SIMD::SIMD8_64u test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD8_64u test Id: 81 - MADDSA
OK   UME::SIMD::SIMD8_64u test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD8_64u test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD8_64u test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD8_64u test Id: 85 - POSTINC
OK   UME::SIMD::SIMD8_64u test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD8_64u test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD8_64u test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD8_64u test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD8_64u test Id: 90 - PREFINC
OK   UME::SIMD::SIMD8_64u test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD8_64u test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD8_64u test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD8_64u test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD8_64u test Id: 95 - SUBV
OK   UME::SIMD::SIMD8_64u test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD8_64u test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD8_64u test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD8_64u test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD8_64u test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD8_64u test Id: 101 - MSUBV
OK   UME::SIMD::SIMD8_64u test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD8_64u test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD8_64u test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD8_64u test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD8_64u test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD8_64u test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD8_64u test Id: 108 - MSUBS
OK   UME::SIMD::SIMD8_64u test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 110 - SUBVA
OK   UME::SIMD::SIMD8_64u test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD8_64u test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD8_64u test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD8_64u test Id: 114 - SUBSA
OK   UME::SIMD::SIMD8_64u test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD8_64u test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD8_64u test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD8_64u test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD8_64u test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD8_64u test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD8_64u test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD8_64u test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD8_64u test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD8_64u test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD8_64u test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD8_64u test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD8_64u test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD8_64u test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD8_64u test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD8_64u test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD8_64u test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD8_64u test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD8_64u test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD8_64u test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD8_64u test Id: 137 - MULV
OK   UME::SIMD::SIMD8_64u test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD8_64u test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD8_64u test Id: 140 - MMULV
OK   UME::SIMD::SIMD8_64u test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD8_64u test Id: 142 - MULS
OK   UME::SIMD::SIMD8_64u test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 146 - MMULS
OK   UME::SIMD::SIMD8_64u test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 148 - MULVA
OK   UME::SIMD::SIMD8_64u test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD8_64u test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD8_64u test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD8_64u test Id: 152 - MMULVA
OK   UME::SIMD::SIMD8_64u test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_64u test Id: 154 - MULSA
OK   UME::SIMD::SIMD8_64u test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD8_64u test Id: 156 - MMULSA
OK   UME::SIMD::SIMD8_64u test Id: 157 - DIVV
OK   UME::SIMD::SIMD8_64u test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD8_64u test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD8_64u test Id: 160 - MDIVV
OK   UME::SIMD::SIMD8_64u test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD8_64u test Id: 162 - DIVS
OK   UME::SIMD::SIMD8_64u test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 165 - MDIVS
OK   UME::SIMD::SIMD8_64u test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 167 - DIVVA
OK   UME::SIMD::SIMD8_64u test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD8_64u test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD8_64u test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD8_64u test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD8_64u test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_64u test Id: 173 - DIVSA
OK   UME::SIMD::SIMD8_64u test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD8_64u test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD8_64u test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD8_64u test Id: 177 - RCP
OK   UME::SIMD::SIMD8_64u test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD8_64u test Id: 179 - MRCP
OK   UME::SIMD::SIMD8_64u test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD8_64u test Id: 181 - RCPS
OK   UME::SIMD::SIMD8_64u test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD8_64u test Id: 184 - MRCPS
OK   UME::SIMD::SIMD8_64u test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD8_64u test Id: 186 - RCPA
OK   UME::SIMD::SIMD8_64u test Id: 187 - MRCPA
OK   UME::SIMD::SIMD8_64u test Id: 188 - RCPSA
OK   UME::SIMD::SIMD8_64u test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD8_64u test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD8_64u test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD8_64u test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD8_64u test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD8_64u test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD8_64u test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD8_64u test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD8_64u test Id: 201 - CMPNES
OK   UME::SIMD::SIMD8_64u test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD8_64u test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD8_64u test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD8_64u test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD8_64u test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD8_64u test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD8_64u test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD8_64u test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD8_64u test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD8_64u test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD8_64u test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD8_64u test Id: 225 - CMPGES
OK   UME::SIMD::SIMD8_64u test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD8_64u test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD8_64u test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD8_64u test Id: 233 - CMPLES
OK   UME::SIMD::SIMD8_64u test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 238 - CMPEV
OK   UME::SIMD::SIMD8_64u test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD8_64u test Id: 240 - CMPES
OK   UME::SIMD::SIMD8_64u test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 243 - HADD
OK   UME::SIMD::SIMD8_64u test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD8_64u test Id: 245 - HADD gen
OK   UME::SIMD::SIMD8_64u test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD8_64u test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD8_64u test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD8_64u test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD8_64u test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD8_64u test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD8_64u test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD8_64u test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD8_64u test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD8_64u test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD8_64u test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD8_64u test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD8_64u test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD8_64u test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD8_64u test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD8_64u test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD8_64u test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD8_64u test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD8_64u test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD8_64u test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD8_64u test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD8_64u test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD8_64u test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD8_64u test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD8_64u test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD8_64u test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD8_64u test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD8_64u test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD8_64u test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD8_64u test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD8_64u test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD8_64u test Id: 277 - MAXV
OK   UME::SIMD::SIMD8_64u test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD8_64u test Id: 279 - MMAXV
OK   UME::SIMD::SIMD8_64u test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD8_64u test Id: 281 - MAXS
OK   UME::SIMD::SIMD8_64u test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 284 - MMAXS
OK   UME::SIMD::SIMD8_64u test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 286 - MAXVA
OK   UME::SIMD::SIMD8_64u test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD8_64u test Id: 288 - MAXSA
OK   UME::SIMD::SIMD8_64u test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD8_64u test Id: 290 - MINV
OK   UME::SIMD::SIMD8_64u test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD8_64u test Id: 292 - MMINV
OK   UME::SIMD::SIMD8_64u test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD8_64u test Id: 294 - MINS
OK   UME::SIMD::SIMD8_64u test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD8_64u test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD8_64u test Id: 297 - MMINS
OK   UME::SIMD::SIMD8_64u test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 299 - MINVA
OK   UME::SIMD::SIMD8_64u test Id: 300 - MMINVA
OK   UME::SIMD::SIMD8_64u test Id: 301 - MINSA
OK   UME::SIMD::SIMD8_64u test Id: 302 - MMINSA
OK   UME::SIMD::SIMD8_64u test Id: 303 - HMAX
OK   UME::SIMD::SIMD8_64u test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD8_64u test Id: 305 - HMAX
OK   UME::SIMD::SIMD8_64u test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD8_64u test Id: 307 - MHMAX
OK   UME::SIMD::SIMD8_64u test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD8_64u test Id: 309 - IMAX
OK   UME::SIMD::SIMD8_64u test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD8_64u test Id: 311 - MIMAX
OK   UME::SIMD::SIMD8_64u test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD8_64u test Id: 313 - HMIN
OK   UME::SIMD::SIMD8_64u test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD8_64u test Id: 315 - HMIN
OK   UME::SIMD::SIMD8_64u test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD8_64u test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD8_64u test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD8_64u test Id: 319 - IMIN
OK   UME::SIMD::SIMD8_64u test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD8_64u test Id: 321 - MIMIN
OK   UME::SIMD::SIMD8_64u test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD8_64u test Id: 323 - REMV gen
OK   UME::SIMD::SIMD8_64u test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD8_64u test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD8_64u test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD8_64u test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD8_64u test Id: 328 - REMS gen
OK   UME::SIMD::SIMD8_64u test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD8_64u test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD8_64u test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD8_64u test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD8_64u test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD8_64u test Id: 334 - LORV gen
OK   UME::SIMD::SIMD8_64u test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD8_64u test Id: 336 - BANDV
OK   UME::SIMD::SIMD8_64u test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD8_64u test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD8_64u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD8_64u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD8_64u test Id: 341 - BANDS
OK   UME::SIMD::SIMD8_64u test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 346 - MBANDS
OK   UME::SIMD::SIMD8_64u test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 348 - BANDVA
OK   UME::SIMD::SIMD8_64u test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD8_64u test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD8_64u test Id: 351 - BANDSA
OK   UME::SIMD::SIMD8_64u test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD8_64u test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD8_64u test Id: 354 - BORV
OK   UME::SIMD::SIMD8_64u test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD8_64u test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD8_64u test Id: 357 - MBORV
OK   UME::SIMD::SIMD8_64u test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD8_64u test Id: 359 - BORS
OK   UME::SIMD::SIMD8_64u test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 364 - MBORS
OK   UME::SIMD::SIMD8_64u test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 366 - BORVA
OK   UME::SIMD::SIMD8_64u test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD8_64u test Id: 368 - MBORVA
OK   UME::SIMD::SIMD8_64u test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD8_64u test Id: 370 - BORSA
OK   UME::SIMD::SIMD8_64u test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD8_64u test Id: 372 - MBORSA
OK   UME::SIMD::SIMD8_64u test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD8_64u test Id: 374 - BXORV
OK   UME::SIMD::SIMD8_64u test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD8_64u test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD8_64u test Id: 377 - MBXORV
OK   UME::SIMD::SIMD8_64u test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD8_64u test Id: 379 - BXORS
OK   UME::SIMD::SIMD8_64u test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 384 - MBXORS
OK   UME::SIMD::SIMD8_64u test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 386 - BXORVA
OK   UME::SIMD::SIMD8_64u test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD8_64u test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD8_64u test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD8_64u test Id: 390 - BXORSA
OK   UME::SIMD::SIMD8_64u test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD8_64u test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD8_64u test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD8_64u test Id: 394 - BNOT
OK   UME::SIMD::SIMD8_64u test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD8_64u test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD8_64u test Id: 397 - MBNOT
OK   UME::SIMD::SIMD8_64u test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD8_64u test Id: 399 - BNOTA
OK   UME::SIMD::SIMD8_64u test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD8_64u test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD8_64u test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD8_64u test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD8_64u test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD8_64u test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD8_64u test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD8_64u test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD8_64u test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD8_64u test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD8_64u test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD8_64u test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD8_64u test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD8_64u test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD8_64u test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD8_64u test Id: 415 - HBAND
OK   UME::SIMD::SIMD8_64u test Id: 416 - HBAND
OK   UME::SIMD::SIMD8_64u test Id: 417 - MHBAND
OK   UME::SIMD::SIMD8_64u test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD8_64u test Id: 419 - HBANDS
OK   UME::SIMD::SIMD8_64u test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD8_64u test Id: 421 - HBOR
OK   UME::SIMD::SIMD8_64u test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD8_64u test Id: 423 - MHBOR
OK   UME::SIMD::SIMD8_64u test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD8_64u test Id: 425 - HBORS
OK   UME::SIMD::SIMD8_64u test Id: 426 - MHBORS
OK   UME::SIMD::SIMD8_64u test Id: 427 - HBXOR
OK   UME::SIMD::SIMD8_64u test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD8_64u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD8_64u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD8_64u test Id: 431 - HBXORS
OK   UME::SIMD::SIMD8_64u test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD8_64u test Id: 433 - GATHERU
OK   UME::SIMD::SIMD8_64u test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD8_64u test Id: 435 - GATHERS
OK   UME::SIMD::SIMD8_64u test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD8_64u test Id: 437 - GATHERV
OK   UME::SIMD::SIMD8_64u test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD8_64u test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD8_64u test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD8_64u test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD8_64u test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD8_64u test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD8_64u test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD8_64u test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD8_64u test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD8_64u test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD8_64u test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD8_64u test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD8_64u test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD8_64u test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD8_64u test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD8_64u test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD8_64u test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD8_64u test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD8_64u test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD8_64u test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD8_64u test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD8_64u test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD8_64u test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD8_64u test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD8_64u test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD8_64u test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD8_64u test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD8_64u test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD8_64u test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD8_64u test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD8_64u test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD8_64u test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD8_64u test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD8_64u test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD8_64u test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD8_64u test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD8_64u test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD8_64u test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD8_64u test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD8_64u test Id: 477 - ROLV
OK   UME::SIMD::SIMD8_64u test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD8_64u test Id: 479 - MROLV
OK   UME::SIMD::SIMD8_64u test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD8_64u test Id: 481 - ROLS
OK   UME::SIMD::SIMD8_64u test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 483 - MROLS
OK   UME::SIMD::SIMD8_64u test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 485 - ROLVA
OK   UME::SIMD::SIMD8_64u test Id: 486 - MROLVA
OK   UME::SIMD::SIMD8_64u test Id: 487 - ROLSA
OK   UME::SIMD::SIMD8_64u test Id: 488 - MROLSA
OK   UME::SIMD::SIMD8_64u test Id: 489 - RORV
OK   UME::SIMD::SIMD8_64u test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD8_64u test Id: 491 - MRORV
OK   UME::SIMD::SIMD8_64u test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD8_64u test Id: 493 - RORS
OK   UME::SIMD::SIMD8_64u test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 495 - MRORS
OK   UME::SIMD::SIMD8_64u test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64u test Id: 497 - RORVA
OK   UME::SIMD::SIMD8_64u test Id: 498 - MRORVA
OK   UME::SIMD::SIMD8_64u test Id: 499 - RORSA
OK   UME::SIMD::SIMD8_64u test Id: 500 - MRORSA
OK   UME::SIMD::SIMD8_64u test Id: 501 - UTOI
OK   UME::SIMD::SIMD8_64u test Id: 502 - UTOF
OK   UME::SIMD::SIMD8_64u test Id: 503 - PACK
OK   UME::SIMD::SIMD8_64u test Id: 504 - PACKLO
OK   UME::SIMD::SIMD8_64u test Id: 505 - PACKHI
OK   UME::SIMD::SIMD8_64u test Id: 506 - UNPACK
OK   UME::SIMD::SIMD8_64u test Id: 507 - UNPACKLO
OK   UME::SIMD::SIMD8_64u test Id: 508 - UNPACKHi
OK   UME::SIMD::SIMD8_64u test Id: 509 - DEGRADE
OK   UME::SIMD::SIMD8_64i test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD8_64i test Id: 2 - RORV
OK   UME::SIMD::SIMD8_64i test Id: 3 - MRORV
OK   UME::SIMD::SIMD8_64i test Id: 4 - RORS
OK   UME::SIMD::SIMD8_64i test Id: 5 - MRORS
OK   UME::SIMD::SIMD8_64i test Id: 6 - RORVA
OK   UME::SIMD::SIMD8_64i test Id: 7 - MRORV
OK   UME::SIMD::SIMD8_64i test Id: 8 - RORSA
OK   UME::SIMD::SIMD8_64i test Id: 9 - MRORSA
OK   UME::SIMD::SIMD8_64i test Id: 10 - SET-CONSTR gen
OK   UME::SIMD::SIMD8_64i test Id: 11 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD8_64i test Id: 12 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD8_64i test Id: 13 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD8_64i test Id: 14 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD8_64i test Id: 15 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD8_64i test Id: 16 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD8_64i test Id: 17 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD8_64i test Id: 18 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD8_64i test Id: 19 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD8_64i test Id: 20 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD8_64i test Id: 21 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD8_64i test Id: 22 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD8_64i test Id: 23 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD8_64i test Id: 24 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD8_64i test Id: 25 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD8_64i test Id: 26 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD8_64i test Id: 27 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD8_64i test Id: 28 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD8_64i test Id: 29 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD8_64i test Id: 30 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD8_64i test Id: 31 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD8_64i test Id: 32 - INSERT
OK   UME::SIMD::SIMD8_64i test Id: 33 - INSERT(operator[] =)
OK   UME::SIMD::SIMD8_64i test Id: 34 - EXTRACT
OK   UME::SIMD::SIMD8_64i test Id: 35 - EXTRACT(operator[])
OK   UME::SIMD::SIMD8_64i test Id: 36 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD8_64i test Id: 37 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD8_64i test Id: 38 - ASSIGNV
OK   UME::SIMD::SIMD8_64i test Id: 39 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD8_64i test Id: 40 - MASSIGNV
OK   UME::SIMD::SIMD8_64i test Id: 41 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD8_64i test Id: 42 - ASSIGNS
OK   UME::SIMD::SIMD8_64i test Id: 43 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD8_64i test Id: 44 - MASSIGNS
OK   UME::SIMD::SIMD8_64i test Id: 45 - MASSIGNS
OK   UME::SIMD::SIMD8_64i test Id: 46 - LOAD/STORE
OK   UME::SIMD::SIMD8_64i test Id: 47 - MLOAD
OK   UME::SIMD::SIMD8_64i test Id: 48 - MSTORE
OK   UME::SIMD::SIMD8_64i test Id: 49 - LOADA/STOREA
OK   UME::SIMD::SIMD8_64i test Id: 50 - MLOADA
OK   UME::SIMD::SIMD8_64i test Id: 51 - MSTOREA
OK   UME::SIMD::SIMD8_64i test Id: 52 - SWIZZLE
OK   UME::SIMD::SIMD8_64i test Id: 53 - SORTA
OK   UME::SIMD::SIMD8_64i test Id: 54 - SORTD
OK   UME::SIMD::SIMD8_64i test Id: 55 - BLENDV gen
OK   UME::SIMD::SIMD8_64i test Id: 56 - ADDV
OK   UME::SIMD::SIMD8_64i test Id: 57 - ADDV(operator+)
OK   UME::SIMD::SIMD8_64i test Id: 58 - ADDV(function)
OK   UME::SIMD::SIMD8_64i test Id: 59 - ADDV gen
OK   UME::SIMD::SIMD8_64i test Id: 60 - ADDV(operator+) gen
OK   UME::SIMD::SIMD8_64i test Id: 61 - ADDV(function) gen
OK   UME::SIMD::SIMD8_64i test Id: 62 - MADDV
OK   UME::SIMD::SIMD8_64i test Id: 63 - MADDV(function)
OK   UME::SIMD::SIMD8_64i test Id: 64 - MADDV gen
OK   UME::SIMD::SIMD8_64i test Id: 65 - MADDV(function) gen
OK   UME::SIMD::SIMD8_64i test Id: 66 - ADDS
OK   UME::SIMD::SIMD8_64i test Id: 67 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 68 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 69 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD8_64i test Id: 70 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD8_64i test Id: 71 - ADDS gen
OK   UME::SIMD::SIMD8_64i test Id: 72 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD8_64i test Id: 73 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD8_64i test Id: 74 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD8_64i test Id: 75 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD8_64i test Id: 76 - MADDS
OK   UME::SIMD::SIMD8_64i test Id: 77 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 78 - MADDS gen
OK   UME::SIMD::SIMD8_64i test Id: 79 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD8_64i test Id: 80 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD8_64i test Id: 81 - ADDVA
OK   UME::SIMD::SIMD8_64i test Id: 82 - ADDVA(operator+=)
OK   UME::SIMD::SIMD8_64i test Id: 83 - ADDVA gen
OK   UME::SIMD::SIMD8_64i test Id: 84 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD8_64i test Id: 85 - MADDVA
OK   UME::SIMD::SIMD8_64i test Id: 86 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD8_64i test Id: 87 - ADDSA
OK   UME::SIMD::SIMD8_64i test Id: 88 - ADDSA(operator+=)
OK   UME::SIMD::SIMD8_64i test Id: 89 - MADDSA
OK   UME::SIMD::SIMD8_64i test Id: 90 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD8_64i test Id: 91 - SADDV gen
OK   UME::SIMD::SIMD8_64i test Id: 92 - SADDV(function) gen
OK   UME::SIMD::SIMD8_64i test Id: 93 - POSTINC
OK   UME::SIMD::SIMD8_64i test Id: 94 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD8_64i test Id: 95 - POSTINC(function)
OK   UME::SIMD::SIMD8_64i test Id: 96 - MPOSTINC
OK   UME::SIMD::SIMD8_64i test Id: 97 - MPOSTINC(function)
OK   UME::SIMD::SIMD8_64i test Id: 98 - PREFINC
OK   UME::SIMD::SIMD8_64i test Id: 99 - PREFINC(operator++())
OK   UME::SIMD::SIMD8_64i test Id: 100 - PREFINC(function)
OK   UME::SIMD::SIMD8_64i test Id: 101 - MPREFINC
OK   UME::SIMD::SIMD8_64i test Id: 102 - MPREFINC(function)
OK   UME::SIMD::SIMD8_64i test Id: 103 - SUBV
OK   UME::SIMD::SIMD8_64i test Id: 104 - SUBV(operator-)
OK   UME::SIMD::SIMD8_64i test Id: 105 - SUBV(function)
OK   UME::SIMD::SIMD8_64i test Id: 106 - SUBV gen
OK   UME::SIMD::SIMD8_64i test Id: 107 - SUBV(operator-) gen
OK   UME::SIMD::SIMD8_64i test Id: 108 - SUBV(function) gen
OK   UME::SIMD::SIMD8_64i test Id: 109 - MSUBV
OK   UME::SIMD::SIMD8_64i test Id: 110 - MSUBV(function)
OK   UME::SIMD::SIMD8_64i test Id: 111 - MSUBV gen
OK   UME::SIMD::SIMD8_64i test Id: 112 - MSUBV(function) gen
OK   UME::SIMD::SIMD8_64i test Id: 113 - SUBS gen
OK   UME::SIMD::SIMD8_64i test Id: 114 - SUBS(operator-) gen
OK   UME::SIMD::SIMD8_64i test Id: 115 - SUBS(function) gen
OK   UME::SIMD::SIMD8_64i test Id: 116 - MSUBS
OK   UME::SIMD::SIMD8_64i test Id: 117 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 118 - SUBVA
OK   UME::SIMD::SIMD8_64i test Id: 119 - SUBVA(operator-=)
OK   UME::SIMD::SIMD8_64i test Id: 120 - MSUBVA
OK   UME::SIMD::SIMD8_64i test Id: 121 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD8_64i test Id: 122 - SUBSA
OK   UME::SIMD::SIMD8_64i test Id: 123 - MSUBSA
OK   UME::SIMD::SIMD8_64i test Id: 124 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD8_64i test Id: 125 - SUBFROMV
OK   UME::SIMD::SIMD8_64i test Id: 126 - MSUBFROMV
OK   UME::SIMD::SIMD8_64i test Id: 127 - SUBFROMS
OK   UME::SIMD::SIMD8_64i test Id: 128 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 129 - MSUBFROMS
OK   UME::SIMD::SIMD8_64i test Id: 130 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 131 - SUBFROMVA
OK   UME::SIMD::SIMD8_64i test Id: 132 - MSUBFROMVA
OK   UME::SIMD::SIMD8_64i test Id: 133 - SUBFROMSA
OK   UME::SIMD::SIMD8_64i test Id: 134 - MSUBFROMSA
OK   UME::SIMD::SIMD8_64i test Id: 135 - POSTDEC
OK   UME::SIMD::SIMD8_64i test Id: 136 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD8_64i test Id: 137 - POSTDEC(function)
OK   UME::SIMD::SIMD8_64i test Id: 138 - MPOSTDEC
OK   UME::SIMD::SIMD8_64i test Id: 139 - MPOSTDEC(function)
OK   UME::SIMD::SIMD8_64i test Id: 140 - PREFDEC
OK   UME::SIMD::SIMD8_64i test Id: 141 - PREFDEC(operator--())
OK   UME::SIMD::SIMD8_64i test Id: 142 - PREFDEC(function)
OK   UME::SIMD::SIMD8_64i test Id: 143 - MPREFDEC
OK   UME::SIMD::SIMD8_64i test Id: 144 - MPREFDEC(function)
OK   UME::SIMD::SIMD8_64i test Id: 145 - MULV
OK   UME::SIMD::SIMD8_64i test Id: 146 - MULV(operator*)
OK   UME::SIMD::SIMD8_64i test Id: 147 - MULV(function)
OK   UME::SIMD::SIMD8_64i test Id: 148 - MMULV
OK   UME::SIMD::SIMD8_64i test Id: 149 - MMULV(function)
OK   UME::SIMD::SIMD8_64i test Id: 150 - MULS
OK   UME::SIMD::SIMD8_64i test Id: 151 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 152 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 153 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 154 - MMULS
OK   UME::SIMD::SIMD8_64i test Id: 155 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 156 - MULVA
OK   UME::SIMD::SIMD8_64i test Id: 157 - MULVA(operator*)
OK   UME::SIMD::SIMD8_64i test Id: 158 - MULVA gen
OK   UME::SIMD::SIMD8_64i test Id: 159 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD8_64i test Id: 160 - MMULVA
OK   UME::SIMD::SIMD8_64i test Id: 161 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_64i test Id: 162 - MULSA
OK   UME::SIMD::SIMD8_64i test Id: 163 - MULSA(operator*=)
OK   UME::SIMD::SIMD8_64i test Id: 164 - MMULSA
OK   UME::SIMD::SIMD8_64i test Id: 165 - DIVV
OK   UME::SIMD::SIMD8_64i test Id: 166 - DIVV(operator/)
OK   UME::SIMD::SIMD8_64i test Id: 167 - DIVV(function)
OK   UME::SIMD::SIMD8_64i test Id: 168 - MDIVV
OK   UME::SIMD::SIMD8_64i test Id: 169 - MDIVV(function)
OK   UME::SIMD::SIMD8_64i test Id: 170 - DIVS
OK   UME::SIMD::SIMD8_64i test Id: 171 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 172 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 173 - MDIVS
OK   UME::SIMD::SIMD8_64i test Id: 174 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 175 - DIVVA
OK   UME::SIMD::SIMD8_64i test Id: 176 - DIVVA(operator/=)
OK   UME::SIMD::SIMD8_64i test Id: 177 - DIVVA gen
OK   UME::SIMD::SIMD8_64i test Id: 178 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD8_64i test Id: 179 - MDIVVA
OK   UME::SIMD::SIMD8_64i test Id: 180 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_64i test Id: 181 - DIVSA
OK   UME::SIMD::SIMD8_64i test Id: 182 - DIVSA(operator/=)
OK   UME::SIMD::SIMD8_64i test Id: 183 - MDIVSA
OK   UME::SIMD::SIMD8_64i test Id: 184 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD8_64i test Id: 185 - RCP
OK   UME::SIMD::SIMD8_64i test Id: 186 - RCP(function)
OK   UME::SIMD::SIMD8_64i test Id: 187 - MRCP
OK   UME::SIMD::SIMD8_64i test Id: 188 - MRCP(function)
OK   UME::SIMD::SIMD8_64i test Id: 189 - RCPS
OK   UME::SIMD::SIMD8_64i test Id: 190 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 191 - RCPS(function)
OK   UME::SIMD::SIMD8_64i test Id: 192 - MRCPS
OK   UME::SIMD::SIMD8_64i test Id: 193 - MRCPS (function)
OK   UME::SIMD::SIMD8_64i test Id: 194 - RCPA
OK   UME::SIMD::SIMD8_64i test Id: 195 - MRCPA
OK   UME::SIMD::SIMD8_64i test Id: 196 - RCPSA
OK   UME::SIMD::SIMD8_64i test Id: 197 - MRCPSA
OK   UME::SIMD::SIMD8_64i test Id: 198 - CMPEQV
OK   UME::SIMD::SIMD8_64i test Id: 199 - CMPEQV(operator==)
OK   UME::SIMD::SIMD8_64i test Id: 200 - CMPEQV(function)
OK   UME::SIMD::SIMD8_64i test Id: 201 - CMPEQS
OK   UME::SIMD::SIMD8_64i test Id: 202 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 203 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 204 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 205 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 206 - CMPNEV
OK   UME::SIMD::SIMD8_64i test Id: 207 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD8_64i test Id: 208 - CMPNEV(function)
OK   UME::SIMD::SIMD8_64i test Id: 209 - CMPNES
OK   UME::SIMD::SIMD8_64i test Id: 210 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 211 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 212 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 213 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 214 - CMPGTV
OK   UME::SIMD::SIMD8_64i test Id: 215 - CMPGTV(operator>)
OK   UME::SIMD::SIMD8_64i test Id: 216 - CMPGTV(function)
OK   UME::SIMD::SIMD8_64i test Id: 217 - CMPGTS
OK   UME::SIMD::SIMD8_64i test Id: 218 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 219 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 220 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 221 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 222 - CMPLTV
OK   UME::SIMD::SIMD8_64i test Id: 223 - CMPLTV(operator<)
OK   UME::SIMD::SIMD8_64i test Id: 224 - CMPLTV(function)
OK   UME::SIMD::SIMD8_64i test Id: 225 - CMPLTS
OK   UME::SIMD::SIMD8_64i test Id: 226 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 227 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 228 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 229 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 230 - CMPGEV
OK   UME::SIMD::SIMD8_64i test Id: 231 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD8_64i test Id: 232 - CMPGEV(function)
OK   UME::SIMD::SIMD8_64i test Id: 233 - CMPGES
OK   UME::SIMD::SIMD8_64i test Id: 234 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 235 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 236 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 237 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 238 - CMPLEV
OK   UME::SIMD::SIMD8_64i test Id: 239 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD8_64i test Id: 240 - CMPLEV(function)
OK   UME::SIMD::SIMD8_64i test Id: 241 - CMPLES
OK   UME::SIMD::SIMD8_64i test Id: 242 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 243 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 244 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 245 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 246 - CMPEV
OK   UME::SIMD::SIMD8_64i test Id: 247 - CMPEV(function)
OK   UME::SIMD::SIMD8_64i test Id: 248 - CMPES
OK   UME::SIMD::SIMD8_64i test Id: 249 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 250 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 251 - HADD
OK   UME::SIMD::SIMD8_64i test Id: 252 - HADD(function)
OK   UME::SIMD::SIMD8_64i test Id: 253 - HADD gen
OK   UME::SIMD::SIMD8_64i test Id: 254 - HADD(function) gen
OK   UME::SIMD::SIMD8_64i test Id: 255 - MHADD gen
OK   UME::SIMD::SIMD8_64i test Id: 256 - MHADD(function) gen
OK   UME::SIMD::SIMD8_64i test Id: 257 - HADDS gen
OK   UME::SIMD::SIMD8_64i test Id: 258 - HADDS(function) gen
OK   UME::SIMD::SIMD8_64i test Id: 259 - MHADD gen
OK   UME::SIMD::SIMD8_64i test Id: 260 - MHADDS(function) gen
OK   UME::SIMD::SIMD8_64i test Id: 261 - HMUL gen
OK   UME::SIMD::SIMD8_64i test Id: 262 - HMUL(function) gen
OK   UME::SIMD::SIMD8_64i test Id: 263 - MHMUL gen
OK   UME::SIMD::SIMD8_64i test Id: 264 - MHMUL(function) gen
OK   UME::SIMD::SIMD8_64i test Id: 265 - HMULS gen
OK   UME::SIMD::SIMD8_64i test Id: 266 - HMULS(function) gen
OK   UME::SIMD::SIMD8_64i test Id: 267 - MHMUL gen
OK   UME::SIMD::SIMD8_64i test Id: 268 - MHMULS(function) gen
OK   UME::SIMD::SIMD8_64i test Id: 269 - FMULADDV
OK   UME::SIMD::SIMD8_64i test Id: 270 - FMULADDV(function)
OK   UME::SIMD::SIMD8_64i test Id: 271 - MFMULADDV
OK   UME::SIMD::SIMD8_64i test Id: 272 - MFMULADDV(function)
OK   UME::SIMD::SIMD8_64i test Id: 273 - FMULSUBV
OK   UME::SIMD::SIMD8_64i test Id: 274 - FMULSUBV(function)
OK   UME::SIMD::SIMD8_64i test Id: 275 - MFMULSUBV
OK   UME::SIMD::SIMD8_64i test Id: 276 - MFMULSUBV(function)
OK   UME::SIMD::SIMD8_64i test Id: 277 - FADDMULV
OK   UME::SIMD::SIMD8_64i test Id: 278 - FADDMULV(function)
OK   UME::SIMD::SIMD8_64i test Id: 279 - MFADDMULV
OK   UME::SIMD::SIMD8_64i test Id: 280 - MFADDMULV(function)
OK   UME::SIMD::SIMD8_64i test Id: 281 - FSUBMULV
OK   UME::SIMD::SIMD8_64i test Id: 282 - FSUBMULV(function)
OK   UME::SIMD::SIMD8_64i test Id: 283 - MFSUBMULV
OK   UME::SIMD::SIMD8_64i test Id: 284 - MFSUBMULV(function)
OK   UME::SIMD::SIMD8_64i test Id: 285 - MAXV
OK   UME::SIMD::SIMD8_64i test Id: 286 - MAXV(function)
OK   UME::SIMD::SIMD8_64i test Id: 287 - MMAXV
OK   UME::SIMD::SIMD8_64i test Id: 288 - MMAXV(function)
OK   UME::SIMD::SIMD8_64i test Id: 289 - MAXS
OK   UME::SIMD::SIMD8_64i test Id: 290 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 291 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 292 - MMAXS
OK   UME::SIMD::SIMD8_64i test Id: 293 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 294 - MAXVA
OK   UME::SIMD::SIMD8_64i test Id: 295 - MMAXVA
OK   UME::SIMD::SIMD8_64i test Id: 296 - MAXSA
OK   UME::SIMD::SIMD8_64i test Id: 297 - MMAXSA
OK   UME::SIMD::SIMD8_64i test Id: 298 - MINV
OK   UME::SIMD::SIMD8_64i test Id: 299 - MINV(function)
OK   UME::SIMD::SIMD8_64i test Id: 300 - MMINV
OK   UME::SIMD::SIMD8_64i test Id: 301 - MMINV(function)
OK   UME::SIMD::SIMD8_64i test Id: 302 - MINS
OK   UME::SIMD::SIMD8_64i test Id: 303 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD8_64i test Id: 304 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD8_64i test Id: 305 - MMINS
OK   UME::SIMD::SIMD8_64i test Id: 306 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 307 - MINVA
OK   UME::SIMD::SIMD8_64i test Id: 308 - MMINVA
OK   UME::SIMD::SIMD8_64i test Id: 309 - MINSA
OK   UME::SIMD::SIMD8_64i test Id: 310 - MMINSA
OK   UME::SIMD::SIMD8_64i test Id: 311 - HMAX
OK   UME::SIMD::SIMD8_64i test Id: 312 - HMAX(function)
OK   UME::SIMD::SIMD8_64i test Id: 313 - HMAX
OK   UME::SIMD::SIMD8_64i test Id: 314 - HMAX(function)
OK   UME::SIMD::SIMD8_64i test Id: 315 - MHMAX
OK   UME::SIMD::SIMD8_64i test Id: 316 - MHMAX(function)
OK   UME::SIMD::SIMD8_64i test Id: 317 - IMAX
OK   UME::SIMD::SIMD8_64i test Id: 318 - IMAX(function)
OK   UME::SIMD::SIMD8_64i test Id: 319 - MIMAX
OK   UME::SIMD::SIMD8_64i test Id: 320 - MIMAX(function)
OK   UME::SIMD::SIMD8_64i test Id: 321 - HMIN
OK   UME::SIMD::SIMD8_64i test Id: 322 - HMIN(function)
OK   UME::SIMD::SIMD8_64i test Id: 323 - HMIN
OK   UME::SIMD::SIMD8_64i test Id: 324 - HMIN(function)
OK   UME::SIMD::SIMD8_64i test Id: 325 - MHMIN gen
OK   UME::SIMD::SIMD8_64i test Id: 326 - MHMIN(function) gen
OK   UME::SIMD::SIMD8_64i test Id: 327 - IMIN
OK   UME::SIMD::SIMD8_64i test Id: 328 - IMIN(function)
OK   UME::SIMD::SIMD8_64i test Id: 329 - MIMIN
OK   UME::SIMD::SIMD8_64i test Id: 330 - MIMIN(function)
OK   UME::SIMD::SIMD8_64i test Id: 331 - REMV gen
OK   UME::SIMD::SIMD8_64i test Id: 332 - REMV(operator%) gen
OK   UME::SIMD::SIMD8_64i test Id: 333 - REMV(function) gen
OK   UME::SIMD::SIMD8_64i test Id: 334 - MREMV gen
OK   UME::SIMD::SIMD8_64i test Id: 335 - MREMV(function) gen
OK   UME::SIMD::SIMD8_64i test Id: 336 - REMS gen
OK   UME::SIMD::SIMD8_64i test Id: 337 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD8_64i test Id: 338 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD8_64i test Id: 339 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD8_64i test Id: 340 - LANDV gen
OK   UME::SIMD::SIMD8_64i test Id: 341 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD8_64i test Id: 342 - LORV gen
OK   UME::SIMD::SIMD8_64i test Id: 343 - LORV gen (operator ||)
OK   UME::SIMD::SIMD8_64i test Id: 344 - BANDV
OK   UME::SIMD::SIMD8_64i test Id: 345 - BANDV(operator&)
OK   UME::SIMD::SIMD8_64i test Id: 346 - BANDV(function)
OK   UME::SIMD::SIMD8_64i test Id: 347 - MBANDV
OK   UME::SIMD::SIMD8_64i test Id: 348 - MBANDV
OK   UME::SIMD::SIMD8_64i test Id: 349 - BANDS
OK   UME::SIMD::SIMD8_64i test Id: 350 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 351 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 352 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 353 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 354 - MBANDS
OK   UME::SIMD::SIMD8_64i test Id: 355 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 356 - BANDVA
OK   UME::SIMD::SIMD8_64i test Id: 357 - MBANDVA
OK   UME::SIMD::SIMD8_64i test Id: 358 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD8_64i test Id: 359 - BANDSA
OK   UME::SIMD::SIMD8_64i test Id: 360 - MBANDSA
OK   UME::SIMD::SIMD8_64i test Id: 361 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD8_64i test Id: 362 - BORV
OK   UME::SIMD::SIMD8_64i test Id: 363 - BORV(operator |)
OK   UME::SIMD::SIMD8_64i test Id: 364 - BORV(function)
OK   UME::SIMD::SIMD8_64i test Id: 365 - MBORV
OK   UME::SIMD::SIMD8_64i test Id: 366 - MBORV(function)
OK   UME::SIMD::SIMD8_64i test Id: 367 - BORS
OK   UME::SIMD::SIMD8_64i test Id: 368 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 369 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 370 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 371 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 372 - MBORS
OK   UME::SIMD::SIMD8_64i test Id: 373 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 374 - BORVA
OK   UME::SIMD::SIMD8_64i test Id: 375 - BORVA(operator|=)
OK   UME::SIMD::SIMD8_64i test Id: 376 - MBORVA
OK   UME::SIMD::SIMD8_64i test Id: 377 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD8_64i test Id: 378 - BORSA
OK   UME::SIMD::SIMD8_64i test Id: 379 - BORSA(operator|=)
OK   UME::SIMD::SIMD8_64i test Id: 380 - MBORSA
OK   UME::SIMD::SIMD8_64i test Id: 381 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD8_64i test Id: 382 - BXORV
OK   UME::SIMD::SIMD8_64i test Id: 383 - BXORV(operator^
OK   UME::SIMD::SIMD8_64i test Id: 384 - BXORV(function
OK   UME::SIMD::SIMD8_64i test Id: 385 - MBXORV
OK   UME::SIMD::SIMD8_64i test Id: 386 - MBXORV(function)
OK   UME::SIMD::SIMD8_64i test Id: 387 - BXORS
OK   UME::SIMD::SIMD8_64i test Id: 388 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 389 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 390 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 391 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 392 - MBXORS
OK   UME::SIMD::SIMD8_64i test Id: 393 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 394 - BXORVA
OK   UME::SIMD::SIMD8_64i test Id: 395 - BXORVA(operator^=)
OK   UME::SIMD::SIMD8_64i test Id: 396 - MBXORVA
OK   UME::SIMD::SIMD8_64i test Id: 397 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD8_64i test Id: 398 - BXORSA
OK   UME::SIMD::SIMD8_64i test Id: 399 - BXORSA(operator^=)
OK   UME::SIMD::SIMD8_64i test Id: 400 - MBXORSA
OK   UME::SIMD::SIMD8_64i test Id: 401 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD8_64i test Id: 402 - BNOT
OK   UME::SIMD::SIMD8_64i test Id: 403 - BNOT(operator!)
OK   UME::SIMD::SIMD8_64i test Id: 404 - BNOT(function)
OK   UME::SIMD::SIMD8_64i test Id: 405 - MBNOT
OK   UME::SIMD::SIMD8_64i test Id: 406 - MBNOT(function)
OK   UME::SIMD::SIMD8_64i test Id: 407 - BNOTA
OK   UME::SIMD::SIMD8_64i test Id: 408 - MBNOTA
OK   UME::SIMD::SIMD8_64i test Id: 409 - BANDNOTV
OK   UME::SIMD::SIMD8_64i test Id: 410 - BANDNOTV (function)
OK   UME::SIMD::SIMD8_64i test Id: 411 - MBANDNOTV
OK   UME::SIMD::SIMD8_64i test Id: 412 - MBANDNOTV (function)
OK   UME::SIMD::SIMD8_64i test Id: 413 - BANDNOTS
OK   UME::SIMD::SIMD8_64i test Id: 414 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD8_64i test Id: 415 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD8_64i test Id: 416 - MBANDNOTS
OK   UME::SIMD::SIMD8_64i test Id: 417 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD8_64i test Id: 418 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD8_64i test Id: 419 - BANDNOTVA
OK   UME::SIMD::SIMD8_64i test Id: 420 - MBANDNOTVA
OK   UME::SIMD::SIMD8_64i test Id: 421 - BANDNOTSA
OK   UME::SIMD::SIMD8_64i test Id: 422 - MBANDNOTSA
OK   UME::SIMD::SIMD8_64i test Id: 423 - HBAND
OK   UME::SIMD::SIMD8_64i test Id: 424 - HBAND
OK   UME::SIMD::SIMD8_64i test Id: 425 - MHBAND
OK   UME::SIMD::SIMD8_64i test Id: 426 - MHBAND(function)
OK   UME::SIMD::SIMD8_64i test Id: 427 - HBANDS
OK   UME::SIMD::SIMD8_64i test Id: 428 - MHBANDS
OK   UME::SIMD::SIMD8_64i test Id: 429 - HBOR
OK   UME::SIMD::SIMD8_64i test Id: 430 - HBOR(function)
OK   UME::SIMD::SIMD8_64i test Id: 431 - MHBOR
OK   UME::SIMD::SIMD8_64i test Id: 432 - MHBOR(function)
OK   UME::SIMD::SIMD8_64i test Id: 433 - HBORS
OK   UME::SIMD::SIMD8_64i test Id: 434 - MHBORS
OK   UME::SIMD::SIMD8_64i test Id: 435 - HBXOR
OK   UME::SIMD::SIMD8_64i test Id: 436 - HBXOR(function)
OK   UME::SIMD::SIMD8_64i test Id: 437 - MHBXOR
OK   UME::SIMD::SIMD8_64i test Id: 438 - MHBXOR
OK   UME::SIMD::SIMD8_64i test Id: 439 - HBXORS
OK   UME::SIMD::SIMD8_64i test Id: 440 - MHBXORS
OK   UME::SIMD::SIMD8_64i test Id: 441 - GATHERU
OK   UME::SIMD::SIMD8_64i test Id: 442 - MGATHERU
OK   UME::SIMD::SIMD8_64i test Id: 443 - GATHERS
OK   UME::SIMD::SIMD8_64i test Id: 444 - MGATHERS
OK   UME::SIMD::SIMD8_64i test Id: 445 - GATHERV
OK   UME::SIMD::SIMD8_64i test Id: 446 - MGATHERV
OK   UME::SIMD::SIMD8_64i test Id: 447 - SCATTERU
OK   UME::SIMD::SIMD8_64i test Id: 448 - MSCATTERU
OK   UME::SIMD::SIMD8_64i test Id: 449 - SCATTERS
OK   UME::SIMD::SIMD8_64i test Id: 450 - MSCATTERS
OK   UME::SIMD::SIMD8_64i test Id: 451 - SCATTERV
OK   UME::SIMD::SIMD8_64i test Id: 452 - MSCATTERV
OK   UME::SIMD::SIMD8_64i test Id: 453 - LSHV gen
OK   UME::SIMD::SIMD8_64i test Id: 454 - LSHV (function) gen
OK   UME::SIMD::SIMD8_64i test Id: 455 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD8_64i test Id: 456 - MLSHV gen
OK   UME::SIMD::SIMD8_64i test Id: 457 - MLSHV (function) gen
OK   UME::SIMD::SIMD8_64i test Id: 458 - LSHS gen
OK   UME::SIMD::SIMD8_64i test Id: 459 - LSHS (function) gen
OK   UME::SIMD::SIMD8_64i test Id: 460 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD8_64i test Id: 461 - MLSHS gen
OK   UME::SIMD::SIMD8_64i test Id: 462 - MLSHS (function) gen
OK   UME::SIMD::SIMD8_64i test Id: 463 - LSHVA gen
OK   UME::SIMD::SIMD8_64i test Id: 464 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD8_64i test Id: 465 - MLSHVA gen
OK   UME::SIMD::SIMD8_64i test Id: 466 - LSHSA gen
OK   UME::SIMD::SIMD8_64i test Id: 467 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD8_64i test Id: 468 - MLSHSA gen
OK   UME::SIMD::SIMD8_64i test Id: 469 - RSHV gen
OK   UME::SIMD::SIMD8_64i test Id: 470 - RSHV (function) gen
OK   UME::SIMD::SIMD8_64i test Id: 471 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD8_64i test Id: 472 - MRSHV gen
OK   UME::SIMD::SIMD8_64i test Id: 473 - MRSHV (function) gen
OK   UME::SIMD::SIMD8_64i test Id: 474 - RSHS gen
OK   UME::SIMD::SIMD8_64i test Id: 475 - RSHS (function) gen
OK   UME::SIMD::SIMD8_64i test Id: 476 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD8_64i test Id: 477 - MRSHS gen
OK   UME::SIMD::SIMD8_64i test Id: 478 - MRSHS (function) gen
OK   UME::SIMD::SIMD8_64i test Id: 479 - RSHVA gen
OK   UME::SIMD::SIMD8_64i test Id: 480 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD8_64i test Id: 481 - MRSHVA gen
OK   UME::SIMD::SIMD8_64i test Id: 482 - RSHSA gen
OK   UME::SIMD::SIMD8_64i test Id: 483 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD8_64i test Id: 484 - MRSHSA gen
OK   UME::SIMD::SIMD8_64i test Id: 485 - ROLV
OK   UME::SIMD::SIMD8_64i test Id: 486 - ROLV(function)
OK   UME::SIMD::SIMD8_64i test Id: 487 - MROLV
OK   UME::SIMD::SIMD8_64i test Id: 488 - MROLV(function)
OK   UME::SIMD::SIMD8_64i test Id: 489 - ROLS
OK   UME::SIMD::SIMD8_64i test Id: 490 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 491 - MROLS
OK   UME::SIMD::SIMD8_64i test Id: 492 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 493 - ROLVA
OK   UME::SIMD::SIMD8_64i test Id: 494 - MROLVA
OK   UME::SIMD::SIMD8_64i test Id: 495 - ROLSA
OK   UME::SIMD::SIMD8_64i test Id: 496 - MROLSA
OK   UME::SIMD::SIMD8_64i test Id: 497 - RORV
OK   UME::SIMD::SIMD8_64i test Id: 498 - RORV(function)
OK   UME::SIMD::SIMD8_64i test Id: 499 - MRORV
OK   UME::SIMD::SIMD8_64i test Id: 500 - MRORV(function)
OK   UME::SIMD::SIMD8_64i test Id: 501 - RORS
OK   UME::SIMD::SIMD8_64i test Id: 502 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 503 - MRORS
OK   UME::SIMD::SIMD8_64i test Id: 504 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64i test Id: 505 - RORVA
OK   UME::SIMD::SIMD8_64i test Id: 506 - MRORVA
OK   UME::SIMD::SIMD8_64i test Id: 507 - RORSA
OK   UME::SIMD::SIMD8_64i test Id: 508 - MRORSA
OK   UME::SIMD::SIMD8_64i test Id: 509 - NEG
OK   UME::SIMD::SIMD8_64i test Id: 510 - NEG(operator-)
OK   UME::SIMD::SIMD8_64i test Id: 511 - NEG(function)
OK   UME::SIMD::SIMD8_64i test Id: 512 - MNEG
OK   UME::SIMD::SIMD8_64i test Id: 513 - MNEG(function)
OK   UME::SIMD::SIMD8_64i test Id: 514 - NEGA
OK   UME::SIMD::SIMD8_64i test Id: 515 - MNEGA
OK   UME::SIMD::SIMD8_64i test Id: 516 - ABS
OK   UME::SIMD::SIMD8_64i test Id: 517 - ABS(function)
OK   UME::SIMD::SIMD8_64i test Id: 518 - MABS
OK   UME::SIMD::SIMD8_64i test Id: 519 - MABS(function)
OK   UME::SIMD::SIMD8_64i test Id: 520 - ABSA
OK   UME::SIMD::SIMD8_64i test Id: 521 - MABSA
OK   UME::SIMD::SIMD8_64i test Id: 522 - COPYSIGN gen
OK   UME::SIMD::SIMD8_64i test Id: 523 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD8_64i test Id: 524 - ITOU
OK   UME::SIMD::SIMD8_64i test Id: 525 - PACK
OK   UME::SIMD::SIMD8_64i test Id: 526 - PACKLO
OK   UME::SIMD::SIMD8_64i test Id: 527 - PACKHI
OK   UME::SIMD::SIMD8_64i test Id: 528 - UNPACK
OK   UME::SIMD::SIMD8_64i test Id: 529 - UNPACKLO
OK   UME::SIMD::SIMD8_64i test Id: 530 - UNPACKHi
OK   UME::SIMD::SIMD8_64i test Id: 531 - DEGRADE
OK   UME::SIMD::SIMD8_64f test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD8_64f test Id: 2 - ADDVA
OK   UME::SIMD::SIMD8_64f test Id: 3 - ADDVA(operator+=)
OK   UME::SIMD::SIMD8_64f test Id: 4 - SET-CONSTR gen
OK   UME::SIMD::SIMD8_64f test Id: 5 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD8_64f test Id: 6 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD8_64f test Id: 7 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD8_64f test Id: 8 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD8_64f test Id: 9 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD8_64f test Id: 10 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD8_64f test Id: 11 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD8_64f test Id: 12 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD8_64f test Id: 13 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD8_64f test Id: 14 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD8_64f test Id: 15 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD8_64f test Id: 16 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD8_64f test Id: 17 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD8_64f test Id: 18 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD8_64f test Id: 19 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD8_64f test Id: 20 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD8_64f test Id: 21 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD8_64f test Id: 22 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD8_64f test Id: 23 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD8_64f test Id: 24 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD8_64f test Id: 25 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD8_64f test Id: 26 - INSERT
OK   UME::SIMD::SIMD8_64f test Id: 27 - INSERT(operator[] =)
OK   UME::SIMD::SIMD8_64f test Id: 28 - EXTRACT
OK   UME::SIMD::SIMD8_64f test Id: 29 - EXTRACT(operator[])
OK   UME::SIMD::SIMD8_64f test Id: 30 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD8_64f test Id: 31 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD8_64f test Id: 32 - ASSIGNV
OK   UME::SIMD::SIMD8_64f test Id: 33 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD8_64f test Id: 34 - MASSIGNV
OK   UME::SIMD::SIMD8_64f test Id: 35 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD8_64f test Id: 36 - ASSIGNS
OK   UME::SIMD::SIMD8_64f test Id: 37 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD8_64f test Id: 38 - MASSIGNS
OK   UME::SIMD::SIMD8_64f test Id: 39 - MASSIGNS
OK   UME::SIMD::SIMD8_64f test Id: 40 - LOAD/STORE
OK   UME::SIMD::SIMD8_64f test Id: 41 - MLOAD
OK   UME::SIMD::SIMD8_64f test Id: 42 - MSTORE
OK   UME::SIMD::SIMD8_64f test Id: 43 - LOADA/STOREA
OK   UME::SIMD::SIMD8_64f test Id: 44 - MLOADA
OK   UME::SIMD::SIMD8_64f test Id: 45 - MSTOREA
OK   UME::SIMD::SIMD8_64f test Id: 46 - SWIZZLE
OK   UME::SIMD::SIMD8_64f test Id: 47 - SORTA
OK   UME::SIMD::SIMD8_64f test Id: 48 - SORTD
OK   UME::SIMD::SIMD8_64f test Id: 49 - BLENDV gen
OK   UME::SIMD::SIMD8_64f test Id: 50 - ADDV
OK   UME::SIMD::SIMD8_64f test Id: 51 - ADDV(operator+)
OK   UME::SIMD::SIMD8_64f test Id: 52 - ADDV(function)
OK   UME::SIMD::SIMD8_64f test Id: 53 - ADDV gen
OK   UME::SIMD::SIMD8_64f test Id: 54 - ADDV(operator+) gen
OK   UME::SIMD::SIMD8_64f test Id: 55 - ADDV(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 56 - MADDV
OK   UME::SIMD::SIMD8_64f test Id: 57 - MADDV(function)
OK   UME::SIMD::SIMD8_64f test Id: 58 - MADDV gen
OK   UME::SIMD::SIMD8_64f test Id: 59 - MADDV(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 60 - ADDS
OK   UME::SIMD::SIMD8_64f test Id: 61 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 62 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 63 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD8_64f test Id: 64 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD8_64f test Id: 65 - ADDS gen
OK   UME::SIMD::SIMD8_64f test Id: 66 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD8_64f test Id: 67 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD8_64f test Id: 68 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD8_64f test Id: 69 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD8_64f test Id: 70 - MADDS
OK   UME::SIMD::SIMD8_64f test Id: 71 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 72 - MADDS gen
OK   UME::SIMD::SIMD8_64f test Id: 73 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD8_64f test Id: 74 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD8_64f test Id: 75 - ADDVA
OK   UME::SIMD::SIMD8_64f test Id: 76 - ADDVA(operator+=)
OK   UME::SIMD::SIMD8_64f test Id: 77 - ADDVA gen
OK   UME::SIMD::SIMD8_64f test Id: 78 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD8_64f test Id: 79 - MADDVA
OK   UME::SIMD::SIMD8_64f test Id: 80 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD8_64f test Id: 81 - ADDSA
OK   UME::SIMD::SIMD8_64f test Id: 82 - ADDSA(operator+=)
OK   UME::SIMD::SIMD8_64f test Id: 83 - MADDSA
OK   UME::SIMD::SIMD8_64f test Id: 84 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD8_64f test Id: 85 - SADDV gen
OK   UME::SIMD::SIMD8_64f test Id: 86 - SADDV(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 87 - POSTINC
OK   UME::SIMD::SIMD8_64f test Id: 88 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD8_64f test Id: 89 - POSTINC(function)
OK   UME::SIMD::SIMD8_64f test Id: 90 - MPOSTINC
OK   UME::SIMD::SIMD8_64f test Id: 91 - MPOSTINC(function)
OK   UME::SIMD::SIMD8_64f test Id: 92 - PREFINC
OK   UME::SIMD::SIMD8_64f test Id: 93 - PREFINC(operator++())
OK   UME::SIMD::SIMD8_64f test Id: 94 - PREFINC(function)
OK   UME::SIMD::SIMD8_64f test Id: 95 - MPREFINC
OK   UME::SIMD::SIMD8_64f test Id: 96 - MPREFINC(function)
OK   UME::SIMD::SIMD8_64f test Id: 97 - SUBV
OK   UME::SIMD::SIMD8_64f test Id: 98 - SUBV(operator-)
OK   UME::SIMD::SIMD8_64f test Id: 99 - SUBV(function)
OK   UME::SIMD::SIMD8_64f test Id: 100 - SUBV gen
OK   UME::SIMD::SIMD8_64f test Id: 101 - SUBV(operator-) gen
OK   UME::SIMD::SIMD8_64f test Id: 102 - SUBV(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 103 - MSUBV
OK   UME::SIMD::SIMD8_64f test Id: 104 - MSUBV(function)
OK   UME::SIMD::SIMD8_64f test Id: 105 - MSUBV gen
OK   UME::SIMD::SIMD8_64f test Id: 106 - MSUBV(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 107 - SUBS gen
OK   UME::SIMD::SIMD8_64f test Id: 108 - SUBS(operator-) gen
OK   UME::SIMD::SIMD8_64f test Id: 109 - SUBS(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 110 - MSUBS
OK   UME::SIMD::SIMD8_64f test Id: 111 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 112 - SUBVA
OK   UME::SIMD::SIMD8_64f test Id: 113 - SUBVA(operator-=)
OK   UME::SIMD::SIMD8_64f test Id: 114 - MSUBVA
OK   UME::SIMD::SIMD8_64f test Id: 115 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD8_64f test Id: 116 - SUBSA
OK   UME::SIMD::SIMD8_64f test Id: 117 - MSUBSA
OK   UME::SIMD::SIMD8_64f test Id: 118 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD8_64f test Id: 119 - SUBFROMV
OK   UME::SIMD::SIMD8_64f test Id: 120 - MSUBFROMV
OK   UME::SIMD::SIMD8_64f test Id: 121 - SUBFROMS
OK   UME::SIMD::SIMD8_64f test Id: 122 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 123 - MSUBFROMS
OK   UME::SIMD::SIMD8_64f test Id: 124 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 125 - SUBFROMVA
OK   UME::SIMD::SIMD8_64f test Id: 126 - MSUBFROMVA
OK   UME::SIMD::SIMD8_64f test Id: 127 - SUBFROMSA
OK   UME::SIMD::SIMD8_64f test Id: 128 - MSUBFROMSA
OK   UME::SIMD::SIMD8_64f test Id: 129 - POSTDEC
OK   UME::SIMD::SIMD8_64f test Id: 130 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD8_64f test Id: 131 - POSTDEC(function)
OK   UME::SIMD::SIMD8_64f test Id: 132 - MPOSTDEC
OK   UME::SIMD::SIMD8_64f test Id: 133 - MPOSTDEC(function)
OK   UME::SIMD::SIMD8_64f test Id: 134 - PREFDEC
OK   UME::SIMD::SIMD8_64f test Id: 135 - PREFDEC(operator--())
OK   UME::SIMD::SIMD8_64f test Id: 136 - PREFDEC(function)
OK   UME::SIMD::SIMD8_64f test Id: 137 - MPREFDEC
OK   UME::SIMD::SIMD8_64f test Id: 138 - MPREFDEC(function)
OK   UME::SIMD::SIMD8_64f test Id: 139 - MULV
OK   UME::SIMD::SIMD8_64f test Id: 140 - MULV(operator*)
OK   UME::SIMD::SIMD8_64f test Id: 141 - MULV(function)
OK   UME::SIMD::SIMD8_64f test Id: 142 - MMULV
OK   UME::SIMD::SIMD8_64f test Id: 143 - MMULV(function)
OK   UME::SIMD::SIMD8_64f test Id: 144 - MULS
OK   UME::SIMD::SIMD8_64f test Id: 145 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 146 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 147 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 148 - MMULS
OK   UME::SIMD::SIMD8_64f test Id: 149 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 150 - MULVA
OK   UME::SIMD::SIMD8_64f test Id: 151 - MULVA(operator*)
OK   UME::SIMD::SIMD8_64f test Id: 152 - MULVA gen
OK   UME::SIMD::SIMD8_64f test Id: 153 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD8_64f test Id: 154 - MMULVA
OK   UME::SIMD::SIMD8_64f test Id: 155 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_64f test Id: 156 - MULSA
OK   UME::SIMD::SIMD8_64f test Id: 157 - MULSA(operator*=)
OK   UME::SIMD::SIMD8_64f test Id: 158 - MMULSA
OK   UME::SIMD::SIMD8_64f test Id: 159 - DIVV
OK   UME::SIMD::SIMD8_64f test Id: 160 - DIVV(operator/)
OK   UME::SIMD::SIMD8_64f test Id: 161 - DIVV(function)
OK   UME::SIMD::SIMD8_64f test Id: 162 - MDIVV
OK   UME::SIMD::SIMD8_64f test Id: 163 - MDIVV(function)
OK   UME::SIMD::SIMD8_64f test Id: 164 - DIVS
OK   UME::SIMD::SIMD8_64f test Id: 165 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 166 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 167 - MDIVS
OK   UME::SIMD::SIMD8_64f test Id: 168 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 169 - DIVVA
OK   UME::SIMD::SIMD8_64f test Id: 170 - DIVVA(operator/=)
OK   UME::SIMD::SIMD8_64f test Id: 171 - DIVVA gen
OK   UME::SIMD::SIMD8_64f test Id: 172 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD8_64f test Id: 173 - MDIVVA
OK   UME::SIMD::SIMD8_64f test Id: 174 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD8_64f test Id: 175 - DIVSA
OK   UME::SIMD::SIMD8_64f test Id: 176 - DIVSA(operator/=)
OK   UME::SIMD::SIMD8_64f test Id: 177 - MDIVSA
OK   UME::SIMD::SIMD8_64f test Id: 178 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD8_64f test Id: 179 - RCP
OK   UME::SIMD::SIMD8_64f test Id: 180 - RCP(function)
OK   UME::SIMD::SIMD8_64f test Id: 181 - MRCP
OK   UME::SIMD::SIMD8_64f test Id: 182 - MRCP(function)
OK   UME::SIMD::SIMD8_64f test Id: 183 - RCPS
OK   UME::SIMD::SIMD8_64f test Id: 184 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 185 - RCPS(function)
OK   UME::SIMD::SIMD8_64f test Id: 186 - MRCPS
OK   UME::SIMD::SIMD8_64f test Id: 187 - MRCPS (function)
OK   UME::SIMD::SIMD8_64f test Id: 188 - RCPA
OK   UME::SIMD::SIMD8_64f test Id: 189 - MRCPA
OK   UME::SIMD::SIMD8_64f test Id: 190 - RCPSA
OK   UME::SIMD::SIMD8_64f test Id: 191 - MRCPSA
OK   UME::SIMD::SIMD8_64f test Id: 192 - CMPEQV
OK   UME::SIMD::SIMD8_64f test Id: 193 - CMPEQV(operator==)
OK   UME::SIMD::SIMD8_64f test Id: 194 - CMPEQV(function)
OK   UME::SIMD::SIMD8_64f test Id: 195 - CMPEQS
OK   UME::SIMD::SIMD8_64f test Id: 196 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 197 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 198 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 199 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 200 - CMPNEV
OK   UME::SIMD::SIMD8_64f test Id: 201 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD8_64f test Id: 202 - CMPNEV(function)
OK   UME::SIMD::SIMD8_64f test Id: 203 - CMPNES
OK   UME::SIMD::SIMD8_64f test Id: 204 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 205 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 206 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 207 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 208 - CMPGTV
OK   UME::SIMD::SIMD8_64f test Id: 209 - CMPGTV(operator>)
OK   UME::SIMD::SIMD8_64f test Id: 210 - CMPGTV(function)
OK   UME::SIMD::SIMD8_64f test Id: 211 - CMPGTS
OK   UME::SIMD::SIMD8_64f test Id: 212 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 213 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 214 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 215 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 216 - CMPLTV
OK   UME::SIMD::SIMD8_64f test Id: 217 - CMPLTV(operator<)
OK   UME::SIMD::SIMD8_64f test Id: 218 - CMPLTV(function)
OK   UME::SIMD::SIMD8_64f test Id: 219 - CMPLTS
OK   UME::SIMD::SIMD8_64f test Id: 220 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 221 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 222 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 223 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 224 - CMPGEV
OK   UME::SIMD::SIMD8_64f test Id: 225 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD8_64f test Id: 226 - CMPGEV(function)
OK   UME::SIMD::SIMD8_64f test Id: 227 - CMPGES
OK   UME::SIMD::SIMD8_64f test Id: 228 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 229 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 230 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 231 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 232 - CMPLEV
OK   UME::SIMD::SIMD8_64f test Id: 233 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD8_64f test Id: 234 - CMPLEV(function)
OK   UME::SIMD::SIMD8_64f test Id: 235 - CMPLES
OK   UME::SIMD::SIMD8_64f test Id: 236 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 237 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 238 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 239 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 240 - CMPEV
OK   UME::SIMD::SIMD8_64f test Id: 241 - CMPEV(function)
OK   UME::SIMD::SIMD8_64f test Id: 242 - CMPES
OK   UME::SIMD::SIMD8_64f test Id: 243 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 244 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 245 - HADD
OK   UME::SIMD::SIMD8_64f test Id: 246 - HADD(function)
OK   UME::SIMD::SIMD8_64f test Id: 247 - HADD gen
OK   UME::SIMD::SIMD8_64f test Id: 248 - HADD(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 249 - MHADD gen
OK   UME::SIMD::SIMD8_64f test Id: 250 - MHADD(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 251 - HADDS gen
OK   UME::SIMD::SIMD8_64f test Id: 252 - HADDS(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 253 - MHADD gen
OK   UME::SIMD::SIMD8_64f test Id: 254 - MHADDS(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 255 - HMUL gen
OK   UME::SIMD::SIMD8_64f test Id: 256 - HMUL(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 257 - MHMUL gen
OK   UME::SIMD::SIMD8_64f test Id: 258 - MHMUL(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 259 - HMULS gen
OK   UME::SIMD::SIMD8_64f test Id: 260 - HMULS(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 261 - MHMUL gen
OK   UME::SIMD::SIMD8_64f test Id: 262 - MHMULS(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 263 - FMULADDV
OK   UME::SIMD::SIMD8_64f test Id: 264 - FMULADDV(function)
OK   UME::SIMD::SIMD8_64f test Id: 265 - MFMULADDV
OK   UME::SIMD::SIMD8_64f test Id: 266 - MFMULADDV(function)
OK   UME::SIMD::SIMD8_64f test Id: 267 - FMULSUBV
OK   UME::SIMD::SIMD8_64f test Id: 268 - FMULSUBV(function)
OK   UME::SIMD::SIMD8_64f test Id: 269 - MFMULSUBV
OK   UME::SIMD::SIMD8_64f test Id: 270 - MFMULSUBV(function)
OK   UME::SIMD::SIMD8_64f test Id: 271 - FADDMULV
OK   UME::SIMD::SIMD8_64f test Id: 272 - FADDMULV(function)
OK   UME::SIMD::SIMD8_64f test Id: 273 - MFADDMULV
OK   UME::SIMD::SIMD8_64f test Id: 274 - MFADDMULV(function)
OK   UME::SIMD::SIMD8_64f test Id: 275 - FSUBMULV
OK   UME::SIMD::SIMD8_64f test Id: 276 - FSUBMULV(function)
OK   UME::SIMD::SIMD8_64f test Id: 277 - MFSUBMULV
OK   UME::SIMD::SIMD8_64f test Id: 278 - MFSUBMULV(function)
OK   UME::SIMD::SIMD8_64f test Id: 279 - MAXV
OK   UME::SIMD::SIMD8_64f test Id: 280 - MAXV(function)
OK   UME::SIMD::SIMD8_64f test Id: 281 - MMAXV
OK   UME::SIMD::SIMD8_64f test Id: 282 - MMAXV(function)
OK   UME::SIMD::SIMD8_64f test Id: 283 - MAXS
OK   UME::SIMD::SIMD8_64f test Id: 284 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 285 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 286 - MMAXS
OK   UME::SIMD::SIMD8_64f test Id: 287 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 288 - MAXVA
OK   UME::SIMD::SIMD8_64f test Id: 289 - MMAXVA
OK   UME::SIMD::SIMD8_64f test Id: 290 - MAXSA
OK   UME::SIMD::SIMD8_64f test Id: 291 - MMAXSA
OK   UME::SIMD::SIMD8_64f test Id: 292 - MINV
OK   UME::SIMD::SIMD8_64f test Id: 293 - MINV(function)
OK   UME::SIMD::SIMD8_64f test Id: 294 - MMINV
OK   UME::SIMD::SIMD8_64f test Id: 295 - MMINV(function)
OK   UME::SIMD::SIMD8_64f test Id: 296 - MINS
OK   UME::SIMD::SIMD8_64f test Id: 297 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD8_64f test Id: 298 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD8_64f test Id: 299 - MMINS
OK   UME::SIMD::SIMD8_64f test Id: 300 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD8_64f test Id: 301 - MINVA
OK   UME::SIMD::SIMD8_64f test Id: 302 - MMINVA
OK   UME::SIMD::SIMD8_64f test Id: 303 - MINSA
OK   UME::SIMD::SIMD8_64f test Id: 304 - MMINSA
OK   UME::SIMD::SIMD8_64f test Id: 305 - HMAX
OK   UME::SIMD::SIMD8_64f test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD8_64f test Id: 307 - HMAX
OK   UME::SIMD::SIMD8_64f test Id: 308 - HMAX(function)
OK   UME::SIMD::SIMD8_64f test Id: 309 - MHMAX
OK   UME::SIMD::SIMD8_64f test Id: 310 - MHMAX(function)
OK   UME::SIMD::SIMD8_64f test Id: 311 - IMAX
OK   UME::SIMD::SIMD8_64f test Id: 312 - IMAX(function)
OK   UME::SIMD::SIMD8_64f test Id: 313 - MIMAX
OK   UME::SIMD::SIMD8_64f test Id: 314 - MIMAX(function)
OK   UME::SIMD::SIMD8_64f test Id: 315 - HMIN
OK   UME::SIMD::SIMD8_64f test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD8_64f test Id: 317 - HMIN
OK   UME::SIMD::SIMD8_64f test Id: 318 - HMIN(function)
OK   UME::SIMD::SIMD8_64f test Id: 319 - MHMIN gen
OK   UME::SIMD::SIMD8_64f test Id: 320 - MHMIN(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 321 - IMIN
OK   UME::SIMD::SIMD8_64f test Id: 322 - IMIN(function)
OK   UME::SIMD::SIMD8_64f test Id: 323 - MIMIN
OK   UME::SIMD::SIMD8_64f test Id: 324 - MIMIN(function)
OK   UME::SIMD::SIMD8_64f test Id: 325 - GATHERU
OK   UME::SIMD::SIMD8_64f test Id: 326 - MGATHERU
OK   UME::SIMD::SIMD8_64f test Id: 327 - GATHERS
OK   UME::SIMD::SIMD8_64f test Id: 328 - MGATHERS
OK   UME::SIMD::SIMD8_64f test Id: 329 - GATHERV
OK   UME::SIMD::SIMD8_64f test Id: 330 - MGATHERV
OK   UME::SIMD::SIMD8_64f test Id: 331 - SCATTERU
OK   UME::SIMD::SIMD8_64f test Id: 332 - MSCATTERU
OK   UME::SIMD::SIMD8_64f test Id: 333 - SCATTERS
OK   UME::SIMD::SIMD8_64f test Id: 334 - MSCATTERS
OK   UME::SIMD::SIMD8_64f test Id: 335 - SCATTERV
OK   UME::SIMD::SIMD8_64f test Id: 336 - MSCATTERV
OK   UME::SIMD::SIMD8_64f test Id: 337 - NEG
OK   UME::SIMD::SIMD8_64f test Id: 338 - NEG(operator-)
OK   UME::SIMD::SIMD8_64f test Id: 339 - NEG(function)
OK   UME::SIMD::SIMD8_64f test Id: 340 - MNEG
OK   UME::SIMD::SIMD8_64f test Id: 341 - MNEG(function)
OK   UME::SIMD::SIMD8_64f test Id: 342 - NEGA
OK   UME::SIMD::SIMD8_64f test Id: 343 - MNEGA
OK   UME::SIMD::SIMD8_64f test Id: 344 - ABS
OK   UME::SIMD::SIMD8_64f test Id: 345 - ABS(function)
OK   UME::SIMD::SIMD8_64f test Id: 346 - MABS
OK   UME::SIMD::SIMD8_64f test Id: 347 - MABS(function)
OK   UME::SIMD::SIMD8_64f test Id: 348 - ABSA
OK   UME::SIMD::SIMD8_64f test Id: 349 - MABSA
OK   UME::SIMD::SIMD8_64f test Id: 350 - COPYSIGN gen
OK   UME::SIMD::SIMD8_64f test Id: 351 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 352 - ROUND
OK   UME::SIMD::SIMD8_64f test Id: 353 - ROUND(function)
OK   UME::SIMD::SIMD8_64f test Id: 354 - MROUND
OK   UME::SIMD::SIMD8_64f test Id: 355 - MROUND(function)
OK   UME::SIMD::SIMD8_64f test Id: 356 - TRUNC gen
OK   UME::SIMD::SIMD8_64f test Id: 357 - TRUNC(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 358 - MTRUNC gen
OK   UME::SIMD::SIMD8_64f test Id: 359 - MTRUNC(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 360 - FLOOR
OK   UME::SIMD::SIMD8_64f test Id: 361 - FLOOR(function)
OK   UME::SIMD::SIMD8_64f test Id: 362 - MFLOOR
OK   UME::SIMD::SIMD8_64f test Id: 363 - MFLOOR(function)
OK   UME::SIMD::SIMD8_64f test Id: 364 - CEIL
OK   UME::SIMD::SIMD8_64f test Id: 365 - CEIL(function)
OK   UME::SIMD::SIMD8_64f test Id: 366 - MCEIL
OK   UME::SIMD::SIMD8_64f test Id: 367 - MCEIL(function)
OK   UME::SIMD::SIMD8_64f test Id: 368 - ISFIN
OK   UME::SIMD::SIMD8_64f test Id: 369 - ISFIN(function)
OK   UME::SIMD::SIMD8_64f test Id: 370 - ISINF
OK   UME::SIMD::SIMD8_64f test Id: 371 - ISINF(function)
OK   UME::SIMD::SIMD8_64f test Id: 372 - ISAN
OK   UME::SIMD::SIMD8_64f test Id: 373 - ISAN(function)
OK   UME::SIMD::SIMD8_64f test Id: 374 - ISNAN
OK   UME::SIMD::SIMD8_64f test Id: 375 - ISNAN(function)
OK   UME::SIMD::SIMD8_64f test Id: 376 - ISNORM
OK   UME::SIMD::SIMD8_64f test Id: 377 - ISNORM(function)
OK   UME::SIMD::SIMD8_64f test Id: 378 - ISSUB
OK   UME::SIMD::SIMD8_64f test Id: 379 - ISSUB(function)
OK   UME::SIMD::SIMD8_64f test Id: 380 - ISZERO
OK   UME::SIMD::SIMD8_64f test Id: 381 - ISZERO(function)
OK   UME::SIMD::SIMD8_64f test Id: 382 - ISZEROSUB
OK   UME::SIMD::SIMD8_64f test Id: 383 - ISZEROSUB(function)
OK   UME::SIMD::SIMD8_64f test Id: 384 - SQR
OK   UME::SIMD::SIMD8_64f test Id: 385 - SQR(function)
OK   UME::SIMD::SIMD8_64f test Id: 386 - MSQR
OK   UME::SIMD::SIMD8_64f test Id: 387 - MSQR(function)
OK   UME::SIMD::SIMD8_64f test Id: 388 - SQRA
OK   UME::SIMD::SIMD8_64f test Id: 389 - MSQRA
OK   UME::SIMD::SIMD8_64f test Id: 390 - SQRT
OK   UME::SIMD::SIMD8_64f test Id: 391 - SQRT(function)
OK   UME::SIMD::SIMD8_64f test Id: 392 - MSQRT
OK   UME::SIMD::SIMD8_64f test Id: 393 - MSQRT
OK   UME::SIMD::SIMD8_64f test Id: 394 - SQRTA
OK   UME::SIMD::SIMD8_64f test Id: 395 - MSQRTA
OK   UME::SIMD::SIMD8_64f test Id: 396 - EXP gen
OK   UME::SIMD::SIMD8_64f test Id: 397 - EXP(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 398 - MEXP gen
OK   UME::SIMD::SIMD8_64f test Id: 399 - MEXP(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 400 - LOG gen
OK   UME::SIMD::SIMD8_64f test Id: 401 - LOG(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 402 - LOG2 gen
OK   UME::SIMD::SIMD8_64f test Id: 403 - LOG2(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 404 - LOG10 gen
OK   UME::SIMD::SIMD8_64f test Id: 405 - LOG10(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 406 - SIN gen
OK   UME::SIMD::SIMD8_64f test Id: 407 - SIN(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 408 - COS gen
OK   UME::SIMD::SIMD8_64f test Id: 409 - COS(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 410 - TAN gen
OK   UME::SIMD::SIMD8_64f test Id: 411 - TAN(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 412 - CTAN gen
OK   UME::SIMD::SIMD8_64f test Id: 413 - CTAN(function) gen
OK   UME::SIMD::SIMD8_64f test Id: 414 - FTOU gen
OK   UME::SIMD::SIMD8_64f test Id: 415 - FTOI gen
OK   UME::SIMD::SIMD8_64f test Id: 416 - PACK
OK   UME::SIMD::SIMD8_64f test Id: 417 - PACKLO
OK   UME::SIMD::SIMD8_64f test Id: 418 - PACKHI
OK   UME::SIMD::SIMD8_64f test Id: 419 - UNPACK
OK   UME::SIMD::SIMD8_64f test Id: 420 - UNPACKLO
OK   UME::SIMD::SIMD8_64f test Id: 421 - UNPACKHi
OK   UME::SIMD::SIMD8_64f test Id: 422 - DEGRADE
OK   UME::SIMD::SIMD128_8u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD128_8u test Id: 2 - FULL-CONSTR
OK   UME::SIMD::SIMD128_8u test Id: 3 - SET-CONSTR gen
OK   UME::SIMD::SIMD128_8u test Id: 4 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD128_8u test Id: 5 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD128_8u test Id: 6 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD128_8u test Id: 7 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD128_8u test Id: 8 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD128_8u test Id: 9 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD128_8u test Id: 10 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD128_8u test Id: 11 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD128_8u test Id: 12 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD128_8u test Id: 13 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD128_8u test Id: 14 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD128_8u test Id: 15 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD128_8u test Id: 16 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD128_8u test Id: 17 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD128_8u test Id: 18 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD128_8u test Id: 19 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD128_8u test Id: 20 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD128_8u test Id: 21 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD128_8u test Id: 22 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD128_8u test Id: 23 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD128_8u test Id: 24 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD128_8u test Id: 25 - INSERT
OK   UME::SIMD::SIMD128_8u test Id: 26 - INSERT(operator[] =)
OK   UME::SIMD::SIMD128_8u test Id: 27 - EXTRACT
OK   UME::SIMD::SIMD128_8u test Id: 28 - EXTRACT(operator[])
OK   UME::SIMD::SIMD128_8u test Id: 29 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD128_8u test Id: 30 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD128_8u test Id: 31 - ASSIGNV
OK   UME::SIMD::SIMD128_8u test Id: 32 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD128_8u test Id: 33 - MASSIGNV
OK   UME::SIMD::SIMD128_8u test Id: 34 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD128_8u test Id: 35 - ASSIGNS
OK   UME::SIMD::SIMD128_8u test Id: 36 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD128_8u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD128_8u test Id: 38 - MASSIGNS
OK   UME::SIMD::SIMD128_8u test Id: 39 - LOAD/STORE
OK   UME::SIMD::SIMD128_8u test Id: 40 - MLOAD
OK   UME::SIMD::SIMD128_8u test Id: 41 - MSTORE
OK   UME::SIMD::SIMD128_8u test Id: 42 - LOADA/STOREA
OK   UME::SIMD::SIMD128_8u test Id: 43 - MLOADA
OK   UME::SIMD::SIMD128_8u test Id: 44 - MSTOREA
OK   UME::SIMD::SIMD128_8u test Id: 45 - SWIZZLE
OK   UME::SIMD::SIMD128_8u test Id: 46 - SORTA
OK   UME::SIMD::SIMD128_8u test Id: 47 - SORTD
OK   UME::SIMD::SIMD128_8u test Id: 48 - BLENDV gen
OK   UME::SIMD::SIMD128_8u test Id: 49 - ADDV
OK   UME::SIMD::SIMD128_8u test Id: 50 - ADDV(operator+)
OK   UME::SIMD::SIMD128_8u test Id: 51 - ADDV(function)
OK   UME::SIMD::SIMD128_8u test Id: 52 - ADDV gen
OK   UME::SIMD::SIMD128_8u test Id: 53 - ADDV(operator+) gen
OK   UME::SIMD::SIMD128_8u test Id: 54 - ADDV(function) gen
OK   UME::SIMD::SIMD128_8u test Id: 55 - MADDV
OK   UME::SIMD::SIMD128_8u test Id: 56 - MADDV(function)
OK   UME::SIMD::SIMD128_8u test Id: 57 - MADDV gen
OK   UME::SIMD::SIMD128_8u test Id: 58 - MADDV(function) gen
OK   UME::SIMD::SIMD128_8u test Id: 59 - ADDS
OK   UME::SIMD::SIMD128_8u test Id: 60 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 61 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 62 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD128_8u test Id: 63 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD128_8u test Id: 64 - ADDS gen
OK   UME::SIMD::SIMD128_8u test Id: 65 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD128_8u test Id: 66 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD128_8u test Id: 67 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD128_8u test Id: 68 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD128_8u test Id: 69 - MADDS
OK   UME::SIMD::SIMD128_8u test Id: 70 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 71 - MADDS gen
OK   UME::SIMD::SIMD128_8u test Id: 72 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD128_8u test Id: 73 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD128_8u test Id: 74 - ADDVA
OK   UME::SIMD::SIMD128_8u test Id: 75 - ADDVA(operator+=)
OK   UME::SIMD::SIMD128_8u test Id: 76 - ADDVA gen
OK   UME::SIMD::SIMD128_8u test Id: 77 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD128_8u test Id: 78 - MADDVA
OK   UME::SIMD::SIMD128_8u test Id: 79 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD128_8u test Id: 80 - ADDSA
OK   UME::SIMD::SIMD128_8u test Id: 81 - ADDSA(operator+=)
OK   UME::SIMD::SIMD128_8u test Id: 82 - MADDSA
OK   UME::SIMD::SIMD128_8u test Id: 83 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD128_8u test Id: 84 - SADDV gen
OK   UME::SIMD::SIMD128_8u test Id: 85 - SADDV(function) gen
OK   UME::SIMD::SIMD128_8u test Id: 86 - POSTINC
OK   UME::SIMD::SIMD128_8u test Id: 87 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD128_8u test Id: 88 - POSTINC(function)
OK   UME::SIMD::SIMD128_8u test Id: 89 - MPOSTINC
OK   UME::SIMD::SIMD128_8u test Id: 90 - MPOSTINC(function)
OK   UME::SIMD::SIMD128_8u test Id: 91 - PREFINC
OK   UME::SIMD::SIMD128_8u test Id: 92 - PREFINC(operator++())
OK   UME::SIMD::SIMD128_8u test Id: 93 - PREFINC(function)
OK   UME::SIMD::SIMD128_8u test Id: 94 - MPREFINC
OK   UME::SIMD::SIMD128_8u test Id: 95 - MPREFINC(function)
OK   UME::SIMD::SIMD128_8u test Id: 96 - SUBV
OK   UME::SIMD::SIMD128_8u test Id: 97 - SUBV(operator-)
OK   UME::SIMD::SIMD128_8u test Id: 98 - SUBV(function)
OK   UME::SIMD::SIMD128_8u test Id: 99 - SUBV gen
OK   UME::SIMD::SIMD128_8u test Id: 100 - SUBV(operator-) gen
OK   UME::SIMD::SIMD128_8u test Id: 101 - SUBV(function) gen
OK   UME::SIMD::SIMD128_8u test Id: 102 - MSUBV
OK   UME::SIMD::SIMD128_8u test Id: 103 - MSUBV(function)
OK   UME::SIMD::SIMD128_8u test Id: 104 - MSUBV gen
OK   UME::SIMD::SIMD128_8u test Id: 105 - MSUBV(function) gen
OK   UME::SIMD::SIMD128_8u test Id: 106 - SUBS gen
OK   UME::SIMD::SIMD128_8u test Id: 107 - SUBS(operator-) gen
OK   UME::SIMD::SIMD128_8u test Id: 108 - SUBS(function) gen
OK   UME::SIMD::SIMD128_8u test Id: 109 - MSUBS
OK   UME::SIMD::SIMD128_8u test Id: 110 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 111 - SUBVA
OK   UME::SIMD::SIMD128_8u test Id: 112 - SUBVA(operator-=)
OK   UME::SIMD::SIMD128_8u test Id: 113 - MSUBVA
OK   UME::SIMD::SIMD128_8u test Id: 114 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD128_8u test Id: 115 - SUBSA
OK   UME::SIMD::SIMD128_8u test Id: 116 - MSUBSA
OK   UME::SIMD::SIMD128_8u test Id: 117 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD128_8u test Id: 118 - SUBFROMV
OK   UME::SIMD::SIMD128_8u test Id: 119 - MSUBFROMV
OK   UME::SIMD::SIMD128_8u test Id: 120 - SUBFROMS
OK   UME::SIMD::SIMD128_8u test Id: 121 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 122 - MSUBFROMS
OK   UME::SIMD::SIMD128_8u test Id: 123 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 124 - SUBFROMVA
OK   UME::SIMD::SIMD128_8u test Id: 125 - MSUBFROMVA
OK   UME::SIMD::SIMD128_8u test Id: 126 - SUBFROMSA
OK   UME::SIMD::SIMD128_8u test Id: 127 - MSUBFROMSA
OK   UME::SIMD::SIMD128_8u test Id: 128 - POSTDEC
OK   UME::SIMD::SIMD128_8u test Id: 129 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD128_8u test Id: 130 - POSTDEC(function)
OK   UME::SIMD::SIMD128_8u test Id: 131 - MPOSTDEC
OK   UME::SIMD::SIMD128_8u test Id: 132 - MPOSTDEC(function)
OK   UME::SIMD::SIMD128_8u test Id: 133 - PREFDEC
OK   UME::SIMD::SIMD128_8u test Id: 134 - PREFDEC(operator--())
OK   UME::SIMD::SIMD128_8u test Id: 135 - PREFDEC(function)
OK   UME::SIMD::SIMD128_8u test Id: 136 - MPREFDEC
OK   UME::SIMD::SIMD128_8u test Id: 137 - MPREFDEC(function)
OK   UME::SIMD::SIMD128_8u test Id: 138 - MULV
OK   UME::SIMD::SIMD128_8u test Id: 139 - MULV(operator*)
OK   UME::SIMD::SIMD128_8u test Id: 140 - MULV(function)
OK   UME::SIMD::SIMD128_8u test Id: 141 - MMULV
OK   UME::SIMD::SIMD128_8u test Id: 142 - MMULV(function)
OK   UME::SIMD::SIMD128_8u test Id: 143 - MULS
OK   UME::SIMD::SIMD128_8u test Id: 144 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 145 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 146 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 147 - MMULS
OK   UME::SIMD::SIMD128_8u test Id: 148 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 149 - MULVA
OK   UME::SIMD::SIMD128_8u test Id: 150 - MULVA(operator*)
OK   UME::SIMD::SIMD128_8u test Id: 151 - MULVA gen
OK   UME::SIMD::SIMD128_8u test Id: 152 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD128_8u test Id: 153 - MMULVA
OK   UME::SIMD::SIMD128_8u test Id: 154 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD128_8u test Id: 155 - MULSA
OK   UME::SIMD::SIMD128_8u test Id: 156 - MULSA(operator*=)
OK   UME::SIMD::SIMD128_8u test Id: 157 - MMULSA
OK   UME::SIMD::SIMD128_8u test Id: 158 - DIVV
OK   UME::SIMD::SIMD128_8u test Id: 159 - DIVV(operator/)
OK   UME::SIMD::SIMD128_8u test Id: 160 - DIVV(function)
OK   UME::SIMD::SIMD128_8u test Id: 161 - MDIVV
OK   UME::SIMD::SIMD128_8u test Id: 162 - MDIVV(function)
OK   UME::SIMD::SIMD128_8u test Id: 163 - DIVS
OK   UME::SIMD::SIMD128_8u test Id: 164 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 165 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 166 - MDIVS
OK   UME::SIMD::SIMD128_8u test Id: 167 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 168 - DIVVA
OK   UME::SIMD::SIMD128_8u test Id: 169 - DIVVA(operator/=)
OK   UME::SIMD::SIMD128_8u test Id: 170 - DIVVA gen
OK   UME::SIMD::SIMD128_8u test Id: 171 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD128_8u test Id: 172 - MDIVVA
OK   UME::SIMD::SIMD128_8u test Id: 173 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD128_8u test Id: 174 - DIVSA
OK   UME::SIMD::SIMD128_8u test Id: 175 - DIVSA(operator/=)
OK   UME::SIMD::SIMD128_8u test Id: 176 - MDIVSA
OK   UME::SIMD::SIMD128_8u test Id: 177 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD128_8u test Id: 178 - RCP
OK   UME::SIMD::SIMD128_8u test Id: 179 - RCP(function)
OK   UME::SIMD::SIMD128_8u test Id: 180 - MRCP
OK   UME::SIMD::SIMD128_8u test Id: 181 - MRCP(function)
OK   UME::SIMD::SIMD128_8u test Id: 182 - RCPS
OK   UME::SIMD::SIMD128_8u test Id: 183 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 184 - RCPS(function)
OK   UME::SIMD::SIMD128_8u test Id: 185 - MRCPS
OK   UME::SIMD::SIMD128_8u test Id: 186 - MRCPS (function)
OK   UME::SIMD::SIMD128_8u test Id: 187 - RCPA
OK   UME::SIMD::SIMD128_8u test Id: 188 - MRCPA
OK   UME::SIMD::SIMD128_8u test Id: 189 - RCPSA
OK   UME::SIMD::SIMD128_8u test Id: 190 - MRCPSA
OK   UME::SIMD::SIMD128_8u test Id: 191 - CMPEQV
OK   UME::SIMD::SIMD128_8u test Id: 192 - CMPEQV(operator==)
OK   UME::SIMD::SIMD128_8u test Id: 193 - CMPEQV(function)
OK   UME::SIMD::SIMD128_8u test Id: 194 - CMPEQS
OK   UME::SIMD::SIMD128_8u test Id: 195 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 196 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 197 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 198 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 199 - CMPNEV
OK   UME::SIMD::SIMD128_8u test Id: 200 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD128_8u test Id: 201 - CMPNEV(function)
OK   UME::SIMD::SIMD128_8u test Id: 202 - CMPNES
OK   UME::SIMD::SIMD128_8u test Id: 203 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 204 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 205 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 206 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 207 - CMPGTV
OK   UME::SIMD::SIMD128_8u test Id: 208 - CMPGTV(operator>)
OK   UME::SIMD::SIMD128_8u test Id: 209 - CMPGTV(function)
OK   UME::SIMD::SIMD128_8u test Id: 210 - CMPGTS
OK   UME::SIMD::SIMD128_8u test Id: 211 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 212 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 213 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 214 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 215 - CMPLTV
OK   UME::SIMD::SIMD128_8u test Id: 216 - CMPLTV(operator<)
OK   UME::SIMD::SIMD128_8u test Id: 217 - CMPLTV(function)
OK   UME::SIMD::SIMD128_8u test Id: 218 - CMPLTS
OK   UME::SIMD::SIMD128_8u test Id: 219 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 220 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 221 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 222 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 223 - CMPGEV
OK   UME::SIMD::SIMD128_8u test Id: 224 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD128_8u test Id: 225 - CMPGEV(function)
OK   UME::SIMD::SIMD128_8u test Id: 226 - CMPGES
OK   UME::SIMD::SIMD128_8u test Id: 227 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 228 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 229 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 230 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 231 - CMPLEV
OK   UME::SIMD::SIMD128_8u test Id: 232 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD128_8u test Id: 233 - CMPLEV(function)
OK   UME::SIMD::SIMD128_8u test Id: 234 - CMPLES
OK   UME::SIMD::SIMD128_8u test Id: 235 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 236 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 237 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 238 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 239 - CMPEV
OK   UME::SIMD::SIMD128_8u test Id: 240 - CMPEV(function)
OK   UME::SIMD::SIMD128_8u test Id: 241 - CMPES
OK   UME::SIMD::SIMD128_8u test Id: 242 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 243 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 244 - HADD
OK   UME::SIMD::SIMD128_8u test Id: 245 - HADD(function)
OK   UME::SIMD::SIMD128_8u test Id: 246 - HADD gen
OK   UME::SIMD::SIMD128_8u test Id: 247 - HADD(function) gen
OK   UME::SIMD::SIMD128_8u test Id: 248 - MHADD gen
OK   UME::SIMD::SIMD128_8u test Id: 249 - MHADD(function) gen
OK   UME::SIMD::SIMD128_8u test Id: 250 - HADDS gen
OK   UME::SIMD::SIMD128_8u test Id: 251 - HADDS(function) gen
OK   UME::SIMD::SIMD128_8u test Id: 252 - MHADD gen
OK   UME::SIMD::SIMD128_8u test Id: 253 - MHADDS(function) gen
OK   UME::SIMD::SIMD128_8u test Id: 254 - HMUL gen
OK   UME::SIMD::SIMD128_8u test Id: 255 - HMUL(function) gen
OK   UME::SIMD::SIMD128_8u test Id: 256 - MHMUL gen
OK   UME::SIMD::SIMD128_8u test Id: 257 - MHMUL(function) gen
OK   UME::SIMD::SIMD128_8u test Id: 258 - HMULS gen
OK   UME::SIMD::SIMD128_8u test Id: 259 - HMULS(function) gen
OK   UME::SIMD::SIMD128_8u test Id: 260 - MHMUL gen
OK   UME::SIMD::SIMD128_8u test Id: 261 - MHMULS(function) gen
OK   UME::SIMD::SIMD128_8u test Id: 262 - FMULADDV
OK   UME::SIMD::SIMD128_8u test Id: 263 - FMULADDV(function)
OK   UME::SIMD::SIMD128_8u test Id: 264 - MFMULADDV
OK   UME::SIMD::SIMD128_8u test Id: 265 - MFMULADDV(function)
OK   UME::SIMD::SIMD128_8u test Id: 266 - FMULSUBV
OK   UME::SIMD::SIMD128_8u test Id: 267 - FMULSUBV(function)
OK   UME::SIMD::SIMD128_8u test Id: 268 - MFMULSUBV
OK   UME::SIMD::SIMD128_8u test Id: 269 - MFMULSUBV(function)
OK   UME::SIMD::SIMD128_8u test Id: 270 - FADDMULV
OK   UME::SIMD::SIMD128_8u test Id: 271 - FADDMULV(function)
OK   UME::SIMD::SIMD128_8u test Id: 272 - MFADDMULV
OK   UME::SIMD::SIMD128_8u test Id: 273 - MFADDMULV(function)
OK   UME::SIMD::SIMD128_8u test Id: 274 - FSUBMULV
OK   UME::SIMD::SIMD128_8u test Id: 275 - FSUBMULV(function)
OK   UME::SIMD::SIMD128_8u test Id: 276 - MFSUBMULV
OK   UME::SIMD::SIMD128_8u test Id: 277 - MFSUBMULV(function)
OK   UME::SIMD::SIMD128_8u test Id: 278 - MAXV
OK   UME::SIMD::SIMD128_8u test Id: 279 - MAXV(function)
OK   UME::SIMD::SIMD128_8u test Id: 280 - MMAXV
OK   UME::SIMD::SIMD128_8u test Id: 281 - MMAXV(function)
OK   UME::SIMD::SIMD128_8u test Id: 282 - MAXS
OK   UME::SIMD::SIMD128_8u test Id: 283 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 284 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 285 - MMAXS
OK   UME::SIMD::SIMD128_8u test Id: 286 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 287 - MAXVA
OK   UME::SIMD::SIMD128_8u test Id: 288 - MMAXVA
OK   UME::SIMD::SIMD128_8u test Id: 289 - MAXSA
OK   UME::SIMD::SIMD128_8u test Id: 290 - MMAXSA
OK   UME::SIMD::SIMD128_8u test Id: 291 - MINV
OK   UME::SIMD::SIMD128_8u test Id: 292 - MINV(function)
OK   UME::SIMD::SIMD128_8u test Id: 293 - MMINV
OK   UME::SIMD::SIMD128_8u test Id: 294 - MMINV(function)
OK   UME::SIMD::SIMD128_8u test Id: 295 - MINS
OK   UME::SIMD::SIMD128_8u test Id: 296 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD128_8u test Id: 297 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD128_8u test Id: 298 - MMINS
OK   UME::SIMD::SIMD128_8u test Id: 299 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 300 - MINVA
OK   UME::SIMD::SIMD128_8u test Id: 301 - MMINVA
OK   UME::SIMD::SIMD128_8u test Id: 302 - MINSA
OK   UME::SIMD::SIMD128_8u test Id: 303 - MMINSA
OK   UME::SIMD::SIMD128_8u test Id: 304 - HMAX
OK   UME::SIMD::SIMD128_8u test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD128_8u test Id: 306 - HMAX
OK   UME::SIMD::SIMD128_8u test Id: 307 - HMAX(function)
OK   UME::SIMD::SIMD128_8u test Id: 308 - MHMAX
OK   UME::SIMD::SIMD128_8u test Id: 309 - MHMAX(function)
OK   UME::SIMD::SIMD128_8u test Id: 310 - IMAX
OK   UME::SIMD::SIMD128_8u test Id: 311 - IMAX(function)
OK   UME::SIMD::SIMD128_8u test Id: 312 - MIMAX
OK   UME::SIMD::SIMD128_8u test Id: 313 - MIMAX(function)
OK   UME::SIMD::SIMD128_8u test Id: 314 - HMIN
OK   UME::SIMD::SIMD128_8u test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD128_8u test Id: 316 - HMIN
OK   UME::SIMD::SIMD128_8u test Id: 317 - HMIN(function)
OK   UME::SIMD::SIMD128_8u test Id: 318 - MHMIN gen
OK   UME::SIMD::SIMD128_8u test Id: 319 - MHMIN(function) gen
OK   UME::SIMD::SIMD128_8u test Id: 320 - IMIN
OK   UME::SIMD::SIMD128_8u test Id: 321 - IMIN(function)
OK   UME::SIMD::SIMD128_8u test Id: 322 - MIMIN
OK   UME::SIMD::SIMD128_8u test Id: 323 - MIMIN(function)
OK   UME::SIMD::SIMD128_8u test Id: 324 - REMV gen
OK   UME::SIMD::SIMD128_8u test Id: 325 - REMV(operator%) gen
OK   UME::SIMD::SIMD128_8u test Id: 326 - REMV(function) gen
OK   UME::SIMD::SIMD128_8u test Id: 327 - MREMV gen
OK   UME::SIMD::SIMD128_8u test Id: 328 - MREMV(function) gen
OK   UME::SIMD::SIMD128_8u test Id: 329 - REMS gen
OK   UME::SIMD::SIMD128_8u test Id: 330 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD128_8u test Id: 331 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD128_8u test Id: 332 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD128_8u test Id: 333 - LANDV gen
OK   UME::SIMD::SIMD128_8u test Id: 334 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD128_8u test Id: 335 - LORV gen
OK   UME::SIMD::SIMD128_8u test Id: 336 - LORV gen (operator ||)
OK   UME::SIMD::SIMD128_8u test Id: 337 - BANDV
OK   UME::SIMD::SIMD128_8u test Id: 338 - BANDV(operator&)
OK   UME::SIMD::SIMD128_8u test Id: 339 - BANDV(function)
OK   UME::SIMD::SIMD128_8u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD128_8u test Id: 341 - MBANDV
OK   UME::SIMD::SIMD128_8u test Id: 342 - BANDS
OK   UME::SIMD::SIMD128_8u test Id: 343 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 344 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 345 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 346 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 347 - MBANDS
OK   UME::SIMD::SIMD128_8u test Id: 348 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 349 - BANDVA
OK   UME::SIMD::SIMD128_8u test Id: 350 - MBANDVA
OK   UME::SIMD::SIMD128_8u test Id: 351 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD128_8u test Id: 352 - BANDSA
OK   UME::SIMD::SIMD128_8u test Id: 353 - MBANDSA
OK   UME::SIMD::SIMD128_8u test Id: 354 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD128_8u test Id: 355 - BORV
OK   UME::SIMD::SIMD128_8u test Id: 356 - BORV(operator |)
OK   UME::SIMD::SIMD128_8u test Id: 357 - BORV(function)
OK   UME::SIMD::SIMD128_8u test Id: 358 - MBORV
OK   UME::SIMD::SIMD128_8u test Id: 359 - MBORV(function)
OK   UME::SIMD::SIMD128_8u test Id: 360 - BORS
OK   UME::SIMD::SIMD128_8u test Id: 361 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 362 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 363 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 364 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 365 - MBORS
OK   UME::SIMD::SIMD128_8u test Id: 366 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 367 - BORVA
OK   UME::SIMD::SIMD128_8u test Id: 368 - BORVA(operator|=)
OK   UME::SIMD::SIMD128_8u test Id: 369 - MBORVA
OK   UME::SIMD::SIMD128_8u test Id: 370 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD128_8u test Id: 371 - BORSA
OK   UME::SIMD::SIMD128_8u test Id: 372 - BORSA(operator|=)
OK   UME::SIMD::SIMD128_8u test Id: 373 - MBORSA
OK   UME::SIMD::SIMD128_8u test Id: 374 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD128_8u test Id: 375 - BXORV
OK   UME::SIMD::SIMD128_8u test Id: 376 - BXORV(operator^
OK   UME::SIMD::SIMD128_8u test Id: 377 - BXORV(function
OK   UME::SIMD::SIMD128_8u test Id: 378 - MBXORV
OK   UME::SIMD::SIMD128_8u test Id: 379 - MBXORV(function)
OK   UME::SIMD::SIMD128_8u test Id: 380 - BXORS
OK   UME::SIMD::SIMD128_8u test Id: 381 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 382 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 383 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 384 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 385 - MBXORS
OK   UME::SIMD::SIMD128_8u test Id: 386 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 387 - BXORVA
OK   UME::SIMD::SIMD128_8u test Id: 388 - BXORVA(operator^=)
OK   UME::SIMD::SIMD128_8u test Id: 389 - MBXORVA
OK   UME::SIMD::SIMD128_8u test Id: 390 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD128_8u test Id: 391 - BXORSA
OK   UME::SIMD::SIMD128_8u test Id: 392 - BXORSA(operator^=)
OK   UME::SIMD::SIMD128_8u test Id: 393 - MBXORSA
OK   UME::SIMD::SIMD128_8u test Id: 394 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD128_8u test Id: 395 - BNOT
OK   UME::SIMD::SIMD128_8u test Id: 396 - BNOT(operator!)
OK   UME::SIMD::SIMD128_8u test Id: 397 - BNOT(function)
OK   UME::SIMD::SIMD128_8u test Id: 398 - MBNOT
OK   UME::SIMD::SIMD128_8u test Id: 399 - MBNOT(function)
OK   UME::SIMD::SIMD128_8u test Id: 400 - BNOTA
OK   UME::SIMD::SIMD128_8u test Id: 401 - MBNOTA
OK   UME::SIMD::SIMD128_8u test Id: 402 - BANDNOTV
OK   UME::SIMD::SIMD128_8u test Id: 403 - BANDNOTV (function)
OK   UME::SIMD::SIMD128_8u test Id: 404 - MBANDNOTV
OK   UME::SIMD::SIMD128_8u test Id: 405 - MBANDNOTV (function)
OK   UME::SIMD::SIMD128_8u test Id: 406 - BANDNOTS
OK   UME::SIMD::SIMD128_8u test Id: 407 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD128_8u test Id: 408 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD128_8u test Id: 409 - MBANDNOTS
OK   UME::SIMD::SIMD128_8u test Id: 410 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD128_8u test Id: 411 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD128_8u test Id: 412 - BANDNOTVA
OK   UME::SIMD::SIMD128_8u test Id: 413 - MBANDNOTVA
OK   UME::SIMD::SIMD128_8u test Id: 414 - BANDNOTSA
OK   UME::SIMD::SIMD128_8u test Id: 415 - MBANDNOTSA
OK   UME::SIMD::SIMD128_8u test Id: 416 - HBAND
OK   UME::SIMD::SIMD128_8u test Id: 417 - HBAND
OK   UME::SIMD::SIMD128_8u test Id: 418 - MHBAND
OK   UME::SIMD::SIMD128_8u test Id: 419 - MHBAND(function)
OK   UME::SIMD::SIMD128_8u test Id: 420 - HBANDS
OK   UME::SIMD::SIMD128_8u test Id: 421 - MHBANDS
OK   UME::SIMD::SIMD128_8u test Id: 422 - HBOR
OK   UME::SIMD::SIMD128_8u test Id: 423 - HBOR(function)
OK   UME::SIMD::SIMD128_8u test Id: 424 - MHBOR
OK   UME::SIMD::SIMD128_8u test Id: 425 - MHBOR(function)
OK   UME::SIMD::SIMD128_8u test Id: 426 - HBORS
OK   UME::SIMD::SIMD128_8u test Id: 427 - MHBORS
OK   UME::SIMD::SIMD128_8u test Id: 428 - HBXOR
OK   UME::SIMD::SIMD128_8u test Id: 429 - HBXOR(function)
OK   UME::SIMD::SIMD128_8u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD128_8u test Id: 431 - MHBXOR
OK   UME::SIMD::SIMD128_8u test Id: 432 - HBXORS
OK   UME::SIMD::SIMD128_8u test Id: 433 - MHBXORS
OK   UME::SIMD::SIMD128_8u test Id: 434 - GATHERU
OK   UME::SIMD::SIMD128_8u test Id: 435 - MGATHERU
OK   UME::SIMD::SIMD128_8u test Id: 436 - GATHERS
OK   UME::SIMD::SIMD128_8u test Id: 437 - MGATHERS
OK   UME::SIMD::SIMD128_8u test Id: 438 - GATHERV
OK   UME::SIMD::SIMD128_8u test Id: 439 - MGATHERV
OK   UME::SIMD::SIMD128_8u test Id: 440 - SCATTERU
OK   UME::SIMD::SIMD128_8u test Id: 441 - MSCATTERU
OK   UME::SIMD::SIMD128_8u test Id: 442 - SCATTERS
OK   UME::SIMD::SIMD128_8u test Id: 443 - MSCATTERS
OK   UME::SIMD::SIMD128_8u test Id: 444 - SCATTERV
OK   UME::SIMD::SIMD128_8u test Id: 445 - MSCATTERV
OK   UME::SIMD::SIMD128_8u test Id: 446 - LSHV gen
OK   UME::SIMD::SIMD128_8u test Id: 447 - LSHV (function) gen
OK   UME::SIMD::SIMD128_8u test Id: 448 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD128_8u test Id: 449 - MLSHV gen
OK   UME::SIMD::SIMD128_8u test Id: 450 - MLSHV (function) gen
OK   UME::SIMD::SIMD128_8u test Id: 451 - LSHS gen
OK   UME::SIMD::SIMD128_8u test Id: 452 - LSHS (function) gen
OK   UME::SIMD::SIMD128_8u test Id: 453 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD128_8u test Id: 454 - MLSHS gen
OK   UME::SIMD::SIMD128_8u test Id: 455 - MLSHS (function) gen
OK   UME::SIMD::SIMD128_8u test Id: 456 - LSHVA gen
OK   UME::SIMD::SIMD128_8u test Id: 457 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD128_8u test Id: 458 - MLSHVA gen
OK   UME::SIMD::SIMD128_8u test Id: 459 - LSHSA gen
OK   UME::SIMD::SIMD128_8u test Id: 460 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD128_8u test Id: 461 - MLSHSA gen
OK   UME::SIMD::SIMD128_8u test Id: 462 - RSHV gen
OK   UME::SIMD::SIMD128_8u test Id: 463 - RSHV (function) gen
OK   UME::SIMD::SIMD128_8u test Id: 464 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD128_8u test Id: 465 - MRSHV gen
OK   UME::SIMD::SIMD128_8u test Id: 466 - MRSHV (function) gen
OK   UME::SIMD::SIMD128_8u test Id: 467 - RSHS gen
OK   UME::SIMD::SIMD128_8u test Id: 468 - RSHS (function) gen
OK   UME::SIMD::SIMD128_8u test Id: 469 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD128_8u test Id: 470 - MRSHS gen
OK   UME::SIMD::SIMD128_8u test Id: 471 - MRSHS (function) gen
OK   UME::SIMD::SIMD128_8u test Id: 472 - RSHVA gen
OK   UME::SIMD::SIMD128_8u test Id: 473 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD128_8u test Id: 474 - MRSHVA gen
OK   UME::SIMD::SIMD128_8u test Id: 475 - RSHSA gen
OK   UME::SIMD::SIMD128_8u test Id: 476 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD128_8u test Id: 477 - MRSHSA gen
OK   UME::SIMD::SIMD128_8u test Id: 478 - ROLV
OK   UME::SIMD::SIMD128_8u test Id: 479 - ROLV(function)
OK   UME::SIMD::SIMD128_8u test Id: 480 - MROLV
OK   UME::SIMD::SIMD128_8u test Id: 481 - MROLV(function)
OK   UME::SIMD::SIMD128_8u test Id: 482 - ROLS
OK   UME::SIMD::SIMD128_8u test Id: 483 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 484 - MROLS
OK   UME::SIMD::SIMD128_8u test Id: 485 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 486 - ROLVA
OK   UME::SIMD::SIMD128_8u test Id: 487 - MROLVA
OK   UME::SIMD::SIMD128_8u test Id: 488 - ROLSA
OK   UME::SIMD::SIMD128_8u test Id: 489 - MROLSA
OK   UME::SIMD::SIMD128_8u test Id: 490 - RORV
OK   UME::SIMD::SIMD128_8u test Id: 491 - RORV(function)
OK   UME::SIMD::SIMD128_8u test Id: 492 - MRORV
OK   UME::SIMD::SIMD128_8u test Id: 493 - MRORV(function)
OK   UME::SIMD::SIMD128_8u test Id: 494 - RORS
OK   UME::SIMD::SIMD128_8u test Id: 495 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 496 - MRORS
OK   UME::SIMD::SIMD128_8u test Id: 497 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8u test Id: 498 - RORVA
OK   UME::SIMD::SIMD128_8u test Id: 499 - MRORVA
OK   UME::SIMD::SIMD128_8u test Id: 500 - RORSA
OK   UME::SIMD::SIMD128_8u test Id: 501 - MRORSA
OK   UME::SIMD::SIMD128_8u test Id: 502 - UTOI
OK   UME::SIMD::SIMD128_8u test Id: 503 - PACK
OK   UME::SIMD::SIMD128_8u test Id: 504 - PACKLO
OK   UME::SIMD::SIMD128_8u test Id: 505 - PACKHI
OK   UME::SIMD::SIMD128_8u test Id: 506 - UNPACK
OK   UME::SIMD::SIMD128_8u test Id: 507 - UNPACKLO
OK   UME::SIMD::SIMD128_8u test Id: 508 - UNPACKHi
OK   UME::SIMD::SIMD128_8i test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD128_8i test Id: 2 - FULL-CONSTR
OK   UME::SIMD::SIMD128_8i test Id: 3 - SET-CONSTR gen
OK   UME::SIMD::SIMD128_8i test Id: 4 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD128_8i test Id: 5 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD128_8i test Id: 6 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD128_8i test Id: 7 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD128_8i test Id: 8 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD128_8i test Id: 9 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD128_8i test Id: 10 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD128_8i test Id: 11 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD128_8i test Id: 12 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD128_8i test Id: 13 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD128_8i test Id: 14 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD128_8i test Id: 15 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD128_8i test Id: 16 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD128_8i test Id: 17 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD128_8i test Id: 18 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD128_8i test Id: 19 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD128_8i test Id: 20 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD128_8i test Id: 21 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD128_8i test Id: 22 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD128_8i test Id: 23 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD128_8i test Id: 24 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD128_8i test Id: 25 - INSERT
OK   UME::SIMD::SIMD128_8i test Id: 26 - INSERT(operator[] =)
OK   UME::SIMD::SIMD128_8i test Id: 27 - EXTRACT
OK   UME::SIMD::SIMD128_8i test Id: 28 - EXTRACT(operator[])
OK   UME::SIMD::SIMD128_8i test Id: 29 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD128_8i test Id: 30 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD128_8i test Id: 31 - ASSIGNV
OK   UME::SIMD::SIMD128_8i test Id: 32 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD128_8i test Id: 33 - MASSIGNV
OK   UME::SIMD::SIMD128_8i test Id: 34 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD128_8i test Id: 35 - ASSIGNS
OK   UME::SIMD::SIMD128_8i test Id: 36 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD128_8i test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD128_8i test Id: 38 - MASSIGNS
OK   UME::SIMD::SIMD128_8i test Id: 39 - LOAD/STORE
OK   UME::SIMD::SIMD128_8i test Id: 40 - MLOAD
OK   UME::SIMD::SIMD128_8i test Id: 41 - MSTORE
OK   UME::SIMD::SIMD128_8i test Id: 42 - LOADA/STOREA
OK   UME::SIMD::SIMD128_8i test Id: 43 - MLOADA
OK   UME::SIMD::SIMD128_8i test Id: 44 - MSTOREA
OK   UME::SIMD::SIMD128_8i test Id: 45 - SWIZZLE
OK   UME::SIMD::SIMD128_8i test Id: 46 - SORTA
OK   UME::SIMD::SIMD128_8i test Id: 47 - SORTD
OK   UME::SIMD::SIMD128_8i test Id: 48 - BLENDV gen
OK   UME::SIMD::SIMD128_8i test Id: 49 - ADDV
OK   UME::SIMD::SIMD128_8i test Id: 50 - ADDV(operator+)
OK   UME::SIMD::SIMD128_8i test Id: 51 - ADDV(function)
OK   UME::SIMD::SIMD128_8i test Id: 52 - ADDV gen
OK   UME::SIMD::SIMD128_8i test Id: 53 - ADDV(operator+) gen
OK   UME::SIMD::SIMD128_8i test Id: 54 - ADDV(function) gen
OK   UME::SIMD::SIMD128_8i test Id: 55 - MADDV
OK   UME::SIMD::SIMD128_8i test Id: 56 - MADDV(function)
OK   UME::SIMD::SIMD128_8i test Id: 57 - MADDV gen
OK   UME::SIMD::SIMD128_8i test Id: 58 - MADDV(function) gen
OK   UME::SIMD::SIMD128_8i test Id: 59 - ADDS
OK   UME::SIMD::SIMD128_8i test Id: 60 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 61 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 62 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD128_8i test Id: 63 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD128_8i test Id: 64 - ADDS gen
OK   UME::SIMD::SIMD128_8i test Id: 65 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD128_8i test Id: 66 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD128_8i test Id: 67 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD128_8i test Id: 68 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD128_8i test Id: 69 - MADDS
OK   UME::SIMD::SIMD128_8i test Id: 70 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 71 - MADDS gen
OK   UME::SIMD::SIMD128_8i test Id: 72 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD128_8i test Id: 73 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD128_8i test Id: 74 - ADDVA
OK   UME::SIMD::SIMD128_8i test Id: 75 - ADDVA(operator+=)
OK   UME::SIMD::SIMD128_8i test Id: 76 - ADDVA gen
OK   UME::SIMD::SIMD128_8i test Id: 77 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD128_8i test Id: 78 - MADDVA
OK   UME::SIMD::SIMD128_8i test Id: 79 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD128_8i test Id: 80 - ADDSA
OK   UME::SIMD::SIMD128_8i test Id: 81 - ADDSA(operator+=)
OK   UME::SIMD::SIMD128_8i test Id: 82 - MADDSA
OK   UME::SIMD::SIMD128_8i test Id: 83 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD128_8i test Id: 84 - SADDV gen
OK   UME::SIMD::SIMD128_8i test Id: 85 - SADDV(function) gen
OK   UME::SIMD::SIMD128_8i test Id: 86 - POSTINC
OK   UME::SIMD::SIMD128_8i test Id: 87 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD128_8i test Id: 88 - POSTINC(function)
OK   UME::SIMD::SIMD128_8i test Id: 89 - MPOSTINC
OK   UME::SIMD::SIMD128_8i test Id: 90 - MPOSTINC(function)
OK   UME::SIMD::SIMD128_8i test Id: 91 - PREFINC
OK   UME::SIMD::SIMD128_8i test Id: 92 - PREFINC(operator++())
OK   UME::SIMD::SIMD128_8i test Id: 93 - PREFINC(function)
OK   UME::SIMD::SIMD128_8i test Id: 94 - MPREFINC
OK   UME::SIMD::SIMD128_8i test Id: 95 - MPREFINC(function)
OK   UME::SIMD::SIMD128_8i test Id: 96 - SUBV
OK   UME::SIMD::SIMD128_8i test Id: 97 - SUBV(operator-)
OK   UME::SIMD::SIMD128_8i test Id: 98 - SUBV(function)
OK   UME::SIMD::SIMD128_8i test Id: 99 - SUBV gen
OK   UME::SIMD::SIMD128_8i test Id: 100 - SUBV(operator-) gen
OK   UME::SIMD::SIMD128_8i test Id: 101 - SUBV(function) gen
OK   UME::SIMD::SIMD128_8i test Id: 102 - MSUBV
OK   UME::SIMD::SIMD128_8i test Id: 103 - MSUBV(function)
OK   UME::SIMD::SIMD128_8i test Id: 104 - MSUBV gen
OK   UME::SIMD::SIMD128_8i test Id: 105 - MSUBV(function) gen
OK   UME::SIMD::SIMD128_8i test Id: 106 - SUBS gen
OK   UME::SIMD::SIMD128_8i test Id: 107 - SUBS(operator-) gen
OK   UME::SIMD::SIMD128_8i test Id: 108 - SUBS(function) gen
OK   UME::SIMD::SIMD128_8i test Id: 109 - MSUBS
OK   UME::SIMD::SIMD128_8i test Id: 110 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 111 - SUBVA
OK   UME::SIMD::SIMD128_8i test Id: 112 - SUBVA(operator-=)
OK   UME::SIMD::SIMD128_8i test Id: 113 - MSUBVA
OK   UME::SIMD::SIMD128_8i test Id: 114 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD128_8i test Id: 115 - SUBSA
OK   UME::SIMD::SIMD128_8i test Id: 116 - MSUBSA
OK   UME::SIMD::SIMD128_8i test Id: 117 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD128_8i test Id: 118 - SUBFROMV
OK   UME::SIMD::SIMD128_8i test Id: 119 - MSUBFROMV
OK   UME::SIMD::SIMD128_8i test Id: 120 - SUBFROMS
OK   UME::SIMD::SIMD128_8i test Id: 121 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 122 - MSUBFROMS
OK   UME::SIMD::SIMD128_8i test Id: 123 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 124 - SUBFROMVA
OK   UME::SIMD::SIMD128_8i test Id: 125 - MSUBFROMVA
OK   UME::SIMD::SIMD128_8i test Id: 126 - SUBFROMSA
OK   UME::SIMD::SIMD128_8i test Id: 127 - MSUBFROMSA
OK   UME::SIMD::SIMD128_8i test Id: 128 - POSTDEC
OK   UME::SIMD::SIMD128_8i test Id: 129 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD128_8i test Id: 130 - POSTDEC(function)
OK   UME::SIMD::SIMD128_8i test Id: 131 - MPOSTDEC
OK   UME::SIMD::SIMD128_8i test Id: 132 - MPOSTDEC(function)
OK   UME::SIMD::SIMD128_8i test Id: 133 - PREFDEC
OK   UME::SIMD::SIMD128_8i test Id: 134 - PREFDEC(operator--())
OK   UME::SIMD::SIMD128_8i test Id: 135 - PREFDEC(function)
OK   UME::SIMD::SIMD128_8i test Id: 136 - MPREFDEC
OK   UME::SIMD::SIMD128_8i test Id: 137 - MPREFDEC(function)
OK   UME::SIMD::SIMD128_8i test Id: 138 - MULV
OK   UME::SIMD::SIMD128_8i test Id: 139 - MULV(operator*)
OK   UME::SIMD::SIMD128_8i test Id: 140 - MULV(function)
OK   UME::SIMD::SIMD128_8i test Id: 141 - MMULV
OK   UME::SIMD::SIMD128_8i test Id: 142 - MMULV(function)
OK   UME::SIMD::SIMD128_8i test Id: 143 - MULS
OK   UME::SIMD::SIMD128_8i test Id: 144 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 145 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 146 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 147 - MMULS
OK   UME::SIMD::SIMD128_8i test Id: 148 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 149 - MULVA
OK   UME::SIMD::SIMD128_8i test Id: 150 - MULVA(operator*)
OK   UME::SIMD::SIMD128_8i test Id: 151 - MULVA gen
OK   UME::SIMD::SIMD128_8i test Id: 152 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD128_8i test Id: 153 - MMULVA
OK   UME::SIMD::SIMD128_8i test Id: 154 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD128_8i test Id: 155 - MULSA
OK   UME::SIMD::SIMD128_8i test Id: 156 - MULSA(operator*=)
OK   UME::SIMD::SIMD128_8i test Id: 157 - MMULSA
OK   UME::SIMD::SIMD128_8i test Id: 158 - DIVV
OK   UME::SIMD::SIMD128_8i test Id: 159 - DIVV(operator/)
OK   UME::SIMD::SIMD128_8i test Id: 160 - DIVV(function)
OK   UME::SIMD::SIMD128_8i test Id: 161 - MDIVV
OK   UME::SIMD::SIMD128_8i test Id: 162 - MDIVV(function)
OK   UME::SIMD::SIMD128_8i test Id: 163 - DIVS
OK   UME::SIMD::SIMD128_8i test Id: 164 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 165 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 166 - MDIVS
OK   UME::SIMD::SIMD128_8i test Id: 167 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 168 - DIVVA
OK   UME::SIMD::SIMD128_8i test Id: 169 - DIVVA(operator/=)
OK   UME::SIMD::SIMD128_8i test Id: 170 - DIVVA gen
OK   UME::SIMD::SIMD128_8i test Id: 171 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD128_8i test Id: 172 - MDIVVA
OK   UME::SIMD::SIMD128_8i test Id: 173 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD128_8i test Id: 174 - DIVSA
OK   UME::SIMD::SIMD128_8i test Id: 175 - DIVSA(operator/=)
OK   UME::SIMD::SIMD128_8i test Id: 176 - MDIVSA
OK   UME::SIMD::SIMD128_8i test Id: 177 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD128_8i test Id: 178 - RCP
OK   UME::SIMD::SIMD128_8i test Id: 179 - RCP(function)
OK   UME::SIMD::SIMD128_8i test Id: 180 - MRCP
OK   UME::SIMD::SIMD128_8i test Id: 181 - MRCP(function)
OK   UME::SIMD::SIMD128_8i test Id: 182 - RCPS
OK   UME::SIMD::SIMD128_8i test Id: 183 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 184 - RCPS(function)
OK   UME::SIMD::SIMD128_8i test Id: 185 - MRCPS
OK   UME::SIMD::SIMD128_8i test Id: 186 - MRCPS (function)
OK   UME::SIMD::SIMD128_8i test Id: 187 - RCPA
OK   UME::SIMD::SIMD128_8i test Id: 188 - MRCPA
OK   UME::SIMD::SIMD128_8i test Id: 189 - RCPSA
OK   UME::SIMD::SIMD128_8i test Id: 190 - MRCPSA
OK   UME::SIMD::SIMD128_8i test Id: 191 - CMPEQV
OK   UME::SIMD::SIMD128_8i test Id: 192 - CMPEQV(operator==)
OK   UME::SIMD::SIMD128_8i test Id: 193 - CMPEQV(function)
OK   UME::SIMD::SIMD128_8i test Id: 194 - CMPEQS
OK   UME::SIMD::SIMD128_8i test Id: 195 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 196 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 197 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 198 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 199 - CMPNEV
OK   UME::SIMD::SIMD128_8i test Id: 200 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD128_8i test Id: 201 - CMPNEV(function)
OK   UME::SIMD::SIMD128_8i test Id: 202 - CMPNES
OK   UME::SIMD::SIMD128_8i test Id: 203 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 204 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 205 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 206 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 207 - CMPGTV
OK   UME::SIMD::SIMD128_8i test Id: 208 - CMPGTV(operator>)
OK   UME::SIMD::SIMD128_8i test Id: 209 - CMPGTV(function)
OK   UME::SIMD::SIMD128_8i test Id: 210 - CMPGTS
OK   UME::SIMD::SIMD128_8i test Id: 211 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 212 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 213 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 214 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 215 - CMPLTV
OK   UME::SIMD::SIMD128_8i test Id: 216 - CMPLTV(operator<)
OK   UME::SIMD::SIMD128_8i test Id: 217 - CMPLTV(function)
OK   UME::SIMD::SIMD128_8i test Id: 218 - CMPLTS
OK   UME::SIMD::SIMD128_8i test Id: 219 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 220 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 221 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 222 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 223 - CMPGEV
OK   UME::SIMD::SIMD128_8i test Id: 224 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD128_8i test Id: 225 - CMPGEV(function)
OK   UME::SIMD::SIMD128_8i test Id: 226 - CMPGES
OK   UME::SIMD::SIMD128_8i test Id: 227 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 228 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 229 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 230 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 231 - CMPLEV
OK   UME::SIMD::SIMD128_8i test Id: 232 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD128_8i test Id: 233 - CMPLEV(function)
OK   UME::SIMD::SIMD128_8i test Id: 234 - CMPLES
OK   UME::SIMD::SIMD128_8i test Id: 235 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 236 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 237 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 238 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 239 - CMPEV
OK   UME::SIMD::SIMD128_8i test Id: 240 - CMPEV(function)
OK   UME::SIMD::SIMD128_8i test Id: 241 - CMPES
OK   UME::SIMD::SIMD128_8i test Id: 242 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 243 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 244 - HADD
OK   UME::SIMD::SIMD128_8i test Id: 245 - HADD(function)
OK   UME::SIMD::SIMD128_8i test Id: 246 - HADD gen
OK   UME::SIMD::SIMD128_8i test Id: 247 - HADD(function) gen
OK   UME::SIMD::SIMD128_8i test Id: 248 - MHADD gen
OK   UME::SIMD::SIMD128_8i test Id: 249 - MHADD(function) gen
OK   UME::SIMD::SIMD128_8i test Id: 250 - HADDS gen
OK   UME::SIMD::SIMD128_8i test Id: 251 - HADDS(function) gen
OK   UME::SIMD::SIMD128_8i test Id: 252 - MHADD gen
OK   UME::SIMD::SIMD128_8i test Id: 253 - MHADDS(function) gen
OK   UME::SIMD::SIMD128_8i test Id: 254 - HMUL gen
OK   UME::SIMD::SIMD128_8i test Id: 255 - HMUL(function) gen
OK   UME::SIMD::SIMD128_8i test Id: 256 - MHMUL gen
OK   UME::SIMD::SIMD128_8i test Id: 257 - MHMUL(function) gen
OK   UME::SIMD::SIMD128_8i test Id: 258 - HMULS gen
OK   UME::SIMD::SIMD128_8i test Id: 259 - HMULS(function) gen
OK   UME::SIMD::SIMD128_8i test Id: 260 - MHMUL gen
OK   UME::SIMD::SIMD128_8i test Id: 261 - MHMULS(function) gen
OK   UME::SIMD::SIMD128_8i test Id: 262 - FMULADDV
OK   UME::SIMD::SIMD128_8i test Id: 263 - FMULADDV(function)
OK   UME::SIMD::SIMD128_8i test Id: 264 - MFMULADDV
OK   UME::SIMD::SIMD128_8i test Id: 265 - MFMULADDV(function)
OK   UME::SIMD::SIMD128_8i test Id: 266 - FMULSUBV
OK   UME::SIMD::SIMD128_8i test Id: 267 - FMULSUBV(function)
OK   UME::SIMD::SIMD128_8i test Id: 268 - MFMULSUBV
OK   UME::SIMD::SIMD128_8i test Id: 269 - MFMULSUBV(function)
OK   UME::SIMD::SIMD128_8i test Id: 270 - FADDMULV
OK   UME::SIMD::SIMD128_8i test Id: 271 - FADDMULV(function)
OK   UME::SIMD::SIMD128_8i test Id: 272 - MFADDMULV
OK   UME::SIMD::SIMD128_8i test Id: 273 - MFADDMULV(function)
OK   UME::SIMD::SIMD128_8i test Id: 274 - FSUBMULV
OK   UME::SIMD::SIMD128_8i test Id: 275 - FSUBMULV(function)
OK   UME::SIMD::SIMD128_8i test Id: 276 - MFSUBMULV
OK   UME::SIMD::SIMD128_8i test Id: 277 - MFSUBMULV(function)
OK   UME::SIMD::SIMD128_8i test Id: 278 - MAXV
OK   UME::SIMD::SIMD128_8i test Id: 279 - MAXV(function)
OK   UME::SIMD::SIMD128_8i test Id: 280 - MMAXV
OK   UME::SIMD::SIMD128_8i test Id: 281 - MMAXV(function)
OK   UME::SIMD::SIMD128_8i test Id: 282 - MAXS
OK   UME::SIMD::SIMD128_8i test Id: 283 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 284 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 285 - MMAXS
OK   UME::SIMD::SIMD128_8i test Id: 286 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 287 - MAXVA
OK   UME::SIMD::SIMD128_8i test Id: 288 - MMAXVA
OK   UME::SIMD::SIMD128_8i test Id: 289 - MAXSA
OK   UME::SIMD::SIMD128_8i test Id: 290 - MMAXSA
OK   UME::SIMD::SIMD128_8i test Id: 291 - MINV
OK   UME::SIMD::SIMD128_8i test Id: 292 - MINV(function)
OK   UME::SIMD::SIMD128_8i test Id: 293 - MMINV
OK   UME::SIMD::SIMD128_8i test Id: 294 - MMINV(function)
OK   UME::SIMD::SIMD128_8i test Id: 295 - MINS
OK   UME::SIMD::SIMD128_8i test Id: 296 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD128_8i test Id: 297 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD128_8i test Id: 298 - MMINS
OK   UME::SIMD::SIMD128_8i test Id: 299 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 300 - MINVA
OK   UME::SIMD::SIMD128_8i test Id: 301 - MMINVA
OK   UME::SIMD::SIMD128_8i test Id: 302 - MINSA
OK   UME::SIMD::SIMD128_8i test Id: 303 - MMINSA
OK   UME::SIMD::SIMD128_8i test Id: 304 - HMAX
OK   UME::SIMD::SIMD128_8i test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD128_8i test Id: 306 - HMAX
OK   UME::SIMD::SIMD128_8i test Id: 307 - HMAX(function)
OK   UME::SIMD::SIMD128_8i test Id: 308 - MHMAX
OK   UME::SIMD::SIMD128_8i test Id: 309 - MHMAX(function)
OK   UME::SIMD::SIMD128_8i test Id: 310 - IMAX
OK   UME::SIMD::SIMD128_8i test Id: 311 - IMAX(function)
OK   UME::SIMD::SIMD128_8i test Id: 312 - MIMAX
OK   UME::SIMD::SIMD128_8i test Id: 313 - MIMAX(function)
OK   UME::SIMD::SIMD128_8i test Id: 314 - HMIN
OK   UME::SIMD::SIMD128_8i test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD128_8i test Id: 316 - HMIN
OK   UME::SIMD::SIMD128_8i test Id: 317 - HMIN(function)
OK   UME::SIMD::SIMD128_8i test Id: 318 - MHMIN gen
OK   UME::SIMD::SIMD128_8i test Id: 319 - MHMIN(function) gen
OK   UME::SIMD::SIMD128_8i test Id: 320 - IMIN
OK   UME::SIMD::SIMD128_8i test Id: 321 - IMIN(function)
OK   UME::SIMD::SIMD128_8i test Id: 322 - MIMIN
OK   UME::SIMD::SIMD128_8i test Id: 323 - MIMIN(function)
OK   UME::SIMD::SIMD128_8i test Id: 324 - REMV gen
OK   UME::SIMD::SIMD128_8i test Id: 325 - REMV(operator%) gen
OK   UME::SIMD::SIMD128_8i test Id: 326 - REMV(function) gen
OK   UME::SIMD::SIMD128_8i test Id: 327 - MREMV gen
OK   UME::SIMD::SIMD128_8i test Id: 328 - MREMV(function) gen
OK   UME::SIMD::SIMD128_8i test Id: 329 - REMS gen
OK   UME::SIMD::SIMD128_8i test Id: 330 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD128_8i test Id: 331 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD128_8i test Id: 332 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD128_8i test Id: 333 - LANDV gen
OK   UME::SIMD::SIMD128_8i test Id: 334 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD128_8i test Id: 335 - LORV gen
OK   UME::SIMD::SIMD128_8i test Id: 336 - LORV gen (operator ||)
OK   UME::SIMD::SIMD128_8i test Id: 337 - BANDV
OK   UME::SIMD::SIMD128_8i test Id: 338 - BANDV(operator&)
OK   UME::SIMD::SIMD128_8i test Id: 339 - BANDV(function)
OK   UME::SIMD::SIMD128_8i test Id: 340 - MBANDV
OK   UME::SIMD::SIMD128_8i test Id: 341 - MBANDV
OK   UME::SIMD::SIMD128_8i test Id: 342 - BANDS
OK   UME::SIMD::SIMD128_8i test Id: 343 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 344 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 345 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 346 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 347 - MBANDS
OK   UME::SIMD::SIMD128_8i test Id: 348 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 349 - BANDVA
OK   UME::SIMD::SIMD128_8i test Id: 350 - MBANDVA
OK   UME::SIMD::SIMD128_8i test Id: 351 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD128_8i test Id: 352 - BANDSA
OK   UME::SIMD::SIMD128_8i test Id: 353 - MBANDSA
OK   UME::SIMD::SIMD128_8i test Id: 354 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD128_8i test Id: 355 - BORV
OK   UME::SIMD::SIMD128_8i test Id: 356 - BORV(operator |)
OK   UME::SIMD::SIMD128_8i test Id: 357 - BORV(function)
OK   UME::SIMD::SIMD128_8i test Id: 358 - MBORV
OK   UME::SIMD::SIMD128_8i test Id: 359 - MBORV(function)
OK   UME::SIMD::SIMD128_8i test Id: 360 - BORS
OK   UME::SIMD::SIMD128_8i test Id: 361 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 362 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 363 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 364 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 365 - MBORS
OK   UME::SIMD::SIMD128_8i test Id: 366 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 367 - BORVA
OK   UME::SIMD::SIMD128_8i test Id: 368 - BORVA(operator|=)
OK   UME::SIMD::SIMD128_8i test Id: 369 - MBORVA
OK   UME::SIMD::SIMD128_8i test Id: 370 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD128_8i test Id: 371 - BORSA
OK   UME::SIMD::SIMD128_8i test Id: 372 - BORSA(operator|=)
OK   UME::SIMD::SIMD128_8i test Id: 373 - MBORSA
OK   UME::SIMD::SIMD128_8i test Id: 374 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD128_8i test Id: 375 - BXORV
OK   UME::SIMD::SIMD128_8i test Id: 376 - BXORV(operator^
OK   UME::SIMD::SIMD128_8i test Id: 377 - BXORV(function
OK   UME::SIMD::SIMD128_8i test Id: 378 - MBXORV
OK   UME::SIMD::SIMD128_8i test Id: 379 - MBXORV(function)
OK   UME::SIMD::SIMD128_8i test Id: 380 - BXORS
OK   UME::SIMD::SIMD128_8i test Id: 381 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 382 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 383 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 384 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 385 - MBXORS
OK   UME::SIMD::SIMD128_8i test Id: 386 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 387 - BXORVA
OK   UME::SIMD::SIMD128_8i test Id: 388 - BXORVA(operator^=)
OK   UME::SIMD::SIMD128_8i test Id: 389 - MBXORVA
OK   UME::SIMD::SIMD128_8i test Id: 390 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD128_8i test Id: 391 - BXORSA
OK   UME::SIMD::SIMD128_8i test Id: 392 - BXORSA(operator^=)
OK   UME::SIMD::SIMD128_8i test Id: 393 - MBXORSA
OK   UME::SIMD::SIMD128_8i test Id: 394 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD128_8i test Id: 395 - BNOT
OK   UME::SIMD::SIMD128_8i test Id: 396 - BNOT(operator!)
OK   UME::SIMD::SIMD128_8i test Id: 397 - BNOT(function)
OK   UME::SIMD::SIMD128_8i test Id: 398 - MBNOT
OK   UME::SIMD::SIMD128_8i test Id: 399 - MBNOT(function)
OK   UME::SIMD::SIMD128_8i test Id: 400 - BNOTA
OK   UME::SIMD::SIMD128_8i test Id: 401 - MBNOTA
OK   UME::SIMD::SIMD128_8i test Id: 402 - BANDNOTV
OK   UME::SIMD::SIMD128_8i test Id: 403 - BANDNOTV (function)
OK   UME::SIMD::SIMD128_8i test Id: 404 - MBANDNOTV
OK   UME::SIMD::SIMD128_8i test Id: 405 - MBANDNOTV (function)
OK   UME::SIMD::SIMD128_8i test Id: 406 - BANDNOTS
OK   UME::SIMD::SIMD128_8i test Id: 407 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD128_8i test Id: 408 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD128_8i test Id: 409 - MBANDNOTS
OK   UME::SIMD::SIMD128_8i test Id: 410 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD128_8i test Id: 411 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD128_8i test Id: 412 - BANDNOTVA
OK   UME::SIMD::SIMD128_8i test Id: 413 - MBANDNOTVA
OK   UME::SIMD::SIMD128_8i test Id: 414 - BANDNOTSA
OK   UME::SIMD::SIMD128_8i test Id: 415 - MBANDNOTSA
OK   UME::SIMD::SIMD128_8i test Id: 416 - HBAND
OK   UME::SIMD::SIMD128_8i test Id: 417 - HBAND
OK   UME::SIMD::SIMD128_8i test Id: 418 - MHBAND
OK   UME::SIMD::SIMD128_8i test Id: 419 - MHBAND(function)
OK   UME::SIMD::SIMD128_8i test Id: 420 - HBANDS
OK   UME::SIMD::SIMD128_8i test Id: 421 - MHBANDS
OK   UME::SIMD::SIMD128_8i test Id: 422 - HBOR
OK   UME::SIMD::SIMD128_8i test Id: 423 - HBOR(function)
OK   UME::SIMD::SIMD128_8i test Id: 424 - MHBOR
OK   UME::SIMD::SIMD128_8i test Id: 425 - MHBOR(function)
OK   UME::SIMD::SIMD128_8i test Id: 426 - HBORS
OK   UME::SIMD::SIMD128_8i test Id: 427 - MHBORS
OK   UME::SIMD::SIMD128_8i test Id: 428 - HBXOR
OK   UME::SIMD::SIMD128_8i test Id: 429 - HBXOR(function)
OK   UME::SIMD::SIMD128_8i test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD128_8i test Id: 431 - MHBXOR
OK   UME::SIMD::SIMD128_8i test Id: 432 - HBXORS
OK   UME::SIMD::SIMD128_8i test Id: 433 - MHBXORS
OK   UME::SIMD::SIMD128_8i test Id: 434 - GATHERU
OK   UME::SIMD::SIMD128_8i test Id: 435 - MGATHERU
OK   UME::SIMD::SIMD128_8i test Id: 436 - GATHERS
OK   UME::SIMD::SIMD128_8i test Id: 437 - MGATHERS
OK   UME::SIMD::SIMD128_8i test Id: 438 - GATHERV
OK   UME::SIMD::SIMD128_8i test Id: 439 - MGATHERV
OK   UME::SIMD::SIMD128_8i test Id: 440 - SCATTERU
OK   UME::SIMD::SIMD128_8i test Id: 441 - MSCATTERU
OK   UME::SIMD::SIMD128_8i test Id: 442 - SCATTERS
OK   UME::SIMD::SIMD128_8i test Id: 443 - MSCATTERS
OK   UME::SIMD::SIMD128_8i test Id: 444 - SCATTERV
OK   UME::SIMD::SIMD128_8i test Id: 445 - MSCATTERV
OK   UME::SIMD::SIMD128_8i test Id: 446 - LSHV gen
OK   UME::SIMD::SIMD128_8i test Id: 447 - LSHV (function) gen
OK   UME::SIMD::SIMD128_8i test Id: 448 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD128_8i test Id: 449 - MLSHV gen
OK   UME::SIMD::SIMD128_8i test Id: 450 - MLSHV (function) gen
OK   UME::SIMD::SIMD128_8i test Id: 451 - LSHS gen
OK   UME::SIMD::SIMD128_8i test Id: 452 - LSHS (function) gen
OK   UME::SIMD::SIMD128_8i test Id: 453 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD128_8i test Id: 454 - MLSHS gen
OK   UME::SIMD::SIMD128_8i test Id: 455 - MLSHS (function) gen
OK   UME::SIMD::SIMD128_8i test Id: 456 - LSHVA gen
OK   UME::SIMD::SIMD128_8i test Id: 457 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD128_8i test Id: 458 - MLSHVA gen
OK   UME::SIMD::SIMD128_8i test Id: 459 - LSHSA gen
OK   UME::SIMD::SIMD128_8i test Id: 460 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD128_8i test Id: 461 - MLSHSA gen
OK   UME::SIMD::SIMD128_8i test Id: 462 - RSHV gen
OK   UME::SIMD::SIMD128_8i test Id: 463 - RSHV (function) gen
OK   UME::SIMD::SIMD128_8i test Id: 464 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD128_8i test Id: 465 - MRSHV gen
OK   UME::SIMD::SIMD128_8i test Id: 466 - MRSHV (function) gen
OK   UME::SIMD::SIMD128_8i test Id: 467 - RSHS gen
OK   UME::SIMD::SIMD128_8i test Id: 468 - RSHS (function) gen
OK   UME::SIMD::SIMD128_8i test Id: 469 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD128_8i test Id: 470 - MRSHS gen
OK   UME::SIMD::SIMD128_8i test Id: 471 - MRSHS (function) gen
OK   UME::SIMD::SIMD128_8i test Id: 472 - RSHVA gen
OK   UME::SIMD::SIMD128_8i test Id: 473 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD128_8i test Id: 474 - MRSHVA gen
OK   UME::SIMD::SIMD128_8i test Id: 475 - RSHSA gen
OK   UME::SIMD::SIMD128_8i test Id: 476 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD128_8i test Id: 477 - MRSHSA gen
OK   UME::SIMD::SIMD128_8i test Id: 478 - ROLV
OK   UME::SIMD::SIMD128_8i test Id: 479 - ROLV(function)
OK   UME::SIMD::SIMD128_8i test Id: 480 - MROLV
OK   UME::SIMD::SIMD128_8i test Id: 481 - MROLV(function)
OK   UME::SIMD::SIMD128_8i test Id: 482 - ROLS
OK   UME::SIMD::SIMD128_8i test Id: 483 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 484 - MROLS
OK   UME::SIMD::SIMD128_8i test Id: 485 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 486 - ROLVA
OK   UME::SIMD::SIMD128_8i test Id: 487 - MROLVA
OK   UME::SIMD::SIMD128_8i test Id: 488 - ROLSA
OK   UME::SIMD::SIMD128_8i test Id: 489 - MROLSA
OK   UME::SIMD::SIMD128_8i test Id: 490 - RORV
OK   UME::SIMD::SIMD128_8i test Id: 491 - RORV(function)
OK   UME::SIMD::SIMD128_8i test Id: 492 - MRORV
OK   UME::SIMD::SIMD128_8i test Id: 493 - MRORV(function)
OK   UME::SIMD::SIMD128_8i test Id: 494 - RORS
OK   UME::SIMD::SIMD128_8i test Id: 495 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 496 - MRORS
OK   UME::SIMD::SIMD128_8i test Id: 497 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD128_8i test Id: 498 - RORVA
OK   UME::SIMD::SIMD128_8i test Id: 499 - MRORVA
OK   UME::SIMD::SIMD128_8i test Id: 500 - RORSA
OK   UME::SIMD::SIMD128_8i test Id: 501 - MRORSA
OK   UME::SIMD::SIMD128_8i test Id: 502 - NEG
OK   UME::SIMD::SIMD128_8i test Id: 503 - NEG(operator-)
OK   UME::SIMD::SIMD128_8i test Id: 504 - NEG(function)
OK   UME::SIMD::SIMD128_8i test Id: 505 - MNEG
OK   UME::SIMD::SIMD128_8i test Id: 506 - MNEG(function)
OK   UME::SIMD::SIMD128_8i test Id: 507 - NEGA
OK   UME::SIMD::SIMD128_8i test Id: 508 - MNEGA
OK   UME::SIMD::SIMD128_8i test Id: 509 - ABS
OK   UME::SIMD::SIMD128_8i test Id: 510 - ABS(function)
OK   UME::SIMD::SIMD128_8i test Id: 511 - MABS
OK   UME::SIMD::SIMD128_8i test Id: 512 - MABS(function)
OK   UME::SIMD::SIMD128_8i test Id: 513 - ABSA
OK   UME::SIMD::SIMD128_8i test Id: 514 - MABSA
OK   UME::SIMD::SIMD128_8i test Id: 515 - COPYSIGN gen
OK   UME::SIMD::SIMD128_8i test Id: 516 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD128_8i test Id: 517 - ITOU
OK   UME::SIMD::SIMD128_8i test Id: 518 - PACK
OK   UME::SIMD::SIMD128_8i test Id: 519 - PACKLO
OK   UME::SIMD::SIMD128_8i test Id: 520 - PACKHI
OK   UME::SIMD::SIMD128_8i test Id: 521 - UNPACK
OK   UME::SIMD::SIMD128_8i test Id: 522 - UNPACKLO
OK   UME::SIMD::SIMD128_8i test Id: 523 - UNPACKHi
OK   UME::SIMD::SIMD64_16u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD64_16u test Id: 2 - FULL-CONSTR
OK   UME::SIMD::SIMD64_16u test Id: 3 - SET-CONSTR gen
OK   UME::SIMD::SIMD64_16u test Id: 4 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD64_16u test Id: 5 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD64_16u test Id: 6 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD64_16u test Id: 7 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD64_16u test Id: 8 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD64_16u test Id: 9 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD64_16u test Id: 10 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD64_16u test Id: 11 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD64_16u test Id: 12 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD64_16u test Id: 13 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD64_16u test Id: 14 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD64_16u test Id: 15 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD64_16u test Id: 16 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD64_16u test Id: 17 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD64_16u test Id: 18 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD64_16u test Id: 19 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD64_16u test Id: 20 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD64_16u test Id: 21 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD64_16u test Id: 22 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD64_16u test Id: 23 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD64_16u test Id: 24 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD64_16u test Id: 25 - INSERT
OK   UME::SIMD::SIMD64_16u test Id: 26 - INSERT(operator[] =)
OK   UME::SIMD::SIMD64_16u test Id: 27 - EXTRACT
OK   UME::SIMD::SIMD64_16u test Id: 28 - EXTRACT(operator[])
OK   UME::SIMD::SIMD64_16u test Id: 29 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD64_16u test Id: 30 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD64_16u test Id: 31 - ASSIGNV
OK   UME::SIMD::SIMD64_16u test Id: 32 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD64_16u test Id: 33 - MASSIGNV
OK   UME::SIMD::SIMD64_16u test Id: 34 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD64_16u test Id: 35 - ASSIGNS
OK   UME::SIMD::SIMD64_16u test Id: 36 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD64_16u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD64_16u test Id: 38 - MASSIGNS
OK   UME::SIMD::SIMD64_16u test Id: 39 - LOAD/STORE
OK   UME::SIMD::SIMD64_16u test Id: 40 - MLOAD
OK   UME::SIMD::SIMD64_16u test Id: 41 - MSTORE
OK   UME::SIMD::SIMD64_16u test Id: 42 - LOADA/STOREA
OK   UME::SIMD::SIMD64_16u test Id: 43 - MLOADA
OK   UME::SIMD::SIMD64_16u test Id: 44 - MSTOREA
OK   UME::SIMD::SIMD64_16u test Id: 45 - SWIZZLE
OK   UME::SIMD::SIMD64_16u test Id: 46 - SORTA
OK   UME::SIMD::SIMD64_16u test Id: 47 - SORTD
OK   UME::SIMD::SIMD64_16u test Id: 48 - BLENDV gen
OK   UME::SIMD::SIMD64_16u test Id: 49 - ADDV
OK   UME::SIMD::SIMD64_16u test Id: 50 - ADDV(operator+)
OK   UME::SIMD::SIMD64_16u test Id: 51 - ADDV(function)
OK   UME::SIMD::SIMD64_16u test Id: 52 - ADDV gen
OK   UME::SIMD::SIMD64_16u test Id: 53 - ADDV(operator+) gen
OK   UME::SIMD::SIMD64_16u test Id: 54 - ADDV(function) gen
OK   UME::SIMD::SIMD64_16u test Id: 55 - MADDV
OK   UME::SIMD::SIMD64_16u test Id: 56 - MADDV(function)
OK   UME::SIMD::SIMD64_16u test Id: 57 - MADDV gen
OK   UME::SIMD::SIMD64_16u test Id: 58 - MADDV(function) gen
OK   UME::SIMD::SIMD64_16u test Id: 59 - ADDS
OK   UME::SIMD::SIMD64_16u test Id: 60 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 61 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 62 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD64_16u test Id: 63 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD64_16u test Id: 64 - ADDS gen
OK   UME::SIMD::SIMD64_16u test Id: 65 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD64_16u test Id: 66 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD64_16u test Id: 67 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD64_16u test Id: 68 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD64_16u test Id: 69 - MADDS
OK   UME::SIMD::SIMD64_16u test Id: 70 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 71 - MADDS gen
OK   UME::SIMD::SIMD64_16u test Id: 72 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD64_16u test Id: 73 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD64_16u test Id: 74 - ADDVA
OK   UME::SIMD::SIMD64_16u test Id: 75 - ADDVA(operator+=)
OK   UME::SIMD::SIMD64_16u test Id: 76 - ADDVA gen
OK   UME::SIMD::SIMD64_16u test Id: 77 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD64_16u test Id: 78 - MADDVA
OK   UME::SIMD::SIMD64_16u test Id: 79 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD64_16u test Id: 80 - ADDSA
OK   UME::SIMD::SIMD64_16u test Id: 81 - ADDSA(operator+=)
OK   UME::SIMD::SIMD64_16u test Id: 82 - MADDSA
OK   UME::SIMD::SIMD64_16u test Id: 83 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD64_16u test Id: 84 - SADDV gen
OK   UME::SIMD::SIMD64_16u test Id: 85 - SADDV(function) gen
OK   UME::SIMD::SIMD64_16u test Id: 86 - POSTINC
OK   UME::SIMD::SIMD64_16u test Id: 87 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD64_16u test Id: 88 - POSTINC(function)
OK   UME::SIMD::SIMD64_16u test Id: 89 - MPOSTINC
OK   UME::SIMD::SIMD64_16u test Id: 90 - MPOSTINC(function)
OK   UME::SIMD::SIMD64_16u test Id: 91 - PREFINC
OK   UME::SIMD::SIMD64_16u test Id: 92 - PREFINC(operator++())
OK   UME::SIMD::SIMD64_16u test Id: 93 - PREFINC(function)
OK   UME::SIMD::SIMD64_16u test Id: 94 - MPREFINC
OK   UME::SIMD::SIMD64_16u test Id: 95 - MPREFINC(function)
OK   UME::SIMD::SIMD64_16u test Id: 96 - SUBV
OK   UME::SIMD::SIMD64_16u test Id: 97 - SUBV(operator-)
OK   UME::SIMD::SIMD64_16u test Id: 98 - SUBV(function)
OK   UME::SIMD::SIMD64_16u test Id: 99 - SUBV gen
OK   UME::SIMD::SIMD64_16u test Id: 100 - SUBV(operator-) gen
OK   UME::SIMD::SIMD64_16u test Id: 101 - SUBV(function) gen
OK   UME::SIMD::SIMD64_16u test Id: 102 - MSUBV
OK   UME::SIMD::SIMD64_16u test Id: 103 - MSUBV(function)
OK   UME::SIMD::SIMD64_16u test Id: 104 - MSUBV gen
OK   UME::SIMD::SIMD64_16u test Id: 105 - MSUBV(function) gen
OK   UME::SIMD::SIMD64_16u test Id: 106 - SUBS gen
OK   UME::SIMD::SIMD64_16u test Id: 107 - SUBS(operator-) gen
OK   UME::SIMD::SIMD64_16u test Id: 108 - SUBS(function) gen
OK   UME::SIMD::SIMD64_16u test Id: 109 - MSUBS
OK   UME::SIMD::SIMD64_16u test Id: 110 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 111 - SUBVA
OK   UME::SIMD::SIMD64_16u test Id: 112 - SUBVA(operator-=)
OK   UME::SIMD::SIMD64_16u test Id: 113 - MSUBVA
OK   UME::SIMD::SIMD64_16u test Id: 114 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD64_16u test Id: 115 - SUBSA
OK   UME::SIMD::SIMD64_16u test Id: 116 - MSUBSA
OK   UME::SIMD::SIMD64_16u test Id: 117 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD64_16u test Id: 118 - SUBFROMV
OK   UME::SIMD::SIMD64_16u test Id: 119 - MSUBFROMV
OK   UME::SIMD::SIMD64_16u test Id: 120 - SUBFROMS
OK   UME::SIMD::SIMD64_16u test Id: 121 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 122 - MSUBFROMS
OK   UME::SIMD::SIMD64_16u test Id: 123 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 124 - SUBFROMVA
OK   UME::SIMD::SIMD64_16u test Id: 125 - MSUBFROMVA
OK   UME::SIMD::SIMD64_16u test Id: 126 - SUBFROMSA
OK   UME::SIMD::SIMD64_16u test Id: 127 - MSUBFROMSA
OK   UME::SIMD::SIMD64_16u test Id: 128 - POSTDEC
OK   UME::SIMD::SIMD64_16u test Id: 129 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD64_16u test Id: 130 - POSTDEC(function)
OK   UME::SIMD::SIMD64_16u test Id: 131 - MPOSTDEC
OK   UME::SIMD::SIMD64_16u test Id: 132 - MPOSTDEC(function)
OK   UME::SIMD::SIMD64_16u test Id: 133 - PREFDEC
OK   UME::SIMD::SIMD64_16u test Id: 134 - PREFDEC(operator--())
OK   UME::SIMD::SIMD64_16u test Id: 135 - PREFDEC(function)
OK   UME::SIMD::SIMD64_16u test Id: 136 - MPREFDEC
OK   UME::SIMD::SIMD64_16u test Id: 137 - MPREFDEC(function)
OK   UME::SIMD::SIMD64_16u test Id: 138 - MULV
OK   UME::SIMD::SIMD64_16u test Id: 139 - MULV(operator*)
OK   UME::SIMD::SIMD64_16u test Id: 140 - MULV(function)
OK   UME::SIMD::SIMD64_16u test Id: 141 - MMULV
OK   UME::SIMD::SIMD64_16u test Id: 142 - MMULV(function)
OK   UME::SIMD::SIMD64_16u test Id: 143 - MULS
OK   UME::SIMD::SIMD64_16u test Id: 144 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 145 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 146 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 147 - MMULS
OK   UME::SIMD::SIMD64_16u test Id: 148 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 149 - MULVA
OK   UME::SIMD::SIMD64_16u test Id: 150 - MULVA(operator*)
OK   UME::SIMD::SIMD64_16u test Id: 151 - MULVA gen
OK   UME::SIMD::SIMD64_16u test Id: 152 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD64_16u test Id: 153 - MMULVA
OK   UME::SIMD::SIMD64_16u test Id: 154 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD64_16u test Id: 155 - MULSA
OK   UME::SIMD::SIMD64_16u test Id: 156 - MULSA(operator*=)
OK   UME::SIMD::SIMD64_16u test Id: 157 - MMULSA
OK   UME::SIMD::SIMD64_16u test Id: 158 - DIVV
OK   UME::SIMD::SIMD64_16u test Id: 159 - DIVV(operator/)
OK   UME::SIMD::SIMD64_16u test Id: 160 - DIVV(function)
OK   UME::SIMD::SIMD64_16u test Id: 161 - MDIVV
OK   UME::SIMD::SIMD64_16u test Id: 162 - MDIVV(function)
OK   UME::SIMD::SIMD64_16u test Id: 163 - DIVS
OK   UME::SIMD::SIMD64_16u test Id: 164 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 165 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 166 - MDIVS
OK   UME::SIMD::SIMD64_16u test Id: 167 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 168 - DIVVA
OK   UME::SIMD::SIMD64_16u test Id: 169 - DIVVA(operator/=)
OK   UME::SIMD::SIMD64_16u test Id: 170 - DIVVA gen
OK   UME::SIMD::SIMD64_16u test Id: 171 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD64_16u test Id: 172 - MDIVVA
OK   UME::SIMD::SIMD64_16u test Id: 173 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD64_16u test Id: 174 - DIVSA
OK   UME::SIMD::SIMD64_16u test Id: 175 - DIVSA(operator/=)
OK   UME::SIMD::SIMD64_16u test Id: 176 - MDIVSA
OK   UME::SIMD::SIMD64_16u test Id: 177 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD64_16u test Id: 178 - RCP
OK   UME::SIMD::SIMD64_16u test Id: 179 - RCP(function)
OK   UME::SIMD::SIMD64_16u test Id: 180 - MRCP
OK   UME::SIMD::SIMD64_16u test Id: 181 - MRCP(function)
OK   UME::SIMD::SIMD64_16u test Id: 182 - RCPS
OK   UME::SIMD::SIMD64_16u test Id: 183 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 184 - RCPS(function)
OK   UME::SIMD::SIMD64_16u test Id: 185 - MRCPS
OK   UME::SIMD::SIMD64_16u test Id: 186 - MRCPS (function)
OK   UME::SIMD::SIMD64_16u test Id: 187 - RCPA
OK   UME::SIMD::SIMD64_16u test Id: 188 - MRCPA
OK   UME::SIMD::SIMD64_16u test Id: 189 - RCPSA
OK   UME::SIMD::SIMD64_16u test Id: 190 - MRCPSA
OK   UME::SIMD::SIMD64_16u test Id: 191 - CMPEQV
OK   UME::SIMD::SIMD64_16u test Id: 192 - CMPEQV(operator==)
OK   UME::SIMD::SIMD64_16u test Id: 193 - CMPEQV(function)
OK   UME::SIMD::SIMD64_16u test Id: 194 - CMPEQS
OK   UME::SIMD::SIMD64_16u test Id: 195 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 196 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 197 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 198 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 199 - CMPNEV
OK   UME::SIMD::SIMD64_16u test Id: 200 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD64_16u test Id: 201 - CMPNEV(function)
OK   UME::SIMD::SIMD64_16u test Id: 202 - CMPNES
OK   UME::SIMD::SIMD64_16u test Id: 203 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 204 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 205 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 206 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 207 - CMPGTV
OK   UME::SIMD::SIMD64_16u test Id: 208 - CMPGTV(operator>)
OK   UME::SIMD::SIMD64_16u test Id: 209 - CMPGTV(function)
OK   UME::SIMD::SIMD64_16u test Id: 210 - CMPGTS
OK   UME::SIMD::SIMD64_16u test Id: 211 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 212 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 213 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 214 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 215 - CMPLTV
OK   UME::SIMD::SIMD64_16u test Id: 216 - CMPLTV(operator<)
OK   UME::SIMD::SIMD64_16u test Id: 217 - CMPLTV(function)
OK   UME::SIMD::SIMD64_16u test Id: 218 - CMPLTS
OK   UME::SIMD::SIMD64_16u test Id: 219 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 220 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 221 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 222 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 223 - CMPGEV
OK   UME::SIMD::SIMD64_16u test Id: 224 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD64_16u test Id: 225 - CMPGEV(function)
OK   UME::SIMD::SIMD64_16u test Id: 226 - CMPGES
OK   UME::SIMD::SIMD64_16u test Id: 227 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 228 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 229 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 230 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 231 - CMPLEV
OK   UME::SIMD::SIMD64_16u test Id: 232 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD64_16u test Id: 233 - CMPLEV(function)
OK   UME::SIMD::SIMD64_16u test Id: 234 - CMPLES
OK   UME::SIMD::SIMD64_16u test Id: 235 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 236 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 237 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 238 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 239 - CMPEV
OK   UME::SIMD::SIMD64_16u test Id: 240 - CMPEV(function)
OK   UME::SIMD::SIMD64_16u test Id: 241 - CMPES
OK   UME::SIMD::SIMD64_16u test Id: 242 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 243 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 244 - HADD
OK   UME::SIMD::SIMD64_16u test Id: 245 - HADD(function)
OK   UME::SIMD::SIMD64_16u test Id: 246 - HADD gen
OK   UME::SIMD::SIMD64_16u test Id: 247 - HADD(function) gen
OK   UME::SIMD::SIMD64_16u test Id: 248 - MHADD gen
OK   UME::SIMD::SIMD64_16u test Id: 249 - MHADD(function) gen
OK   UME::SIMD::SIMD64_16u test Id: 250 - HADDS gen
OK   UME::SIMD::SIMD64_16u test Id: 251 - HADDS(function) gen
OK   UME::SIMD::SIMD64_16u test Id: 252 - MHADD gen
OK   UME::SIMD::SIMD64_16u test Id: 253 - MHADDS(function) gen
OK   UME::SIMD::SIMD64_16u test Id: 254 - HMUL gen
OK   UME::SIMD::SIMD64_16u test Id: 255 - HMUL(function) gen
OK   UME::SIMD::SIMD64_16u test Id: 256 - MHMUL gen
OK   UME::SIMD::SIMD64_16u test Id: 257 - MHMUL(function) gen
OK   UME::SIMD::SIMD64_16u test Id: 258 - HMULS gen
OK   UME::SIMD::SIMD64_16u test Id: 259 - HMULS(function) gen
OK   UME::SIMD::SIMD64_16u test Id: 260 - MHMUL gen
OK   UME::SIMD::SIMD64_16u test Id: 261 - MHMULS(function) gen
OK   UME::SIMD::SIMD64_16u test Id: 262 - FMULADDV
OK   UME::SIMD::SIMD64_16u test Id: 263 - FMULADDV(function)
OK   UME::SIMD::SIMD64_16u test Id: 264 - MFMULADDV
OK   UME::SIMD::SIMD64_16u test Id: 265 - MFMULADDV(function)
OK   UME::SIMD::SIMD64_16u test Id: 266 - FMULSUBV
OK   UME::SIMD::SIMD64_16u test Id: 267 - FMULSUBV(function)
OK   UME::SIMD::SIMD64_16u test Id: 268 - MFMULSUBV
OK   UME::SIMD::SIMD64_16u test Id: 269 - MFMULSUBV(function)
OK   UME::SIMD::SIMD64_16u test Id: 270 - FADDMULV
OK   UME::SIMD::SIMD64_16u test Id: 271 - FADDMULV(function)
OK   UME::SIMD::SIMD64_16u test Id: 272 - MFADDMULV
OK   UME::SIMD::SIMD64_16u test Id: 273 - MFADDMULV(function)
OK   UME::SIMD::SIMD64_16u test Id: 274 - FSUBMULV
OK   UME::SIMD::SIMD64_16u test Id: 275 - FSUBMULV(function)
OK   UME::SIMD::SIMD64_16u test Id: 276 - MFSUBMULV
OK   UME::SIMD::SIMD64_16u test Id: 277 - MFSUBMULV(function)
OK   UME::SIMD::SIMD64_16u test Id: 278 - MAXV
OK   UME::SIMD::SIMD64_16u test Id: 279 - MAXV(function)
OK   UME::SIMD::SIMD64_16u test Id: 280 - MMAXV
OK   UME::SIMD::SIMD64_16u test Id: 281 - MMAXV(function)
OK   UME::SIMD::SIMD64_16u test Id: 282 - MAXS
OK   UME::SIMD::SIMD64_16u test Id: 283 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 284 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 285 - MMAXS
OK   UME::SIMD::SIMD64_16u test Id: 286 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 287 - MAXVA
OK   UME::SIMD::SIMD64_16u test Id: 288 - MMAXVA
OK   UME::SIMD::SIMD64_16u test Id: 289 - MAXSA
OK   UME::SIMD::SIMD64_16u test Id: 290 - MMAXSA
OK   UME::SIMD::SIMD64_16u test Id: 291 - MINV
OK   UME::SIMD::SIMD64_16u test Id: 292 - MINV(function)
OK   UME::SIMD::SIMD64_16u test Id: 293 - MMINV
OK   UME::SIMD::SIMD64_16u test Id: 294 - MMINV(function)
OK   UME::SIMD::SIMD64_16u test Id: 295 - MINS
OK   UME::SIMD::SIMD64_16u test Id: 296 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD64_16u test Id: 297 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD64_16u test Id: 298 - MMINS
OK   UME::SIMD::SIMD64_16u test Id: 299 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 300 - MINVA
OK   UME::SIMD::SIMD64_16u test Id: 301 - MMINVA
OK   UME::SIMD::SIMD64_16u test Id: 302 - MINSA
OK   UME::SIMD::SIMD64_16u test Id: 303 - MMINSA
OK   UME::SIMD::SIMD64_16u test Id: 304 - HMAX
OK   UME::SIMD::SIMD64_16u test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD64_16u test Id: 306 - HMAX
OK   UME::SIMD::SIMD64_16u test Id: 307 - HMAX(function)
OK   UME::SIMD::SIMD64_16u test Id: 308 - MHMAX
OK   UME::SIMD::SIMD64_16u test Id: 309 - MHMAX(function)
OK   UME::SIMD::SIMD64_16u test Id: 310 - IMAX
OK   UME::SIMD::SIMD64_16u test Id: 311 - IMAX(function)
OK   UME::SIMD::SIMD64_16u test Id: 312 - MIMAX
OK   UME::SIMD::SIMD64_16u test Id: 313 - MIMAX(function)
OK   UME::SIMD::SIMD64_16u test Id: 314 - HMIN
OK   UME::SIMD::SIMD64_16u test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD64_16u test Id: 316 - HMIN
OK   UME::SIMD::SIMD64_16u test Id: 317 - HMIN(function)
OK   UME::SIMD::SIMD64_16u test Id: 318 - MHMIN gen
OK   UME::SIMD::SIMD64_16u test Id: 319 - MHMIN(function) gen
OK   UME::SIMD::SIMD64_16u test Id: 320 - IMIN
OK   UME::SIMD::SIMD64_16u test Id: 321 - IMIN(function)
OK   UME::SIMD::SIMD64_16u test Id: 322 - MIMIN
OK   UME::SIMD::SIMD64_16u test Id: 323 - MIMIN(function)
OK   UME::SIMD::SIMD64_16u test Id: 324 - REMV gen
OK   UME::SIMD::SIMD64_16u test Id: 325 - REMV(operator%) gen
OK   UME::SIMD::SIMD64_16u test Id: 326 - REMV(function) gen
OK   UME::SIMD::SIMD64_16u test Id: 327 - MREMV gen
OK   UME::SIMD::SIMD64_16u test Id: 328 - MREMV(function) gen
OK   UME::SIMD::SIMD64_16u test Id: 329 - REMS gen
OK   UME::SIMD::SIMD64_16u test Id: 330 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD64_16u test Id: 331 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD64_16u test Id: 332 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD64_16u test Id: 333 - LANDV gen
OK   UME::SIMD::SIMD64_16u test Id: 334 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD64_16u test Id: 335 - LORV gen
OK   UME::SIMD::SIMD64_16u test Id: 336 - LORV gen (operator ||)
OK   UME::SIMD::SIMD64_16u test Id: 337 - BANDV
OK   UME::SIMD::SIMD64_16u test Id: 338 - BANDV(operator&)
OK   UME::SIMD::SIMD64_16u test Id: 339 - BANDV(function)
OK   UME::SIMD::SIMD64_16u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD64_16u test Id: 341 - MBANDV
OK   UME::SIMD::SIMD64_16u test Id: 342 - BANDS
OK   UME::SIMD::SIMD64_16u test Id: 343 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 344 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 345 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 346 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 347 - MBANDS
OK   UME::SIMD::SIMD64_16u test Id: 348 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 349 - BANDVA
OK   UME::SIMD::SIMD64_16u test Id: 350 - MBANDVA
OK   UME::SIMD::SIMD64_16u test Id: 351 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD64_16u test Id: 352 - BANDSA
OK   UME::SIMD::SIMD64_16u test Id: 353 - MBANDSA
OK   UME::SIMD::SIMD64_16u test Id: 354 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD64_16u test Id: 355 - BORV
OK   UME::SIMD::SIMD64_16u test Id: 356 - BORV(operator |)
OK   UME::SIMD::SIMD64_16u test Id: 357 - BORV(function)
OK   UME::SIMD::SIMD64_16u test Id: 358 - MBORV
OK   UME::SIMD::SIMD64_16u test Id: 359 - MBORV(function)
OK   UME::SIMD::SIMD64_16u test Id: 360 - BORS
OK   UME::SIMD::SIMD64_16u test Id: 361 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 362 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 363 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 364 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 365 - MBORS
OK   UME::SIMD::SIMD64_16u test Id: 366 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 367 - BORVA
OK   UME::SIMD::SIMD64_16u test Id: 368 - BORVA(operator|=)
OK   UME::SIMD::SIMD64_16u test Id: 369 - MBORVA
OK   UME::SIMD::SIMD64_16u test Id: 370 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD64_16u test Id: 371 - BORSA
OK   UME::SIMD::SIMD64_16u test Id: 372 - BORSA(operator|=)
OK   UME::SIMD::SIMD64_16u test Id: 373 - MBORSA
OK   UME::SIMD::SIMD64_16u test Id: 374 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD64_16u test Id: 375 - BXORV
OK   UME::SIMD::SIMD64_16u test Id: 376 - BXORV(operator^
OK   UME::SIMD::SIMD64_16u test Id: 377 - BXORV(function
OK   UME::SIMD::SIMD64_16u test Id: 378 - MBXORV
OK   UME::SIMD::SIMD64_16u test Id: 379 - MBXORV(function)
OK   UME::SIMD::SIMD64_16u test Id: 380 - BXORS
OK   UME::SIMD::SIMD64_16u test Id: 381 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 382 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 383 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 384 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 385 - MBXORS
OK   UME::SIMD::SIMD64_16u test Id: 386 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 387 - BXORVA
OK   UME::SIMD::SIMD64_16u test Id: 388 - BXORVA(operator^=)
OK   UME::SIMD::SIMD64_16u test Id: 389 - MBXORVA
OK   UME::SIMD::SIMD64_16u test Id: 390 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD64_16u test Id: 391 - BXORSA
OK   UME::SIMD::SIMD64_16u test Id: 392 - BXORSA(operator^=)
OK   UME::SIMD::SIMD64_16u test Id: 393 - MBXORSA
OK   UME::SIMD::SIMD64_16u test Id: 394 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD64_16u test Id: 395 - BNOT
OK   UME::SIMD::SIMD64_16u test Id: 396 - BNOT(operator!)
OK   UME::SIMD::SIMD64_16u test Id: 397 - BNOT(function)
OK   UME::SIMD::SIMD64_16u test Id: 398 - MBNOT
OK   UME::SIMD::SIMD64_16u test Id: 399 - MBNOT(function)
OK   UME::SIMD::SIMD64_16u test Id: 400 - BNOTA
OK   UME::SIMD::SIMD64_16u test Id: 401 - MBNOTA
OK   UME::SIMD::SIMD64_16u test Id: 402 - BANDNOTV
OK   UME::SIMD::SIMD64_16u test Id: 403 - BANDNOTV (function)
OK   UME::SIMD::SIMD64_16u test Id: 404 - MBANDNOTV
OK   UME::SIMD::SIMD64_16u test Id: 405 - MBANDNOTV (function)
OK   UME::SIMD::SIMD64_16u test Id: 406 - BANDNOTS
OK   UME::SIMD::SIMD64_16u test Id: 407 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD64_16u test Id: 408 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD64_16u test Id: 409 - MBANDNOTS
OK   UME::SIMD::SIMD64_16u test Id: 410 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD64_16u test Id: 411 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD64_16u test Id: 412 - BANDNOTVA
OK   UME::SIMD::SIMD64_16u test Id: 413 - MBANDNOTVA
OK   UME::SIMD::SIMD64_16u test Id: 414 - BANDNOTSA
OK   UME::SIMD::SIMD64_16u test Id: 415 - MBANDNOTSA
OK   UME::SIMD::SIMD64_16u test Id: 416 - HBAND
OK   UME::SIMD::SIMD64_16u test Id: 417 - HBAND
OK   UME::SIMD::SIMD64_16u test Id: 418 - MHBAND
OK   UME::SIMD::SIMD64_16u test Id: 419 - MHBAND(function)
OK   UME::SIMD::SIMD64_16u test Id: 420 - HBANDS
OK   UME::SIMD::SIMD64_16u test Id: 421 - MHBANDS
OK   UME::SIMD::SIMD64_16u test Id: 422 - HBOR
OK   UME::SIMD::SIMD64_16u test Id: 423 - HBOR(function)
OK   UME::SIMD::SIMD64_16u test Id: 424 - MHBOR
OK   UME::SIMD::SIMD64_16u test Id: 425 - MHBOR(function)
OK   UME::SIMD::SIMD64_16u test Id: 426 - HBORS
OK   UME::SIMD::SIMD64_16u test Id: 427 - MHBORS
OK   UME::SIMD::SIMD64_16u test Id: 428 - HBXOR
OK   UME::SIMD::SIMD64_16u test Id: 429 - HBXOR(function)
OK   UME::SIMD::SIMD64_16u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD64_16u test Id: 431 - MHBXOR
OK   UME::SIMD::SIMD64_16u test Id: 432 - HBXORS
OK   UME::SIMD::SIMD64_16u test Id: 433 - MHBXORS
OK   UME::SIMD::SIMD64_16u test Id: 434 - GATHERU
OK   UME::SIMD::SIMD64_16u test Id: 435 - MGATHERU
OK   UME::SIMD::SIMD64_16u test Id: 436 - GATHERS
OK   UME::SIMD::SIMD64_16u test Id: 437 - MGATHERS
OK   UME::SIMD::SIMD64_16u test Id: 438 - GATHERV
OK   UME::SIMD::SIMD64_16u test Id: 439 - MGATHERV
OK   UME::SIMD::SIMD64_16u test Id: 440 - SCATTERU
OK   UME::SIMD::SIMD64_16u test Id: 441 - MSCATTERU
OK   UME::SIMD::SIMD64_16u test Id: 442 - SCATTERS
OK   UME::SIMD::SIMD64_16u test Id: 443 - MSCATTERS
OK   UME::SIMD::SIMD64_16u test Id: 444 - SCATTERV
OK   UME::SIMD::SIMD64_16u test Id: 445 - MSCATTERV
OK   UME::SIMD::SIMD64_16u test Id: 446 - LSHV gen
OK   UME::SIMD::SIMD64_16u test Id: 447 - LSHV (function) gen
OK   UME::SIMD::SIMD64_16u test Id: 448 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD64_16u test Id: 449 - MLSHV gen
OK   UME::SIMD::SIMD64_16u test Id: 450 - MLSHV (function) gen
OK   UME::SIMD::SIMD64_16u test Id: 451 - LSHS gen
OK   UME::SIMD::SIMD64_16u test Id: 452 - LSHS (function) gen
OK   UME::SIMD::SIMD64_16u test Id: 453 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD64_16u test Id: 454 - MLSHS gen
OK   UME::SIMD::SIMD64_16u test Id: 455 - MLSHS (function) gen
OK   UME::SIMD::SIMD64_16u test Id: 456 - LSHVA gen
OK   UME::SIMD::SIMD64_16u test Id: 457 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD64_16u test Id: 458 - MLSHVA gen
OK   UME::SIMD::SIMD64_16u test Id: 459 - LSHSA gen
OK   UME::SIMD::SIMD64_16u test Id: 460 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD64_16u test Id: 461 - MLSHSA gen
OK   UME::SIMD::SIMD64_16u test Id: 462 - RSHV gen
OK   UME::SIMD::SIMD64_16u test Id: 463 - RSHV (function) gen
OK   UME::SIMD::SIMD64_16u test Id: 464 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD64_16u test Id: 465 - MRSHV gen
OK   UME::SIMD::SIMD64_16u test Id: 466 - MRSHV (function) gen
OK   UME::SIMD::SIMD64_16u test Id: 467 - RSHS gen
OK   UME::SIMD::SIMD64_16u test Id: 468 - RSHS (function) gen
OK   UME::SIMD::SIMD64_16u test Id: 469 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD64_16u test Id: 470 - MRSHS gen
OK   UME::SIMD::SIMD64_16u test Id: 471 - MRSHS (function) gen
OK   UME::SIMD::SIMD64_16u test Id: 472 - RSHVA gen
OK   UME::SIMD::SIMD64_16u test Id: 473 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD64_16u test Id: 474 - MRSHVA gen
OK   UME::SIMD::SIMD64_16u test Id: 475 - RSHSA gen
OK   UME::SIMD::SIMD64_16u test Id: 476 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD64_16u test Id: 477 - MRSHSA gen
OK   UME::SIMD::SIMD64_16u test Id: 478 - ROLV
OK   UME::SIMD::SIMD64_16u test Id: 479 - ROLV(function)
OK   UME::SIMD::SIMD64_16u test Id: 480 - MROLV
OK   UME::SIMD::SIMD64_16u test Id: 481 - MROLV(function)
OK   UME::SIMD::SIMD64_16u test Id: 482 - ROLS
OK   UME::SIMD::SIMD64_16u test Id: 483 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 484 - MROLS
OK   UME::SIMD::SIMD64_16u test Id: 485 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 486 - ROLVA
OK   UME::SIMD::SIMD64_16u test Id: 487 - MROLVA
OK   UME::SIMD::SIMD64_16u test Id: 488 - ROLSA
OK   UME::SIMD::SIMD64_16u test Id: 489 - MROLSA
OK   UME::SIMD::SIMD64_16u test Id: 490 - RORV
OK   UME::SIMD::SIMD64_16u test Id: 491 - RORV(function)
OK   UME::SIMD::SIMD64_16u test Id: 492 - MRORV
OK   UME::SIMD::SIMD64_16u test Id: 493 - MRORV(function)
OK   UME::SIMD::SIMD64_16u test Id: 494 - RORS
OK   UME::SIMD::SIMD64_16u test Id: 495 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 496 - MRORS
OK   UME::SIMD::SIMD64_16u test Id: 497 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16u test Id: 498 - RORVA
OK   UME::SIMD::SIMD64_16u test Id: 499 - MRORVA
OK   UME::SIMD::SIMD64_16u test Id: 500 - RORSA
OK   UME::SIMD::SIMD64_16u test Id: 501 - MRORSA
OK   UME::SIMD::SIMD64_16u test Id: 502 - UTOI
OK   UME::SIMD::SIMD64_16u test Id: 503 - PACK
OK   UME::SIMD::SIMD64_16u test Id: 504 - PACKLO
OK   UME::SIMD::SIMD64_16u test Id: 505 - PACKHI
OK   UME::SIMD::SIMD64_16u test Id: 506 - UNPACK
OK   UME::SIMD::SIMD64_16u test Id: 507 - UNPACKLO
OK   UME::SIMD::SIMD64_16u test Id: 508 - UNPACKHi
OK   UME::SIMD::SIMD64_16u test Id: 509 - DEGRADE
OK   UME::SIMD::SIMD64_16i test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD64_16i test Id: 2 - FULL-CONSTR
OK   UME::SIMD::SIMD64_16i test Id: 3 - SET-CONSTR gen
OK   UME::SIMD::SIMD64_16i test Id: 4 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD64_16i test Id: 5 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD64_16i test Id: 6 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD64_16i test Id: 7 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD64_16i test Id: 8 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD64_16i test Id: 9 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD64_16i test Id: 10 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD64_16i test Id: 11 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD64_16i test Id: 12 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD64_16i test Id: 13 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD64_16i test Id: 14 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD64_16i test Id: 15 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD64_16i test Id: 16 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD64_16i test Id: 17 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD64_16i test Id: 18 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD64_16i test Id: 19 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD64_16i test Id: 20 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD64_16i test Id: 21 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD64_16i test Id: 22 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD64_16i test Id: 23 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD64_16i test Id: 24 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD64_16i test Id: 25 - INSERT
OK   UME::SIMD::SIMD64_16i test Id: 26 - INSERT(operator[] =)
OK   UME::SIMD::SIMD64_16i test Id: 27 - EXTRACT
OK   UME::SIMD::SIMD64_16i test Id: 28 - EXTRACT(operator[])
OK   UME::SIMD::SIMD64_16i test Id: 29 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD64_16i test Id: 30 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD64_16i test Id: 31 - ASSIGNV
OK   UME::SIMD::SIMD64_16i test Id: 32 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD64_16i test Id: 33 - MASSIGNV
OK   UME::SIMD::SIMD64_16i test Id: 34 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD64_16i test Id: 35 - ASSIGNS
OK   UME::SIMD::SIMD64_16i test Id: 36 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD64_16i test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD64_16i test Id: 38 - MASSIGNS
OK   UME::SIMD::SIMD64_16i test Id: 39 - LOAD/STORE
OK   UME::SIMD::SIMD64_16i test Id: 40 - MLOAD
OK   UME::SIMD::SIMD64_16i test Id: 41 - MSTORE
OK   UME::SIMD::SIMD64_16i test Id: 42 - LOADA/STOREA
OK   UME::SIMD::SIMD64_16i test Id: 43 - MLOADA
OK   UME::SIMD::SIMD64_16i test Id: 44 - MSTOREA
OK   UME::SIMD::SIMD64_16i test Id: 45 - SWIZZLE
OK   UME::SIMD::SIMD64_16i test Id: 46 - SORTA
OK   UME::SIMD::SIMD64_16i test Id: 47 - SORTD
OK   UME::SIMD::SIMD64_16i test Id: 48 - BLENDV gen
OK   UME::SIMD::SIMD64_16i test Id: 49 - ADDV
OK   UME::SIMD::SIMD64_16i test Id: 50 - ADDV(operator+)
OK   UME::SIMD::SIMD64_16i test Id: 51 - ADDV(function)
OK   UME::SIMD::SIMD64_16i test Id: 52 - ADDV gen
OK   UME::SIMD::SIMD64_16i test Id: 53 - ADDV(operator+) gen
OK   UME::SIMD::SIMD64_16i test Id: 54 - ADDV(function) gen
OK   UME::SIMD::SIMD64_16i test Id: 55 - MADDV
OK   UME::SIMD::SIMD64_16i test Id: 56 - MADDV(function)
OK   UME::SIMD::SIMD64_16i test Id: 57 - MADDV gen
OK   UME::SIMD::SIMD64_16i test Id: 58 - MADDV(function) gen
OK   UME::SIMD::SIMD64_16i test Id: 59 - ADDS
OK   UME::SIMD::SIMD64_16i test Id: 60 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 61 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 62 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD64_16i test Id: 63 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD64_16i test Id: 64 - ADDS gen
OK   UME::SIMD::SIMD64_16i test Id: 65 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD64_16i test Id: 66 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD64_16i test Id: 67 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD64_16i test Id: 68 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD64_16i test Id: 69 - MADDS
OK   UME::SIMD::SIMD64_16i test Id: 70 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 71 - MADDS gen
OK   UME::SIMD::SIMD64_16i test Id: 72 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD64_16i test Id: 73 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD64_16i test Id: 74 - ADDVA
OK   UME::SIMD::SIMD64_16i test Id: 75 - ADDVA(operator+=)
OK   UME::SIMD::SIMD64_16i test Id: 76 - ADDVA gen
OK   UME::SIMD::SIMD64_16i test Id: 77 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD64_16i test Id: 78 - MADDVA
OK   UME::SIMD::SIMD64_16i test Id: 79 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD64_16i test Id: 80 - ADDSA
OK   UME::SIMD::SIMD64_16i test Id: 81 - ADDSA(operator+=)
OK   UME::SIMD::SIMD64_16i test Id: 82 - MADDSA
OK   UME::SIMD::SIMD64_16i test Id: 83 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD64_16i test Id: 84 - SADDV gen
OK   UME::SIMD::SIMD64_16i test Id: 85 - SADDV(function) gen
OK   UME::SIMD::SIMD64_16i test Id: 86 - POSTINC
OK   UME::SIMD::SIMD64_16i test Id: 87 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD64_16i test Id: 88 - POSTINC(function)
OK   UME::SIMD::SIMD64_16i test Id: 89 - MPOSTINC
OK   UME::SIMD::SIMD64_16i test Id: 90 - MPOSTINC(function)
OK   UME::SIMD::SIMD64_16i test Id: 91 - PREFINC
OK   UME::SIMD::SIMD64_16i test Id: 92 - PREFINC(operator++())
OK   UME::SIMD::SIMD64_16i test Id: 93 - PREFINC(function)
OK   UME::SIMD::SIMD64_16i test Id: 94 - MPREFINC
OK   UME::SIMD::SIMD64_16i test Id: 95 - MPREFINC(function)
OK   UME::SIMD::SIMD64_16i test Id: 96 - SUBV
OK   UME::SIMD::SIMD64_16i test Id: 97 - SUBV(operator-)
OK   UME::SIMD::SIMD64_16i test Id: 98 - SUBV(function)
OK   UME::SIMD::SIMD64_16i test Id: 99 - SUBV gen
OK   UME::SIMD::SIMD64_16i test Id: 100 - SUBV(operator-) gen
OK   UME::SIMD::SIMD64_16i test Id: 101 - SUBV(function) gen
OK   UME::SIMD::SIMD64_16i test Id: 102 - MSUBV
OK   UME::SIMD::SIMD64_16i test Id: 103 - MSUBV(function)
OK   UME::SIMD::SIMD64_16i test Id: 104 - MSUBV gen
OK   UME::SIMD::SIMD64_16i test Id: 105 - MSUBV(function) gen
OK   UME::SIMD::SIMD64_16i test Id: 106 - SUBS gen
OK   UME::SIMD::SIMD64_16i test Id: 107 - SUBS(operator-) gen
OK   UME::SIMD::SIMD64_16i test Id: 108 - SUBS(function) gen
OK   UME::SIMD::SIMD64_16i test Id: 109 - MSUBS
OK   UME::SIMD::SIMD64_16i test Id: 110 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 111 - SUBVA
OK   UME::SIMD::SIMD64_16i test Id: 112 - SUBVA(operator-=)
OK   UME::SIMD::SIMD64_16i test Id: 113 - MSUBVA
OK   UME::SIMD::SIMD64_16i test Id: 114 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD64_16i test Id: 115 - SUBSA
OK   UME::SIMD::SIMD64_16i test Id: 116 - MSUBSA
OK   UME::SIMD::SIMD64_16i test Id: 117 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD64_16i test Id: 118 - SUBFROMV
OK   UME::SIMD::SIMD64_16i test Id: 119 - MSUBFROMV
OK   UME::SIMD::SIMD64_16i test Id: 120 - SUBFROMS
OK   UME::SIMD::SIMD64_16i test Id: 121 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 122 - MSUBFROMS
OK   UME::SIMD::SIMD64_16i test Id: 123 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 124 - SUBFROMVA
OK   UME::SIMD::SIMD64_16i test Id: 125 - MSUBFROMVA
OK   UME::SIMD::SIMD64_16i test Id: 126 - SUBFROMSA
OK   UME::SIMD::SIMD64_16i test Id: 127 - MSUBFROMSA
OK   UME::SIMD::SIMD64_16i test Id: 128 - POSTDEC
OK   UME::SIMD::SIMD64_16i test Id: 129 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD64_16i test Id: 130 - POSTDEC(function)
OK   UME::SIMD::SIMD64_16i test Id: 131 - MPOSTDEC
OK   UME::SIMD::SIMD64_16i test Id: 132 - MPOSTDEC(function)
OK   UME::SIMD::SIMD64_16i test Id: 133 - PREFDEC
OK   UME::SIMD::SIMD64_16i test Id: 134 - PREFDEC(operator--())
OK   UME::SIMD::SIMD64_16i test Id: 135 - PREFDEC(function)
OK   UME::SIMD::SIMD64_16i test Id: 136 - MPREFDEC
OK   UME::SIMD::SIMD64_16i test Id: 137 - MPREFDEC(function)
OK   UME::SIMD::SIMD64_16i test Id: 138 - MULV
OK   UME::SIMD::SIMD64_16i test Id: 139 - MULV(operator*)
OK   UME::SIMD::SIMD64_16i test Id: 140 - MULV(function)
OK   UME::SIMD::SIMD64_16i test Id: 141 - MMULV
OK   UME::SIMD::SIMD64_16i test Id: 142 - MMULV(function)
OK   UME::SIMD::SIMD64_16i test Id: 143 - MULS
OK   UME::SIMD::SIMD64_16i test Id: 144 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 145 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 146 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 147 - MMULS
OK   UME::SIMD::SIMD64_16i test Id: 148 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 149 - MULVA
OK   UME::SIMD::SIMD64_16i test Id: 150 - MULVA(operator*)
OK   UME::SIMD::SIMD64_16i test Id: 151 - MULVA gen
OK   UME::SIMD::SIMD64_16i test Id: 152 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD64_16i test Id: 153 - MMULVA
OK   UME::SIMD::SIMD64_16i test Id: 154 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD64_16i test Id: 155 - MULSA
OK   UME::SIMD::SIMD64_16i test Id: 156 - MULSA(operator*=)
OK   UME::SIMD::SIMD64_16i test Id: 157 - MMULSA
OK   UME::SIMD::SIMD64_16i test Id: 158 - DIVV
OK   UME::SIMD::SIMD64_16i test Id: 159 - DIVV(operator/)
OK   UME::SIMD::SIMD64_16i test Id: 160 - DIVV(function)
OK   UME::SIMD::SIMD64_16i test Id: 161 - MDIVV
OK   UME::SIMD::SIMD64_16i test Id: 162 - MDIVV(function)
OK   UME::SIMD::SIMD64_16i test Id: 163 - DIVS
OK   UME::SIMD::SIMD64_16i test Id: 164 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 165 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 166 - MDIVS
OK   UME::SIMD::SIMD64_16i test Id: 167 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 168 - DIVVA
OK   UME::SIMD::SIMD64_16i test Id: 169 - DIVVA(operator/=)
OK   UME::SIMD::SIMD64_16i test Id: 170 - DIVVA gen
OK   UME::SIMD::SIMD64_16i test Id: 171 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD64_16i test Id: 172 - MDIVVA
OK   UME::SIMD::SIMD64_16i test Id: 173 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD64_16i test Id: 174 - DIVSA
OK   UME::SIMD::SIMD64_16i test Id: 175 - DIVSA(operator/=)
OK   UME::SIMD::SIMD64_16i test Id: 176 - MDIVSA
OK   UME::SIMD::SIMD64_16i test Id: 177 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD64_16i test Id: 178 - RCP
OK   UME::SIMD::SIMD64_16i test Id: 179 - RCP(function)
OK   UME::SIMD::SIMD64_16i test Id: 180 - MRCP
OK   UME::SIMD::SIMD64_16i test Id: 181 - MRCP(function)
OK   UME::SIMD::SIMD64_16i test Id: 182 - RCPS
OK   UME::SIMD::SIMD64_16i test Id: 183 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 184 - RCPS(function)
OK   UME::SIMD::SIMD64_16i test Id: 185 - MRCPS
OK   UME::SIMD::SIMD64_16i test Id: 186 - MRCPS (function)
OK   UME::SIMD::SIMD64_16i test Id: 187 - RCPA
OK   UME::SIMD::SIMD64_16i test Id: 188 - MRCPA
OK   UME::SIMD::SIMD64_16i test Id: 189 - RCPSA
OK   UME::SIMD::SIMD64_16i test Id: 190 - MRCPSA
OK   UME::SIMD::SIMD64_16i test Id: 191 - CMPEQV
OK   UME::SIMD::SIMD64_16i test Id: 192 - CMPEQV(operator==)
OK   UME::SIMD::SIMD64_16i test Id: 193 - CMPEQV(function)
OK   UME::SIMD::SIMD64_16i test Id: 194 - CMPEQS
OK   UME::SIMD::SIMD64_16i test Id: 195 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 196 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 197 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 198 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 199 - CMPNEV
OK   UME::SIMD::SIMD64_16i test Id: 200 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD64_16i test Id: 201 - CMPNEV(function)
OK   UME::SIMD::SIMD64_16i test Id: 202 - CMPNES
OK   UME::SIMD::SIMD64_16i test Id: 203 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 204 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 205 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 206 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 207 - CMPGTV
OK   UME::SIMD::SIMD64_16i test Id: 208 - CMPGTV(operator>)
OK   UME::SIMD::SIMD64_16i test Id: 209 - CMPGTV(function)
OK   UME::SIMD::SIMD64_16i test Id: 210 - CMPGTS
OK   UME::SIMD::SIMD64_16i test Id: 211 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 212 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 213 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 214 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 215 - CMPLTV
OK   UME::SIMD::SIMD64_16i test Id: 216 - CMPLTV(operator<)
OK   UME::SIMD::SIMD64_16i test Id: 217 - CMPLTV(function)
OK   UME::SIMD::SIMD64_16i test Id: 218 - CMPLTS
OK   UME::SIMD::SIMD64_16i test Id: 219 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 220 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 221 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 222 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 223 - CMPGEV
OK   UME::SIMD::SIMD64_16i test Id: 224 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD64_16i test Id: 225 - CMPGEV(function)
OK   UME::SIMD::SIMD64_16i test Id: 226 - CMPGES
OK   UME::SIMD::SIMD64_16i test Id: 227 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 228 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 229 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 230 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 231 - CMPLEV
OK   UME::SIMD::SIMD64_16i test Id: 232 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD64_16i test Id: 233 - CMPLEV(function)
OK   UME::SIMD::SIMD64_16i test Id: 234 - CMPLES
OK   UME::SIMD::SIMD64_16i test Id: 235 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 236 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 237 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 238 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 239 - CMPEV
OK   UME::SIMD::SIMD64_16i test Id: 240 - CMPEV(function)
OK   UME::SIMD::SIMD64_16i test Id: 241 - CMPES
OK   UME::SIMD::SIMD64_16i test Id: 242 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 243 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 244 - HADD
OK   UME::SIMD::SIMD64_16i test Id: 245 - HADD(function)
OK   UME::SIMD::SIMD64_16i test Id: 246 - HADD gen
OK   UME::SIMD::SIMD64_16i test Id: 247 - HADD(function) gen
OK   UME::SIMD::SIMD64_16i test Id: 248 - MHADD gen
OK   UME::SIMD::SIMD64_16i test Id: 249 - MHADD(function) gen
OK   UME::SIMD::SIMD64_16i test Id: 250 - HADDS gen
OK   UME::SIMD::SIMD64_16i test Id: 251 - HADDS(function) gen
OK   UME::SIMD::SIMD64_16i test Id: 252 - MHADD gen
OK   UME::SIMD::SIMD64_16i test Id: 253 - MHADDS(function) gen
OK   UME::SIMD::SIMD64_16i test Id: 254 - HMUL gen
OK   UME::SIMD::SIMD64_16i test Id: 255 - HMUL(function) gen
OK   UME::SIMD::SIMD64_16i test Id: 256 - MHMUL gen
OK   UME::SIMD::SIMD64_16i test Id: 257 - MHMUL(function) gen
OK   UME::SIMD::SIMD64_16i test Id: 258 - HMULS gen
OK   UME::SIMD::SIMD64_16i test Id: 259 - HMULS(function) gen
OK   UME::SIMD::SIMD64_16i test Id: 260 - MHMUL gen
OK   UME::SIMD::SIMD64_16i test Id: 261 - MHMULS(function) gen
OK   UME::SIMD::SIMD64_16i test Id: 262 - FMULADDV
OK   UME::SIMD::SIMD64_16i test Id: 263 - FMULADDV(function)
OK   UME::SIMD::SIMD64_16i test Id: 264 - MFMULADDV
OK   UME::SIMD::SIMD64_16i test Id: 265 - MFMULADDV(function)
OK   UME::SIMD::SIMD64_16i test Id: 266 - FMULSUBV
OK   UME::SIMD::SIMD64_16i test Id: 267 - FMULSUBV(function)
OK   UME::SIMD::SIMD64_16i test Id: 268 - MFMULSUBV
OK   UME::SIMD::SIMD64_16i test Id: 269 - MFMULSUBV(function)
OK   UME::SIMD::SIMD64_16i test Id: 270 - FADDMULV
OK   UME::SIMD::SIMD64_16i test Id: 271 - FADDMULV(function)
OK   UME::SIMD::SIMD64_16i test Id: 272 - MFADDMULV
OK   UME::SIMD::SIMD64_16i test Id: 273 - MFADDMULV(function)
OK   UME::SIMD::SIMD64_16i test Id: 274 - FSUBMULV
OK   UME::SIMD::SIMD64_16i test Id: 275 - FSUBMULV(function)
OK   UME::SIMD::SIMD64_16i test Id: 276 - MFSUBMULV
OK   UME::SIMD::SIMD64_16i test Id: 277 - MFSUBMULV(function)
OK   UME::SIMD::SIMD64_16i test Id: 278 - MAXV
OK   UME::SIMD::SIMD64_16i test Id: 279 - MAXV(function)
OK   UME::SIMD::SIMD64_16i test Id: 280 - MMAXV
OK   UME::SIMD::SIMD64_16i test Id: 281 - MMAXV(function)
OK   UME::SIMD::SIMD64_16i test Id: 282 - MAXS
OK   UME::SIMD::SIMD64_16i test Id: 283 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 284 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 285 - MMAXS
OK   UME::SIMD::SIMD64_16i test Id: 286 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 287 - MAXVA
OK   UME::SIMD::SIMD64_16i test Id: 288 - MMAXVA
OK   UME::SIMD::SIMD64_16i test Id: 289 - MAXSA
OK   UME::SIMD::SIMD64_16i test Id: 290 - MMAXSA
OK   UME::SIMD::SIMD64_16i test Id: 291 - MINV
OK   UME::SIMD::SIMD64_16i test Id: 292 - MINV(function)
OK   UME::SIMD::SIMD64_16i test Id: 293 - MMINV
OK   UME::SIMD::SIMD64_16i test Id: 294 - MMINV(function)
OK   UME::SIMD::SIMD64_16i test Id: 295 - MINS
OK   UME::SIMD::SIMD64_16i test Id: 296 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD64_16i test Id: 297 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD64_16i test Id: 298 - MMINS
OK   UME::SIMD::SIMD64_16i test Id: 299 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 300 - MINVA
OK   UME::SIMD::SIMD64_16i test Id: 301 - MMINVA
OK   UME::SIMD::SIMD64_16i test Id: 302 - MINSA
OK   UME::SIMD::SIMD64_16i test Id: 303 - MMINSA
OK   UME::SIMD::SIMD64_16i test Id: 304 - HMAX
OK   UME::SIMD::SIMD64_16i test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD64_16i test Id: 306 - HMAX
OK   UME::SIMD::SIMD64_16i test Id: 307 - HMAX(function)
OK   UME::SIMD::SIMD64_16i test Id: 308 - MHMAX
OK   UME::SIMD::SIMD64_16i test Id: 309 - MHMAX(function)
OK   UME::SIMD::SIMD64_16i test Id: 310 - IMAX
OK   UME::SIMD::SIMD64_16i test Id: 311 - IMAX(function)
OK   UME::SIMD::SIMD64_16i test Id: 312 - MIMAX
OK   UME::SIMD::SIMD64_16i test Id: 313 - MIMAX(function)
OK   UME::SIMD::SIMD64_16i test Id: 314 - HMIN
OK   UME::SIMD::SIMD64_16i test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD64_16i test Id: 316 - HMIN
OK   UME::SIMD::SIMD64_16i test Id: 317 - HMIN(function)
OK   UME::SIMD::SIMD64_16i test Id: 318 - MHMIN gen
OK   UME::SIMD::SIMD64_16i test Id: 319 - MHMIN(function) gen
OK   UME::SIMD::SIMD64_16i test Id: 320 - IMIN
OK   UME::SIMD::SIMD64_16i test Id: 321 - IMIN(function)
OK   UME::SIMD::SIMD64_16i test Id: 322 - MIMIN
OK   UME::SIMD::SIMD64_16i test Id: 323 - MIMIN(function)
OK   UME::SIMD::SIMD64_16i test Id: 324 - REMV gen
OK   UME::SIMD::SIMD64_16i test Id: 325 - REMV(operator%) gen
OK   UME::SIMD::SIMD64_16i test Id: 326 - REMV(function) gen
OK   UME::SIMD::SIMD64_16i test Id: 327 - MREMV gen
OK   UME::SIMD::SIMD64_16i test Id: 328 - MREMV(function) gen
OK   UME::SIMD::SIMD64_16i test Id: 329 - REMS gen
OK   UME::SIMD::SIMD64_16i test Id: 330 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD64_16i test Id: 331 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD64_16i test Id: 332 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD64_16i test Id: 333 - LANDV gen
OK   UME::SIMD::SIMD64_16i test Id: 334 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD64_16i test Id: 335 - LORV gen
OK   UME::SIMD::SIMD64_16i test Id: 336 - LORV gen (operator ||)
OK   UME::SIMD::SIMD64_16i test Id: 337 - BANDV
OK   UME::SIMD::SIMD64_16i test Id: 338 - BANDV(operator&)
OK   UME::SIMD::SIMD64_16i test Id: 339 - BANDV(function)
OK   UME::SIMD::SIMD64_16i test Id: 340 - MBANDV
OK   UME::SIMD::SIMD64_16i test Id: 341 - MBANDV
OK   UME::SIMD::SIMD64_16i test Id: 342 - BANDS
OK   UME::SIMD::SIMD64_16i test Id: 343 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 344 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 345 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 346 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 347 - MBANDS
OK   UME::SIMD::SIMD64_16i test Id: 348 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 349 - BANDVA
OK   UME::SIMD::SIMD64_16i test Id: 350 - MBANDVA
OK   UME::SIMD::SIMD64_16i test Id: 351 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD64_16i test Id: 352 - BANDSA
OK   UME::SIMD::SIMD64_16i test Id: 353 - MBANDSA
OK   UME::SIMD::SIMD64_16i test Id: 354 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD64_16i test Id: 355 - BORV
OK   UME::SIMD::SIMD64_16i test Id: 356 - BORV(operator |)
OK   UME::SIMD::SIMD64_16i test Id: 357 - BORV(function)
OK   UME::SIMD::SIMD64_16i test Id: 358 - MBORV
OK   UME::SIMD::SIMD64_16i test Id: 359 - MBORV(function)
OK   UME::SIMD::SIMD64_16i test Id: 360 - BORS
OK   UME::SIMD::SIMD64_16i test Id: 361 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 362 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 363 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 364 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 365 - MBORS
OK   UME::SIMD::SIMD64_16i test Id: 366 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 367 - BORVA
OK   UME::SIMD::SIMD64_16i test Id: 368 - BORVA(operator|=)
OK   UME::SIMD::SIMD64_16i test Id: 369 - MBORVA
OK   UME::SIMD::SIMD64_16i test Id: 370 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD64_16i test Id: 371 - BORSA
OK   UME::SIMD::SIMD64_16i test Id: 372 - BORSA(operator|=)
OK   UME::SIMD::SIMD64_16i test Id: 373 - MBORSA
OK   UME::SIMD::SIMD64_16i test Id: 374 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD64_16i test Id: 375 - BXORV
OK   UME::SIMD::SIMD64_16i test Id: 376 - BXORV(operator^
OK   UME::SIMD::SIMD64_16i test Id: 377 - BXORV(function
OK   UME::SIMD::SIMD64_16i test Id: 378 - MBXORV
OK   UME::SIMD::SIMD64_16i test Id: 379 - MBXORV(function)
OK   UME::SIMD::SIMD64_16i test Id: 380 - BXORS
OK   UME::SIMD::SIMD64_16i test Id: 381 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 382 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 383 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 384 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 385 - MBXORS
OK   UME::SIMD::SIMD64_16i test Id: 386 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 387 - BXORVA
OK   UME::SIMD::SIMD64_16i test Id: 388 - BXORVA(operator^=)
OK   UME::SIMD::SIMD64_16i test Id: 389 - MBXORVA
OK   UME::SIMD::SIMD64_16i test Id: 390 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD64_16i test Id: 391 - BXORSA
OK   UME::SIMD::SIMD64_16i test Id: 392 - BXORSA(operator^=)
OK   UME::SIMD::SIMD64_16i test Id: 393 - MBXORSA
OK   UME::SIMD::SIMD64_16i test Id: 394 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD64_16i test Id: 395 - BNOT
OK   UME::SIMD::SIMD64_16i test Id: 396 - BNOT(operator!)
OK   UME::SIMD::SIMD64_16i test Id: 397 - BNOT(function)
OK   UME::SIMD::SIMD64_16i test Id: 398 - MBNOT
OK   UME::SIMD::SIMD64_16i test Id: 399 - MBNOT(function)
OK   UME::SIMD::SIMD64_16i test Id: 400 - BNOTA
OK   UME::SIMD::SIMD64_16i test Id: 401 - MBNOTA
OK   UME::SIMD::SIMD64_16i test Id: 402 - BANDNOTV
OK   UME::SIMD::SIMD64_16i test Id: 403 - BANDNOTV (function)
OK   UME::SIMD::SIMD64_16i test Id: 404 - MBANDNOTV
OK   UME::SIMD::SIMD64_16i test Id: 405 - MBANDNOTV (function)
OK   UME::SIMD::SIMD64_16i test Id: 406 - BANDNOTS
OK   UME::SIMD::SIMD64_16i test Id: 407 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD64_16i test Id: 408 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD64_16i test Id: 409 - MBANDNOTS
OK   UME::SIMD::SIMD64_16i test Id: 410 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD64_16i test Id: 411 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD64_16i test Id: 412 - BANDNOTVA
OK   UME::SIMD::SIMD64_16i test Id: 413 - MBANDNOTVA
OK   UME::SIMD::SIMD64_16i test Id: 414 - BANDNOTSA
OK   UME::SIMD::SIMD64_16i test Id: 415 - MBANDNOTSA
OK   UME::SIMD::SIMD64_16i test Id: 416 - HBAND
OK   UME::SIMD::SIMD64_16i test Id: 417 - HBAND
OK   UME::SIMD::SIMD64_16i test Id: 418 - MHBAND
OK   UME::SIMD::SIMD64_16i test Id: 419 - MHBAND(function)
OK   UME::SIMD::SIMD64_16i test Id: 420 - HBANDS
OK   UME::SIMD::SIMD64_16i test Id: 421 - MHBANDS
OK   UME::SIMD::SIMD64_16i test Id: 422 - HBOR
OK   UME::SIMD::SIMD64_16i test Id: 423 - HBOR(function)
OK   UME::SIMD::SIMD64_16i test Id: 424 - MHBOR
OK   UME::SIMD::SIMD64_16i test Id: 425 - MHBOR(function)
OK   UME::SIMD::SIMD64_16i test Id: 426 - HBORS
OK   UME::SIMD::SIMD64_16i test Id: 427 - MHBORS
OK   UME::SIMD::SIMD64_16i test Id: 428 - HBXOR
OK   UME::SIMD::SIMD64_16i test Id: 429 - HBXOR(function)
OK   UME::SIMD::SIMD64_16i test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD64_16i test Id: 431 - MHBXOR
OK   UME::SIMD::SIMD64_16i test Id: 432 - HBXORS
OK   UME::SIMD::SIMD64_16i test Id: 433 - MHBXORS
OK   UME::SIMD::SIMD64_16i test Id: 434 - GATHERU
OK   UME::SIMD::SIMD64_16i test Id: 435 - MGATHERU
OK   UME::SIMD::SIMD64_16i test Id: 436 - GATHERS
OK   UME::SIMD::SIMD64_16i test Id: 437 - MGATHERS
OK   UME::SIMD::SIMD64_16i test Id: 438 - GATHERV
OK   UME::SIMD::SIMD64_16i test Id: 439 - MGATHERV
OK   UME::SIMD::SIMD64_16i test Id: 440 - SCATTERU
OK   UME::SIMD::SIMD64_16i test Id: 441 - MSCATTERU
OK   UME::SIMD::SIMD64_16i test Id: 442 - SCATTERS
OK   UME::SIMD::SIMD64_16i test Id: 443 - MSCATTERS
OK   UME::SIMD::SIMD64_16i test Id: 444 - SCATTERV
OK   UME::SIMD::SIMD64_16i test Id: 445 - MSCATTERV
OK   UME::SIMD::SIMD64_16i test Id: 446 - LSHV gen
OK   UME::SIMD::SIMD64_16i test Id: 447 - LSHV (function) gen
OK   UME::SIMD::SIMD64_16i test Id: 448 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD64_16i test Id: 449 - MLSHV gen
OK   UME::SIMD::SIMD64_16i test Id: 450 - MLSHV (function) gen
OK   UME::SIMD::SIMD64_16i test Id: 451 - LSHS gen
OK   UME::SIMD::SIMD64_16i test Id: 452 - LSHS (function) gen
OK   UME::SIMD::SIMD64_16i test Id: 453 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD64_16i test Id: 454 - MLSHS gen
OK   UME::SIMD::SIMD64_16i test Id: 455 - MLSHS (function) gen
OK   UME::SIMD::SIMD64_16i test Id: 456 - LSHVA gen
OK   UME::SIMD::SIMD64_16i test Id: 457 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD64_16i test Id: 458 - MLSHVA gen
OK   UME::SIMD::SIMD64_16i test Id: 459 - LSHSA gen
OK   UME::SIMD::SIMD64_16i test Id: 460 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD64_16i test Id: 461 - MLSHSA gen
OK   UME::SIMD::SIMD64_16i test Id: 462 - RSHV gen
OK   UME::SIMD::SIMD64_16i test Id: 463 - RSHV (function) gen
OK   UME::SIMD::SIMD64_16i test Id: 464 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD64_16i test Id: 465 - MRSHV gen
OK   UME::SIMD::SIMD64_16i test Id: 466 - MRSHV (function) gen
OK   UME::SIMD::SIMD64_16i test Id: 467 - RSHS gen
OK   UME::SIMD::SIMD64_16i test Id: 468 - RSHS (function) gen
OK   UME::SIMD::SIMD64_16i test Id: 469 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD64_16i test Id: 470 - MRSHS gen
OK   UME::SIMD::SIMD64_16i test Id: 471 - MRSHS (function) gen
OK   UME::SIMD::SIMD64_16i test Id: 472 - RSHVA gen
OK   UME::SIMD::SIMD64_16i test Id: 473 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD64_16i test Id: 474 - MRSHVA gen
OK   UME::SIMD::SIMD64_16i test Id: 475 - RSHSA gen
OK   UME::SIMD::SIMD64_16i test Id: 476 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD64_16i test Id: 477 - MRSHSA gen
OK   UME::SIMD::SIMD64_16i test Id: 478 - ROLV
OK   UME::SIMD::SIMD64_16i test Id: 479 - ROLV(function)
OK   UME::SIMD::SIMD64_16i test Id: 480 - MROLV
OK   UME::SIMD::SIMD64_16i test Id: 481 - MROLV(function)
OK   UME::SIMD::SIMD64_16i test Id: 482 - ROLS
OK   UME::SIMD::SIMD64_16i test Id: 483 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 484 - MROLS
OK   UME::SIMD::SIMD64_16i test Id: 485 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 486 - ROLVA
OK   UME::SIMD::SIMD64_16i test Id: 487 - MROLVA
OK   UME::SIMD::SIMD64_16i test Id: 488 - ROLSA
OK   UME::SIMD::SIMD64_16i test Id: 489 - MROLSA
OK   UME::SIMD::SIMD64_16i test Id: 490 - RORV
OK   UME::SIMD::SIMD64_16i test Id: 491 - RORV(function)
OK   UME::SIMD::SIMD64_16i test Id: 492 - MRORV
OK   UME::SIMD::SIMD64_16i test Id: 493 - MRORV(function)
OK   UME::SIMD::SIMD64_16i test Id: 494 - RORS
OK   UME::SIMD::SIMD64_16i test Id: 495 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 496 - MRORS
OK   UME::SIMD::SIMD64_16i test Id: 497 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD64_16i test Id: 498 - RORVA
OK   UME::SIMD::SIMD64_16i test Id: 499 - MRORVA
OK   UME::SIMD::SIMD64_16i test Id: 500 - RORSA
OK   UME::SIMD::SIMD64_16i test Id: 501 - MRORSA
OK   UME::SIMD::SIMD64_16i test Id: 502 - NEG
OK   UME::SIMD::SIMD64_16i test Id: 503 - NEG(operator-)
OK   UME::SIMD::SIMD64_16i test Id: 504 - NEG(function)
OK   UME::SIMD::SIMD64_16i test Id: 505 - MNEG
OK   UME::SIMD::SIMD64_16i test Id: 506 - MNEG(function)
OK   UME::SIMD::SIMD64_16i test Id: 507 - NEGA
OK   UME::SIMD::SIMD64_16i test Id: 508 - MNEGA
OK   UME::SIMD::SIMD64_16i test Id: 509 - ABS
OK   UME::SIMD::SIMD64_16i test Id: 510 - ABS(function)
OK   UME::SIMD::SIMD64_16i test Id: 511 - MABS
OK   UME::SIMD::SIMD64_16i test Id: 512 - MABS(function)
OK   UME::SIMD::SIMD64_16i test Id: 513 - ABSA
OK   UME::SIMD::SIMD64_16i test Id: 514 - MABSA
OK   UME::SIMD::SIMD64_16i test Id: 515 - COPYSIGN gen
OK   UME::SIMD::SIMD64_16i test Id: 516 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD64_16i test Id: 517 - ITOU
OK   UME::SIMD::SIMD64_16i test Id: 518 - PACK
OK   UME::SIMD::SIMD64_16i test Id: 519 - PACKLO
OK   UME::SIMD::SIMD64_16i test Id: 520 - PACKHI
OK   UME::SIMD::SIMD64_16i test Id: 521 - UNPACK
OK   UME::SIMD::SIMD64_16i test Id: 522 - UNPACKLO
OK   UME::SIMD::SIMD64_16i test Id: 523 - UNPACKHi
OK   UME::SIMD::SIMD64_16i test Id: 524 - DEGRADE
OK   UME::SIMD::SIMD32_32u test Id: 1 - SET-CONSTR gen
OK   UME::SIMD::SIMD32_32u test Id: 2 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD32_32u test Id: 3 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD32_32u test Id: 4 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD32_32u test Id: 5 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD32_32u test Id: 6 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD32_32u test Id: 7 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD32_32u test Id: 8 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD32_32u test Id: 9 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD32_32u test Id: 10 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD32_32u test Id: 11 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD32_32u test Id: 12 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD32_32u test Id: 13 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD32_32u test Id: 14 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD32_32u test Id: 15 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD32_32u test Id: 16 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD32_32u test Id: 17 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD32_32u test Id: 18 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD32_32u test Id: 19 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD32_32u test Id: 20 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD32_32u test Id: 21 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD32_32u test Id: 22 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD32_32u test Id: 23 - INSERT
OK   UME::SIMD::SIMD32_32u test Id: 24 - INSERT(operator[] =)
OK   UME::SIMD::SIMD32_32u test Id: 25 - EXTRACT
OK   UME::SIMD::SIMD32_32u test Id: 26 - EXTRACT(operator[])
OK   UME::SIMD::SIMD32_32u test Id: 27 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD32_32u test Id: 28 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD32_32u test Id: 29 - ASSIGNV
OK   UME::SIMD::SIMD32_32u test Id: 30 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD32_32u test Id: 31 - MASSIGNV
OK   UME::SIMD::SIMD32_32u test Id: 32 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD32_32u test Id: 33 - ASSIGNS
OK   UME::SIMD::SIMD32_32u test Id: 34 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD32_32u test Id: 35 - MASSIGNS
OK   UME::SIMD::SIMD32_32u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD32_32u test Id: 37 - LOAD/STORE
OK   UME::SIMD::SIMD32_32u test Id: 38 - MLOAD
OK   UME::SIMD::SIMD32_32u test Id: 39 - MSTORE
OK   UME::SIMD::SIMD32_32u test Id: 40 - LOADA/STOREA
OK   UME::SIMD::SIMD32_32u test Id: 41 - MLOADA
OK   UME::SIMD::SIMD32_32u test Id: 42 - MSTOREA
OK   UME::SIMD::SIMD32_32u test Id: 43 - SWIZZLE
OK   UME::SIMD::SIMD32_32u test Id: 44 - SORTA
OK   UME::SIMD::SIMD32_32u test Id: 45 - SORTD
OK   UME::SIMD::SIMD32_32u test Id: 46 - BLENDV gen
OK   UME::SIMD::SIMD32_32u test Id: 47 - ADDV
OK   UME::SIMD::SIMD32_32u test Id: 48 - ADDV(operator+)
OK   UME::SIMD::SIMD32_32u test Id: 49 - ADDV(function)
OK   UME::SIMD::SIMD32_32u test Id: 50 - ADDV gen
OK   UME::SIMD::SIMD32_32u test Id: 51 - ADDV(operator+) gen
OK   UME::SIMD::SIMD32_32u test Id: 52 - ADDV(function) gen
OK   UME::SIMD::SIMD32_32u test Id: 53 - MADDV
OK   UME::SIMD::SIMD32_32u test Id: 54 - MADDV(function)
OK   UME::SIMD::SIMD32_32u test Id: 55 - MADDV gen
OK   UME::SIMD::SIMD32_32u test Id: 56 - MADDV(function) gen
OK   UME::SIMD::SIMD32_32u test Id: 57 - ADDS
OK   UME::SIMD::SIMD32_32u test Id: 58 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 59 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 60 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD32_32u test Id: 61 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD32_32u test Id: 62 - ADDS gen
OK   UME::SIMD::SIMD32_32u test Id: 63 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD32_32u test Id: 64 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD32_32u test Id: 65 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD32_32u test Id: 66 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD32_32u test Id: 67 - MADDS
OK   UME::SIMD::SIMD32_32u test Id: 68 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 69 - MADDS gen
OK   UME::SIMD::SIMD32_32u test Id: 70 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD32_32u test Id: 71 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD32_32u test Id: 72 - ADDVA
OK   UME::SIMD::SIMD32_32u test Id: 73 - ADDVA(operator+=)
OK   UME::SIMD::SIMD32_32u test Id: 74 - ADDVA gen
OK   UME::SIMD::SIMD32_32u test Id: 75 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD32_32u test Id: 76 - MADDVA
OK   UME::SIMD::SIMD32_32u test Id: 77 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD32_32u test Id: 78 - ADDSA
OK   UME::SIMD::SIMD32_32u test Id: 79 - ADDSA(operator+=)
OK   UME::SIMD::SIMD32_32u test Id: 80 - MADDSA
OK   UME::SIMD::SIMD32_32u test Id: 81 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD32_32u test Id: 82 - SADDV gen
OK   UME::SIMD::SIMD32_32u test Id: 83 - SADDV(function) gen
OK   UME::SIMD::SIMD32_32u test Id: 84 - POSTINC
OK   UME::SIMD::SIMD32_32u test Id: 85 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD32_32u test Id: 86 - POSTINC(function)
OK   UME::SIMD::SIMD32_32u test Id: 87 - MPOSTINC
OK   UME::SIMD::SIMD32_32u test Id: 88 - MPOSTINC(function)
OK   UME::SIMD::SIMD32_32u test Id: 89 - PREFINC
OK   UME::SIMD::SIMD32_32u test Id: 90 - PREFINC(operator++())
OK   UME::SIMD::SIMD32_32u test Id: 91 - PREFINC(function)
OK   UME::SIMD::SIMD32_32u test Id: 92 - MPREFINC
OK   UME::SIMD::SIMD32_32u test Id: 93 - MPREFINC(function)
OK   UME::SIMD::SIMD32_32u test Id: 94 - SUBV
OK   UME::SIMD::SIMD32_32u test Id: 95 - SUBV(operator-)
OK   UME::SIMD::SIMD32_32u test Id: 96 - SUBV(function)
OK   UME::SIMD::SIMD32_32u test Id: 97 - SUBV gen
OK   UME::SIMD::SIMD32_32u test Id: 98 - SUBV(operator-) gen
OK   UME::SIMD::SIMD32_32u test Id: 99 - SUBV(function) gen
OK   UME::SIMD::SIMD32_32u test Id: 100 - MSUBV
OK   UME::SIMD::SIMD32_32u test Id: 101 - MSUBV(function)
OK   UME::SIMD::SIMD32_32u test Id: 102 - MSUBV gen
OK   UME::SIMD::SIMD32_32u test Id: 103 - MSUBV(function) gen
OK   UME::SIMD::SIMD32_32u test Id: 104 - SUBS gen
OK   UME::SIMD::SIMD32_32u test Id: 105 - SUBS(operator-) gen
OK   UME::SIMD::SIMD32_32u test Id: 106 - SUBS(function) gen
OK   UME::SIMD::SIMD32_32u test Id: 107 - MSUBS
OK   UME::SIMD::SIMD32_32u test Id: 108 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 109 - SUBVA
OK   UME::SIMD::SIMD32_32u test Id: 110 - SUBVA(operator-=)
OK   UME::SIMD::SIMD32_32u test Id: 111 - MSUBVA
OK   UME::SIMD::SIMD32_32u test Id: 112 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD32_32u test Id: 113 - SUBSA
OK   UME::SIMD::SIMD32_32u test Id: 114 - MSUBSA
OK   UME::SIMD::SIMD32_32u test Id: 115 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD32_32u test Id: 116 - SUBFROMV
OK   UME::SIMD::SIMD32_32u test Id: 117 - MSUBFROMV
OK   UME::SIMD::SIMD32_32u test Id: 118 - SUBFROMS
OK   UME::SIMD::SIMD32_32u test Id: 119 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 120 - MSUBFROMS
OK   UME::SIMD::SIMD32_32u test Id: 121 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 122 - SUBFROMVA
OK   UME::SIMD::SIMD32_32u test Id: 123 - MSUBFROMVA
OK   UME::SIMD::SIMD32_32u test Id: 124 - SUBFROMSA
OK   UME::SIMD::SIMD32_32u test Id: 125 - MSUBFROMSA
OK   UME::SIMD::SIMD32_32u test Id: 126 - POSTDEC
OK   UME::SIMD::SIMD32_32u test Id: 127 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD32_32u test Id: 128 - POSTDEC(function)
OK   UME::SIMD::SIMD32_32u test Id: 129 - MPOSTDEC
OK   UME::SIMD::SIMD32_32u test Id: 130 - MPOSTDEC(function)
OK   UME::SIMD::SIMD32_32u test Id: 131 - PREFDEC
OK   UME::SIMD::SIMD32_32u test Id: 132 - PREFDEC(operator--())
OK   UME::SIMD::SIMD32_32u test Id: 133 - PREFDEC(function)
OK   UME::SIMD::SIMD32_32u test Id: 134 - MPREFDEC
OK   UME::SIMD::SIMD32_32u test Id: 135 - MPREFDEC(function)
OK   UME::SIMD::SIMD32_32u test Id: 136 - MULV
OK   UME::SIMD::SIMD32_32u test Id: 137 - MULV(operator*)
OK   UME::SIMD::SIMD32_32u test Id: 138 - MULV(function)
OK   UME::SIMD::SIMD32_32u test Id: 139 - MMULV
OK   UME::SIMD::SIMD32_32u test Id: 140 - MMULV(function)
OK   UME::SIMD::SIMD32_32u test Id: 141 - MULS
OK   UME::SIMD::SIMD32_32u test Id: 142 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 143 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 144 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 145 - MMULS
OK   UME::SIMD::SIMD32_32u test Id: 146 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 147 - MULVA
OK   UME::SIMD::SIMD32_32u test Id: 148 - MULVA(operator*)
OK   UME::SIMD::SIMD32_32u test Id: 149 - MULVA gen
OK   UME::SIMD::SIMD32_32u test Id: 150 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD32_32u test Id: 151 - MMULVA
OK   UME::SIMD::SIMD32_32u test Id: 152 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD32_32u test Id: 153 - MULSA
OK   UME::SIMD::SIMD32_32u test Id: 154 - MULSA(operator*=)
OK   UME::SIMD::SIMD32_32u test Id: 155 - MMULSA
OK   UME::SIMD::SIMD32_32u test Id: 156 - DIVV
OK   UME::SIMD::SIMD32_32u test Id: 157 - DIVV(operator/)
OK   UME::SIMD::SIMD32_32u test Id: 158 - DIVV(function)
OK   UME::SIMD::SIMD32_32u test Id: 159 - MDIVV
OK   UME::SIMD::SIMD32_32u test Id: 160 - MDIVV(function)
OK   UME::SIMD::SIMD32_32u test Id: 161 - DIVS
OK   UME::SIMD::SIMD32_32u test Id: 162 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 163 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 164 - MDIVS
OK   UME::SIMD::SIMD32_32u test Id: 165 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 166 - DIVVA
OK   UME::SIMD::SIMD32_32u test Id: 167 - DIVVA(operator/=)
OK   UME::SIMD::SIMD32_32u test Id: 168 - DIVVA gen
OK   UME::SIMD::SIMD32_32u test Id: 169 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD32_32u test Id: 170 - MDIVVA
OK   UME::SIMD::SIMD32_32u test Id: 171 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD32_32u test Id: 172 - DIVSA
OK   UME::SIMD::SIMD32_32u test Id: 173 - DIVSA(operator/=)
OK   UME::SIMD::SIMD32_32u test Id: 174 - MDIVSA
OK   UME::SIMD::SIMD32_32u test Id: 175 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD32_32u test Id: 176 - RCP
OK   UME::SIMD::SIMD32_32u test Id: 177 - RCP(function)
OK   UME::SIMD::SIMD32_32u test Id: 178 - MRCP
OK   UME::SIMD::SIMD32_32u test Id: 179 - MRCP(function)
OK   UME::SIMD::SIMD32_32u test Id: 180 - RCPS
OK   UME::SIMD::SIMD32_32u test Id: 181 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 182 - RCPS(function)
OK   UME::SIMD::SIMD32_32u test Id: 183 - MRCPS
OK   UME::SIMD::SIMD32_32u test Id: 184 - MRCPS (function)
OK   UME::SIMD::SIMD32_32u test Id: 185 - RCPA
OK   UME::SIMD::SIMD32_32u test Id: 186 - MRCPA
OK   UME::SIMD::SIMD32_32u test Id: 187 - RCPSA
OK   UME::SIMD::SIMD32_32u test Id: 188 - MRCPSA
OK   UME::SIMD::SIMD32_32u test Id: 189 - CMPEQV
OK   UME::SIMD::SIMD32_32u test Id: 190 - CMPEQV(operator==)
OK   UME::SIMD::SIMD32_32u test Id: 191 - CMPEQV(function)
OK   UME::SIMD::SIMD32_32u test Id: 192 - CMPEQS
OK   UME::SIMD::SIMD32_32u test Id: 193 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 194 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 195 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 196 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 197 - CMPNEV
OK   UME::SIMD::SIMD32_32u test Id: 198 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD32_32u test Id: 199 - CMPNEV(function)
OK   UME::SIMD::SIMD32_32u test Id: 200 - CMPNES
OK   UME::SIMD::SIMD32_32u test Id: 201 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 202 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 203 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 204 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 205 - CMPGTV
OK   UME::SIMD::SIMD32_32u test Id: 206 - CMPGTV(operator>)
OK   UME::SIMD::SIMD32_32u test Id: 207 - CMPGTV(function)
OK   UME::SIMD::SIMD32_32u test Id: 208 - CMPGTS
OK   UME::SIMD::SIMD32_32u test Id: 209 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 210 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 211 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 212 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 213 - CMPLTV
OK   UME::SIMD::SIMD32_32u test Id: 214 - CMPLTV(operator<)
OK   UME::SIMD::SIMD32_32u test Id: 215 - CMPLTV(function)
OK   UME::SIMD::SIMD32_32u test Id: 216 - CMPLTS
OK   UME::SIMD::SIMD32_32u test Id: 217 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 218 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 219 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 220 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 221 - CMPGEV
OK   UME::SIMD::SIMD32_32u test Id: 222 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD32_32u test Id: 223 - CMPGEV(function)
OK   UME::SIMD::SIMD32_32u test Id: 224 - CMPGES
OK   UME::SIMD::SIMD32_32u test Id: 225 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 226 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 227 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 228 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 229 - CMPLEV
OK   UME::SIMD::SIMD32_32u test Id: 230 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD32_32u test Id: 231 - CMPLEV(function)
OK   UME::SIMD::SIMD32_32u test Id: 232 - CMPLES
OK   UME::SIMD::SIMD32_32u test Id: 233 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 234 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 235 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 236 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 237 - CMPEV
OK   UME::SIMD::SIMD32_32u test Id: 238 - CMPEV(function)
OK   UME::SIMD::SIMD32_32u test Id: 239 - CMPES
OK   UME::SIMD::SIMD32_32u test Id: 240 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 241 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 242 - HADD
OK   UME::SIMD::SIMD32_32u test Id: 243 - HADD(function)
OK   UME::SIMD::SIMD32_32u test Id: 244 - HADD gen
OK   UME::SIMD::SIMD32_32u test Id: 245 - HADD(function) gen
OK   UME::SIMD::SIMD32_32u test Id: 246 - MHADD gen
OK   UME::SIMD::SIMD32_32u test Id: 247 - MHADD(function) gen
OK   UME::SIMD::SIMD32_32u test Id: 248 - HADDS gen
OK   UME::SIMD::SIMD32_32u test Id: 249 - HADDS(function) gen
OK   UME::SIMD::SIMD32_32u test Id: 250 - MHADD gen
OK   UME::SIMD::SIMD32_32u test Id: 251 - MHADDS(function) gen
OK   UME::SIMD::SIMD32_32u test Id: 252 - HMUL gen
OK   UME::SIMD::SIMD32_32u test Id: 253 - HMUL(function) gen
OK   UME::SIMD::SIMD32_32u test Id: 254 - MHMUL gen
OK   UME::SIMD::SIMD32_32u test Id: 255 - MHMUL(function) gen
OK   UME::SIMD::SIMD32_32u test Id: 256 - HMULS gen
OK   UME::SIMD::SIMD32_32u test Id: 257 - HMULS(function) gen
OK   UME::SIMD::SIMD32_32u test Id: 258 - MHMUL gen
OK   UME::SIMD::SIMD32_32u test Id: 259 - MHMULS(function) gen
OK   UME::SIMD::SIMD32_32u test Id: 260 - FMULADDV
OK   UME::SIMD::SIMD32_32u test Id: 261 - FMULADDV(function)
OK   UME::SIMD::SIMD32_32u test Id: 262 - MFMULADDV
OK   UME::SIMD::SIMD32_32u test Id: 263 - MFMULADDV(function)
OK   UME::SIMD::SIMD32_32u test Id: 264 - FMULSUBV
OK   UME::SIMD::SIMD32_32u test Id: 265 - FMULSUBV(function)
OK   UME::SIMD::SIMD32_32u test Id: 266 - MFMULSUBV
OK   UME::SIMD::SIMD32_32u test Id: 267 - MFMULSUBV(function)
OK   UME::SIMD::SIMD32_32u test Id: 268 - FADDMULV
OK   UME::SIMD::SIMD32_32u test Id: 269 - FADDMULV(function)
OK   UME::SIMD::SIMD32_32u test Id: 270 - MFADDMULV
OK   UME::SIMD::SIMD32_32u test Id: 271 - MFADDMULV(function)
OK   UME::SIMD::SIMD32_32u test Id: 272 - FSUBMULV
OK   UME::SIMD::SIMD32_32u test Id: 273 - FSUBMULV(function)
OK   UME::SIMD::SIMD32_32u test Id: 274 - MFSUBMULV
OK   UME::SIMD::SIMD32_32u test Id: 275 - MFSUBMULV(function)
OK   UME::SIMD::SIMD32_32u test Id: 276 - MAXV
OK   UME::SIMD::SIMD32_32u test Id: 277 - MAXV(function)
OK   UME::SIMD::SIMD32_32u test Id: 278 - MMAXV
OK   UME::SIMD::SIMD32_32u test Id: 279 - MMAXV(function)
OK   UME::SIMD::SIMD32_32u test Id: 280 - MAXS
OK   UME::SIMD::SIMD32_32u test Id: 281 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 282 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 283 - MMAXS
OK   UME::SIMD::SIMD32_32u test Id: 284 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 285 - MAXVA
OK   UME::SIMD::SIMD32_32u test Id: 286 - MMAXVA
OK   UME::SIMD::SIMD32_32u test Id: 287 - MAXSA
OK   UME::SIMD::SIMD32_32u test Id: 288 - MMAXSA
OK   UME::SIMD::SIMD32_32u test Id: 289 - MINV
OK   UME::SIMD::SIMD32_32u test Id: 290 - MINV(function)
OK   UME::SIMD::SIMD32_32u test Id: 291 - MMINV
OK   UME::SIMD::SIMD32_32u test Id: 292 - MMINV(function)
OK   UME::SIMD::SIMD32_32u test Id: 293 - MINS
OK   UME::SIMD::SIMD32_32u test Id: 294 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD32_32u test Id: 295 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD32_32u test Id: 296 - MMINS
OK   UME::SIMD::SIMD32_32u test Id: 297 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 298 - MINVA
OK   UME::SIMD::SIMD32_32u test Id: 299 - MMINVA
OK   UME::SIMD::SIMD32_32u test Id: 300 - MINSA
OK   UME::SIMD::SIMD32_32u test Id: 301 - MMINSA
OK   UME::SIMD::SIMD32_32u test Id: 302 - HMAX
OK   UME::SIMD::SIMD32_32u test Id: 303 - HMAX(function)
OK   UME::SIMD::SIMD32_32u test Id: 304 - HMAX
OK   UME::SIMD::SIMD32_32u test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD32_32u test Id: 306 - MHMAX
OK   UME::SIMD::SIMD32_32u test Id: 307 - MHMAX(function)
OK   UME::SIMD::SIMD32_32u test Id: 308 - IMAX
OK   UME::SIMD::SIMD32_32u test Id: 309 - IMAX(function)
OK   UME::SIMD::SIMD32_32u test Id: 310 - MIMAX
OK   UME::SIMD::SIMD32_32u test Id: 311 - MIMAX(function)
OK   UME::SIMD::SIMD32_32u test Id: 312 - HMIN
OK   UME::SIMD::SIMD32_32u test Id: 313 - HMIN(function)
OK   UME::SIMD::SIMD32_32u test Id: 314 - HMIN
OK   UME::SIMD::SIMD32_32u test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD32_32u test Id: 316 - MHMIN gen
OK   UME::SIMD::SIMD32_32u test Id: 317 - MHMIN(function) gen
OK   UME::SIMD::SIMD32_32u test Id: 318 - IMIN
OK   UME::SIMD::SIMD32_32u test Id: 319 - IMIN(function)
OK   UME::SIMD::SIMD32_32u test Id: 320 - MIMIN
OK   UME::SIMD::SIMD32_32u test Id: 321 - MIMIN(function)
OK   UME::SIMD::SIMD32_32u test Id: 322 - REMV gen
OK   UME::SIMD::SIMD32_32u test Id: 323 - REMV(operator%) gen
OK   UME::SIMD::SIMD32_32u test Id: 324 - REMV(function) gen
OK   UME::SIMD::SIMD32_32u test Id: 325 - MREMV gen
OK   UME::SIMD::SIMD32_32u test Id: 326 - MREMV(function) gen
OK   UME::SIMD::SIMD32_32u test Id: 327 - REMS gen
OK   UME::SIMD::SIMD32_32u test Id: 328 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD32_32u test Id: 329 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD32_32u test Id: 330 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD32_32u test Id: 331 - LANDV gen
OK   UME::SIMD::SIMD32_32u test Id: 332 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD32_32u test Id: 333 - LORV gen
OK   UME::SIMD::SIMD32_32u test Id: 334 - LORV gen (operator ||)
OK   UME::SIMD::SIMD32_32u test Id: 335 - BANDV
OK   UME::SIMD::SIMD32_32u test Id: 336 - BANDV(operator&)
OK   UME::SIMD::SIMD32_32u test Id: 337 - BANDV(function)
OK   UME::SIMD::SIMD32_32u test Id: 338 - MBANDV
OK   UME::SIMD::SIMD32_32u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD32_32u test Id: 340 - BANDS
OK   UME::SIMD::SIMD32_32u test Id: 341 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 342 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 343 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 344 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 345 - MBANDS
OK   UME::SIMD::SIMD32_32u test Id: 346 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 347 - BANDVA
OK   UME::SIMD::SIMD32_32u test Id: 348 - MBANDVA
OK   UME::SIMD::SIMD32_32u test Id: 349 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD32_32u test Id: 350 - BANDSA
OK   UME::SIMD::SIMD32_32u test Id: 351 - MBANDSA
OK   UME::SIMD::SIMD32_32u test Id: 352 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD32_32u test Id: 353 - BORV
OK   UME::SIMD::SIMD32_32u test Id: 354 - BORV(operator |)
OK   UME::SIMD::SIMD32_32u test Id: 355 - BORV(function)
OK   UME::SIMD::SIMD32_32u test Id: 356 - MBORV
OK   UME::SIMD::SIMD32_32u test Id: 357 - MBORV(function)
OK   UME::SIMD::SIMD32_32u test Id: 358 - BORS
OK   UME::SIMD::SIMD32_32u test Id: 359 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 360 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 361 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 362 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 363 - MBORS
OK   UME::SIMD::SIMD32_32u test Id: 364 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 365 - BORVA
OK   UME::SIMD::SIMD32_32u test Id: 366 - BORVA(operator|=)
OK   UME::SIMD::SIMD32_32u test Id: 367 - MBORVA
OK   UME::SIMD::SIMD32_32u test Id: 368 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD32_32u test Id: 369 - BORSA
OK   UME::SIMD::SIMD32_32u test Id: 370 - BORSA(operator|=)
OK   UME::SIMD::SIMD32_32u test Id: 371 - MBORSA
OK   UME::SIMD::SIMD32_32u test Id: 372 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD32_32u test Id: 373 - BXORV
OK   UME::SIMD::SIMD32_32u test Id: 374 - BXORV(operator^
OK   UME::SIMD::SIMD32_32u test Id: 375 - BXORV(function
OK   UME::SIMD::SIMD32_32u test Id: 376 - MBXORV
OK   UME::SIMD::SIMD32_32u test Id: 377 - MBXORV(function)
OK   UME::SIMD::SIMD32_32u test Id: 378 - BXORS
OK   UME::SIMD::SIMD32_32u test Id: 379 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 380 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 381 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 382 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 383 - MBXORS
OK   UME::SIMD::SIMD32_32u test Id: 384 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 385 - BXORVA
OK   UME::SIMD::SIMD32_32u test Id: 386 - BXORVA(operator^=)
OK   UME::SIMD::SIMD32_32u test Id: 387 - MBXORVA
OK   UME::SIMD::SIMD32_32u test Id: 388 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD32_32u test Id: 389 - BXORSA
OK   UME::SIMD::SIMD32_32u test Id: 390 - BXORSA(operator^=)
OK   UME::SIMD::SIMD32_32u test Id: 391 - MBXORSA
OK   UME::SIMD::SIMD32_32u test Id: 392 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD32_32u test Id: 393 - BNOT
OK   UME::SIMD::SIMD32_32u test Id: 394 - BNOT(operator!)
OK   UME::SIMD::SIMD32_32u test Id: 395 - BNOT(function)
OK   UME::SIMD::SIMD32_32u test Id: 396 - MBNOT
OK   UME::SIMD::SIMD32_32u test Id: 397 - MBNOT(function)
OK   UME::SIMD::SIMD32_32u test Id: 398 - BNOTA
OK   UME::SIMD::SIMD32_32u test Id: 399 - MBNOTA
OK   UME::SIMD::SIMD32_32u test Id: 400 - BANDNOTV
OK   UME::SIMD::SIMD32_32u test Id: 401 - BANDNOTV (function)
OK   UME::SIMD::SIMD32_32u test Id: 402 - MBANDNOTV
OK   UME::SIMD::SIMD32_32u test Id: 403 - MBANDNOTV (function)
OK   UME::SIMD::SIMD32_32u test Id: 404 - BANDNOTS
OK   UME::SIMD::SIMD32_32u test Id: 405 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD32_32u test Id: 406 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD32_32u test Id: 407 - MBANDNOTS
OK   UME::SIMD::SIMD32_32u test Id: 408 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD32_32u test Id: 409 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD32_32u test Id: 410 - BANDNOTVA
OK   UME::SIMD::SIMD32_32u test Id: 411 - MBANDNOTVA
OK   UME::SIMD::SIMD32_32u test Id: 412 - BANDNOTSA
OK   UME::SIMD::SIMD32_32u test Id: 413 - MBANDNOTSA
OK   UME::SIMD::SIMD32_32u test Id: 414 - HBAND
OK   UME::SIMD::SIMD32_32u test Id: 415 - HBAND
OK   UME::SIMD::SIMD32_32u test Id: 416 - MHBAND
OK   UME::SIMD::SIMD32_32u test Id: 417 - MHBAND(function)
OK   UME::SIMD::SIMD32_32u test Id: 418 - HBANDS
OK   UME::SIMD::SIMD32_32u test Id: 419 - MHBANDS
OK   UME::SIMD::SIMD32_32u test Id: 420 - HBOR
OK   UME::SIMD::SIMD32_32u test Id: 421 - HBOR(function)
OK   UME::SIMD::SIMD32_32u test Id: 422 - MHBOR
OK   UME::SIMD::SIMD32_32u test Id: 423 - MHBOR(function)
OK   UME::SIMD::SIMD32_32u test Id: 424 - HBORS
OK   UME::SIMD::SIMD32_32u test Id: 425 - MHBORS
OK   UME::SIMD::SIMD32_32u test Id: 426 - HBXOR
OK   UME::SIMD::SIMD32_32u test Id: 427 - HBXOR(function)
OK   UME::SIMD::SIMD32_32u test Id: 428 - MHBXOR
OK   UME::SIMD::SIMD32_32u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD32_32u test Id: 430 - HBXORS
OK   UME::SIMD::SIMD32_32u test Id: 431 - MHBXORS
OK   UME::SIMD::SIMD32_32u test Id: 432 - GATHERU
OK   UME::SIMD::SIMD32_32u test Id: 433 - MGATHERU
OK   UME::SIMD::SIMD32_32u test Id: 434 - GATHERS
OK   UME::SIMD::SIMD32_32u test Id: 435 - MGATHERS
OK   UME::SIMD::SIMD32_32u test Id: 436 - GATHERV
OK   UME::SIMD::SIMD32_32u test Id: 437 - MGATHERV
OK   UME::SIMD::SIMD32_32u test Id: 438 - SCATTERU
OK   UME::SIMD::SIMD32_32u test Id: 439 - MSCATTERU
OK   UME::SIMD::SIMD32_32u test Id: 440 - SCATTERS
OK   UME::SIMD::SIMD32_32u test Id: 441 - MSCATTERS
OK   UME::SIMD::SIMD32_32u test Id: 442 - SCATTERV
OK   UME::SIMD::SIMD32_32u test Id: 443 - MSCATTERV
OK   UME::SIMD::SIMD32_32u test Id: 444 - LSHV gen
OK   UME::SIMD::SIMD32_32u test Id: 445 - LSHV (function) gen
OK   UME::SIMD::SIMD32_32u test Id: 446 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD32_32u test Id: 447 - MLSHV gen
OK   UME::SIMD::SIMD32_32u test Id: 448 - MLSHV (function) gen
OK   UME::SIMD::SIMD32_32u test Id: 449 - LSHS gen
OK   UME::SIMD::SIMD32_32u test Id: 450 - LSHS (function) gen
OK   UME::SIMD::SIMD32_32u test Id: 451 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD32_32u test Id: 452 - MLSHS gen
OK   UME::SIMD::SIMD32_32u test Id: 453 - MLSHS (function) gen
OK   UME::SIMD::SIMD32_32u test Id: 454 - LSHVA gen
OK   UME::SIMD::SIMD32_32u test Id: 455 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD32_32u test Id: 456 - MLSHVA gen
OK   UME::SIMD::SIMD32_32u test Id: 457 - LSHSA gen
OK   UME::SIMD::SIMD32_32u test Id: 458 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD32_32u test Id: 459 - MLSHSA gen
OK   UME::SIMD::SIMD32_32u test Id: 460 - RSHV gen
OK   UME::SIMD::SIMD32_32u test Id: 461 - RSHV (function) gen
OK   UME::SIMD::SIMD32_32u test Id: 462 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD32_32u test Id: 463 - MRSHV gen
OK   UME::SIMD::SIMD32_32u test Id: 464 - MRSHV (function) gen
OK   UME::SIMD::SIMD32_32u test Id: 465 - RSHS gen
OK   UME::SIMD::SIMD32_32u test Id: 466 - RSHS (function) gen
OK   UME::SIMD::SIMD32_32u test Id: 467 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD32_32u test Id: 468 - MRSHS gen
OK   UME::SIMD::SIMD32_32u test Id: 469 - MRSHS (function) gen
OK   UME::SIMD::SIMD32_32u test Id: 470 - RSHVA gen
OK   UME::SIMD::SIMD32_32u test Id: 471 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD32_32u test Id: 472 - MRSHVA gen
OK   UME::SIMD::SIMD32_32u test Id: 473 - RSHSA gen
OK   UME::SIMD::SIMD32_32u test Id: 474 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD32_32u test Id: 475 - MRSHSA gen
OK   UME::SIMD::SIMD32_32u test Id: 476 - ROLV
OK   UME::SIMD::SIMD32_32u test Id: 477 - ROLV(function)
OK   UME::SIMD::SIMD32_32u test Id: 478 - MROLV
OK   UME::SIMD::SIMD32_32u test Id: 479 - MROLV(function)
OK   UME::SIMD::SIMD32_32u test Id: 480 - ROLS
OK   UME::SIMD::SIMD32_32u test Id: 481 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 482 - MROLS
OK   UME::SIMD::SIMD32_32u test Id: 483 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 484 - ROLVA
OK   UME::SIMD::SIMD32_32u test Id: 485 - MROLVA
OK   UME::SIMD::SIMD32_32u test Id: 486 - ROLSA
OK   UME::SIMD::SIMD32_32u test Id: 487 - MROLSA
OK   UME::SIMD::SIMD32_32u test Id: 488 - RORV
OK   UME::SIMD::SIMD32_32u test Id: 489 - RORV(function)
OK   UME::SIMD::SIMD32_32u test Id: 490 - MRORV
OK   UME::SIMD::SIMD32_32u test Id: 491 - MRORV(function)
OK   UME::SIMD::SIMD32_32u test Id: 492 - RORS
OK   UME::SIMD::SIMD32_32u test Id: 493 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 494 - MRORS
OK   UME::SIMD::SIMD32_32u test Id: 495 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32u test Id: 496 - RORVA
OK   UME::SIMD::SIMD32_32u test Id: 497 - MRORVA
OK   UME::SIMD::SIMD32_32u test Id: 498 - RORSA
OK   UME::SIMD::SIMD32_32u test Id: 499 - MRORSA
OK   UME::SIMD::SIMD32_32u test Id: 500 - UTOI
OK   UME::SIMD::SIMD32_32u test Id: 501 - UTOF
OK   UME::SIMD::SIMD32_32u test Id: 502 - PACK
OK   UME::SIMD::SIMD32_32u test Id: 503 - PACKLO
OK   UME::SIMD::SIMD32_32u test Id: 504 - PACKHI
OK   UME::SIMD::SIMD32_32u test Id: 505 - UNPACK
OK   UME::SIMD::SIMD32_32u test Id: 506 - UNPACKLO
OK   UME::SIMD::SIMD32_32u test Id: 507 - UNPACKHi
OK   UME::SIMD::SIMD32_32u test Id: 508 - DEGRADE
OK   UME::SIMD::SIMD32_32u test Id: 509 - ZERO-CONSTR
OK   UME::SIMD::SIMD32_32i test Id: 1 - SET-CONSTR gen
OK   UME::SIMD::SIMD32_32i test Id: 2 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD32_32i test Id: 3 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD32_32i test Id: 4 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD32_32i test Id: 5 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD32_32i test Id: 6 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD32_32i test Id: 7 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD32_32i test Id: 8 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD32_32i test Id: 9 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD32_32i test Id: 10 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD32_32i test Id: 11 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD32_32i test Id: 12 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD32_32i test Id: 13 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD32_32i test Id: 14 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD32_32i test Id: 15 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD32_32i test Id: 16 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD32_32i test Id: 17 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD32_32i test Id: 18 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD32_32i test Id: 19 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD32_32i test Id: 20 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD32_32i test Id: 21 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD32_32i test Id: 22 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD32_32i test Id: 23 - INSERT
OK   UME::SIMD::SIMD32_32i test Id: 24 - INSERT(operator[] =)
OK   UME::SIMD::SIMD32_32i test Id: 25 - EXTRACT
OK   UME::SIMD::SIMD32_32i test Id: 26 - EXTRACT(operator[])
OK   UME::SIMD::SIMD32_32i test Id: 27 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD32_32i test Id: 28 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD32_32i test Id: 29 - ASSIGNV
OK   UME::SIMD::SIMD32_32i test Id: 30 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD32_32i test Id: 31 - MASSIGNV
OK   UME::SIMD::SIMD32_32i test Id: 32 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD32_32i test Id: 33 - ASSIGNS
OK   UME::SIMD::SIMD32_32i test Id: 34 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD32_32i test Id: 35 - MASSIGNS
OK   UME::SIMD::SIMD32_32i test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD32_32i test Id: 37 - LOAD/STORE
OK   UME::SIMD::SIMD32_32i test Id: 38 - MLOAD
OK   UME::SIMD::SIMD32_32i test Id: 39 - MSTORE
OK   UME::SIMD::SIMD32_32i test Id: 40 - LOADA/STOREA
OK   UME::SIMD::SIMD32_32i test Id: 41 - MLOADA
OK   UME::SIMD::SIMD32_32i test Id: 42 - MSTOREA
OK   UME::SIMD::SIMD32_32i test Id: 43 - SWIZZLE
OK   UME::SIMD::SIMD32_32i test Id: 44 - SORTA
OK   UME::SIMD::SIMD32_32i test Id: 45 - SORTD
OK   UME::SIMD::SIMD32_32i test Id: 46 - BLENDV gen
OK   UME::SIMD::SIMD32_32i test Id: 47 - ADDV
OK   UME::SIMD::SIMD32_32i test Id: 48 - ADDV(operator+)
OK   UME::SIMD::SIMD32_32i test Id: 49 - ADDV(function)
OK   UME::SIMD::SIMD32_32i test Id: 50 - ADDV gen
OK   UME::SIMD::SIMD32_32i test Id: 51 - ADDV(operator+) gen
OK   UME::SIMD::SIMD32_32i test Id: 52 - ADDV(function) gen
OK   UME::SIMD::SIMD32_32i test Id: 53 - MADDV
OK   UME::SIMD::SIMD32_32i test Id: 54 - MADDV(function)
OK   UME::SIMD::SIMD32_32i test Id: 55 - MADDV gen
OK   UME::SIMD::SIMD32_32i test Id: 56 - MADDV(function) gen
OK   UME::SIMD::SIMD32_32i test Id: 57 - ADDS
OK   UME::SIMD::SIMD32_32i test Id: 58 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 59 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 60 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD32_32i test Id: 61 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD32_32i test Id: 62 - ADDS gen
OK   UME::SIMD::SIMD32_32i test Id: 63 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD32_32i test Id: 64 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD32_32i test Id: 65 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD32_32i test Id: 66 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD32_32i test Id: 67 - MADDS
OK   UME::SIMD::SIMD32_32i test Id: 68 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 69 - MADDS gen
OK   UME::SIMD::SIMD32_32i test Id: 70 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD32_32i test Id: 71 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD32_32i test Id: 72 - ADDVA
OK   UME::SIMD::SIMD32_32i test Id: 73 - ADDVA(operator+=)
OK   UME::SIMD::SIMD32_32i test Id: 74 - ADDVA gen
OK   UME::SIMD::SIMD32_32i test Id: 75 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD32_32i test Id: 76 - MADDVA
OK   UME::SIMD::SIMD32_32i test Id: 77 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD32_32i test Id: 78 - ADDSA
OK   UME::SIMD::SIMD32_32i test Id: 79 - ADDSA(operator+=)
OK   UME::SIMD::SIMD32_32i test Id: 80 - MADDSA
OK   UME::SIMD::SIMD32_32i test Id: 81 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD32_32i test Id: 82 - SADDV gen
OK   UME::SIMD::SIMD32_32i test Id: 83 - SADDV(function) gen
OK   UME::SIMD::SIMD32_32i test Id: 84 - POSTINC
OK   UME::SIMD::SIMD32_32i test Id: 85 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD32_32i test Id: 86 - POSTINC(function)
OK   UME::SIMD::SIMD32_32i test Id: 87 - MPOSTINC
OK   UME::SIMD::SIMD32_32i test Id: 88 - MPOSTINC(function)
OK   UME::SIMD::SIMD32_32i test Id: 89 - PREFINC
OK   UME::SIMD::SIMD32_32i test Id: 90 - PREFINC(operator++())
OK   UME::SIMD::SIMD32_32i test Id: 91 - PREFINC(function)
OK   UME::SIMD::SIMD32_32i test Id: 92 - MPREFINC
OK   UME::SIMD::SIMD32_32i test Id: 93 - MPREFINC(function)
OK   UME::SIMD::SIMD32_32i test Id: 94 - SUBV
OK   UME::SIMD::SIMD32_32i test Id: 95 - SUBV(operator-)
OK   UME::SIMD::SIMD32_32i test Id: 96 - SUBV(function)
OK   UME::SIMD::SIMD32_32i test Id: 97 - SUBV gen
OK   UME::SIMD::SIMD32_32i test Id: 98 - SUBV(operator-) gen
OK   UME::SIMD::SIMD32_32i test Id: 99 - SUBV(function) gen
OK   UME::SIMD::SIMD32_32i test Id: 100 - MSUBV
OK   UME::SIMD::SIMD32_32i test Id: 101 - MSUBV(function)
OK   UME::SIMD::SIMD32_32i test Id: 102 - MSUBV gen
OK   UME::SIMD::SIMD32_32i test Id: 103 - MSUBV(function) gen
OK   UME::SIMD::SIMD32_32i test Id: 104 - SUBS gen
OK   UME::SIMD::SIMD32_32i test Id: 105 - SUBS(operator-) gen
OK   UME::SIMD::SIMD32_32i test Id: 106 - SUBS(function) gen
OK   UME::SIMD::SIMD32_32i test Id: 107 - MSUBS
OK   UME::SIMD::SIMD32_32i test Id: 108 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 109 - SUBVA
OK   UME::SIMD::SIMD32_32i test Id: 110 - SUBVA(operator-=)
OK   UME::SIMD::SIMD32_32i test Id: 111 - MSUBVA
OK   UME::SIMD::SIMD32_32i test Id: 112 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD32_32i test Id: 113 - SUBSA
OK   UME::SIMD::SIMD32_32i test Id: 114 - MSUBSA
OK   UME::SIMD::SIMD32_32i test Id: 115 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD32_32i test Id: 116 - SUBFROMV
OK   UME::SIMD::SIMD32_32i test Id: 117 - MSUBFROMV
OK   UME::SIMD::SIMD32_32i test Id: 118 - SUBFROMS
OK   UME::SIMD::SIMD32_32i test Id: 119 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 120 - MSUBFROMS
OK   UME::SIMD::SIMD32_32i test Id: 121 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 122 - SUBFROMVA
OK   UME::SIMD::SIMD32_32i test Id: 123 - MSUBFROMVA
OK   UME::SIMD::SIMD32_32i test Id: 124 - SUBFROMSA
OK   UME::SIMD::SIMD32_32i test Id: 125 - MSUBFROMSA
OK   UME::SIMD::SIMD32_32i test Id: 126 - POSTDEC
OK   UME::SIMD::SIMD32_32i test Id: 127 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD32_32i test Id: 128 - POSTDEC(function)
OK   UME::SIMD::SIMD32_32i test Id: 129 - MPOSTDEC
OK   UME::SIMD::SIMD32_32i test Id: 130 - MPOSTDEC(function)
OK   UME::SIMD::SIMD32_32i test Id: 131 - PREFDEC
OK   UME::SIMD::SIMD32_32i test Id: 132 - PREFDEC(operator--())
OK   UME::SIMD::SIMD32_32i test Id: 133 - PREFDEC(function)
OK   UME::SIMD::SIMD32_32i test Id: 134 - MPREFDEC
OK   UME::SIMD::SIMD32_32i test Id: 135 - MPREFDEC(function)
OK   UME::SIMD::SIMD32_32i test Id: 136 - MULV
OK   UME::SIMD::SIMD32_32i test Id: 137 - MULV(operator*)
OK   UME::SIMD::SIMD32_32i test Id: 138 - MULV(function)
OK   UME::SIMD::SIMD32_32i test Id: 139 - MMULV
OK   UME::SIMD::SIMD32_32i test Id: 140 - MMULV(function)
OK   UME::SIMD::SIMD32_32i test Id: 141 - MULS
OK   UME::SIMD::SIMD32_32i test Id: 142 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 143 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 144 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 145 - MMULS
OK   UME::SIMD::SIMD32_32i test Id: 146 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 147 - MULVA
OK   UME::SIMD::SIMD32_32i test Id: 148 - MULVA(operator*)
OK   UME::SIMD::SIMD32_32i test Id: 149 - MULVA gen
OK   UME::SIMD::SIMD32_32i test Id: 150 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD32_32i test Id: 151 - MMULVA
OK   UME::SIMD::SIMD32_32i test Id: 152 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD32_32i test Id: 153 - MULSA
OK   UME::SIMD::SIMD32_32i test Id: 154 - MULSA(operator*=)
OK   UME::SIMD::SIMD32_32i test Id: 155 - MMULSA
OK   UME::SIMD::SIMD32_32i test Id: 156 - DIVV
OK   UME::SIMD::SIMD32_32i test Id: 157 - DIVV(operator/)
OK   UME::SIMD::SIMD32_32i test Id: 158 - DIVV(function)
OK   UME::SIMD::SIMD32_32i test Id: 159 - MDIVV
OK   UME::SIMD::SIMD32_32i test Id: 160 - MDIVV(function)
OK   UME::SIMD::SIMD32_32i test Id: 161 - DIVS
OK   UME::SIMD::SIMD32_32i test Id: 162 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 163 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 164 - MDIVS
OK   UME::SIMD::SIMD32_32i test Id: 165 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 166 - DIVVA
OK   UME::SIMD::SIMD32_32i test Id: 167 - DIVVA(operator/=)
OK   UME::SIMD::SIMD32_32i test Id: 168 - DIVVA gen
OK   UME::SIMD::SIMD32_32i test Id: 169 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD32_32i test Id: 170 - MDIVVA
OK   UME::SIMD::SIMD32_32i test Id: 171 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD32_32i test Id: 172 - DIVSA
OK   UME::SIMD::SIMD32_32i test Id: 173 - DIVSA(operator/=)
OK   UME::SIMD::SIMD32_32i test Id: 174 - MDIVSA
OK   UME::SIMD::SIMD32_32i test Id: 175 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD32_32i test Id: 176 - RCP
OK   UME::SIMD::SIMD32_32i test Id: 177 - RCP(function)
OK   UME::SIMD::SIMD32_32i test Id: 178 - MRCP
OK   UME::SIMD::SIMD32_32i test Id: 179 - MRCP(function)
OK   UME::SIMD::SIMD32_32i test Id: 180 - RCPS
OK   UME::SIMD::SIMD32_32i test Id: 181 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 182 - RCPS(function)
OK   UME::SIMD::SIMD32_32i test Id: 183 - MRCPS
OK   UME::SIMD::SIMD32_32i test Id: 184 - MRCPS (function)
OK   UME::SIMD::SIMD32_32i test Id: 185 - RCPA
OK   UME::SIMD::SIMD32_32i test Id: 186 - MRCPA
OK   UME::SIMD::SIMD32_32i test Id: 187 - RCPSA
OK   UME::SIMD::SIMD32_32i test Id: 188 - MRCPSA
OK   UME::SIMD::SIMD32_32i test Id: 189 - CMPEQV
OK   UME::SIMD::SIMD32_32i test Id: 190 - CMPEQV(operator==)
OK   UME::SIMD::SIMD32_32i test Id: 191 - CMPEQV(function)
OK   UME::SIMD::SIMD32_32i test Id: 192 - CMPEQS
OK   UME::SIMD::SIMD32_32i test Id: 193 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 194 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 195 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 196 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 197 - CMPNEV
OK   UME::SIMD::SIMD32_32i test Id: 198 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD32_32i test Id: 199 - CMPNEV(function)
OK   UME::SIMD::SIMD32_32i test Id: 200 - CMPNES
OK   UME::SIMD::SIMD32_32i test Id: 201 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 202 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 203 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 204 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 205 - CMPGTV
OK   UME::SIMD::SIMD32_32i test Id: 206 - CMPGTV(operator>)
OK   UME::SIMD::SIMD32_32i test Id: 207 - CMPGTV(function)
OK   UME::SIMD::SIMD32_32i test Id: 208 - CMPGTS
OK   UME::SIMD::SIMD32_32i test Id: 209 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 210 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 211 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 212 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 213 - CMPLTV
OK   UME::SIMD::SIMD32_32i test Id: 214 - CMPLTV(operator<)
OK   UME::SIMD::SIMD32_32i test Id: 215 - CMPLTV(function)
OK   UME::SIMD::SIMD32_32i test Id: 216 - CMPLTS
OK   UME::SIMD::SIMD32_32i test Id: 217 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 218 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 219 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 220 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 221 - CMPGEV
OK   UME::SIMD::SIMD32_32i test Id: 222 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD32_32i test Id: 223 - CMPGEV(function)
OK   UME::SIMD::SIMD32_32i test Id: 224 - CMPGES
OK   UME::SIMD::SIMD32_32i test Id: 225 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 226 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 227 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 228 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 229 - CMPLEV
OK   UME::SIMD::SIMD32_32i test Id: 230 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD32_32i test Id: 231 - CMPLEV(function)
OK   UME::SIMD::SIMD32_32i test Id: 232 - CMPLES
OK   UME::SIMD::SIMD32_32i test Id: 233 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 234 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 235 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 236 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 237 - CMPEV
OK   UME::SIMD::SIMD32_32i test Id: 238 - CMPEV(function)
OK   UME::SIMD::SIMD32_32i test Id: 239 - CMPES
OK   UME::SIMD::SIMD32_32i test Id: 240 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 241 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 242 - HADD
OK   UME::SIMD::SIMD32_32i test Id: 243 - HADD(function)
OK   UME::SIMD::SIMD32_32i test Id: 244 - HADD gen
OK   UME::SIMD::SIMD32_32i test Id: 245 - HADD(function) gen
OK   UME::SIMD::SIMD32_32i test Id: 246 - MHADD gen
OK   UME::SIMD::SIMD32_32i test Id: 247 - MHADD(function) gen
OK   UME::SIMD::SIMD32_32i test Id: 248 - HADDS gen
OK   UME::SIMD::SIMD32_32i test Id: 249 - HADDS(function) gen
OK   UME::SIMD::SIMD32_32i test Id: 250 - MHADD gen
OK   UME::SIMD::SIMD32_32i test Id: 251 - MHADDS(function) gen
OK   UME::SIMD::SIMD32_32i test Id: 252 - HMUL gen
OK   UME::SIMD::SIMD32_32i test Id: 253 - HMUL(function) gen
OK   UME::SIMD::SIMD32_32i test Id: 254 - MHMUL gen
OK   UME::SIMD::SIMD32_32i test Id: 255 - MHMUL(function) gen
OK   UME::SIMD::SIMD32_32i test Id: 256 - HMULS gen
OK   UME::SIMD::SIMD32_32i test Id: 257 - HMULS(function) gen
OK   UME::SIMD::SIMD32_32i test Id: 258 - MHMUL gen
OK   UME::SIMD::SIMD32_32i test Id: 259 - MHMULS(function) gen
OK   UME::SIMD::SIMD32_32i test Id: 260 - FMULADDV
OK   UME::SIMD::SIMD32_32i test Id: 261 - FMULADDV(function)
OK   UME::SIMD::SIMD32_32i test Id: 262 - MFMULADDV
OK   UME::SIMD::SIMD32_32i test Id: 263 - MFMULADDV(function)
OK   UME::SIMD::SIMD32_32i test Id: 264 - FMULSUBV
OK   UME::SIMD::SIMD32_32i test Id: 265 - FMULSUBV(function)
OK   UME::SIMD::SIMD32_32i test Id: 266 - MFMULSUBV
OK   UME::SIMD::SIMD32_32i test Id: 267 - MFMULSUBV(function)
OK   UME::SIMD::SIMD32_32i test Id: 268 - FADDMULV
OK   UME::SIMD::SIMD32_32i test Id: 269 - FADDMULV(function)
OK   UME::SIMD::SIMD32_32i test Id: 270 - MFADDMULV
OK   UME::SIMD::SIMD32_32i test Id: 271 - MFADDMULV(function)
OK   UME::SIMD::SIMD32_32i test Id: 272 - FSUBMULV
OK   UME::SIMD::SIMD32_32i test Id: 273 - FSUBMULV(function)
OK   UME::SIMD::SIMD32_32i test Id: 274 - MFSUBMULV
OK   UME::SIMD::SIMD32_32i test Id: 275 - MFSUBMULV(function)
OK   UME::SIMD::SIMD32_32i test Id: 276 - MAXV
OK   UME::SIMD::SIMD32_32i test Id: 277 - MAXV(function)
OK   UME::SIMD::SIMD32_32i test Id: 278 - MMAXV
OK   UME::SIMD::SIMD32_32i test Id: 279 - MMAXV(function)
OK   UME::SIMD::SIMD32_32i test Id: 280 - MAXS
OK   UME::SIMD::SIMD32_32i test Id: 281 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 282 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 283 - MMAXS
OK   UME::SIMD::SIMD32_32i test Id: 284 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 285 - MAXVA
OK   UME::SIMD::SIMD32_32i test Id: 286 - MMAXVA
OK   UME::SIMD::SIMD32_32i test Id: 287 - MAXSA
OK   UME::SIMD::SIMD32_32i test Id: 288 - MMAXSA
OK   UME::SIMD::SIMD32_32i test Id: 289 - MINV
OK   UME::SIMD::SIMD32_32i test Id: 290 - MINV(function)
OK   UME::SIMD::SIMD32_32i test Id: 291 - MMINV
OK   UME::SIMD::SIMD32_32i test Id: 292 - MMINV(function)
OK   UME::SIMD::SIMD32_32i test Id: 293 - MINS
OK   UME::SIMD::SIMD32_32i test Id: 294 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD32_32i test Id: 295 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD32_32i test Id: 296 - MMINS
OK   UME::SIMD::SIMD32_32i test Id: 297 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 298 - MINVA
OK   UME::SIMD::SIMD32_32i test Id: 299 - MMINVA
OK   UME::SIMD::SIMD32_32i test Id: 300 - MINSA
OK   UME::SIMD::SIMD32_32i test Id: 301 - MMINSA
OK   UME::SIMD::SIMD32_32i test Id: 302 - HMAX
OK   UME::SIMD::SIMD32_32i test Id: 303 - HMAX(function)
OK   UME::SIMD::SIMD32_32i test Id: 304 - HMAX
OK   UME::SIMD::SIMD32_32i test Id: 305 - HMAX(function)
OK   UME::SIMD::SIMD32_32i test Id: 306 - MHMAX
OK   UME::SIMD::SIMD32_32i test Id: 307 - MHMAX(function)
OK   UME::SIMD::SIMD32_32i test Id: 308 - IMAX
OK   UME::SIMD::SIMD32_32i test Id: 309 - IMAX(function)
OK   UME::SIMD::SIMD32_32i test Id: 310 - MIMAX
OK   UME::SIMD::SIMD32_32i test Id: 311 - MIMAX(function)
OK   UME::SIMD::SIMD32_32i test Id: 312 - HMIN
OK   UME::SIMD::SIMD32_32i test Id: 313 - HMIN(function)
OK   UME::SIMD::SIMD32_32i test Id: 314 - HMIN
OK   UME::SIMD::SIMD32_32i test Id: 315 - HMIN(function)
OK   UME::SIMD::SIMD32_32i test Id: 316 - MHMIN gen
OK   UME::SIMD::SIMD32_32i test Id: 317 - MHMIN(function) gen
OK   UME::SIMD::SIMD32_32i test Id: 318 - IMIN
OK   UME::SIMD::SIMD32_32i test Id: 319 - IMIN(function)
OK   UME::SIMD::SIMD32_32i test Id: 320 - MIMIN
OK   UME::SIMD::SIMD32_32i test Id: 321 - MIMIN(function)
OK   UME::SIMD::SIMD32_32i test Id: 322 - REMV gen
OK   UME::SIMD::SIMD32_32i test Id: 323 - REMV(operator%) gen
OK   UME::SIMD::SIMD32_32i test Id: 324 - REMV(function) gen
OK   UME::SIMD::SIMD32_32i test Id: 325 - MREMV gen
OK   UME::SIMD::SIMD32_32i test Id: 326 - MREMV(function) gen
OK   UME::SIMD::SIMD32_32i test Id: 327 - REMS gen
OK   UME::SIMD::SIMD32_32i test Id: 328 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD32_32i test Id: 329 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD32_32i test Id: 330 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD32_32i test Id: 331 - LANDV gen
OK   UME::SIMD::SIMD32_32i test Id: 332 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD32_32i test Id: 333 - LORV gen
OK   UME::SIMD::SIMD32_32i test Id: 334 - LORV gen (operator ||)
OK   UME::SIMD::SIMD32_32i test Id: 335 - BANDV
OK   UME::SIMD::SIMD32_32i test Id: 336 - BANDV(operator&)
OK   UME::SIMD::SIMD32_32i test Id: 337 - BANDV(function)
OK   UME::SIMD::SIMD32_32i test Id: 338 - MBANDV
OK   UME::SIMD::SIMD32_32i test Id: 339 - MBANDV
OK   UME::SIMD::SIMD32_32i test Id: 340 - BANDS
OK   UME::SIMD::SIMD32_32i test Id: 341 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 342 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 343 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 344 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 345 - MBANDS
OK   UME::SIMD::SIMD32_32i test Id: 346 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 347 - BANDVA
OK   UME::SIMD::SIMD32_32i test Id: 348 - MBANDVA
OK   UME::SIMD::SIMD32_32i test Id: 349 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD32_32i test Id: 350 - BANDSA
OK   UME::SIMD::SIMD32_32i test Id: 351 - MBANDSA
OK   UME::SIMD::SIMD32_32i test Id: 352 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD32_32i test Id: 353 - BORV
OK   UME::SIMD::SIMD32_32i test Id: 354 - BORV(operator |)
OK   UME::SIMD::SIMD32_32i test Id: 355 - BORV(function)
OK   UME::SIMD::SIMD32_32i test Id: 356 - MBORV
OK   UME::SIMD::SIMD32_32i test Id: 357 - MBORV(function)
OK   UME::SIMD::SIMD32_32i test Id: 358 - BORS
OK   UME::SIMD::SIMD32_32i test Id: 359 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 360 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 361 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 362 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 363 - MBORS
OK   UME::SIMD::SIMD32_32i test Id: 364 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 365 - BORVA
OK   UME::SIMD::SIMD32_32i test Id: 366 - BORVA(operator|=)
OK   UME::SIMD::SIMD32_32i test Id: 367 - MBORVA
OK   UME::SIMD::SIMD32_32i test Id: 368 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD32_32i test Id: 369 - BORSA
OK   UME::SIMD::SIMD32_32i test Id: 370 - BORSA(operator|=)
OK   UME::SIMD::SIMD32_32i test Id: 371 - MBORSA
OK   UME::SIMD::SIMD32_32i test Id: 372 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD32_32i test Id: 373 - BXORV
OK   UME::SIMD::SIMD32_32i test Id: 374 - BXORV(operator^
OK   UME::SIMD::SIMD32_32i test Id: 375 - BXORV(function
OK   UME::SIMD::SIMD32_32i test Id: 376 - MBXORV
OK   UME::SIMD::SIMD32_32i test Id: 377 - MBXORV(function)
OK   UME::SIMD::SIMD32_32i test Id: 378 - BXORS
OK   UME::SIMD::SIMD32_32i test Id: 379 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 380 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 381 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 382 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 383 - MBXORS
OK   UME::SIMD::SIMD32_32i test Id: 384 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 385 - BXORVA
OK   UME::SIMD::SIMD32_32i test Id: 386 - BXORVA(operator^=)
OK   UME::SIMD::SIMD32_32i test Id: 387 - MBXORVA
OK   UME::SIMD::SIMD32_32i test Id: 388 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD32_32i test Id: 389 - BXORSA
OK   UME::SIMD::SIMD32_32i test Id: 390 - BXORSA(operator^=)
OK   UME::SIMD::SIMD32_32i test Id: 391 - MBXORSA
OK   UME::SIMD::SIMD32_32i test Id: 392 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD32_32i test Id: 393 - BNOT
OK   UME::SIMD::SIMD32_32i test Id: 394 - BNOT(operator!)
OK   UME::SIMD::SIMD32_32i test Id: 395 - BNOT(function)
OK   UME::SIMD::SIMD32_32i test Id: 396 - MBNOT
OK   UME::SIMD::SIMD32_32i test Id: 397 - MBNOT(function)
OK   UME::SIMD::SIMD32_32i test Id: 398 - BNOTA
OK   UME::SIMD::SIMD32_32i test Id: 399 - MBNOTA
OK   UME::SIMD::SIMD32_32i test Id: 400 - BANDNOTV
OK   UME::SIMD::SIMD32_32i test Id: 401 - BANDNOTV (function)
OK   UME::SIMD::SIMD32_32i test Id: 402 - MBANDNOTV
OK   UME::SIMD::SIMD32_32i test Id: 403 - MBANDNOTV (function)
OK   UME::SIMD::SIMD32_32i test Id: 404 - BANDNOTS
OK   UME::SIMD::SIMD32_32i test Id: 405 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD32_32i test Id: 406 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD32_32i test Id: 407 - MBANDNOTS
OK   UME::SIMD::SIMD32_32i test Id: 408 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD32_32i test Id: 409 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD32_32i test Id: 410 - BANDNOTVA
OK   UME::SIMD::SIMD32_32i test Id: 411 - MBANDNOTVA
OK   UME::SIMD::SIMD32_32i test Id: 412 - BANDNOTSA
OK   UME::SIMD::SIMD32_32i test Id: 413 - MBANDNOTSA
OK   UME::SIMD::SIMD32_32i test Id: 414 - HBAND
OK   UME::SIMD::SIMD32_32i test Id: 415 - HBAND
OK   UME::SIMD::SIMD32_32i test Id: 416 - MHBAND
OK   UME::SIMD::SIMD32_32i test Id: 417 - MHBAND(function)
OK   UME::SIMD::SIMD32_32i test Id: 418 - HBANDS
OK   UME::SIMD::SIMD32_32i test Id: 419 - MHBANDS
OK   UME::SIMD::SIMD32_32i test Id: 420 - HBOR
OK   UME::SIMD::SIMD32_32i test Id: 421 - HBOR(function)
OK   UME::SIMD::SIMD32_32i test Id: 422 - MHBOR
OK   UME::SIMD::SIMD32_32i test Id: 423 - MHBOR(function)
OK   UME::SIMD::SIMD32_32i test Id: 424 - HBORS
OK   UME::SIMD::SIMD32_32i test Id: 425 - MHBORS
OK   UME::SIMD::SIMD32_32i test Id: 426 - HBXOR
OK   UME::SIMD::SIMD32_32i test Id: 427 - HBXOR(function)
OK   UME::SIMD::SIMD32_32i test Id: 428 - MHBXOR
OK   UME::SIMD::SIMD32_32i test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD32_32i test Id: 430 - HBXORS
OK   UME::SIMD::SIMD32_32i test Id: 431 - MHBXORS
OK   UME::SIMD::SIMD32_32i test Id: 432 - GATHERU
OK   UME::SIMD::SIMD32_32i test Id: 433 - MGATHERU
OK   UME::SIMD::SIMD32_32i test Id: 434 - GATHERS
OK   UME::SIMD::SIMD32_32i test Id: 435 - MGATHERS
OK   UME::SIMD::SIMD32_32i test Id: 436 - GATHERV
OK   UME::SIMD::SIMD32_32i test Id: 437 - MGATHERV
OK   UME::SIMD::SIMD32_32i test Id: 438 - SCATTERU
OK   UME::SIMD::SIMD32_32i test Id: 439 - MSCATTERU
OK   UME::SIMD::SIMD32_32i test Id: 440 - SCATTERS
OK   UME::SIMD::SIMD32_32i test Id: 441 - MSCATTERS
OK   UME::SIMD::SIMD32_32i test Id: 442 - SCATTERV
OK   UME::SIMD::SIMD32_32i test Id: 443 - MSCATTERV
OK   UME::SIMD::SIMD32_32i test Id: 444 - LSHV gen
OK   UME::SIMD::SIMD32_32i test Id: 445 - LSHV (function) gen
OK   UME::SIMD::SIMD32_32i test Id: 446 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD32_32i test Id: 447 - MLSHV gen
OK   UME::SIMD::SIMD32_32i test Id: 448 - MLSHV (function) gen
OK   UME::SIMD::SIMD32_32i test Id: 449 - LSHS gen
OK   UME::SIMD::SIMD32_32i test Id: 450 - LSHS (function) gen
OK   UME::SIMD::SIMD32_32i test Id: 451 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD32_32i test Id: 452 - MLSHS gen
OK   UME::SIMD::SIMD32_32i test Id: 453 - MLSHS (function) gen
OK   UME::SIMD::SIMD32_32i test Id: 454 - LSHVA gen
OK   UME::SIMD::SIMD32_32i test Id: 455 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD32_32i test Id: 456 - MLSHVA gen
OK   UME::SIMD::SIMD32_32i test Id: 457 - LSHSA gen
OK   UME::SIMD::SIMD32_32i test Id: 458 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD32_32i test Id: 459 - MLSHSA gen
OK   UME::SIMD::SIMD32_32i test Id: 460 - RSHV gen
OK   UME::SIMD::SIMD32_32i test Id: 461 - RSHV (function) gen
OK   UME::SIMD::SIMD32_32i test Id: 462 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD32_32i test Id: 463 - MRSHV gen
OK   UME::SIMD::SIMD32_32i test Id: 464 - MRSHV (function) gen
OK   UME::SIMD::SIMD32_32i test Id: 465 - RSHS gen
OK   UME::SIMD::SIMD32_32i test Id: 466 - RSHS (function) gen
OK   UME::SIMD::SIMD32_32i test Id: 467 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD32_32i test Id: 468 - MRSHS gen
OK   UME::SIMD::SIMD32_32i test Id: 469 - MRSHS (function) gen
OK   UME::SIMD::SIMD32_32i test Id: 470 - RSHVA gen
OK   UME::SIMD::SIMD32_32i test Id: 471 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD32_32i test Id: 472 - MRSHVA gen
OK   UME::SIMD::SIMD32_32i test Id: 473 - RSHSA gen
OK   UME::SIMD::SIMD32_32i test Id: 474 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD32_32i test Id: 475 - MRSHSA gen
OK   UME::SIMD::SIMD32_32i test Id: 476 - ROLV
OK   UME::SIMD::SIMD32_32i test Id: 477 - ROLV(function)
OK   UME::SIMD::SIMD32_32i test Id: 478 - MROLV
OK   UME::SIMD::SIMD32_32i test Id: 479 - MROLV(function)
OK   UME::SIMD::SIMD32_32i test Id: 480 - ROLS
OK   UME::SIMD::SIMD32_32i test Id: 481 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 482 - MROLS
OK   UME::SIMD::SIMD32_32i test Id: 483 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 484 - ROLVA
OK   UME::SIMD::SIMD32_32i test Id: 485 - MROLVA
OK   UME::SIMD::SIMD32_32i test Id: 486 - ROLSA
OK   UME::SIMD::SIMD32_32i test Id: 487 - MROLSA
OK   UME::SIMD::SIMD32_32i test Id: 488 - RORV
OK   UME::SIMD::SIMD32_32i test Id: 489 - RORV(function)
OK   UME::SIMD::SIMD32_32i test Id: 490 - MRORV
OK   UME::SIMD::SIMD32_32i test Id: 491 - MRORV(function)
OK   UME::SIMD::SIMD32_32i test Id: 492 - RORS
OK   UME::SIMD::SIMD32_32i test Id: 493 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 494 - MRORS
OK   UME::SIMD::SIMD32_32i test Id: 495 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32i test Id: 496 - RORVA
OK   UME::SIMD::SIMD32_32i test Id: 497 - MRORVA
OK   UME::SIMD::SIMD32_32i test Id: 498 - RORSA
OK   UME::SIMD::SIMD32_32i test Id: 499 - MRORSA
OK   UME::SIMD::SIMD32_32i test Id: 500 - NEG
OK   UME::SIMD::SIMD32_32i test Id: 501 - NEG(operator-)
OK   UME::SIMD::SIMD32_32i test Id: 502 - NEG(function)
OK   UME::SIMD::SIMD32_32i test Id: 503 - MNEG
OK   UME::SIMD::SIMD32_32i test Id: 504 - MNEG(function)
OK   UME::SIMD::SIMD32_32i test Id: 505 - NEGA
OK   UME::SIMD::SIMD32_32i test Id: 506 - MNEGA
OK   UME::SIMD::SIMD32_32i test Id: 507 - ABS
OK   UME::SIMD::SIMD32_32i test Id: 508 - ABS(function)
OK   UME::SIMD::SIMD32_32i test Id: 509 - MABS
OK   UME::SIMD::SIMD32_32i test Id: 510 - MABS(function)
OK   UME::SIMD::SIMD32_32i test Id: 511 - ABSA
OK   UME::SIMD::SIMD32_32i test Id: 512 - MABSA
OK   UME::SIMD::SIMD32_32i test Id: 513 - COPYSIGN gen
OK   UME::SIMD::SIMD32_32i test Id: 514 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD32_32i test Id: 515 - ITOU
OK   UME::SIMD::SIMD32_32i test Id: 516 - ITOF
OK   UME::SIMD::SIMD32_32i test Id: 517 - PACK
OK   UME::SIMD::SIMD32_32i test Id: 518 - PACKLO
OK   UME::SIMD::SIMD32_32i test Id: 519 - PACKHI
OK   UME::SIMD::SIMD32_32i test Id: 520 - UNPACK
OK   UME::SIMD::SIMD32_32i test Id: 521 - UNPACKLO
OK   UME::SIMD::SIMD32_32i test Id: 522 - UNPACKHi
OK   UME::SIMD::SIMD32_32i test Id: 523 - DEGRADE
OK   UME::SIMD::SIMD32_32i test Id: 524 - ZERO-CONSTR
OK   UME::SIMD::SIMD32_32f test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD32_32f test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD32_32f test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD32_32f test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD32_32f test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD32_32f test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD32_32f test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD32_32f test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD32_32f test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD32_32f test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD32_32f test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD32_32f test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD32_32f test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD32_32f test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD32_32f test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD32_32f test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD32_32f test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD32_32f test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD32_32f test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD32_32f test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD32_32f test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD32_32f test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD32_32f test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD32_32f test Id: 24 - INSERT
OK   UME::SIMD::SIMD32_32f test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD32_32f test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD32_32f test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD32_32f test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD32_32f test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD32_32f test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD32_32f test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD32_32f test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD32_32f test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD32_32f test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD32_32f test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD32_32f test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD32_32f test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD32_32f test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD32_32f test Id: 39 - MLOAD
OK   UME::SIMD::SIMD32_32f test Id: 40 - MSTORE
OK   UME::SIMD::SIMD32_32f test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD32_32f test Id: 42 - MLOADA
OK   UME::SIMD::SIMD32_32f test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD32_32f test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD32_32f test Id: 45 - SORTA
OK   UME::SIMD::SIMD32_32f test Id: 46 - SORTD
OK   UME::SIMD::SIMD32_32f test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD32_32f test Id: 48 - ADDV
OK   UME::SIMD::SIMD32_32f test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD32_32f test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD32_32f test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD32_32f test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD32_32f test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 54 - MADDV
OK   UME::SIMD::SIMD32_32f test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD32_32f test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD32_32f test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 58 - ADDS
OK   UME::SIMD::SIMD32_32f test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD32_32f test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD32_32f test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD32_32f test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD32_32f test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD32_32f test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD32_32f test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD32_32f test Id: 68 - MADDS
OK   UME::SIMD::SIMD32_32f test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD32_32f test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD32_32f test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD32_32f test Id: 73 - ADDVA
OK   UME::SIMD::SIMD32_32f test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD32_32f test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD32_32f test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD32_32f test Id: 77 - MADDVA
OK   UME::SIMD::SIMD32_32f test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD32_32f test Id: 79 - ADDSA
OK   UME::SIMD::SIMD32_32f test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD32_32f test Id: 81 - MADDSA
OK   UME::SIMD::SIMD32_32f test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD32_32f test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD32_32f test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 85 - POSTINC
OK   UME::SIMD::SIMD32_32f test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD32_32f test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD32_32f test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD32_32f test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD32_32f test Id: 90 - PREFINC
OK   UME::SIMD::SIMD32_32f test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD32_32f test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD32_32f test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD32_32f test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD32_32f test Id: 95 - SUBV
OK   UME::SIMD::SIMD32_32f test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD32_32f test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD32_32f test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD32_32f test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD32_32f test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 101 - MSUBV
OK   UME::SIMD::SIMD32_32f test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD32_32f test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD32_32f test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD32_32f test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD32_32f test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 108 - MSUBS
OK   UME::SIMD::SIMD32_32f test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 110 - SUBVA
OK   UME::SIMD::SIMD32_32f test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD32_32f test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD32_32f test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD32_32f test Id: 114 - SUBSA
OK   UME::SIMD::SIMD32_32f test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD32_32f test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD32_32f test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD32_32f test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD32_32f test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD32_32f test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD32_32f test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD32_32f test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD32_32f test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD32_32f test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD32_32f test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD32_32f test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD32_32f test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD32_32f test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD32_32f test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD32_32f test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD32_32f test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD32_32f test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD32_32f test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD32_32f test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD32_32f test Id: 137 - MULV
OK   UME::SIMD::SIMD32_32f test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD32_32f test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD32_32f test Id: 140 - MMULV
OK   UME::SIMD::SIMD32_32f test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD32_32f test Id: 142 - MULS
OK   UME::SIMD::SIMD32_32f test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 146 - MMULS
OK   UME::SIMD::SIMD32_32f test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 148 - MULVA
OK   UME::SIMD::SIMD32_32f test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD32_32f test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD32_32f test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD32_32f test Id: 152 - MMULVA
OK   UME::SIMD::SIMD32_32f test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD32_32f test Id: 154 - MULSA
OK   UME::SIMD::SIMD32_32f test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD32_32f test Id: 156 - MMULSA
OK   UME::SIMD::SIMD32_32f test Id: 157 - DIVV
OK   UME::SIMD::SIMD32_32f test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD32_32f test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD32_32f test Id: 160 - MDIVV
OK   UME::SIMD::SIMD32_32f test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD32_32f test Id: 162 - DIVS
OK   UME::SIMD::SIMD32_32f test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 165 - MDIVS
OK   UME::SIMD::SIMD32_32f test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 167 - DIVVA
OK   UME::SIMD::SIMD32_32f test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD32_32f test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD32_32f test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD32_32f test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD32_32f test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD32_32f test Id: 173 - DIVSA
OK   UME::SIMD::SIMD32_32f test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD32_32f test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD32_32f test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD32_32f test Id: 177 - RCP
OK   UME::SIMD::SIMD32_32f test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD32_32f test Id: 179 - MRCP
OK   UME::SIMD::SIMD32_32f test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD32_32f test Id: 181 - RCPS
OK   UME::SIMD::SIMD32_32f test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD32_32f test Id: 184 - MRCPS
OK   UME::SIMD::SIMD32_32f test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD32_32f test Id: 186 - RCPA
OK   UME::SIMD::SIMD32_32f test Id: 187 - MRCPA
OK   UME::SIMD::SIMD32_32f test Id: 188 - RCPSA
OK   UME::SIMD::SIMD32_32f test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD32_32f test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD32_32f test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD32_32f test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD32_32f test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD32_32f test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD32_32f test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD32_32f test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD32_32f test Id: 201 - CMPNES
OK   UME::SIMD::SIMD32_32f test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD32_32f test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD32_32f test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD32_32f test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD32_32f test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD32_32f test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD32_32f test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD32_32f test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD32_32f test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD32_32f test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD32_32f test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD32_32f test Id: 225 - CMPGES
OK   UME::SIMD::SIMD32_32f test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD32_32f test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD32_32f test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD32_32f test Id: 233 - CMPLES
OK   UME::SIMD::SIMD32_32f test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 238 - CMPEV
OK   UME::SIMD::SIMD32_32f test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD32_32f test Id: 240 - CMPES
OK   UME::SIMD::SIMD32_32f test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 243 - HADD
OK   UME::SIMD::SIMD32_32f test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD32_32f test Id: 245 - HADD gen
OK   UME::SIMD::SIMD32_32f test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD32_32f test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD32_32f test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD32_32f test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD32_32f test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD32_32f test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD32_32f test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD32_32f test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD32_32f test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD32_32f test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD32_32f test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD32_32f test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD32_32f test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD32_32f test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD32_32f test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD32_32f test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD32_32f test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD32_32f test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD32_32f test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD32_32f test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD32_32f test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD32_32f test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD32_32f test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD32_32f test Id: 277 - MAXV
OK   UME::SIMD::SIMD32_32f test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD32_32f test Id: 279 - MMAXV
OK   UME::SIMD::SIMD32_32f test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD32_32f test Id: 281 - MAXS
OK   UME::SIMD::SIMD32_32f test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 284 - MMAXS
OK   UME::SIMD::SIMD32_32f test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 286 - MAXVA
OK   UME::SIMD::SIMD32_32f test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD32_32f test Id: 288 - MAXSA
OK   UME::SIMD::SIMD32_32f test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD32_32f test Id: 290 - MINV
OK   UME::SIMD::SIMD32_32f test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD32_32f test Id: 292 - MMINV
OK   UME::SIMD::SIMD32_32f test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD32_32f test Id: 294 - MINS
OK   UME::SIMD::SIMD32_32f test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD32_32f test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD32_32f test Id: 297 - MMINS
OK   UME::SIMD::SIMD32_32f test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD32_32f test Id: 299 - MINVA
OK   UME::SIMD::SIMD32_32f test Id: 300 - MMINVA
OK   UME::SIMD::SIMD32_32f test Id: 301 - MINSA
OK   UME::SIMD::SIMD32_32f test Id: 302 - MMINSA
OK   UME::SIMD::SIMD32_32f test Id: 303 - HMAX
OK   UME::SIMD::SIMD32_32f test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD32_32f test Id: 305 - HMAX
OK   UME::SIMD::SIMD32_32f test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD32_32f test Id: 307 - MHMAX
OK   UME::SIMD::SIMD32_32f test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD32_32f test Id: 309 - IMAX
OK   UME::SIMD::SIMD32_32f test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD32_32f test Id: 311 - MIMAX
OK   UME::SIMD::SIMD32_32f test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD32_32f test Id: 313 - HMIN
OK   UME::SIMD::SIMD32_32f test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD32_32f test Id: 315 - HMIN
OK   UME::SIMD::SIMD32_32f test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD32_32f test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD32_32f test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 319 - IMIN
OK   UME::SIMD::SIMD32_32f test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD32_32f test Id: 321 - MIMIN
OK   UME::SIMD::SIMD32_32f test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD32_32f test Id: 323 - GATHERU
OK   UME::SIMD::SIMD32_32f test Id: 324 - MGATHERU
OK   UME::SIMD::SIMD32_32f test Id: 325 - GATHERS
OK   UME::SIMD::SIMD32_32f test Id: 326 - MGATHERS
OK   UME::SIMD::SIMD32_32f test Id: 327 - GATHERV
OK   UME::SIMD::SIMD32_32f test Id: 328 - MGATHERV
OK   UME::SIMD::SIMD32_32f test Id: 329 - SCATTERU
OK   UME::SIMD::SIMD32_32f test Id: 330 - MSCATTERU
OK   UME::SIMD::SIMD32_32f test Id: 331 - SCATTERS
OK   UME::SIMD::SIMD32_32f test Id: 332 - MSCATTERS
OK   UME::SIMD::SIMD32_32f test Id: 333 - SCATTERV
OK   UME::SIMD::SIMD32_32f test Id: 334 - MSCATTERV
OK   UME::SIMD::SIMD32_32f test Id: 335 - NEG
OK   UME::SIMD::SIMD32_32f test Id: 336 - NEG(operator-)
OK   UME::SIMD::SIMD32_32f test Id: 337 - NEG(function)
OK   UME::SIMD::SIMD32_32f test Id: 338 - MNEG
OK   UME::SIMD::SIMD32_32f test Id: 339 - MNEG(function)
OK   UME::SIMD::SIMD32_32f test Id: 340 - NEGA
OK   UME::SIMD::SIMD32_32f test Id: 341 - MNEGA
OK   UME::SIMD::SIMD32_32f test Id: 342 - ABS
OK   UME::SIMD::SIMD32_32f test Id: 343 - ABS(function)
OK   UME::SIMD::SIMD32_32f test Id: 344 - MABS
OK   UME::SIMD::SIMD32_32f test Id: 345 - MABS(function)
OK   UME::SIMD::SIMD32_32f test Id: 346 - ABSA
OK   UME::SIMD::SIMD32_32f test Id: 347 - MABSA
OK   UME::SIMD::SIMD32_32f test Id: 348 - COPYSIGN gen
OK   UME::SIMD::SIMD32_32f test Id: 349 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 350 - ROUND
OK   UME::SIMD::SIMD32_32f test Id: 351 - ROUND(function)
OK   UME::SIMD::SIMD32_32f test Id: 352 - MROUND
OK   UME::SIMD::SIMD32_32f test Id: 353 - MROUND(function)
OK   UME::SIMD::SIMD32_32f test Id: 354 - TRUNC gen
OK   UME::SIMD::SIMD32_32f test Id: 355 - TRUNC(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 356 - MTRUNC gen
OK   UME::SIMD::SIMD32_32f test Id: 357 - MTRUNC(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 358 - FLOOR
OK   UME::SIMD::SIMD32_32f test Id: 359 - FLOOR(function)
OK   UME::SIMD::SIMD32_32f test Id: 360 - MFLOOR
OK   UME::SIMD::SIMD32_32f test Id: 361 - MFLOOR(function)
OK   UME::SIMD::SIMD32_32f test Id: 362 - CEIL
OK   UME::SIMD::SIMD32_32f test Id: 363 - CEIL(function)
OK   UME::SIMD::SIMD32_32f test Id: 364 - MCEIL
OK   UME::SIMD::SIMD32_32f test Id: 365 - MCEIL(function)
OK   UME::SIMD::SIMD32_32f test Id: 366 - ISFIN
OK   UME::SIMD::SIMD32_32f test Id: 367 - ISFIN(function)
OK   UME::SIMD::SIMD32_32f test Id: 368 - ISINF
OK   UME::SIMD::SIMD32_32f test Id: 369 - ISINF(function)
OK   UME::SIMD::SIMD32_32f test Id: 370 - ISAN
OK   UME::SIMD::SIMD32_32f test Id: 371 - ISAN(function)
OK   UME::SIMD::SIMD32_32f test Id: 372 - ISNAN
OK   UME::SIMD::SIMD32_32f test Id: 373 - ISNAN(function)
OK   UME::SIMD::SIMD32_32f test Id: 374 - ISNORM
OK   UME::SIMD::SIMD32_32f test Id: 375 - ISNORM(function)
OK   UME::SIMD::SIMD32_32f test Id: 376 - ISSUB
OK   UME::SIMD::SIMD32_32f test Id: 377 - ISSUB(function)
OK   UME::SIMD::SIMD32_32f test Id: 378 - ISZERO
OK   UME::SIMD::SIMD32_32f test Id: 379 - ISZERO(function)
OK   UME::SIMD::SIMD32_32f test Id: 380 - ISZEROSUB
OK   UME::SIMD::SIMD32_32f test Id: 381 - ISZEROSUB(function)
OK   UME::SIMD::SIMD32_32f test Id: 382 - SQR
OK   UME::SIMD::SIMD32_32f test Id: 383 - SQR(function)
OK   UME::SIMD::SIMD32_32f test Id: 384 - MSQR
OK   UME::SIMD::SIMD32_32f test Id: 385 - MSQR(function)
OK   UME::SIMD::SIMD32_32f test Id: 386 - SQRA
OK   UME::SIMD::SIMD32_32f test Id: 387 - MSQRA
OK   UME::SIMD::SIMD32_32f test Id: 388 - SQRT
OK   UME::SIMD::SIMD32_32f test Id: 389 - SQRT(function)
OK   UME::SIMD::SIMD32_32f test Id: 390 - MSQRT
OK   UME::SIMD::SIMD32_32f test Id: 391 - MSQRT
OK   UME::SIMD::SIMD32_32f test Id: 392 - SQRTA
OK   UME::SIMD::SIMD32_32f test Id: 393 - MSQRTA
OK   UME::SIMD::SIMD32_32f test Id: 394 - EXP gen
OK   UME::SIMD::SIMD32_32f test Id: 395 - EXP(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 396 - MEXP gen
OK   UME::SIMD::SIMD32_32f test Id: 397 - MEXP(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 398 - LOG gen
OK   UME::SIMD::SIMD32_32f test Id: 399 - LOG(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 400 - LOG2 gen
OK   UME::SIMD::SIMD32_32f test Id: 401 - LOG2(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 402 - LOG10 gen
OK   UME::SIMD::SIMD32_32f test Id: 403 - LOG10(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 404 - SIN gen
OK   UME::SIMD::SIMD32_32f test Id: 405 - SIN(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 406 - COS gen
OK   UME::SIMD::SIMD32_32f test Id: 407 - COS(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 408 - TAN gen
OK   UME::SIMD::SIMD32_32f test Id: 409 - TAN(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 410 - CTAN gen
OK   UME::SIMD::SIMD32_32f test Id: 411 - CTAN(function) gen
OK   UME::SIMD::SIMD32_32f test Id: 412 - FTOU gen
OK   UME::SIMD::SIMD32_32f test Id: 413 - FTOI gen
OK   UME::SIMD::SIMD32_32f test Id: 414 - PACK
OK   UME::SIMD::SIMD32_32f test Id: 415 - PACKLO
OK   UME::SIMD::SIMD32_32f test Id: 416 - PACKHI
OK   UME::SIMD::SIMD32_32f test Id: 417 - UNPACK
OK   UME::SIMD::SIMD32_32f test Id: 418 - UNPACKLO
OK   UME::SIMD::SIMD32_32f test Id: 419 - UNPACKHi
OK   UME::SIMD::SIMD16_64u test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD16_64u test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD16_64u test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD16_64u test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD16_64u test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD16_64u test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD16_64u test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD16_64u test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD16_64u test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD16_64u test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD16_64u test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD16_64u test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD16_64u test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD16_64u test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD16_64u test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD16_64u test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD16_64u test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD16_64u test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD16_64u test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD16_64u test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD16_64u test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD16_64u test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD16_64u test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD16_64u test Id: 24 - INSERT
OK   UME::SIMD::SIMD16_64u test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD16_64u test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD16_64u test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD16_64u test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD16_64u test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD16_64u test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD16_64u test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD16_64u test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD16_64u test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD16_64u test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD16_64u test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD16_64u test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD16_64u test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD16_64u test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD16_64u test Id: 39 - MLOAD
OK   UME::SIMD::SIMD16_64u test Id: 40 - MSTORE
OK   UME::SIMD::SIMD16_64u test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD16_64u test Id: 42 - MLOADA
OK   UME::SIMD::SIMD16_64u test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD16_64u test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD16_64u test Id: 45 - SORTA
OK   UME::SIMD::SIMD16_64u test Id: 46 - SORTD
OK   UME::SIMD::SIMD16_64u test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD16_64u test Id: 48 - ADDV
OK   UME::SIMD::SIMD16_64u test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD16_64u test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD16_64u test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD16_64u test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD16_64u test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD16_64u test Id: 54 - MADDV
OK   UME::SIMD::SIMD16_64u test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD16_64u test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD16_64u test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD16_64u test Id: 58 - ADDS
OK   UME::SIMD::SIMD16_64u test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD16_64u test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD16_64u test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD16_64u test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD16_64u test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD16_64u test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD16_64u test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD16_64u test Id: 68 - MADDS
OK   UME::SIMD::SIMD16_64u test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD16_64u test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD16_64u test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD16_64u test Id: 73 - ADDVA
OK   UME::SIMD::SIMD16_64u test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD16_64u test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD16_64u test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD16_64u test Id: 77 - MADDVA
OK   UME::SIMD::SIMD16_64u test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD16_64u test Id: 79 - ADDSA
OK   UME::SIMD::SIMD16_64u test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD16_64u test Id: 81 - MADDSA
OK   UME::SIMD::SIMD16_64u test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD16_64u test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD16_64u test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD16_64u test Id: 85 - POSTINC
OK   UME::SIMD::SIMD16_64u test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD16_64u test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD16_64u test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD16_64u test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD16_64u test Id: 90 - PREFINC
OK   UME::SIMD::SIMD16_64u test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD16_64u test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD16_64u test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD16_64u test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD16_64u test Id: 95 - SUBV
OK   UME::SIMD::SIMD16_64u test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD16_64u test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD16_64u test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD16_64u test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD16_64u test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD16_64u test Id: 101 - MSUBV
OK   UME::SIMD::SIMD16_64u test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD16_64u test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD16_64u test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD16_64u test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD16_64u test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD16_64u test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD16_64u test Id: 108 - MSUBS
OK   UME::SIMD::SIMD16_64u test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 110 - SUBVA
OK   UME::SIMD::SIMD16_64u test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD16_64u test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD16_64u test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD16_64u test Id: 114 - SUBSA
OK   UME::SIMD::SIMD16_64u test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD16_64u test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD16_64u test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD16_64u test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD16_64u test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD16_64u test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD16_64u test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD16_64u test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD16_64u test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD16_64u test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD16_64u test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD16_64u test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD16_64u test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD16_64u test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD16_64u test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD16_64u test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD16_64u test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD16_64u test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD16_64u test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD16_64u test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD16_64u test Id: 137 - MULV
OK   UME::SIMD::SIMD16_64u test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD16_64u test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD16_64u test Id: 140 - MMULV
OK   UME::SIMD::SIMD16_64u test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD16_64u test Id: 142 - MULS
OK   UME::SIMD::SIMD16_64u test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 146 - MMULS
OK   UME::SIMD::SIMD16_64u test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 148 - MULVA
OK   UME::SIMD::SIMD16_64u test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD16_64u test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD16_64u test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD16_64u test Id: 152 - MMULVA
OK   UME::SIMD::SIMD16_64u test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_64u test Id: 154 - MULSA
OK   UME::SIMD::SIMD16_64u test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD16_64u test Id: 156 - MMULSA
OK   UME::SIMD::SIMD16_64u test Id: 157 - DIVV
OK   UME::SIMD::SIMD16_64u test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD16_64u test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD16_64u test Id: 160 - MDIVV
OK   UME::SIMD::SIMD16_64u test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD16_64u test Id: 162 - DIVS
OK   UME::SIMD::SIMD16_64u test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 165 - MDIVS
OK   UME::SIMD::SIMD16_64u test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 167 - DIVVA
OK   UME::SIMD::SIMD16_64u test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD16_64u test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD16_64u test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD16_64u test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD16_64u test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_64u test Id: 173 - DIVSA
OK   UME::SIMD::SIMD16_64u test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD16_64u test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD16_64u test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD16_64u test Id: 177 - RCP
OK   UME::SIMD::SIMD16_64u test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD16_64u test Id: 179 - MRCP
OK   UME::SIMD::SIMD16_64u test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD16_64u test Id: 181 - RCPS
OK   UME::SIMD::SIMD16_64u test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD16_64u test Id: 184 - MRCPS
OK   UME::SIMD::SIMD16_64u test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD16_64u test Id: 186 - RCPA
OK   UME::SIMD::SIMD16_64u test Id: 187 - MRCPA
OK   UME::SIMD::SIMD16_64u test Id: 188 - RCPSA
OK   UME::SIMD::SIMD16_64u test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD16_64u test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD16_64u test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD16_64u test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD16_64u test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD16_64u test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD16_64u test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD16_64u test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD16_64u test Id: 201 - CMPNES
OK   UME::SIMD::SIMD16_64u test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD16_64u test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD16_64u test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD16_64u test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD16_64u test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD16_64u test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD16_64u test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD16_64u test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD16_64u test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD16_64u test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD16_64u test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD16_64u test Id: 225 - CMPGES
OK   UME::SIMD::SIMD16_64u test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD16_64u test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD16_64u test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD16_64u test Id: 233 - CMPLES
OK   UME::SIMD::SIMD16_64u test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 238 - CMPEV
OK   UME::SIMD::SIMD16_64u test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD16_64u test Id: 240 - CMPES
OK   UME::SIMD::SIMD16_64u test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 243 - HADD
OK   UME::SIMD::SIMD16_64u test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD16_64u test Id: 245 - HADD gen
OK   UME::SIMD::SIMD16_64u test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD16_64u test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD16_64u test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD16_64u test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD16_64u test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD16_64u test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD16_64u test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD16_64u test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD16_64u test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD16_64u test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD16_64u test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD16_64u test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD16_64u test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD16_64u test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD16_64u test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD16_64u test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD16_64u test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD16_64u test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD16_64u test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD16_64u test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD16_64u test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD16_64u test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD16_64u test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD16_64u test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD16_64u test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD16_64u test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD16_64u test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD16_64u test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD16_64u test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD16_64u test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD16_64u test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD16_64u test Id: 277 - MAXV
OK   UME::SIMD::SIMD16_64u test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD16_64u test Id: 279 - MMAXV
OK   UME::SIMD::SIMD16_64u test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD16_64u test Id: 281 - MAXS
OK   UME::SIMD::SIMD16_64u test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 284 - MMAXS
OK   UME::SIMD::SIMD16_64u test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 286 - MAXVA
OK   UME::SIMD::SIMD16_64u test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD16_64u test Id: 288 - MAXSA
OK   UME::SIMD::SIMD16_64u test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD16_64u test Id: 290 - MINV
OK   UME::SIMD::SIMD16_64u test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD16_64u test Id: 292 - MMINV
OK   UME::SIMD::SIMD16_64u test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD16_64u test Id: 294 - MINS
OK   UME::SIMD::SIMD16_64u test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD16_64u test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD16_64u test Id: 297 - MMINS
OK   UME::SIMD::SIMD16_64u test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 299 - MINVA
OK   UME::SIMD::SIMD16_64u test Id: 300 - MMINVA
OK   UME::SIMD::SIMD16_64u test Id: 301 - MINSA
OK   UME::SIMD::SIMD16_64u test Id: 302 - MMINSA
OK   UME::SIMD::SIMD16_64u test Id: 303 - HMAX
OK   UME::SIMD::SIMD16_64u test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD16_64u test Id: 305 - HMAX
OK   UME::SIMD::SIMD16_64u test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD16_64u test Id: 307 - MHMAX
OK   UME::SIMD::SIMD16_64u test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD16_64u test Id: 309 - IMAX
OK   UME::SIMD::SIMD16_64u test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD16_64u test Id: 311 - MIMAX
OK   UME::SIMD::SIMD16_64u test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD16_64u test Id: 313 - HMIN
OK   UME::SIMD::SIMD16_64u test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD16_64u test Id: 315 - HMIN
OK   UME::SIMD::SIMD16_64u test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD16_64u test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD16_64u test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD16_64u test Id: 319 - IMIN
OK   UME::SIMD::SIMD16_64u test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD16_64u test Id: 321 - MIMIN
OK   UME::SIMD::SIMD16_64u test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD16_64u test Id: 323 - REMV gen
OK   UME::SIMD::SIMD16_64u test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD16_64u test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD16_64u test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD16_64u test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD16_64u test Id: 328 - REMS gen
OK   UME::SIMD::SIMD16_64u test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD16_64u test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD16_64u test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD16_64u test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD16_64u test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD16_64u test Id: 334 - LORV gen
OK   UME::SIMD::SIMD16_64u test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD16_64u test Id: 336 - BANDV
OK   UME::SIMD::SIMD16_64u test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD16_64u test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD16_64u test Id: 339 - MBANDV
OK   UME::SIMD::SIMD16_64u test Id: 340 - MBANDV
OK   UME::SIMD::SIMD16_64u test Id: 341 - BANDS
OK   UME::SIMD::SIMD16_64u test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 346 - MBANDS
OK   UME::SIMD::SIMD16_64u test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 348 - BANDVA
OK   UME::SIMD::SIMD16_64u test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD16_64u test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD16_64u test Id: 351 - BANDSA
OK   UME::SIMD::SIMD16_64u test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD16_64u test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD16_64u test Id: 354 - BORV
OK   UME::SIMD::SIMD16_64u test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD16_64u test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD16_64u test Id: 357 - MBORV
OK   UME::SIMD::SIMD16_64u test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD16_64u test Id: 359 - BORS
OK   UME::SIMD::SIMD16_64u test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 364 - MBORS
OK   UME::SIMD::SIMD16_64u test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 366 - BORVA
OK   UME::SIMD::SIMD16_64u test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD16_64u test Id: 368 - MBORVA
OK   UME::SIMD::SIMD16_64u test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD16_64u test Id: 370 - BORSA
OK   UME::SIMD::SIMD16_64u test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD16_64u test Id: 372 - MBORSA
OK   UME::SIMD::SIMD16_64u test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD16_64u test Id: 374 - BXORV
OK   UME::SIMD::SIMD16_64u test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD16_64u test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD16_64u test Id: 377 - MBXORV
OK   UME::SIMD::SIMD16_64u test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD16_64u test Id: 379 - BXORS
OK   UME::SIMD::SIMD16_64u test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 384 - MBXORS
OK   UME::SIMD::SIMD16_64u test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 386 - BXORVA
OK   UME::SIMD::SIMD16_64u test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD16_64u test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD16_64u test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD16_64u test Id: 390 - BXORSA
OK   UME::SIMD::SIMD16_64u test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD16_64u test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD16_64u test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD16_64u test Id: 394 - BNOT
OK   UME::SIMD::SIMD16_64u test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD16_64u test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD16_64u test Id: 397 - MBNOT
OK   UME::SIMD::SIMD16_64u test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD16_64u test Id: 399 - BNOTA
OK   UME::SIMD::SIMD16_64u test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD16_64u test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD16_64u test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD16_64u test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD16_64u test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD16_64u test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD16_64u test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD16_64u test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD16_64u test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD16_64u test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD16_64u test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD16_64u test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD16_64u test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD16_64u test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD16_64u test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD16_64u test Id: 415 - HBAND
OK   UME::SIMD::SIMD16_64u test Id: 416 - HBAND
OK   UME::SIMD::SIMD16_64u test Id: 417 - MHBAND
OK   UME::SIMD::SIMD16_64u test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD16_64u test Id: 419 - HBANDS
OK   UME::SIMD::SIMD16_64u test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD16_64u test Id: 421 - HBOR
OK   UME::SIMD::SIMD16_64u test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD16_64u test Id: 423 - MHBOR
OK   UME::SIMD::SIMD16_64u test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD16_64u test Id: 425 - HBORS
OK   UME::SIMD::SIMD16_64u test Id: 426 - MHBORS
OK   UME::SIMD::SIMD16_64u test Id: 427 - HBXOR
OK   UME::SIMD::SIMD16_64u test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD16_64u test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD16_64u test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD16_64u test Id: 431 - HBXORS
OK   UME::SIMD::SIMD16_64u test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD16_64u test Id: 433 - GATHERU
OK   UME::SIMD::SIMD16_64u test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD16_64u test Id: 435 - GATHERS
OK   UME::SIMD::SIMD16_64u test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD16_64u test Id: 437 - GATHERV
OK   UME::SIMD::SIMD16_64u test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD16_64u test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD16_64u test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD16_64u test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD16_64u test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD16_64u test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD16_64u test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD16_64u test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD16_64u test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD16_64u test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD16_64u test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD16_64u test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD16_64u test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD16_64u test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD16_64u test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD16_64u test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD16_64u test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD16_64u test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD16_64u test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD16_64u test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD16_64u test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD16_64u test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD16_64u test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD16_64u test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD16_64u test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD16_64u test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD16_64u test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD16_64u test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD16_64u test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD16_64u test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD16_64u test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD16_64u test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD16_64u test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD16_64u test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD16_64u test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD16_64u test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD16_64u test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD16_64u test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD16_64u test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD16_64u test Id: 477 - ROLV
OK   UME::SIMD::SIMD16_64u test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD16_64u test Id: 479 - MROLV
OK   UME::SIMD::SIMD16_64u test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD16_64u test Id: 481 - ROLS
OK   UME::SIMD::SIMD16_64u test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 483 - MROLS
OK   UME::SIMD::SIMD16_64u test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 485 - ROLVA
OK   UME::SIMD::SIMD16_64u test Id: 486 - MROLVA
OK   UME::SIMD::SIMD16_64u test Id: 487 - ROLSA
OK   UME::SIMD::SIMD16_64u test Id: 488 - MROLSA
OK   UME::SIMD::SIMD16_64u test Id: 489 - RORV
OK   UME::SIMD::SIMD16_64u test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD16_64u test Id: 491 - MRORV
OK   UME::SIMD::SIMD16_64u test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD16_64u test Id: 493 - RORS
OK   UME::SIMD::SIMD16_64u test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 495 - MRORS
OK   UME::SIMD::SIMD16_64u test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64u test Id: 497 - RORVA
OK   UME::SIMD::SIMD16_64u test Id: 498 - MRORVA
OK   UME::SIMD::SIMD16_64u test Id: 499 - RORSA
OK   UME::SIMD::SIMD16_64u test Id: 500 - MRORSA
OK   UME::SIMD::SIMD16_64u test Id: 501 - UTOI
OK   UME::SIMD::SIMD16_64u test Id: 502 - UTOF
OK   UME::SIMD::SIMD16_64u test Id: 503 - PACK
OK   UME::SIMD::SIMD16_64u test Id: 504 - PACKLO
OK   UME::SIMD::SIMD16_64u test Id: 505 - PACKHI
OK   UME::SIMD::SIMD16_64u test Id: 506 - UNPACK
OK   UME::SIMD::SIMD16_64u test Id: 507 - UNPACKLO
OK   UME::SIMD::SIMD16_64u test Id: 508 - UNPACKHi
OK   UME::SIMD::SIMD16_64u test Id: 509 - DEGRADE
OK   UME::SIMD::SIMD16_64i test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD16_64i test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD16_64i test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD16_64i test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD16_64i test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD16_64i test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD16_64i test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD16_64i test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD16_64i test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD16_64i test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD16_64i test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD16_64i test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD16_64i test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD16_64i test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD16_64i test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD16_64i test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD16_64i test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD16_64i test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD16_64i test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD16_64i test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD16_64i test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD16_64i test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD16_64i test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD16_64i test Id: 24 - INSERT
OK   UME::SIMD::SIMD16_64i test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD16_64i test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD16_64i test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD16_64i test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD16_64i test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD16_64i test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD16_64i test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD16_64i test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD16_64i test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD16_64i test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD16_64i test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD16_64i test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD16_64i test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD16_64i test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD16_64i test Id: 39 - MLOAD
OK   UME::SIMD::SIMD16_64i test Id: 40 - MSTORE
OK   UME::SIMD::SIMD16_64i test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD16_64i test Id: 42 - MLOADA
OK   UME::SIMD::SIMD16_64i test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD16_64i test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD16_64i test Id: 45 - SORTA
OK   UME::SIMD::SIMD16_64i test Id: 46 - SORTD
OK   UME::SIMD::SIMD16_64i test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD16_64i test Id: 48 - ADDV
OK   UME::SIMD::SIMD16_64i test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD16_64i test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD16_64i test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD16_64i test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD16_64i test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD16_64i test Id: 54 - MADDV
OK   UME::SIMD::SIMD16_64i test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD16_64i test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD16_64i test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD16_64i test Id: 58 - ADDS
OK   UME::SIMD::SIMD16_64i test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD16_64i test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD16_64i test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD16_64i test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD16_64i test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD16_64i test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD16_64i test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD16_64i test Id: 68 - MADDS
OK   UME::SIMD::SIMD16_64i test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD16_64i test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD16_64i test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD16_64i test Id: 73 - ADDVA
OK   UME::SIMD::SIMD16_64i test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD16_64i test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD16_64i test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD16_64i test Id: 77 - MADDVA
OK   UME::SIMD::SIMD16_64i test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD16_64i test Id: 79 - ADDSA
OK   UME::SIMD::SIMD16_64i test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD16_64i test Id: 81 - MADDSA
OK   UME::SIMD::SIMD16_64i test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD16_64i test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD16_64i test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD16_64i test Id: 85 - POSTINC
OK   UME::SIMD::SIMD16_64i test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD16_64i test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD16_64i test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD16_64i test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD16_64i test Id: 90 - PREFINC
OK   UME::SIMD::SIMD16_64i test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD16_64i test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD16_64i test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD16_64i test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD16_64i test Id: 95 - SUBV
OK   UME::SIMD::SIMD16_64i test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD16_64i test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD16_64i test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD16_64i test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD16_64i test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD16_64i test Id: 101 - MSUBV
OK   UME::SIMD::SIMD16_64i test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD16_64i test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD16_64i test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD16_64i test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD16_64i test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD16_64i test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD16_64i test Id: 108 - MSUBS
OK   UME::SIMD::SIMD16_64i test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 110 - SUBVA
OK   UME::SIMD::SIMD16_64i test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD16_64i test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD16_64i test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD16_64i test Id: 114 - SUBSA
OK   UME::SIMD::SIMD16_64i test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD16_64i test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD16_64i test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD16_64i test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD16_64i test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD16_64i test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD16_64i test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD16_64i test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD16_64i test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD16_64i test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD16_64i test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD16_64i test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD16_64i test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD16_64i test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD16_64i test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD16_64i test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD16_64i test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD16_64i test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD16_64i test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD16_64i test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD16_64i test Id: 137 - MULV
OK   UME::SIMD::SIMD16_64i test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD16_64i test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD16_64i test Id: 140 - MMULV
OK   UME::SIMD::SIMD16_64i test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD16_64i test Id: 142 - MULS
OK   UME::SIMD::SIMD16_64i test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 146 - MMULS
OK   UME::SIMD::SIMD16_64i test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 148 - MULVA
OK   UME::SIMD::SIMD16_64i test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD16_64i test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD16_64i test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD16_64i test Id: 152 - MMULVA
OK   UME::SIMD::SIMD16_64i test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_64i test Id: 154 - MULSA
OK   UME::SIMD::SIMD16_64i test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD16_64i test Id: 156 - MMULSA
OK   UME::SIMD::SIMD16_64i test Id: 157 - DIVV
OK   UME::SIMD::SIMD16_64i test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD16_64i test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD16_64i test Id: 160 - MDIVV
OK   UME::SIMD::SIMD16_64i test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD16_64i test Id: 162 - DIVS
OK   UME::SIMD::SIMD16_64i test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 165 - MDIVS
OK   UME::SIMD::SIMD16_64i test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 167 - DIVVA
OK   UME::SIMD::SIMD16_64i test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD16_64i test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD16_64i test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD16_64i test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD16_64i test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_64i test Id: 173 - DIVSA
OK   UME::SIMD::SIMD16_64i test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD16_64i test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD16_64i test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD16_64i test Id: 177 - RCP
OK   UME::SIMD::SIMD16_64i test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD16_64i test Id: 179 - MRCP
OK   UME::SIMD::SIMD16_64i test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD16_64i test Id: 181 - RCPS
OK   UME::SIMD::SIMD16_64i test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD16_64i test Id: 184 - MRCPS
OK   UME::SIMD::SIMD16_64i test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD16_64i test Id: 186 - RCPA
OK   UME::SIMD::SIMD16_64i test Id: 187 - MRCPA
OK   UME::SIMD::SIMD16_64i test Id: 188 - RCPSA
OK   UME::SIMD::SIMD16_64i test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD16_64i test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD16_64i test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD16_64i test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD16_64i test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD16_64i test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD16_64i test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD16_64i test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD16_64i test Id: 201 - CMPNES
OK   UME::SIMD::SIMD16_64i test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD16_64i test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD16_64i test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD16_64i test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD16_64i test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD16_64i test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD16_64i test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD16_64i test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD16_64i test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD16_64i test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD16_64i test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD16_64i test Id: 225 - CMPGES
OK   UME::SIMD::SIMD16_64i test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD16_64i test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD16_64i test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD16_64i test Id: 233 - CMPLES
OK   UME::SIMD::SIMD16_64i test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 238 - CMPEV
OK   UME::SIMD::SIMD16_64i test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD16_64i test Id: 240 - CMPES
OK   UME::SIMD::SIMD16_64i test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 243 - HADD
OK   UME::SIMD::SIMD16_64i test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD16_64i test Id: 245 - HADD gen
OK   UME::SIMD::SIMD16_64i test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD16_64i test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD16_64i test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD16_64i test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD16_64i test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD16_64i test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD16_64i test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD16_64i test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD16_64i test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD16_64i test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD16_64i test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD16_64i test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD16_64i test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD16_64i test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD16_64i test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD16_64i test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD16_64i test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD16_64i test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD16_64i test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD16_64i test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD16_64i test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD16_64i test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD16_64i test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD16_64i test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD16_64i test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD16_64i test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD16_64i test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD16_64i test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD16_64i test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD16_64i test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD16_64i test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD16_64i test Id: 277 - MAXV
OK   UME::SIMD::SIMD16_64i test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD16_64i test Id: 279 - MMAXV
OK   UME::SIMD::SIMD16_64i test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD16_64i test Id: 281 - MAXS
OK   UME::SIMD::SIMD16_64i test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 284 - MMAXS
OK   UME::SIMD::SIMD16_64i test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 286 - MAXVA
OK   UME::SIMD::SIMD16_64i test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD16_64i test Id: 288 - MAXSA
OK   UME::SIMD::SIMD16_64i test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD16_64i test Id: 290 - MINV
OK   UME::SIMD::SIMD16_64i test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD16_64i test Id: 292 - MMINV
OK   UME::SIMD::SIMD16_64i test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD16_64i test Id: 294 - MINS
OK   UME::SIMD::SIMD16_64i test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD16_64i test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD16_64i test Id: 297 - MMINS
OK   UME::SIMD::SIMD16_64i test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 299 - MINVA
OK   UME::SIMD::SIMD16_64i test Id: 300 - MMINVA
OK   UME::SIMD::SIMD16_64i test Id: 301 - MINSA
OK   UME::SIMD::SIMD16_64i test Id: 302 - MMINSA
OK   UME::SIMD::SIMD16_64i test Id: 303 - HMAX
OK   UME::SIMD::SIMD16_64i test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD16_64i test Id: 305 - HMAX
OK   UME::SIMD::SIMD16_64i test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD16_64i test Id: 307 - MHMAX
OK   UME::SIMD::SIMD16_64i test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD16_64i test Id: 309 - IMAX
OK   UME::SIMD::SIMD16_64i test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD16_64i test Id: 311 - MIMAX
OK   UME::SIMD::SIMD16_64i test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD16_64i test Id: 313 - HMIN
OK   UME::SIMD::SIMD16_64i test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD16_64i test Id: 315 - HMIN
OK   UME::SIMD::SIMD16_64i test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD16_64i test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD16_64i test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD16_64i test Id: 319 - IMIN
OK   UME::SIMD::SIMD16_64i test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD16_64i test Id: 321 - MIMIN
OK   UME::SIMD::SIMD16_64i test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD16_64i test Id: 323 - REMV gen
OK   UME::SIMD::SIMD16_64i test Id: 324 - REMV(operator%) gen
OK   UME::SIMD::SIMD16_64i test Id: 325 - REMV(function) gen
OK   UME::SIMD::SIMD16_64i test Id: 326 - MREMV gen
OK   UME::SIMD::SIMD16_64i test Id: 327 - MREMV(function) gen
OK   UME::SIMD::SIMD16_64i test Id: 328 - REMS gen
OK   UME::SIMD::SIMD16_64i test Id: 329 - REMS(operator% RHS scalar) gen
OK   UME::SIMD::SIMD16_64i test Id: 330 - REMS(function RHS scalar) gen
OK   UME::SIMD::SIMD16_64i test Id: 331 - REMS(function LHS scalar) gen
OK   UME::SIMD::SIMD16_64i test Id: 332 - LANDV gen
OK   UME::SIMD::SIMD16_64i test Id: 333 - LANDV gen (operator &&)
OK   UME::SIMD::SIMD16_64i test Id: 334 - LORV gen
OK   UME::SIMD::SIMD16_64i test Id: 335 - LORV gen (operator ||)
OK   UME::SIMD::SIMD16_64i test Id: 336 - BANDV
OK   UME::SIMD::SIMD16_64i test Id: 337 - BANDV(operator&)
OK   UME::SIMD::SIMD16_64i test Id: 338 - BANDV(function)
OK   UME::SIMD::SIMD16_64i test Id: 339 - MBANDV
OK   UME::SIMD::SIMD16_64i test Id: 340 - MBANDV
OK   UME::SIMD::SIMD16_64i test Id: 341 - BANDS
OK   UME::SIMD::SIMD16_64i test Id: 342 - BANDS(operator & RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 343 - BANDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 344 - BANDS(operator & LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 345 - BANDS(function - LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 346 - MBANDS
OK   UME::SIMD::SIMD16_64i test Id: 347 - MBANDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 348 - BANDVA
OK   UME::SIMD::SIMD16_64i test Id: 349 - MBANDVA
OK   UME::SIMD::SIMD16_64i test Id: 350 - MBANDVA(vec[mask] &=)
OK   UME::SIMD::SIMD16_64i test Id: 351 - BANDSA
OK   UME::SIMD::SIMD16_64i test Id: 352 - MBANDSA
OK   UME::SIMD::SIMD16_64i test Id: 353 - MBANDSA(vec[mask] &=)
OK   UME::SIMD::SIMD16_64i test Id: 354 - BORV
OK   UME::SIMD::SIMD16_64i test Id: 355 - BORV(operator |)
OK   UME::SIMD::SIMD16_64i test Id: 356 - BORV(function)
OK   UME::SIMD::SIMD16_64i test Id: 357 - MBORV
OK   UME::SIMD::SIMD16_64i test Id: 358 - MBORV(function)
OK   UME::SIMD::SIMD16_64i test Id: 359 - BORS
OK   UME::SIMD::SIMD16_64i test Id: 360 - BORS(operator| RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 361 - BORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 362 - BORS(operator| LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 363 - BORS(function - LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 364 - MBORS
OK   UME::SIMD::SIMD16_64i test Id: 365 - MBORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 366 - BORVA
OK   UME::SIMD::SIMD16_64i test Id: 367 - BORVA(operator|=)
OK   UME::SIMD::SIMD16_64i test Id: 368 - MBORVA
OK   UME::SIMD::SIMD16_64i test Id: 369 - MBORVA(vec[mask] |=)
OK   UME::SIMD::SIMD16_64i test Id: 370 - BORSA
OK   UME::SIMD::SIMD16_64i test Id: 371 - BORSA(operator|=)
OK   UME::SIMD::SIMD16_64i test Id: 372 - MBORSA
OK   UME::SIMD::SIMD16_64i test Id: 373 - MBORSA(vec[mask]|=
OK   UME::SIMD::SIMD16_64i test Id: 374 - BXORV
OK   UME::SIMD::SIMD16_64i test Id: 375 - BXORV(operator^
OK   UME::SIMD::SIMD16_64i test Id: 376 - BXORV(function
OK   UME::SIMD::SIMD16_64i test Id: 377 - MBXORV
OK   UME::SIMD::SIMD16_64i test Id: 378 - MBXORV(function)
OK   UME::SIMD::SIMD16_64i test Id: 379 - BXORS
OK   UME::SIMD::SIMD16_64i test Id: 380 - BXORS(operator^ RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 381 - BXORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 382 - BXORS(operator ^ LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 383 - BXORS(function - LHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 384 - MBXORS
OK   UME::SIMD::SIMD16_64i test Id: 385 - MBXORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 386 - BXORVA
OK   UME::SIMD::SIMD16_64i test Id: 387 - BXORVA(operator^=)
OK   UME::SIMD::SIMD16_64i test Id: 388 - MBXORVA
OK   UME::SIMD::SIMD16_64i test Id: 389 - MBXORVA(vec[mask] ^=)
OK   UME::SIMD::SIMD16_64i test Id: 390 - BXORSA
OK   UME::SIMD::SIMD16_64i test Id: 391 - BXORSA(operator^=)
OK   UME::SIMD::SIMD16_64i test Id: 392 - MBXORSA
OK   UME::SIMD::SIMD16_64i test Id: 393 - MBXORSA(vec[mask] ^=)
OK   UME::SIMD::SIMD16_64i test Id: 394 - BNOT
OK   UME::SIMD::SIMD16_64i test Id: 395 - BNOT(operator!)
OK   UME::SIMD::SIMD16_64i test Id: 396 - BNOT(function)
OK   UME::SIMD::SIMD16_64i test Id: 397 - MBNOT
OK   UME::SIMD::SIMD16_64i test Id: 398 - MBNOT(function)
OK   UME::SIMD::SIMD16_64i test Id: 399 - BNOTA
OK   UME::SIMD::SIMD16_64i test Id: 400 - MBNOTA
OK   UME::SIMD::SIMD16_64i test Id: 401 - BANDNOTV
OK   UME::SIMD::SIMD16_64i test Id: 402 - BANDNOTV (function)
OK   UME::SIMD::SIMD16_64i test Id: 403 - MBANDNOTV
OK   UME::SIMD::SIMD16_64i test Id: 404 - MBANDNOTV (function)
OK   UME::SIMD::SIMD16_64i test Id: 405 - BANDNOTS
OK   UME::SIMD::SIMD16_64i test Id: 406 - BANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD16_64i test Id: 407 - BANDNOTS (function lhs scalar)
OK   UME::SIMD::SIMD16_64i test Id: 408 - MBANDNOTS
OK   UME::SIMD::SIMD16_64i test Id: 409 - MBANDNOTS (function - rhs scalar)
OK   UME::SIMD::SIMD16_64i test Id: 410 - MBANDNOTS (function - lhs scalar)
OK   UME::SIMD::SIMD16_64i test Id: 411 - BANDNOTVA
OK   UME::SIMD::SIMD16_64i test Id: 412 - MBANDNOTVA
OK   UME::SIMD::SIMD16_64i test Id: 413 - BANDNOTSA
OK   UME::SIMD::SIMD16_64i test Id: 414 - MBANDNOTSA
OK   UME::SIMD::SIMD16_64i test Id: 415 - HBAND
OK   UME::SIMD::SIMD16_64i test Id: 416 - HBAND
OK   UME::SIMD::SIMD16_64i test Id: 417 - MHBAND
OK   UME::SIMD::SIMD16_64i test Id: 418 - MHBAND(function)
OK   UME::SIMD::SIMD16_64i test Id: 419 - HBANDS
OK   UME::SIMD::SIMD16_64i test Id: 420 - MHBANDS
OK   UME::SIMD::SIMD16_64i test Id: 421 - HBOR
OK   UME::SIMD::SIMD16_64i test Id: 422 - HBOR(function)
OK   UME::SIMD::SIMD16_64i test Id: 423 - MHBOR
OK   UME::SIMD::SIMD16_64i test Id: 424 - MHBOR(function)
OK   UME::SIMD::SIMD16_64i test Id: 425 - HBORS
OK   UME::SIMD::SIMD16_64i test Id: 426 - MHBORS
OK   UME::SIMD::SIMD16_64i test Id: 427 - HBXOR
OK   UME::SIMD::SIMD16_64i test Id: 428 - HBXOR(function)
OK   UME::SIMD::SIMD16_64i test Id: 429 - MHBXOR
OK   UME::SIMD::SIMD16_64i test Id: 430 - MHBXOR
OK   UME::SIMD::SIMD16_64i test Id: 431 - HBXORS
OK   UME::SIMD::SIMD16_64i test Id: 432 - MHBXORS
OK   UME::SIMD::SIMD16_64i test Id: 433 - GATHERU
OK   UME::SIMD::SIMD16_64i test Id: 434 - MGATHERU
OK   UME::SIMD::SIMD16_64i test Id: 435 - GATHERS
OK   UME::SIMD::SIMD16_64i test Id: 436 - MGATHERS
OK   UME::SIMD::SIMD16_64i test Id: 437 - GATHERV
OK   UME::SIMD::SIMD16_64i test Id: 438 - MGATHERV
OK   UME::SIMD::SIMD16_64i test Id: 439 - SCATTERU
OK   UME::SIMD::SIMD16_64i test Id: 440 - MSCATTERU
OK   UME::SIMD::SIMD16_64i test Id: 441 - SCATTERS
OK   UME::SIMD::SIMD16_64i test Id: 442 - MSCATTERS
OK   UME::SIMD::SIMD16_64i test Id: 443 - SCATTERV
OK   UME::SIMD::SIMD16_64i test Id: 444 - MSCATTERV
OK   UME::SIMD::SIMD16_64i test Id: 445 - LSHV gen
OK   UME::SIMD::SIMD16_64i test Id: 446 - LSHV (function) gen
OK   UME::SIMD::SIMD16_64i test Id: 447 - LSHV (operator<<) gen
OK   UME::SIMD::SIMD16_64i test Id: 448 - MLSHV gen
OK   UME::SIMD::SIMD16_64i test Id: 449 - MLSHV (function) gen
OK   UME::SIMD::SIMD16_64i test Id: 450 - LSHS gen
OK   UME::SIMD::SIMD16_64i test Id: 451 - LSHS (function) gen
OK   UME::SIMD::SIMD16_64i test Id: 452 - LSHS (operator<<) gen
OK   UME::SIMD::SIMD16_64i test Id: 453 - MLSHS gen
OK   UME::SIMD::SIMD16_64i test Id: 454 - MLSHS (function) gen
OK   UME::SIMD::SIMD16_64i test Id: 455 - LSHVA gen
OK   UME::SIMD::SIMD16_64i test Id: 456 - LSHVA (operator<<=) gen
OK   UME::SIMD::SIMD16_64i test Id: 457 - MLSHVA gen
OK   UME::SIMD::SIMD16_64i test Id: 458 - LSHSA gen
OK   UME::SIMD::SIMD16_64i test Id: 459 - LSHSA (operator<<=) gen
OK   UME::SIMD::SIMD16_64i test Id: 460 - MLSHSA gen
OK   UME::SIMD::SIMD16_64i test Id: 461 - RSHV gen
OK   UME::SIMD::SIMD16_64i test Id: 462 - RSHV (function) gen
OK   UME::SIMD::SIMD16_64i test Id: 463 - RSHV (operator>>) gen
OK   UME::SIMD::SIMD16_64i test Id: 464 - MRSHV gen
OK   UME::SIMD::SIMD16_64i test Id: 465 - MRSHV (function) gen
OK   UME::SIMD::SIMD16_64i test Id: 466 - RSHS gen
OK   UME::SIMD::SIMD16_64i test Id: 467 - RSHS (function) gen
OK   UME::SIMD::SIMD16_64i test Id: 468 - RSHS (operator>>) gen
OK   UME::SIMD::SIMD16_64i test Id: 469 - MRSHS gen
OK   UME::SIMD::SIMD16_64i test Id: 470 - MRSHS (function) gen
OK   UME::SIMD::SIMD16_64i test Id: 471 - RSHVA gen
OK   UME::SIMD::SIMD16_64i test Id: 472 - RSHVA (operator>>=) gen
OK   UME::SIMD::SIMD16_64i test Id: 473 - MRSHVA gen
OK   UME::SIMD::SIMD16_64i test Id: 474 - RSHSA gen
OK   UME::SIMD::SIMD16_64i test Id: 475 - RSHSA (operator>>=) gen
OK   UME::SIMD::SIMD16_64i test Id: 476 - MRSHSA gen
OK   UME::SIMD::SIMD16_64i test Id: 477 - ROLV
OK   UME::SIMD::SIMD16_64i test Id: 478 - ROLV(function)
OK   UME::SIMD::SIMD16_64i test Id: 479 - MROLV
OK   UME::SIMD::SIMD16_64i test Id: 480 - MROLV(function)
OK   UME::SIMD::SIMD16_64i test Id: 481 - ROLS
OK   UME::SIMD::SIMD16_64i test Id: 482 - ROLS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 483 - MROLS
OK   UME::SIMD::SIMD16_64i test Id: 484 - MROLS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 485 - ROLVA
OK   UME::SIMD::SIMD16_64i test Id: 486 - MROLVA
OK   UME::SIMD::SIMD16_64i test Id: 487 - ROLSA
OK   UME::SIMD::SIMD16_64i test Id: 488 - MROLSA
OK   UME::SIMD::SIMD16_64i test Id: 489 - RORV
OK   UME::SIMD::SIMD16_64i test Id: 490 - RORV(function)
OK   UME::SIMD::SIMD16_64i test Id: 491 - MRORV
OK   UME::SIMD::SIMD16_64i test Id: 492 - MRORV(function)
OK   UME::SIMD::SIMD16_64i test Id: 493 - RORS
OK   UME::SIMD::SIMD16_64i test Id: 494 - RORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 495 - MRORS
OK   UME::SIMD::SIMD16_64i test Id: 496 - MRORS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64i test Id: 497 - RORVA
OK   UME::SIMD::SIMD16_64i test Id: 498 - MRORVA
OK   UME::SIMD::SIMD16_64i test Id: 499 - RORSA
OK   UME::SIMD::SIMD16_64i test Id: 500 - MRORSA
OK   UME::SIMD::SIMD16_64i test Id: 501 - NEG
OK   UME::SIMD::SIMD16_64i test Id: 502 - NEG(operator-)
OK   UME::SIMD::SIMD16_64i test Id: 503 - NEG(function)
OK   UME::SIMD::SIMD16_64i test Id: 504 - MNEG
OK   UME::SIMD::SIMD16_64i test Id: 505 - MNEG(function)
OK   UME::SIMD::SIMD16_64i test Id: 506 - NEGA
OK   UME::SIMD::SIMD16_64i test Id: 507 - MNEGA
OK   UME::SIMD::SIMD16_64i test Id: 508 - ABS
OK   UME::SIMD::SIMD16_64i test Id: 509 - ABS(function)
OK   UME::SIMD::SIMD16_64i test Id: 510 - MABS
OK   UME::SIMD::SIMD16_64i test Id: 511 - MABS(function)
OK   UME::SIMD::SIMD16_64i test Id: 512 - ABSA
OK   UME::SIMD::SIMD16_64i test Id: 513 - MABSA
OK   UME::SIMD::SIMD16_64i test Id: 514 - COPYSIGN gen
OK   UME::SIMD::SIMD16_64i test Id: 515 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD16_64i test Id: 516 - ITOU
OK   UME::SIMD::SIMD16_64i test Id: 517 - PACK
OK   UME::SIMD::SIMD16_64i test Id: 518 - PACKLO
OK   UME::SIMD::SIMD16_64i test Id: 519 - PACKHI
OK   UME::SIMD::SIMD16_64i test Id: 520 - UNPACK
OK   UME::SIMD::SIMD16_64i test Id: 521 - UNPACKLO
OK   UME::SIMD::SIMD16_64i test Id: 522 - UNPACKHi
OK   UME::SIMD::SIMD16_64i test Id: 523 - DEGRADE
OK   UME::SIMD::SIMD16_64f test Id: 1 - ZERO-CONSTR
OK   UME::SIMD::SIMD16_64f test Id: 2 - SET-CONSTR gen
OK   UME::SIMD::SIMD16_64f test Id: 3 - SET-CONSTR gen 0-initializer
OK   UME::SIMD::SIMD16_64f test Id: 4 - SET-CONSTR gen uint8_t initializer
OK   UME::SIMD::SIMD16_64f test Id: 5 - SET-CONSTR gen initializeruint8_t initializer
OK   UME::SIMD::SIMD16_64f test Id: 6 - SET-CONSTR gen uint16_t initializer
OK   UME::SIMD::SIMD16_64f test Id: 7 - SET-CONSTR gen initializeruint16_t initializer
OK   UME::SIMD::SIMD16_64f test Id: 8 - SET-CONSTR gen uint32_t initializer
OK   UME::SIMD::SIMD16_64f test Id: 9 - SET-CONSTR gen initializeruint32_t initializer
OK   UME::SIMD::SIMD16_64f test Id: 10 - SET-CONSTR gen uint64_t initializer
OK   UME::SIMD::SIMD16_64f test Id: 11 - SET-CONSTR gen initializeruint64_t initializer
OK   UME::SIMD::SIMD16_64f test Id: 12 - SET-CONSTR gen int8_t initializer
OK   UME::SIMD::SIMD16_64f test Id: 13 - SET-CONSTR gen initializerint8_t initializer
OK   UME::SIMD::SIMD16_64f test Id: 14 - SET-CONSTR gen int16_t initializer
OK   UME::SIMD::SIMD16_64f test Id: 15 - SET-CONSTR gen initializerint16_t initializer
OK   UME::SIMD::SIMD16_64f test Id: 16 - SET-CONSTR gen int32_t initializer
OK   UME::SIMD::SIMD16_64f test Id: 17 - SET-CONSTR gen initializerint32_t initializer
OK   UME::SIMD::SIMD16_64f test Id: 18 - SET-CONSTR gen int64_t initializer
OK   UME::SIMD::SIMD16_64f test Id: 19 - SET-CONSTR gen initializerint64_t initializer
OK   UME::SIMD::SIMD16_64f test Id: 20 - SET-CONSTR gen float initializer
OK   UME::SIMD::SIMD16_64f test Id: 21 - SET-CONSTR gen initializerfloat initializer
OK   UME::SIMD::SIMD16_64f test Id: 22 - SET-CONSTR gen double initializer
OK   UME::SIMD::SIMD16_64f test Id: 23 - SET-CONSTR gen initializerdouble initializer
OK   UME::SIMD::SIMD16_64f test Id: 24 - INSERT
OK   UME::SIMD::SIMD16_64f test Id: 25 - INSERT(operator[] =)
OK   UME::SIMD::SIMD16_64f test Id: 26 - EXTRACT
OK   UME::SIMD::SIMD16_64f test Id: 27 - EXTRACT(operator[])
OK   UME::SIMD::SIMD16_64f test Id: 28 - IntermediateIndex (Index <- scalar)
OK   UME::SIMD::SIMD16_64f test Id: 29 - IntermediateIndex (Index <- Index)
OK   UME::SIMD::SIMD16_64f test Id: 30 - ASSIGNV
OK   UME::SIMD::SIMD16_64f test Id: 31 - ASSIGNV(operator=)
OK   UME::SIMD::SIMD16_64f test Id: 32 - MASSIGNV
OK   UME::SIMD::SIMD16_64f test Id: 33 - MASSIGNV(vec[mask] = ) 
OK   UME::SIMD::SIMD16_64f test Id: 34 - ASSIGNS
OK   UME::SIMD::SIMD16_64f test Id: 35 - ASSIGNS(operator=)
OK   UME::SIMD::SIMD16_64f test Id: 36 - MASSIGNS
OK   UME::SIMD::SIMD16_64f test Id: 37 - MASSIGNS
OK   UME::SIMD::SIMD16_64f test Id: 38 - LOAD/STORE
OK   UME::SIMD::SIMD16_64f test Id: 39 - MLOAD
OK   UME::SIMD::SIMD16_64f test Id: 40 - MSTORE
OK   UME::SIMD::SIMD16_64f test Id: 41 - LOADA/STOREA
OK   UME::SIMD::SIMD16_64f test Id: 42 - MLOADA
OK   UME::SIMD::SIMD16_64f test Id: 43 - MSTOREA
OK   UME::SIMD::SIMD16_64f test Id: 44 - SWIZZLE
OK   UME::SIMD::SIMD16_64f test Id: 45 - SORTA
OK   UME::SIMD::SIMD16_64f test Id: 46 - SORTD
OK   UME::SIMD::SIMD16_64f test Id: 47 - BLENDV gen
OK   UME::SIMD::SIMD16_64f test Id: 48 - ADDV
OK   UME::SIMD::SIMD16_64f test Id: 49 - ADDV(operator+)
OK   UME::SIMD::SIMD16_64f test Id: 50 - ADDV(function)
OK   UME::SIMD::SIMD16_64f test Id: 51 - ADDV gen
OK   UME::SIMD::SIMD16_64f test Id: 52 - ADDV(operator+) gen
OK   UME::SIMD::SIMD16_64f test Id: 53 - ADDV(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 54 - MADDV
OK   UME::SIMD::SIMD16_64f test Id: 55 - MADDV(function)
OK   UME::SIMD::SIMD16_64f test Id: 56 - MADDV gen
OK   UME::SIMD::SIMD16_64f test Id: 57 - MADDV(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 58 - ADDS
OK   UME::SIMD::SIMD16_64f test Id: 59 - ADDS(operator+ RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 60 - ADDS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 61 - ADDS(operator+ LHS scalar
OK   UME::SIMD::SIMD16_64f test Id: 62 - ADDS(function - LHS scalar
OK   UME::SIMD::SIMD16_64f test Id: 63 - ADDS gen
OK   UME::SIMD::SIMD16_64f test Id: 64 - ADDS(operator+ RHS scalar) gen
OK   UME::SIMD::SIMD16_64f test Id: 65 - ADDS(operator+ LHS scalar) gen
OK   UME::SIMD::SIMD16_64f test Id: 66 - ADDV(function RHS scalar) gen
OK   UME::SIMD::SIMD16_64f test Id: 67 - ADDV(function LHS scalar) gen
OK   UME::SIMD::SIMD16_64f test Id: 68 - MADDS
OK   UME::SIMD::SIMD16_64f test Id: 69 - MADDS (function - RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 70 - MADDS gen
OK   UME::SIMD::SIMD16_64f test Id: 71 - MADDS(function RHS scalar) gen
OK   UME::SIMD::SIMD16_64f test Id: 72 - MADDS(function LHS scalar) gen
OK   UME::SIMD::SIMD16_64f test Id: 73 - ADDVA
OK   UME::SIMD::SIMD16_64f test Id: 74 - ADDVA(operator+=)
OK   UME::SIMD::SIMD16_64f test Id: 75 - ADDVA gen
OK   UME::SIMD::SIMD16_64f test Id: 76 - ADDVA(operator+=) gen
OK   UME::SIMD::SIMD16_64f test Id: 77 - MADDVA
OK   UME::SIMD::SIMD16_64f test Id: 78 - MADDVA(vec[mask] +=)
OK   UME::SIMD::SIMD16_64f test Id: 79 - ADDSA
OK   UME::SIMD::SIMD16_64f test Id: 80 - ADDSA(operator+=)
OK   UME::SIMD::SIMD16_64f test Id: 81 - MADDSA
OK   UME::SIMD::SIMD16_64f test Id: 82 - MADDSA(vec[mask] +=)
OK   UME::SIMD::SIMD16_64f test Id: 83 - SADDV gen
OK   UME::SIMD::SIMD16_64f test Id: 84 - SADDV(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 85 - POSTINC
OK   UME::SIMD::SIMD16_64f test Id: 86 - POSTINC(operator++(int))
OK   UME::SIMD::SIMD16_64f test Id: 87 - POSTINC(function)
OK   UME::SIMD::SIMD16_64f test Id: 88 - MPOSTINC
OK   UME::SIMD::SIMD16_64f test Id: 89 - MPOSTINC(function)
OK   UME::SIMD::SIMD16_64f test Id: 90 - PREFINC
OK   UME::SIMD::SIMD16_64f test Id: 91 - PREFINC(operator++())
OK   UME::SIMD::SIMD16_64f test Id: 92 - PREFINC(function)
OK   UME::SIMD::SIMD16_64f test Id: 93 - MPREFINC
OK   UME::SIMD::SIMD16_64f test Id: 94 - MPREFINC(function)
OK   UME::SIMD::SIMD16_64f test Id: 95 - SUBV
OK   UME::SIMD::SIMD16_64f test Id: 96 - SUBV(operator-)
OK   UME::SIMD::SIMD16_64f test Id: 97 - SUBV(function)
OK   UME::SIMD::SIMD16_64f test Id: 98 - SUBV gen
OK   UME::SIMD::SIMD16_64f test Id: 99 - SUBV(operator-) gen
OK   UME::SIMD::SIMD16_64f test Id: 100 - SUBV(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 101 - MSUBV
OK   UME::SIMD::SIMD16_64f test Id: 102 - MSUBV(function)
OK   UME::SIMD::SIMD16_64f test Id: 103 - MSUBV gen
OK   UME::SIMD::SIMD16_64f test Id: 104 - MSUBV(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 105 - SUBS gen
OK   UME::SIMD::SIMD16_64f test Id: 106 - SUBS(operator-) gen
OK   UME::SIMD::SIMD16_64f test Id: 107 - SUBS(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 108 - MSUBS
OK   UME::SIMD::SIMD16_64f test Id: 109 - MSUBS(function -RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 110 - SUBVA
OK   UME::SIMD::SIMD16_64f test Id: 111 - SUBVA(operator-=)
OK   UME::SIMD::SIMD16_64f test Id: 112 - MSUBVA
OK   UME::SIMD::SIMD16_64f test Id: 113 - MSUBVA(vec[mask] -=)
OK   UME::SIMD::SIMD16_64f test Id: 114 - SUBSA
OK   UME::SIMD::SIMD16_64f test Id: 115 - MSUBSA
OK   UME::SIMD::SIMD16_64f test Id: 116 - MSUBSA(vec[mask] -=)
OK   UME::SIMD::SIMD16_64f test Id: 117 - SUBFROMV
OK   UME::SIMD::SIMD16_64f test Id: 118 - MSUBFROMV
OK   UME::SIMD::SIMD16_64f test Id: 119 - SUBFROMS
OK   UME::SIMD::SIMD16_64f test Id: 120 - SUBFROMS(operator- LHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 121 - MSUBFROMS
OK   UME::SIMD::SIMD16_64f test Id: 122 - MSUBFROMS (function LHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 123 - SUBFROMVA
OK   UME::SIMD::SIMD16_64f test Id: 124 - MSUBFROMVA
OK   UME::SIMD::SIMD16_64f test Id: 125 - SUBFROMSA
OK   UME::SIMD::SIMD16_64f test Id: 126 - MSUBFROMSA
OK   UME::SIMD::SIMD16_64f test Id: 127 - POSTDEC
OK   UME::SIMD::SIMD16_64f test Id: 128 - POSTDEC(operator--(int))
OK   UME::SIMD::SIMD16_64f test Id: 129 - POSTDEC(function)
OK   UME::SIMD::SIMD16_64f test Id: 130 - MPOSTDEC
OK   UME::SIMD::SIMD16_64f test Id: 131 - MPOSTDEC(function)
OK   UME::SIMD::SIMD16_64f test Id: 132 - PREFDEC
OK   UME::SIMD::SIMD16_64f test Id: 133 - PREFDEC(operator--())
OK   UME::SIMD::SIMD16_64f test Id: 134 - PREFDEC(function)
OK   UME::SIMD::SIMD16_64f test Id: 135 - MPREFDEC
OK   UME::SIMD::SIMD16_64f test Id: 136 - MPREFDEC(function)
OK   UME::SIMD::SIMD16_64f test Id: 137 - MULV
OK   UME::SIMD::SIMD16_64f test Id: 138 - MULV(operator*)
OK   UME::SIMD::SIMD16_64f test Id: 139 - MULV(function)
OK   UME::SIMD::SIMD16_64f test Id: 140 - MMULV
OK   UME::SIMD::SIMD16_64f test Id: 141 - MMULV(function)
OK   UME::SIMD::SIMD16_64f test Id: 142 - MULS
OK   UME::SIMD::SIMD16_64f test Id: 143 - MULS(operator* RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 144 - MULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 145 - MULS(function LHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 146 - MMULS
OK   UME::SIMD::SIMD16_64f test Id: 147 - MMULS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 148 - MULVA
OK   UME::SIMD::SIMD16_64f test Id: 149 - MULVA(operator*)
OK   UME::SIMD::SIMD16_64f test Id: 150 - MULVA gen
OK   UME::SIMD::SIMD16_64f test Id: 151 - MULVA(operator*=) gen
OK   UME::SIMD::SIMD16_64f test Id: 152 - MMULVA
OK   UME::SIMD::SIMD16_64f test Id: 153 - MMULVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_64f test Id: 154 - MULSA
OK   UME::SIMD::SIMD16_64f test Id: 155 - MULSA(operator*=)
OK   UME::SIMD::SIMD16_64f test Id: 156 - MMULSA
OK   UME::SIMD::SIMD16_64f test Id: 157 - DIVV
OK   UME::SIMD::SIMD16_64f test Id: 158 - DIVV(operator/)
OK   UME::SIMD::SIMD16_64f test Id: 159 - DIVV(function)
OK   UME::SIMD::SIMD16_64f test Id: 160 - MDIVV
OK   UME::SIMD::SIMD16_64f test Id: 161 - MDIVV(function)
OK   UME::SIMD::SIMD16_64f test Id: 162 - DIVS
OK   UME::SIMD::SIMD16_64f test Id: 163 - DIVS(operator/ RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 164 - DIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 165 - MDIVS
OK   UME::SIMD::SIMD16_64f test Id: 166 - MDIVS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 167 - DIVVA
OK   UME::SIMD::SIMD16_64f test Id: 168 - DIVVA(operator/=)
OK   UME::SIMD::SIMD16_64f test Id: 169 - DIVVA gen
OK   UME::SIMD::SIMD16_64f test Id: 170 - DIVVA(operator/=) gen
OK   UME::SIMD::SIMD16_64f test Id: 171 - MDIVVA
OK   UME::SIMD::SIMD16_64f test Id: 172 - MDIVVA(vec[mask] /=)
OK   UME::SIMD::SIMD16_64f test Id: 173 - DIVSA
OK   UME::SIMD::SIMD16_64f test Id: 174 - DIVSA(operator/=)
OK   UME::SIMD::SIMD16_64f test Id: 175 - MDIVSA
OK   UME::SIMD::SIMD16_64f test Id: 176 - MDIVSA(vec[mask] \=)
OK   UME::SIMD::SIMD16_64f test Id: 177 - RCP
OK   UME::SIMD::SIMD16_64f test Id: 178 - RCP(function)
OK   UME::SIMD::SIMD16_64f test Id: 179 - MRCP
OK   UME::SIMD::SIMD16_64f test Id: 180 - MRCP(function)
OK   UME::SIMD::SIMD16_64f test Id: 181 - RCPS
OK   UME::SIMD::SIMD16_64f test Id: 182 - RCPS(operator/ LHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 183 - RCPS(function)
OK   UME::SIMD::SIMD16_64f test Id: 184 - MRCPS
OK   UME::SIMD::SIMD16_64f test Id: 185 - MRCPS (function)
OK   UME::SIMD::SIMD16_64f test Id: 186 - RCPA
OK   UME::SIMD::SIMD16_64f test Id: 187 - MRCPA
OK   UME::SIMD::SIMD16_64f test Id: 188 - RCPSA
OK   UME::SIMD::SIMD16_64f test Id: 189 - MRCPSA
OK   UME::SIMD::SIMD16_64f test Id: 190 - CMPEQV
OK   UME::SIMD::SIMD16_64f test Id: 191 - CMPEQV(operator==)
OK   UME::SIMD::SIMD16_64f test Id: 192 - CMPEQV(function)
OK   UME::SIMD::SIMD16_64f test Id: 193 - CMPEQS
OK   UME::SIMD::SIMD16_64f test Id: 194 - CMPEQS(operator== RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 195 - CMPEQS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 196 - CMPEQS(operator== LHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 197 - CMPEQS(function - LHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 198 - CMPNEV
OK   UME::SIMD::SIMD16_64f test Id: 199 - CMPNEV(operator!=)
OK   UME::SIMD::SIMD16_64f test Id: 200 - CMPNEV(function)
OK   UME::SIMD::SIMD16_64f test Id: 201 - CMPNES
OK   UME::SIMD::SIMD16_64f test Id: 202 - CMPNES(operator!= RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 203 - CMPNES(function - RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 204 - CMPNES(operator!= LHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 205 - CMPNES(function - LHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 206 - CMPGTV
OK   UME::SIMD::SIMD16_64f test Id: 207 - CMPGTV(operator>)
OK   UME::SIMD::SIMD16_64f test Id: 208 - CMPGTV(function)
OK   UME::SIMD::SIMD16_64f test Id: 209 - CMPGTS
OK   UME::SIMD::SIMD16_64f test Id: 210 - CMPGTS(operator> RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 211 - CMPGTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 212 - CMPGTS(operator> LHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 213 - CMPGTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 214 - CMPLTV
OK   UME::SIMD::SIMD16_64f test Id: 215 - CMPLTV(operator<)
OK   UME::SIMD::SIMD16_64f test Id: 216 - CMPLTV(function)
OK   UME::SIMD::SIMD16_64f test Id: 217 - CMPLTS
OK   UME::SIMD::SIMD16_64f test Id: 218 - CMPLTS(operator< RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 219 - CMPLTS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 220 - CMPLTS(operator< LHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 221 - CMPLTS(function - LHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 222 - CMPGEV
OK   UME::SIMD::SIMD16_64f test Id: 223 - CMPGEV(operator>=)
OK   UME::SIMD::SIMD16_64f test Id: 224 - CMPGEV(function)
OK   UME::SIMD::SIMD16_64f test Id: 225 - CMPGES
OK   UME::SIMD::SIMD16_64f test Id: 226 - CMPGES(operator>= RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 227 - CMPGES(function RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 228 - CMPGES(operator>= LHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 229 - CMPGES(function - LHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 230 - CMPLEV
OK   UME::SIMD::SIMD16_64f test Id: 231 - CMPLEV(operator<=)
OK   UME::SIMD::SIMD16_64f test Id: 232 - CMPLEV(function)
OK   UME::SIMD::SIMD16_64f test Id: 233 - CMPLES
OK   UME::SIMD::SIMD16_64f test Id: 234 - CMPLES(operator<= LHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 235 - CMPLES(function - LHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 236 - CMPLES(operator<= RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 237 - CMPLES(function - RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 238 - CMPEV
OK   UME::SIMD::SIMD16_64f test Id: 239 - CMPEV(function)
OK   UME::SIMD::SIMD16_64f test Id: 240 - CMPES
OK   UME::SIMD::SIMD16_64f test Id: 241 - CMPES(function - RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 242 - CMPES(function - LHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 243 - HADD
OK   UME::SIMD::SIMD16_64f test Id: 244 - HADD(function)
OK   UME::SIMD::SIMD16_64f test Id: 245 - HADD gen
OK   UME::SIMD::SIMD16_64f test Id: 246 - HADD(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 247 - MHADD gen
OK   UME::SIMD::SIMD16_64f test Id: 248 - MHADD(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 249 - HADDS gen
OK   UME::SIMD::SIMD16_64f test Id: 250 - HADDS(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 251 - MHADD gen
OK   UME::SIMD::SIMD16_64f test Id: 252 - MHADDS(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 253 - HMUL gen
OK   UME::SIMD::SIMD16_64f test Id: 254 - HMUL(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 255 - MHMUL gen
OK   UME::SIMD::SIMD16_64f test Id: 256 - MHMUL(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 257 - HMULS gen
OK   UME::SIMD::SIMD16_64f test Id: 258 - HMULS(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 259 - MHMUL gen
OK   UME::SIMD::SIMD16_64f test Id: 260 - MHMULS(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 261 - FMULADDV
OK   UME::SIMD::SIMD16_64f test Id: 262 - FMULADDV(function)
OK   UME::SIMD::SIMD16_64f test Id: 263 - MFMULADDV
OK   UME::SIMD::SIMD16_64f test Id: 264 - MFMULADDV(function)
OK   UME::SIMD::SIMD16_64f test Id: 265 - FMULSUBV
OK   UME::SIMD::SIMD16_64f test Id: 266 - FMULSUBV(function)
OK   UME::SIMD::SIMD16_64f test Id: 267 - MFMULSUBV
OK   UME::SIMD::SIMD16_64f test Id: 268 - MFMULSUBV(function)
OK   UME::SIMD::SIMD16_64f test Id: 269 - FADDMULV
OK   UME::SIMD::SIMD16_64f test Id: 270 - FADDMULV(function)
OK   UME::SIMD::SIMD16_64f test Id: 271 - MFADDMULV
OK   UME::SIMD::SIMD16_64f test Id: 272 - MFADDMULV(function)
OK   UME::SIMD::SIMD16_64f test Id: 273 - FSUBMULV
OK   UME::SIMD::SIMD16_64f test Id: 274 - FSUBMULV(function)
OK   UME::SIMD::SIMD16_64f test Id: 275 - MFSUBMULV
OK   UME::SIMD::SIMD16_64f test Id: 276 - MFSUBMULV(function)
OK   UME::SIMD::SIMD16_64f test Id: 277 - MAXV
OK   UME::SIMD::SIMD16_64f test Id: 278 - MAXV(function)
OK   UME::SIMD::SIMD16_64f test Id: 279 - MMAXV
OK   UME::SIMD::SIMD16_64f test Id: 280 - MMAXV(function)
OK   UME::SIMD::SIMD16_64f test Id: 281 - MAXS
OK   UME::SIMD::SIMD16_64f test Id: 282 - MAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 283 - MAXS(function - LHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 284 - MMAXS
OK   UME::SIMD::SIMD16_64f test Id: 285 - MMAXS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 286 - MAXVA
OK   UME::SIMD::SIMD16_64f test Id: 287 - MMAXVA
OK   UME::SIMD::SIMD16_64f test Id: 288 - MAXSA
OK   UME::SIMD::SIMD16_64f test Id: 289 - MMAXSA
OK   UME::SIMD::SIMD16_64f test Id: 290 - MINV
OK   UME::SIMD::SIMD16_64f test Id: 291 - MINV(function)
OK   UME::SIMD::SIMD16_64f test Id: 292 - MMINV
OK   UME::SIMD::SIMD16_64f test Id: 293 - MMINV(function)
OK   UME::SIMD::SIMD16_64f test Id: 294 - MINS
OK   UME::SIMD::SIMD16_64f test Id: 295 - MINS(function - RHS scalar
OK   UME::SIMD::SIMD16_64f test Id: 296 - MINS(function - LHS scalar
OK   UME::SIMD::SIMD16_64f test Id: 297 - MMINS
OK   UME::SIMD::SIMD16_64f test Id: 298 - MMINS(function - RHS scalar)
OK   UME::SIMD::SIMD16_64f test Id: 299 - MINVA
OK   UME::SIMD::SIMD16_64f test Id: 300 - MMINVA
OK   UME::SIMD::SIMD16_64f test Id: 301 - MINSA
OK   UME::SIMD::SIMD16_64f test Id: 302 - MMINSA
OK   UME::SIMD::SIMD16_64f test Id: 303 - HMAX
OK   UME::SIMD::SIMD16_64f test Id: 304 - HMAX(function)
OK   UME::SIMD::SIMD16_64f test Id: 305 - HMAX
OK   UME::SIMD::SIMD16_64f test Id: 306 - HMAX(function)
OK   UME::SIMD::SIMD16_64f test Id: 307 - MHMAX
OK   UME::SIMD::SIMD16_64f test Id: 308 - MHMAX(function)
OK   UME::SIMD::SIMD16_64f test Id: 309 - IMAX
OK   UME::SIMD::SIMD16_64f test Id: 310 - IMAX(function)
OK   UME::SIMD::SIMD16_64f test Id: 311 - MIMAX
OK   UME::SIMD::SIMD16_64f test Id: 312 - MIMAX(function)
OK   UME::SIMD::SIMD16_64f test Id: 313 - HMIN
OK   UME::SIMD::SIMD16_64f test Id: 314 - HMIN(function)
OK   UME::SIMD::SIMD16_64f test Id: 315 - HMIN
OK   UME::SIMD::SIMD16_64f test Id: 316 - HMIN(function)
OK   UME::SIMD::SIMD16_64f test Id: 317 - MHMIN gen
OK   UME::SIMD::SIMD16_64f test Id: 318 - MHMIN(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 319 - IMIN
OK   UME::SIMD::SIMD16_64f test Id: 320 - IMIN(function)
OK   UME::SIMD::SIMD16_64f test Id: 321 - MIMIN
OK   UME::SIMD::SIMD16_64f test Id: 322 - MIMIN(function)
OK   UME::SIMD::SIMD16_64f test Id: 323 - GATHERU
OK   UME::SIMD::SIMD16_64f test Id: 324 - MGATHERU
OK   UME::SIMD::SIMD16_64f test Id: 325 - GATHERS
OK   UME::SIMD::SIMD16_64f test Id: 326 - MGATHERS
OK   UME::SIMD::SIMD16_64f test Id: 327 - GATHERV
OK   UME::SIMD::SIMD16_64f test Id: 328 - MGATHERV
OK   UME::SIMD::SIMD16_64f test Id: 329 - SCATTERU
OK   UME::SIMD::SIMD16_64f test Id: 330 - MSCATTERU
OK   UME::SIMD::SIMD16_64f test Id: 331 - SCATTERS
OK   UME::SIMD::SIMD16_64f test Id: 332 - MSCATTERS
OK   UME::SIMD::SIMD16_64f test Id: 333 - SCATTERV
OK   UME::SIMD::SIMD16_64f test Id: 334 - MSCATTERV
OK   UME::SIMD::SIMD16_64f test Id: 335 - NEG
OK   UME::SIMD::SIMD16_64f test Id: 336 - NEG(operator-)
OK   UME::SIMD::SIMD16_64f test Id: 337 - NEG(function)
OK   UME::SIMD::SIMD16_64f test Id: 338 - MNEG
OK   UME::SIMD::SIMD16_64f test Id: 339 - MNEG(function)
OK   UME::SIMD::SIMD16_64f test Id: 340 - NEGA
OK   UME::SIMD::SIMD16_64f test Id: 341 - MNEGA
OK   UME::SIMD::SIMD16_64f test Id: 342 - ABS
OK   UME::SIMD::SIMD16_64f test Id: 343 - ABS(function)
OK   UME::SIMD::SIMD16_64f test Id: 344 - MABS
OK   UME::SIMD::SIMD16_64f test Id: 345 - MABS(function)
OK   UME::SIMD::SIMD16_64f test Id: 346 - ABSA
OK   UME::SIMD::SIMD16_64f test Id: 347 - MABSA
OK   UME::SIMD::SIMD16_64f test Id: 348 - COPYSIGN gen
OK   UME::SIMD::SIMD16_64f test Id: 349 - COPYSIGN(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 350 - ROUND
OK   UME::SIMD::SIMD16_64f test Id: 351 - ROUND(function)
OK   UME::SIMD::SIMD16_64f test Id: 352 - MROUND
OK   UME::SIMD::SIMD16_64f test Id: 353 - MROUND(function)
OK   UME::SIMD::SIMD16_64f test Id: 354 - TRUNC gen
OK   UME::SIMD::SIMD16_64f test Id: 355 - TRUNC(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 356 - MTRUNC gen
OK   UME::SIMD::SIMD16_64f test Id: 357 - MTRUNC(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 358 - FLOOR
OK   UME::SIMD::SIMD16_64f test Id: 359 - FLOOR(function)
OK   UME::SIMD::SIMD16_64f test Id: 360 - MFLOOR
OK   UME::SIMD::SIMD16_64f test Id: 361 - MFLOOR(function)
OK   UME::SIMD::SIMD16_64f test Id: 362 - CEIL
OK   UME::SIMD::SIMD16_64f test Id: 363 - CEIL(function)
OK   UME::SIMD::SIMD16_64f test Id: 364 - MCEIL
OK   UME::SIMD::SIMD16_64f test Id: 365 - MCEIL(function)
OK   UME::SIMD::SIMD16_64f test Id: 366 - ISFIN
OK   UME::SIMD::SIMD16_64f test Id: 367 - ISFIN(function)
OK   UME::SIMD::SIMD16_64f test Id: 368 - ISINF
OK   UME::SIMD::SIMD16_64f test Id: 369 - ISINF(function)
OK   UME::SIMD::SIMD16_64f test Id: 370 - ISAN
OK   UME::SIMD::SIMD16_64f test Id: 371 - ISAN(function)
OK   UME::SIMD::SIMD16_64f test Id: 372 - ISNAN
OK   UME::SIMD::SIMD16_64f test Id: 373 - ISNAN(function)
OK   UME::SIMD::SIMD16_64f test Id: 374 - ISNORM
OK   UME::SIMD::SIMD16_64f test Id: 375 - ISNORM(function)
OK   UME::SIMD::SIMD16_64f test Id: 376 - ISSUB
OK   UME::SIMD::SIMD16_64f test Id: 377 - ISSUB(function)
OK   UME::SIMD::SIMD16_64f test Id: 378 - ISZERO
OK   UME::SIMD::SIMD16_64f test Id: 379 - ISZERO(function)
OK   UME::SIMD::SIMD16_64f test Id: 380 - ISZEROSUB
OK   UME::SIMD::SIMD16_64f test Id: 381 - ISZEROSUB(function)
OK   UME::SIMD::SIMD16_64f test Id: 382 - SQR
OK   UME::SIMD::SIMD16_64f test Id: 383 - SQR(function)
OK   UME::SIMD::SIMD16_64f test Id: 384 - MSQR
OK   UME::SIMD::SIMD16_64f test Id: 385 - MSQR(function)
OK   UME::SIMD::SIMD16_64f test Id: 386 - SQRA
OK   UME::SIMD::SIMD16_64f test Id: 387 - MSQRA
OK   UME::SIMD::SIMD16_64f test Id: 388 - SQRT
OK   UME::SIMD::SIMD16_64f test Id: 389 - SQRT(function)
OK   UME::SIMD::SIMD16_64f test Id: 390 - MSQRT
OK   UME::SIMD::SIMD16_64f test Id: 391 - MSQRT
OK   UME::SIMD::SIMD16_64f test Id: 392 - SQRTA
OK   UME::SIMD::SIMD16_64f test Id: 393 - MSQRTA
OK   UME::SIMD::SIMD16_64f test Id: 394 - EXP gen
OK   UME::SIMD::SIMD16_64f test Id: 395 - EXP(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 396 - MEXP gen
OK   UME::SIMD::SIMD16_64f test Id: 397 - MEXP(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 398 - LOG gen
OK   UME::SIMD::SIMD16_64f test Id: 399 - LOG(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 400 - LOG2 gen
OK   UME::SIMD::SIMD16_64f test Id: 401 - LOG2(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 402 - LOG10 gen
OK   UME::SIMD::SIMD16_64f test Id: 403 - LOG10(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 404 - SIN gen
OK   UME::SIMD::SIMD16_64f test Id: 405 - SIN(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 406 - COS gen
OK   UME::SIMD::SIMD16_64f test Id: 407 - COS(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 408 - TAN gen
OK   UME::SIMD::SIMD16_64f test Id: 409 - TAN(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 410 - CTAN gen
OK   UME::SIMD::SIMD16_64f test Id: 411 - CTAN(function) gen
OK   UME::SIMD::SIMD16_64f test Id: 412 - FTOU gen
OK   UME::SIMD::SIMD16_64f test Id: 413 - FTOI gen
OK   UME::SIMD::SIMD16_64f test Id: 414 - PACK
OK   UME::SIMD::SIMD16_64f test Id: 415 - PACKLO
OK   UME::SIMD::SIMD16_64f test Id: 416 - PACKHI
OK   UME::SIMD::SIMD16_64f test Id: 417 - UNPACK
OK   UME::SIMD::SIMD16_64f test Id: 418 - UNPACKLO
OK   UME::SIMD::SIMD16_64f test Id: 419 - UNPACKHi
OK   UME::SIMD::SIMD16_64f test Id: 420 - DEGRADE

Total tests failed: 0/32534
